language: d
name: HumanEval_48_is_palindrome
results:
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.length == 0 || text.length == 1 || (text[0] == text[$-1] && is_palindrome(text[1..$-1]));\n\
    }\nunittest\n{\n    alias candidate = is_palindrome;\n\n    assert(candidate(\"\
    \") == true);\n    assert(candidate(\"aba\") == true);\n    assert(candidate(\"\
    aaaaa\") == true);\n    assert(candidate(\"zbcd\") == false);\n    assert(candidate(\"\
    xywyx\") == true);\n    assert(candidate(\"xywyz\") == false);\n    assert(candidate(\"\
    xywzx\") == false);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.length == 0 || text.length == 1 || (text[0] == text[$-1] && is_palindrome(text[1..$-1]));\n\
    }\nunittest\n{\n    alias candidate = is_palindrome;\n\n    assert(candidate(\"\
    \") == true);\n    assert(candidate(\"aba\") == true);\n    assert(candidate(\"\
    aaaaa\") == true);\n    assert(candidate(\"zbcd\") == false);\n    assert(candidate(\"\
    xywyx\") == true);\n    assert(candidate(\"xywyz\") == false);\n    assert(candidate(\"\
    xywzx\") == false);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\n/*\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi8v0qeub.d(20): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpi8v0qeub.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.length == 0 || text.length == 1 || (text[0] == text[$-1] && is_palindrome(text[1..$-1]));\n\
    }\nunittest\n{\n    alias candidate = is_palindrome;\n\n    assert(candidate(\"\
    \") == true);\n    assert(candidate(\"aba\") == true);\n    assert(candidate(\"\
    aaaaa\") == true);\n    assert(candidate(\"zbcd\") == false);\n    assert(candidate(\"\
    xywyx\") == true);\n    assert(candidate(\"xywyz\") == false);\n    assert(candidate(\"\
    xywzx\") == false);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\n/*\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi8v0qeub.d(20): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpi8v0qeub.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.equal(text.dup.reverse);\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0w1g97i.d(18): Error: no property `equal` for type `string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0w1g97i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\n/*\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi8v0qeub.d(20): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpi8v0qeub.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    auto len\
    \ = text.length;\n    for (size_t i = 0; i < len / 2; i++) \n    {\n        if\
    \ (text[i] != text[len - i - 1]) \n        {\n            return false;\n    \
    \    }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\n/*\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi8v0qeub.d(20): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpi8v0qeub.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.equal(text.dup.reverse);\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0w1g97i.d(18): Error: no property `equal` for type `string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0w1g97i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.length == 0 || text.length == 1 || (text[0] == text[$-1] && is_palindrome(text[1..$-1]));\n\
    }\nunittest\n{\n    alias candidate = is_palindrome;\n\n    assert(candidate(\"\
    \") == true);\n    assert(candidate(\"aba\") == true);\n    assert(candidate(\"\
    aaaaa\") == true);\n    assert(candidate(\"zbcd\") == false);\n    assert(candidate(\"\
    xywyx\") == true);\n    assert(candidate(\"xywyz\") == false);\n    assert(candidate(\"\
    xywzx\") == false);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.equal(text.dup.reverse);\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0w1g97i.d(18): Error: no property `equal` for type `string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0w1g97i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    if (text.length\
    \ == 0) \n    {\n        return true;\n    }\n    else \n    {\n        return\
    \ text[0] == text[$-1] && is_palindrome(text[1..$-1]);\n    }\n}\nunittest\n{\n\
    \    alias candidate = is_palindrome;\n\n    assert(candidate(\"\") == true);\n\
    \    assert(candidate(\"aba\") == true);\n    assert(candidate(\"aaaaa\") == true);\n\
    \    assert(candidate(\"zbcd\") == false);\n    assert(candidate(\"xywyx\") ==\
    \ true);\n    assert(candidate(\"xywyz\") == false);\n    assert(candidate(\"\
    xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3lfmbl9u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794529
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\n/*\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi8v0qeub.d(20): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpi8v0qeub.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    auto len\
    \ = text.length;\n    if (len == 0) \n    {\n        return true;\n    }\n   \
    \ else \n    {\n        auto half = len / 2;\n        for (size_t i = 0; i < half;\
    \ i++) \n        {\n            if (text[i] != text[len - i - 1]) \n         \
    \   {\n                return false;\n            }\n        }\n        return\
    \ true;\n    }\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\n    assert(candidate(\"\
    \") == true);\n    assert(candidate(\"aba\") == true);\n    assert(candidate(\"\
    aaaaa\") == true);\n    assert(candidate(\"zbcd\") == false);\n    assert(candidate(\"\
    xywyx\") == true);\n    assert(candidate(\"xywyz\") == false);\n    assert(candidate(\"\
    xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfc7p4uoe.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794529
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.equal(text.dup.reverse);\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0w1g97i.d(18): Error: no property `equal` for type `string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0w1g97i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.length == 0 || text.length == 1 || (text[0] == text[$-1] && is_palindrome(text[1..$-1]));\n\
    }\nunittest\n{\n    alias candidate = is_palindrome;\n\n    assert(candidate(\"\
    \") == true);\n    assert(candidate(\"aba\") == true);\n    assert(candidate(\"\
    aaaaa\") == true);\n    assert(candidate(\"zbcd\") == false);\n    assert(candidate(\"\
    xywyx\") == true);\n    assert(candidate(\"xywyz\") == false);\n    assert(candidate(\"\
    xywzx\") == false);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    auto len\
    \ = text.length;\n    if (len <= 1) return true;\n    else return text[0] == text[$-1]\
    \ && is_palindrome(text[1..$-1]);\n}\n/*\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpoa3_z464.d(22): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpoa3_z464.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794529
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.length == 0 || text.length == 1 || (text[0] == text[$-1] && is_palindrome(text[1..$-1]));\n\
    }\nunittest\n{\n    alias candidate = is_palindrome;\n\n    assert(candidate(\"\
    \") == true);\n    assert(candidate(\"aba\") == true);\n    assert(candidate(\"\
    aaaaa\") == true);\n    assert(candidate(\"zbcd\") == false);\n    assert(candidate(\"\
    xywyx\") == true);\n    assert(candidate(\"xywyz\") == false);\n    assert(candidate(\"\
    xywzx\") == false);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.length == 0 || text.length == 1 || (text[0] == text[$-1] && is_palindrome(text[1..$-1]));\n\
    }\nunittest\n{\n    alias candidate = is_palindrome;\n\n    assert(candidate(\"\
    \") == true);\n    assert(candidate(\"aba\") == true);\n    assert(candidate(\"\
    aaaaa\") == true);\n    assert(candidate(\"zbcd\") == false);\n    assert(candidate(\"\
    xywyx\") == true);\n    assert(candidate(\"xywyz\") == false);\n    assert(candidate(\"\
    xywzx\") == false);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    size_t\
    \ len = text.length;\n    for (size_t i = 0; i < len / 2; i++)\n    {\n      \
    \  if (text[i] != text[len - i - 1])\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\n    assert(candidate(\"\
    \") == true);\n    assert(candidate(\"aba\") == true);\n    assert(candidate(\"\
    aaaaa\") == true);\n    assert(candidate(\"zbcd\") == false);\n    assert(candidate(\"\
    xywyx\") == true);\n    assert(candidate(\"xywyz\") == false);\n    assert(candidate(\"\
    xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpilif7w9k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794529
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.length == 0 || text.length == 1 || (text[0] == text[$-1] && is_palindrome(text[1..$-1]));\n\
    }\nunittest\n{\n    alias candidate = is_palindrome;\n\n    assert(candidate(\"\
    \") == true);\n    assert(candidate(\"aba\") == true);\n    assert(candidate(\"\
    aaaaa\") == true);\n    assert(candidate(\"zbcd\") == false);\n    assert(candidate(\"\
    xywyx\") == true);\n    assert(candidate(\"xywyz\") == false);\n    assert(candidate(\"\
    xywzx\") == false);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\n/*\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi8v0qeub.d(20): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpi8v0qeub.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\n/*\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi8v0qeub.d(20): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpi8v0qeub.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\n/*\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi8v0qeub.d(20): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpi8v0qeub.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.equal(text.dup.reverse);\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0w1g97i.d(18): Error: no property `equal` for type `string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0w1g97i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.front == text.back && is_palindrome(text.popFront.popBack);\n}\nunittest\n\
    {\n    alias candidate = is_palindrome;\n\n    assert(candidate(\"\") == true);\n\
    \    assert(candidate(\"aba\") == true);\n    assert(candidate(\"aaaaa\") == true);\n\
    \    assert(candidate(\"zbcd\") == false);\n    assert(candidate(\"xywyx\") ==\
    \ true);\n    assert(candidate(\"xywyz\") == false);\n    assert(candidate(\"\
    xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphket8f6z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794529
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    auto len\
    \ = text.length;\n    if (len <= 1)\n        return true;\n    else\n        return\
    \ text[0] == text[$-1] && is_palindrome(text[1..$-1]);\n}\nunittest\n{\n    alias\
    \ candidate = is_palindrome;\n\n    assert(candidate(\"\") == true);\n    assert(candidate(\"\
    aba\") == true);\n    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"\
    zbcd\") == false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmple4mcqfj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794529
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.equal(text.dup.reverse);\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0w1g97i.d(18): Error: no property `equal` for type `string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0w1g97i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.equal(text.dup.reverse);\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0w1g97i.d(18): Error: no property `equal` for type `string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0w1g97i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.length == 0 || text.length == 1 || (text[0] == text[$-1] && is_palindrome(text[1..$-1]));\n\
    }\nunittest\n{\n    alias candidate = is_palindrome;\n\n    assert(candidate(\"\
    \") == true);\n    assert(candidate(\"aba\") == true);\n    assert(candidate(\"\
    aaaaa\") == true);\n    assert(candidate(\"zbcd\") == false);\n    assert(candidate(\"\
    xywyx\") == true);\n    assert(candidate(\"xywyz\") == false);\n    assert(candidate(\"\
    xywzx\") == false);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    if (text.length\
    \ == 0)\n        return true;\n    else if (text.length == 1)\n        return\
    \ true;\n    else if (text[0] == text[$-1])\n        return is_palindrome(text[1..$-1]);\n\
    \    else\n        return false;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_doaw08a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794529
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.equal(text.dup.reverse);\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0w1g97i.d(18): Error: no property `equal` for type `string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0w1g97i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.equal(text.dup.reverse);\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0w1g97i.d(18): Error: no property `equal` for type `string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0w1g97i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    auto len\
    \ = text.length;\n    if (len == 0)\n        return true;\n    for (int i = 0;\
    \ i < len / 2; i++)\n    {\n        if (text[i] != text[len - i - 1])\n      \
    \      return false;\n    }\n    return true;\n}\nunittest\n{\n    alias candidate\
    \ = is_palindrome;\n\n    assert(candidate(\"\") == true);\n    assert(candidate(\"\
    aba\") == true);\n    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"\
    zbcd\") == false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2c62461l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794529
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.length == 0 || text.length == 1 || (text[0] == text[$-1] && is_palindrome(text[1..$-1]));\n\
    }\nunittest\n{\n    alias candidate = is_palindrome;\n\n    assert(candidate(\"\
    \") == true);\n    assert(candidate(\"aba\") == true);\n    assert(candidate(\"\
    aaaaa\") == true);\n    assert(candidate(\"zbcd\") == false);\n    assert(candidate(\"\
    xywyx\") == true);\n    assert(candidate(\"xywyz\") == false);\n    assert(candidate(\"\
    xywzx\") == false);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\n/*\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi8v0qeub.d(20): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpi8v0qeub.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.length == 0 || text.length == 1 || (text[0] == text[$-1] && is_palindrome(text[1..$-1]));\n\
    }\nunittest\n{\n    alias candidate = is_palindrome;\n\n    assert(candidate(\"\
    \") == true);\n    assert(candidate(\"aba\") == true);\n    assert(candidate(\"\
    aaaaa\") == true);\n    assert(candidate(\"zbcd\") == false);\n    assert(candidate(\"\
    xywyx\") == true);\n    assert(candidate(\"xywyz\") == false);\n    assert(candidate(\"\
    xywzx\") == false);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.equal(text.dup.reverse);\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0w1g97i.d(18): Error: no property `equal` for type `string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0w1g97i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    auto len\
    \ = text.length;\n    for (size_t i = 0; i < len / 2; i++) \n    {\n        if\
    \ (text[i] != text[len - i - 1]) \n        {\n            return false;\n    \
    \    }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.length == 0 || text.length == 1 || (text[0] == text[$-1] && is_palindrome(text[1..$-1]));\n\
    }\nunittest\n{\n    alias candidate = is_palindrome;\n\n    assert(candidate(\"\
    \") == true);\n    assert(candidate(\"aba\") == true);\n    assert(candidate(\"\
    aaaaa\") == true);\n    assert(candidate(\"zbcd\") == false);\n    assert(candidate(\"\
    xywyx\") == true);\n    assert(candidate(\"xywyz\") == false);\n    assert(candidate(\"\
    xywzx\") == false);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.equal(text.dup.reverse);\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0w1g97i.d(18): Error: no property `equal` for type `string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0w1g97i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.equal(text.dup.reverse);\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0w1g97i.d(18): Error: no property `equal` for type `string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0w1g97i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.length > 0 && text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate\
    \ = is_palindrome;\n\n    assert(candidate(\"\") == true);\n    assert(candidate(\"\
    aba\") == true);\n    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"\
    zbcd\") == false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgem_nt0g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794529
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.length == 0 || text.length == 1 || (text[0] == text[$-1] && is_palindrome(text[1..$-1]));\n\
    }\n/*\nunittest\n{\n    alias candidate = is_palindrome;\n\n    assert(candidate(\"\
    \") == true);\n    assert(candidate(\"aba\") == true);\n    assert(candidate(\"\
    aaaaa\") == true);\n    assert(candidate(\"zbcd\") == false);\n    assert(candidate(\"\
    xywyx\") == true);\n    assert(candidate(\"xywyz\") == false);\n    assert(candidate(\"\
    xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9naw9nrq.d(20): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp9naw9nrq.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794529
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.equal(text.dup.reverse);\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0w1g97i.d(18): Error: no property `equal` for type `string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0w1g97i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.equal(text.dup.reverse);\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0w1g97i.d(18): Error: no property `equal` for type `string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0w1g97i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.equal(text.dup.reverse);\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0w1g97i.d(18): Error: no property `equal` for type `string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0w1g97i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.equal(text.dup.reverse);\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0w1g97i.d(18): Error: no property `equal` for type `string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0w1g97i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    if (text.length\
    \ == 0) \n    {\n        return true;\n    }\n    else \n    {\n        return\
    \ text[0] == text[$-1] && is_palindrome(text[1..$-1]);\n    }\n}\nunittest\n{\n\
    \    alias candidate = is_palindrome;\n\n    assert(candidate(\"\") == true);\n\
    \    assert(candidate(\"aba\") == true);\n    assert(candidate(\"aaaaa\") == true);\n\
    \    assert(candidate(\"zbcd\") == false);\n    assert(candidate(\"xywyx\") ==\
    \ true);\n    assert(candidate(\"xywyz\") == false);\n    assert(candidate(\"\
    xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3lfmbl9u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794529
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.equal(text.dup.reverse);\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0w1g97i.d(18): Error: no property `equal` for type `string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0w1g97i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.equal(text.dup.reverse);\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0w1g97i.d(18): Error: no property `equal` for type `string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0w1g97i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.retro;\n}\n/*\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1fcggev4.d(20): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp1fcggev4.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794529
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.length == 0 || text.length == 1 || (text[0] == text[$-1] && is_palindrome(text[1..$-1]));\n\
    }\nunittest\n{\n    alias candidate = is_palindrome;\n\n    assert(candidate(\"\
    \") == true);\n    assert(candidate(\"aba\") == true);\n    assert(candidate(\"\
    aaaaa\") == true);\n    assert(candidate(\"zbcd\") == false);\n    assert(candidate(\"\
    xywyx\") == true);\n    assert(candidate(\"xywyz\") == false);\n    assert(candidate(\"\
    xywzx\") == false);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    auto len\
    \ = text.length;\n    if (len == 0) return true;\n    for (int i = 0; i < len\
    \ / 2; i++) {\n        if (text[i] != text[len - i - 1]) return false;\n    }\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\n  \
    \  assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk38kxt5l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794529
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\n/*\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi8v0qeub.d(20): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpi8v0qeub.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    auto text_len\
    \ = text.length;\n    auto half_len = text_len / 2;\n    auto text_range = text[0\
    \ .. half_len];\n    auto reversed_text_range = text[$ - half_len .. $];\n   \
    \ return text_range == reversed_text_range;\n}\nunittest\n{\n    alias candidate\
    \ = is_palindrome;\n\n    assert(candidate(\"\") == true);\n    assert(candidate(\"\
    aba\") == true);\n    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"\
    zbcd\") == false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdjk8pp33.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794529
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.length == 0 || text.length == 1 || text[0] == text[$-1] && is_palindrome(text[1..$-1]);\n\
    }\nunittest\n{\n    alias candidate = is_palindrome;\n\n    assert(candidate(\"\
    \") == true);\n    assert(candidate(\"aba\") == true);\n    assert(candidate(\"\
    aaaaa\") == true);\n    assert(candidate(\"zbcd\") == false);\n    assert(candidate(\"\
    xywyx\") == true);\n    assert(candidate(\"xywyz\") == false);\n    assert(candidate(\"\
    xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgzxdy0t8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794529
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    auto len\
    \ = text.length;\n    if (len == 0) return true;\n    for (int i = 0; i < len\
    \ / 2; i++) \n    {\n        if (text[i] != text[len - i - 1]) return false;\n\
    \    }\n    return true;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa3johefr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794529
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.equal(text.dup.reverse);\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0w1g97i.d(18): Error: no property `equal` for type `string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0w1g97i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.length == 0 || text.length == 1 || (text[0] == text[$-1] && is_palindrome(text[1..$-1]));\n\
    }\nunittest\n{\n    alias candidate = is_palindrome;\n\n    assert(candidate(\"\
    \") == true);\n    assert(candidate(\"aba\") == true);\n    assert(candidate(\"\
    aaaaa\") == true);\n    assert(candidate(\"zbcd\") == false);\n    assert(candidate(\"\
    xywyx\") == true);\n    assert(candidate(\"xywyz\") == false);\n    assert(candidate(\"\
    xywzx\") == false);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.length == 0 || text.length == 1 || (text[0] == text[$-1] && is_palindrome(text[1..$-1]));\n\
    }\nunittest\n{\n    alias candidate = is_palindrome;\n\n    assert(candidate(\"\
    \") == true);\n    assert(candidate(\"aba\") == true);\n    assert(candidate(\"\
    aaaaa\") == true);\n    assert(candidate(\"zbcd\") == false);\n    assert(candidate(\"\
    xywyx\") == true);\n    assert(candidate(\"xywyz\") == false);\n    assert(candidate(\"\
    xywzx\") == false);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.length == 0 || (text[0] == text[$-1] && is_palindrome(text[1..$-1]));\n\
    }\n/*\nunittest\n{\n    alias candidate = is_palindrome;\n\n    assert(candidate(\"\
    \") == true);\n    assert(candidate(\"aba\") == true);\n    assert(candidate(\"\
    aaaaa\") == true);\n    assert(candidate(\"zbcd\") == false);\n    assert(candidate(\"\
    xywyx\") == true);\n    assert(candidate(\"xywyz\") == false);\n    assert(candidate(\"\
    xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp92xmi88m.d(20): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp92xmi88m.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794529
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    auto len\
    \ = text.length;\n    if (len == 0)\n        return true;\n    else if (len ==\
    \ 1)\n        return true;\n    else\n    {\n        auto half = len / 2;\n  \
    \      auto first = text[0 .. half];\n        auto second = text[$ - half .. $];\n\
    \        return first == second.reverse;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = is_palindrome;\n\n    assert(candidate(\"\") == true);\n    assert(candidate(\"\
    aba\") == true);\n    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"\
    zbcd\") == false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2598dsev.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794529
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.length == 0 || text.length == 1 || (text[0] == text[$-1] && is_palindrome(text[1..$-1]));\n\
    }\nunittest\n{\n    alias candidate = is_palindrome;\n\n    assert(candidate(\"\
    \") == true);\n    assert(candidate(\"aba\") == true);\n    assert(candidate(\"\
    aaaaa\") == true);\n    assert(candidate(\"zbcd\") == false);\n    assert(candidate(\"\
    xywyx\") == true);\n    assert(candidate(\"xywyz\") == false);\n    assert(candidate(\"\
    xywzx\") == false);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.length == 0 || text.length == 1 || (text[0] == text[$-1] && is_palindrome(text[1..$-1]));\n\
    }\nunittest\n{\n    alias candidate = is_palindrome;\n\n    assert(candidate(\"\
    \") == true);\n    assert(candidate(\"aba\") == true);\n    assert(candidate(\"\
    aaaaa\") == true);\n    assert(candidate(\"zbcd\") == false);\n    assert(candidate(\"\
    xywyx\") == true);\n    assert(candidate(\"xywyz\") == false);\n    assert(candidate(\"\
    xywzx\") == false);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\n/*\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi8v0qeub.d(20): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpi8v0qeub.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.equal(text.dup.reverse);\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0w1g97i.d(18): Error: no property `equal` for type `string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0w1g97i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.length == 0 || text.length == 1 || (text[0] == text[$-1] && is_palindrome(text[1..$-1]));\n\
    }\nunittest\n{\n    alias candidate = is_palindrome;\n\n    assert(candidate(\"\
    \") == true);\n    assert(candidate(\"aba\") == true);\n    assert(candidate(\"\
    aaaaa\") == true);\n    assert(candidate(\"zbcd\") == false);\n    assert(candidate(\"\
    xywyx\") == true);\n    assert(candidate(\"xywyz\") == false);\n    assert(candidate(\"\
    xywzx\") == false);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    if (text.length\
    \ == 0) \n    {\n        return true;\n    }\n    else \n    {\n        return\
    \ text[0] == text[$-1] && is_palindrome(text[1..$-1]);\n    }\n}\nunittest\n{\n\
    \    alias candidate = is_palindrome;\n\n    assert(candidate(\"\") == true);\n\
    \    assert(candidate(\"aba\") == true);\n    assert(candidate(\"aaaaa\") == true);\n\
    \    assert(candidate(\"zbcd\") == false);\n    assert(candidate(\"xywyx\") ==\
    \ true);\n    assert(candidate(\"xywyz\") == false);\n    assert(candidate(\"\
    xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3lfmbl9u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794529
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    if (text.length\
    \ == 0)\n        return true;\n    else if (text.length == 1)\n        return\
    \ true;\n    else if (text[0] == text[$-1])\n        return is_palindrome(text[1..$-1]);\n\
    \    else\n        return false;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_doaw08a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794529
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.equal(text.dup.reverse);\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0w1g97i.d(18): Error: no property `equal` for type `string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0w1g97i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\n/*\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi8v0qeub.d(20): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpi8v0qeub.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.equal(text.dup.reverse);\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0w1g97i.d(18): Error: no property `equal` for type `string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0w1g97i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.equal(text.dup.reverse);\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0w1g97i.d(18): Error: no property `equal` for type `string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0w1g97i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text.length == 0 || text.length == 1 || (text[0] == text[$-1] && is_palindrome(text[1..$-1]));\n\
    }\nunittest\n{\n    alias candidate = is_palindrome;\n\n    assert(candidate(\"\
    \") == true);\n    assert(candidate(\"aba\") == true);\n    assert(candidate(\"\
    aaaaa\") == true);\n    assert(candidate(\"zbcd\") == false);\n    assert(candidate(\"\
    xywyx\") == true);\n    assert(candidate(\"xywyz\") == false);\n    assert(candidate(\"\
    xywzx\") == false);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    auto len\
    \ = text.length;\n    if (len == 0) return true;\n    if (len == 1) return true;\n\
    \    if (len == 2) return text[0] == text[1];\n    if (len == 3) return text[0]\
    \ == text[2];\n    if (len == 4) return text[0] == text[3] && text[1] == text[2];\n\
    \    if (len == 5) return text[0] == text[4] && text[1] == text[3];\n    if (len\
    \ == 6) return text[0] == text[5] && text[1] == text[4] && text[2] == text[3];\n\
    \    if (len == 7) return text[0] == text[6] && text[1] == text[5] && text[2]\
    \ == text[4];\n    if (len == 8) return text[0] == text[7] && text[1] == text[6]\
    \ && text[2] == text[5] && text[3] == text[4];\n    if (len == 9) return text[0]\
    \ == text[8] && text[1] == text[7] && text[2] == text[6] && text[3] == text[5];\n\
    \    if (len == 10) return text[0] == text[9] && text[1] == text[8] && text[2]\
    \ == text[7] && text[3] == text[6] && text[4] == text[5];\n    if (len == 11)\
    \ return text[0] == text[10] && text[1] == text[9] && text[2] == text[8] && text[3]\
    \ == text[7] && text[4] == text[6];\n    if (len == 12) return text[0] == text[11]\
    \ && text[1] == text[10] && text[2] == text[9] && text[3] == text[8] && text[4]\
    \ == text[7] && text[5] == text[6];\n    if (len == 13) return text[0] == text[12]\
    \ && text[1] == text[11] && text[\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptnt3oh1k.d(33): Error: expression expected, not \''unittest\''\n/tmp/tmptnt3oh1k.d(34):
    Error: found \''{\'' when expecting \'']\''\n/tmp/tmptnt3oh1k.d(35): Error: found
    \''alias\'' when expecting \'';\'' following return statement\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmptnt3oh1k.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794529
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\n/*\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi8v0qeub.d(20): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpi8v0qeub.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\n/*\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi8v0qeub.d(20): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpi8v0qeub.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\n/*\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi8v0qeub.d(20): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpi8v0qeub.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\n/*\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi8v0qeub.d(20): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpi8v0qeub.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\n/*\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi8v0qeub.d(20): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpi8v0qeub.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Checks if given string\
    \ is a palindrome\n    >>> is_palindrome(\"\")\n    true\n    >>> is_palindrome(\"\
    aba\")\n    true\n    >>> is_palindrome(\"aaaaa\")\n    true\n    >>> is_palindrome(\"\
    zbcd\")\n    false\n    \n*/\nbool is_palindrome(string text) \n{\n    return\
    \ text == text.dup.reverse;\n}\nunittest\n{\n    alias candidate = is_palindrome;\n\
    \n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n\
    \    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") ==\
    \ false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"\
    xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntdavrfl.d(18): Error: template `std.typecons.reverse` cannot
    deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntdavrfl.d",
    "-I/tmp"]\n'''
  stdout: b''

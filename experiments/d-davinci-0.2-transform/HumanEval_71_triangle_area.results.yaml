language: d
name: HumanEval_71_triangle_area
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area < 0\
    \ ? -1 : area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpzqwmo41h.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpzqwmo41h.__unittest_L23_C1() [0x427af5]\n??:?
    void tmpzqwmo41h.__modtest() [0x427c84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c97]\n??:?
    __libc_start_main [0xa49a5554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0) \n\
    \    {\n        return area;\n    }\n    return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpiwlvprm0.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpiwlvprm0.__unittest_L27_C1() [0x427b33]\n??:?
    void tmpiwlvprm0.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x804ae554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    if (a + b > c && a + c > b &&\
    \ b + c > a)\n    {\n        float s = (a + b + c) / 2.0;\n        return sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    }\n    return -1;\n}\nunittest\n{\n   \
    \ alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n\
    \    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L)\
    \ == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpdb3k7kdt.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f0d]\n??:? void tmpdb3k7kdt.__unittest_L26_C1() [0x427b3b]\n??:?
    void tmpdb3k7kdt.__modtest() [0x427c90]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aac6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa9d]\n??:? runModuleUnitTests [0x42ba09]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42835c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282e3]\n??:? _d_run_main [0x42824e]\n??:? main [0x427ca3]\n??:?
    __libc_start_main [0x4869f554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float p = (a + b + c) / 2.0;\n\
    \    float area = sqrt(p * (p - a) * (p - b) * (p - c));\n    if (area <= 0)\n\
    \        return -1;\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\
    \n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L)\
    \ == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L,\
    \ 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L,\
    \ 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L,\
    \ 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx5k3gun3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float area = -1;\n    if(a +\
    \ b > c && a + c > b && b + c > a)\n    {\n        float s = (a + b + c) / 2.0;\n\
    \        area = sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n    return area;\n\
    }\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd__8jptr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area < 0\
    \ ? -1 : area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpzqwmo41h.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpzqwmo41h.__unittest_L23_C1() [0x427af5]\n??:?
    void tmpzqwmo41h.__modtest() [0x427c84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c97]\n??:?
    __libc_start_main [0xa49a5554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0) \n\
    \    {\n        return area;\n    } \n    else \n    {\n        return -1;\n \
    \   }\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpupie9ubh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area < 0)\n\
    \        return -1;\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\
    \n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L)\
    \ == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L,\
    \ 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L,\
    \ 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L,\
    \ 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpec3kog1o.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    if (a + b > c && a + c > b &&\
    \ b + c > a)\n    {\n        float s = (a + b + c) / 2;\n        return sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    }\n    return -1;\n}\nunittest\n{\n   \
    \ alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n\
    \    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L)\
    \ == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4liphlyt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float p = (a + b + c) / 2.0;\n\
    \    float S = sqrt(p * (p - a) * (p - b) * (p - c));\n    if (S > 0)\n      \
    \  return S;\n    else\n        return -1;\n}\nunittest\n{\n    alias candidate\
    \ = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L,\
    \ 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L,\
    \ 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L,\
    \ 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L,\
    \ 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw3qx7fm_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdii0xw23.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area < 0\
    \ ? -1 : area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpzqwmo41h.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpzqwmo41h.__unittest_L23_C1() [0x427af5]\n??:?
    void tmpzqwmo41h.__modtest() [0x427c84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c97]\n??:?
    __libc_start_main [0xa49a5554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    if (a + b > c && a + c > b &&\
    \ b + c > a)\n    {\n        float s = (a + b + c) / 2.0;\n        return sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    }\n    return -1;\n}\nunittest\n{\n   \
    \ alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n\
    \    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L)\
    \ == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpdb3k7kdt.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f0d]\n??:? void tmpdb3k7kdt.__unittest_L26_C1() [0x427b3b]\n??:?
    void tmpdb3k7kdt.__modtest() [0x427c90]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aac6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa9d]\n??:? runModuleUnitTests [0x42ba09]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42835c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282e3]\n??:? _d_run_main [0x42824e]\n??:? main [0x427ca3]\n??:?
    __libc_start_main [0x4869f554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    if (s - a < 0 || s - b < 0 || s - c < 0)\n        return -1;\n    return\
    \ sqrt(s * (s - a) * (s - b) * (s - c));\n}\nunittest\n{\n    alias candidate\
    \ = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L,\
    \ 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L,\
    \ 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L,\
    \ 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L,\
    \ 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7pfwqj_w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    if(a + b > c && a + c > b &&\
    \ b + c > a)\n    {\n        float s = (a + b + c) / 2.0;\n        return sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    }\n    return -1;\n}\nunittest\n{\n   \
    \ alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n\
    \    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L)\
    \ == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz2z0k7mr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    if(a + b > c && a + c > b &&\
    \ b + c > a)\n    {\n        double s = (a + b + c) / 2.0;\n        return sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    }\n    return -1;\n}\nunittest\n{\n   \
    \ alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n\
    \    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L)\
    \ == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp45dq8xpe.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    if (a + b > c && a + c > b &&\
    \ b + c > a)\n    {\n        float s = (a + b + c) / 2.0;\n        return sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    }\n    return -1;\n}\nunittest\n{\n   \
    \ alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n\
    \    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L)\
    \ == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpdb3k7kdt.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f0d]\n??:? void tmpdb3k7kdt.__unittest_L26_C1() [0x427b3b]\n??:?
    void tmpdb3k7kdt.__modtest() [0x427c90]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aac6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa9d]\n??:? runModuleUnitTests [0x42ba09]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42835c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282e3]\n??:? _d_run_main [0x42824e]\n??:? main [0x427ca3]\n??:?
    __libc_start_main [0x4869f554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float p = (a + b + c) / 2.0;\n\
    \    float area = sqrt(p * (p - a) * (p - b) * (p - c));\n    if (area <= 0)\n\
    \        return -1;\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\
    \n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L)\
    \ == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L,\
    \ 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L,\
    \ 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L,\
    \ 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx5k3gun3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    if (a + b > c && a + c > b &&\
    \ b + c > a)\n    {\n        float s = (a + b + c) / 2.0;\n        return sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    }\n    return -1;\n}\nunittest\n{\n   \
    \ alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n\
    \    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L)\
    \ == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpdb3k7kdt.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f0d]\n??:? void tmpdb3k7kdt.__unittest_L26_C1() [0x427b3b]\n??:?
    void tmpdb3k7kdt.__modtest() [0x427c90]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aac6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa9d]\n??:? runModuleUnitTests [0x42ba09]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42835c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282e3]\n??:? _d_run_main [0x42824e]\n??:? main [0x427ca3]\n??:?
    __libc_start_main [0x4869f554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area < 0\
    \ ? -1 : area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpzqwmo41h.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpzqwmo41h.__unittest_L23_C1() [0x427af5]\n??:?
    void tmpzqwmo41h.__modtest() [0x427c84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c97]\n??:?
    __libc_start_main [0xa49a5554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area == 0)\n\
    \        return -1;\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\
    \n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L)\
    \ == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L,\
    \ 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L,\
    \ 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L,\
    \ 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcd18_b49.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    if (s - a < 0 || s - b < 0 || s - c < 0)\n        return -1;\n    return\
    \ sqrt(s * (s - a) * (s - b) * (s - c));\n}\nunittest\n{\n    alias candidate\
    \ = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L,\
    \ 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L,\
    \ 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L,\
    \ 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L,\
    \ 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7pfwqj_w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    if (a + b > c && a + c > b &&\
    \ b + c > a)\n    {\n        float s = (a + b + c) / 2.0;\n        return sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    }\n    return -1;\n}\nunittest\n{\n   \
    \ alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n\
    \    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L)\
    \ == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpdb3k7kdt.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f0d]\n??:? void tmpdb3k7kdt.__unittest_L26_C1() [0x427b3b]\n??:?
    void tmpdb3k7kdt.__modtest() [0x427c90]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aac6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa9d]\n??:? runModuleUnitTests [0x42ba09]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42835c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282e3]\n??:? _d_run_main [0x42824e]\n??:? main [0x427ca3]\n??:?
    __libc_start_main [0x4869f554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    if (a + b > c && a + c > b &&\
    \ b + c > a)\n    {\n        float s = (a + b + c) / 2.0;\n        return sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    }\n    return -1;\n}\nunittest\n{\n   \
    \ alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n\
    \    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L)\
    \ == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpdb3k7kdt.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f0d]\n??:? void tmpdb3k7kdt.__unittest_L26_C1() [0x427b3b]\n??:?
    void tmpdb3k7kdt.__modtest() [0x427c90]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aac6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa9d]\n??:? runModuleUnitTests [0x42ba09]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42835c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282e3]\n??:? _d_run_main [0x42824e]\n??:? main [0x427ca3]\n??:?
    __libc_start_main [0x4869f554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float p = (a + b + c) / 2.0;\n\
    \    float s = sqrt(p * (p - a) * (p - b) * (p - c));\n    return s > 0 ? round(s,\
    \ 2) : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfy_bq8p_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area < 0\
    \ ? -1 : area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpzqwmo41h.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpzqwmo41h.__unittest_L23_C1() [0x427af5]\n??:?
    void tmpzqwmo41h.__modtest() [0x427c84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c97]\n??:?
    __libc_start_main [0xa49a5554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return (area > 0)\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw4l573c4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    if (a + b > c && a + c > b &&\
    \ b + c > a)\n    {\n        float s = (a + b + c) / 2.0;\n        return sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    }\n    return -1.0;\n}\nunittest\n{\n \
    \   alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n\
    \    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L)\
    \ == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeksybbwx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area <= 0)\n\
    \        return -1;\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\
    \n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L)\
    \ == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L,\
    \ 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L,\
    \ 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L,\
    \ 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8gc9dv8l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float p = (a + b + c) / 2.0;\n\
    \    float area = sqrt(p * (p - a) * (p - b) * (p - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkcd7c6xr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area < 0\
    \ ? -1 : area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpzqwmo41h.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpzqwmo41h.__unittest_L23_C1() [0x427af5]\n??:?
    void tmpzqwmo41h.__modtest() [0x427c84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c97]\n??:?
    __libc_start_main [0xa49a5554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    if(a + b > c && a + c > b &&\
    \ b + c > a)\n    {\n        float s = (a + b + c) / 2.0;\n        float area\
    \ = sqrt(s * (s - a) * (s - b) * (s - c));\n        return area;\n    }\n    else\n\
    \    {\n        return -1;\n    }\n}\nunittest\n{\n    alias candidate = triangle_area;\n\
    \n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L)\
    \ == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L,\
    \ 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L,\
    \ 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L,\
    \ 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpumjz4x_w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area <= 0)\n\
    \        return -1;\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\
    \n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L)\
    \ == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L,\
    \ 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L,\
    \ 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L,\
    \ 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8gc9dv8l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0) {\n\
    \        return area;\n    } else {\n        return -1;\n    }\n}\nunittest\n\
    {\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) ==\
    \ 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8c3xr0_o.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area == 0.0)\n\
    \        return -1.0;\n    return area;\n}\nunittest\n{\n    alias candidate =\
    \ triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L,\
    \ 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L,\
    \ 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L,\
    \ 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L,\
    \ 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplbr9obwl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return (area > 0)\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw4l573c4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area < 0\
    \ ? -1 : area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpzqwmo41h.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpzqwmo41h.__unittest_L23_C1() [0x427af5]\n??:?
    void tmpzqwmo41h.__modtest() [0x427c84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c97]\n??:?
    __libc_start_main [0xa49a5554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area < 0\
    \ ? -1 : area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpzqwmo41h.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpzqwmo41h.__unittest_L23_C1() [0x427af5]\n??:?
    void tmpzqwmo41h.__modtest() [0x427c84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c97]\n??:?
    __libc_start_main [0xa49a5554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area < 0)\n\
    \        return -1;\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\
    \n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L)\
    \ == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L,\
    \ 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L,\
    \ 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L,\
    \ 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpec3kog1o.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float p = (a + b + c) / 2.0;\n\
    \    float area = sqrt(p * (p - a) * (p - b) * (p - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpte_1_gkp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpauz2g88z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    if (s - a <= 0 || s - b <= 0 || s - c <= 0)\n        return -1;\n    return\
    \ sqrt(s * (s - a) * (s - b) * (s - c));\n}\nunittest\n{\n    alias candidate\
    \ = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L,\
    \ 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L,\
    \ 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L,\
    \ 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L,\
    \ 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj_jfh4ht.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0) {\n\
    \        return area;\n    }\n    return -1;\n}\nunittest\n{\n    alias candidate\
    \ = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L,\
    \ 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L,\
    \ 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L,\
    \ 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L,\
    \ 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnlozmtyx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdii0xw23.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area < 0)\n\
    \        return -1;\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\
    \n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L)\
    \ == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L,\
    \ 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L,\
    \ 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L,\
    \ 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpec3kog1o.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    if (a + b > c && a + c > b &&\
    \ b + c > a)\n    {\n        float s = (a + b + c) / 2.0;\n        return sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    }\n    return -1;\n}\nunittest\n{\n   \
    \ alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n\
    \    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L)\
    \ == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpdb3k7kdt.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f0d]\n??:? void tmpdb3k7kdt.__unittest_L26_C1() [0x427b3b]\n??:?
    void tmpdb3k7kdt.__modtest() [0x427c90]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aac6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa9d]\n??:? runModuleUnitTests [0x42ba09]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42835c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282e3]\n??:? _d_run_main [0x42824e]\n??:? main [0x427ca3]\n??:?
    __libc_start_main [0x4869f554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float p = (a + b + c) / 2.0;\n\
    \    float s = sqrt(p * (p - a) * (p - b) * (p - c));\n    if (s > 0)\n      \
    \  return round(s * 100) / 100;\n    else\n        return -1;\n}\nunittest\n{\n\
    \    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n\
    \    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L)\
    \ == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxm3t4xzn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    if (a + b > c && a + c > b &&\
    \ b + c > a)\n    {\n        float s = (a + b + c) / 2.0;\n        return sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    }\n    return -1;\n}\nunittest\n{\n   \
    \ alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n\
    \    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L)\
    \ == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpdb3k7kdt.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f0d]\n??:? void tmpdb3k7kdt.__unittest_L26_C1() [0x427b3b]\n??:?
    void tmpdb3k7kdt.__modtest() [0x427c90]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aac6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430108]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbe5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa9d]\n??:? runModuleUnitTests [0x42ba09]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42835c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282e3]\n??:? _d_run_main [0x42824e]\n??:? main [0x427ca3]\n??:?
    __libc_start_main [0x4869f554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area == 0)\n\
    \        return -1;\n    return area;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\
    \n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L)\
    \ == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L,\
    \ 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L,\
    \ 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L,\
    \ 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcd18_b49.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0\
    \ ? area : -1;\n}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpccpdmwhd.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmpccpdmwhd.__unittest_L23_C1() [0x427b33]\n??:?
    void tmpccpdmwhd.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x9985e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\
    unittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L,\
    \ 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L,\
    \ 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpn9yv_s0a.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ee5]\n??:? void tmpn9yv_s0a.__unittest_L23_C1() [0x427ad9]\n??:?
    void tmpn9yv_s0a.__modtest() [0x427c68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282bb]\n??:? _d_run_main [0x428226]\n??:? main [0x427c7b]\n??:?
    __libc_start_main [0x2855e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float s = (a + b + c) / 2.0;\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4jsw7uxv.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f05]\n??:? void tmp4jsw7uxv.__unittest_L26_C1() [0x427b33]\n??:?
    void tmp4jsw7uxv.__modtest() [0x427c88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aabe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430100]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbdd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa95]\n??:? runModuleUnitTests [0x42ba01]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428354]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4282db]\n??:? _d_run_main [0x428246]\n??:? main [0x427c9b]\n??:?
    __libc_start_main [0x4fa95554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given the lengths of\
    \ the three sides of a triangle. Return the area of\n    the triangle rounded\
    \ to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
    \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
    \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3L,\
    \ 4L, 5L)\n    6.0\n    >>> triangle_area(1L, 2L, 10L)\n    -1L\n    \n*/\nfloat\
    \ triangle_area(long a, long b, long c) \n{\n    float p = (a + b + c) / 2.0;\n\
    \    float area = sqrt(p * (p - a) * (p - b) * (p - c));\n    if (area > 0)\n\
    \        return area;\n    else\n        return -1;\n}\nunittest\n{\n    alias\
    \ candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n  \
    \  assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) ==\
    \ 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L,\
    \ 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L,\
    \ 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L,\
    \ 2L, 10L) == -1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkcd7c6xr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659804739

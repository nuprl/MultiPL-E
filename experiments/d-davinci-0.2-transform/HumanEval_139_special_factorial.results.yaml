language: d
name: HumanEval_139_special_factorial
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThe Brazilian factorial is\
    \ defined as:\n    brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    \    where n > 0\n\n    For example:\n    >>> special_factorial(4L)\n    288L\n\
    \n    The function will receive an integer as input and should return the special\n\
    \    factorial of this integer.\n    \n*/\nlong special_factorial(long n) \n{\n\
    \    long result = 1;\n    foreach(i; 1..n)\n    {\n        result *= factorial(i);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = special_factorial;\n\
    \n    assert(candidate(4L) == 288L);\n    assert(candidate(5L) == 34560L);\n \
    \   assert(candidate(7L) == 125411328000L);\n    assert(candidate(1L) == 1L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnbuo_xnj.d(21): Error: undefined identifier `factorial`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnbuo_xnj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThe Brazilian factorial is\
    \ defined as:\n    brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    \    where n > 0\n\n    For example:\n    >>> special_factorial(4L)\n    288L\n\
    \n    The function will receive an integer as input and should return the special\n\
    \    factorial of this integer.\n    \n*/\nlong special_factorial(long n) \n{\n\
    \    long result = 1;\n    foreach(i; 1 .. n + 1)\n    {\n        result *= factorial(i);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = special_factorial;\n\
    \n    assert(candidate(4L) == 288L);\n    assert(candidate(5L) == 34560L);\n \
    \   assert(candidate(7L) == 125411328000L);\n    assert(candidate(1L) == 1L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpuplrz80n.d(21): Error: undefined identifier `factorial`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuplrz80n.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThe Brazilian factorial is\
    \ defined as:\n    brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    \    where n > 0\n\n    For example:\n    >>> special_factorial(4L)\n    288L\n\
    \n    The function will receive an integer as input and should return the special\n\
    \    factorial of this integer.\n    \n*/\nlong special_factorial(long n) \n{\n\
    \    long result = 1;\n    foreach(i; 1..n)\n    {\n        result *= factorial(i);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = special_factorial;\n\
    \n    assert(candidate(4L) == 288L);\n    assert(candidate(5L) == 34560L);\n \
    \   assert(candidate(7L) == 125411328000L);\n    assert(candidate(1L) == 1L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnbuo_xnj.d(21): Error: undefined identifier `factorial`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnbuo_xnj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThe Brazilian factorial is\
    \ defined as:\n    brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    \    where n > 0\n\n    For example:\n    >>> special_factorial(4L)\n    288L\n\
    \n    The function will receive an integer as input and should return the special\n\
    \    factorial of this integer.\n    \n*/\nlong special_factorial(long n) \n{\n\
    \    if (n < 0)\n        return 0;\n    else if (n == 0)\n        return 1;\n\
    \    else\n        return n * special_factorial(n - 1);\n}\nunittest\n{\n    alias\
    \ candidate = special_factorial;\n\n    assert(candidate(4L) == 288L);\n    assert(candidate(5L)\
    \ == 34560L);\n    assert(candidate(7L) == 125411328000L);\n    assert(candidate(1L)\
    \ == 1L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp0_v1m7ba.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d6d]\n??:? void tmp0_v1m7ba.__unittest_L25_C1() [0x427a6a]\n??:?
    void tmp0_v1m7ba.__modtest() [0x427af0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281bc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428143]\n??:? _d_run_main [0x4280ae]\n??:? main [0x427b03]\n??:?
    __libc_start_main [0x44899554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThe Brazilian factorial is\
    \ defined as:\n    brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    \    where n > 0\n\n    For example:\n    >>> special_factorial(4L)\n    288L\n\
    \n    The function will receive an integer as input and should return the special\n\
    \    factorial of this integer.\n    \n*/\nlong special_factorial(long n) \n{\n\
    \    long result = 1;\n    foreach(i; 1..n+1)\n    {\n        result *= factorial(i);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = special_factorial;\n\
    \n    assert(candidate(4L) == 288L);\n    assert(candidate(5L) == 34560L);\n \
    \   assert(candidate(7L) == 125411328000L);\n    assert(candidate(1L) == 1L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpp807psht.d(21): Error: undefined identifier `factorial`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp807psht.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThe Brazilian factorial is\
    \ defined as:\n    brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    \    where n > 0\n\n    For example:\n    >>> special_factorial(4L)\n    288L\n\
    \n    The function will receive an integer as input and should return the special\n\
    \    factorial of this integer.\n    \n*/\nlong special_factorial(long n) \n{\n\
    \    long result = 1;\n    foreach(i; 1..n)\n    {\n        result *= factorial(i);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = special_factorial;\n\
    \n    assert(candidate(4L) == 288L);\n    assert(candidate(5L) == 34560L);\n \
    \   assert(candidate(7L) == 125411328000L);\n    assert(candidate(1L) == 1L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnbuo_xnj.d(21): Error: undefined identifier `factorial`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnbuo_xnj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThe Brazilian factorial is\
    \ defined as:\n    brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    \    where n > 0\n\n    For example:\n    >>> special_factorial(4L)\n    288L\n\
    \n    The function will receive an integer as input and should return the special\n\
    \    factorial of this integer.\n    \n*/\nlong special_factorial(long n) \n{\n\
    \    long result = 1;\n    foreach(i; 1 .. n)\n    {\n        result *= factorial(i);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = special_factorial;\n\
    \n    assert(candidate(4L) == 288L);\n    assert(candidate(5L) == 34560L);\n \
    \   assert(candidate(7L) == 125411328000L);\n    assert(candidate(1L) == 1L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpretiadbh.d(21): Error: undefined identifier `factorial`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpretiadbh.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThe Brazilian factorial is\
    \ defined as:\n    brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    \    where n > 0\n\n    For example:\n    >>> special_factorial(4L)\n    288L\n\
    \n    The function will receive an integer as input and should return the special\n\
    \    factorial of this integer.\n    \n*/\nlong special_factorial(long n) \n{\n\
    \    long result = 1;\n    foreach(i; 1..n)\n    {\n        result *= factorial(i);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = special_factorial;\n\
    \n    assert(candidate(4L) == 288L);\n    assert(candidate(5L) == 34560L);\n \
    \   assert(candidate(7L) == 125411328000L);\n    assert(candidate(1L) == 1L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnbuo_xnj.d(21): Error: undefined identifier `factorial`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnbuo_xnj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThe Brazilian factorial is\
    \ defined as:\n    brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    \    where n > 0\n\n    For example:\n    >>> special_factorial(4L)\n    288L\n\
    \n    The function will receive an integer as input and should return the special\n\
    \    factorial of this integer.\n    \n*/\nlong special_factorial(long n) \n{\n\
    \    long result = 1;\n    foreach(i; 1 .. n + 1)\n    {\n        result *= factorial(i);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = special_factorial;\n\
    \n    assert(candidate(4L) == 288L);\n    assert(candidate(5L) == 34560L);\n \
    \   assert(candidate(7L) == 125411328000L);\n    assert(candidate(1L) == 1L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpuplrz80n.d(21): Error: undefined identifier `factorial`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuplrz80n.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThe Brazilian factorial is\
    \ defined as:\n    brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    \    where n > 0\n\n    For example:\n    >>> special_factorial(4L)\n    288L\n\
    \n    The function will receive an integer as input and should return the special\n\
    \    factorial of this integer.\n    \n*/\nlong special_factorial(long n) \n{\n\
    \    long result = 1;\n    foreach(i; 1..n)\n    {\n        result *= factorial(i);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = special_factorial;\n\
    \n    assert(candidate(4L) == 288L);\n    assert(candidate(5L) == 34560L);\n \
    \   assert(candidate(7L) == 125411328000L);\n    assert(candidate(1L) == 1L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnbuo_xnj.d(21): Error: undefined identifier `factorial`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnbuo_xnj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThe Brazilian factorial is\
    \ defined as:\n    brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    \    where n > 0\n\n    For example:\n    >>> special_factorial(4L)\n    288L\n\
    \n    The function will receive an integer as input and should return the special\n\
    \    factorial of this integer.\n    \n*/\nlong special_factorial(long n) \n{\n\
    \    long result = 1;\n    for (long i = n; i > 0; i--)\n    {\n        result\
    \ *= factorial(i);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = special_factorial;\n\n    assert(candidate(4L) == 288L);\n    assert(candidate(5L)\
    \ == 34560L);\n    assert(candidate(7L) == 125411328000L);\n    assert(candidate(1L)\
    \ == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5qu7xjth.d(21): Error: undefined identifier `factorial`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5qu7xjth.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThe Brazilian factorial is\
    \ defined as:\n    brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    \    where n > 0\n\n    For example:\n    >>> special_factorial(4L)\n    288L\n\
    \n    The function will receive an integer as input and should return the special\n\
    \    factorial of this integer.\n    \n*/\nlong special_factorial(long n) \n{\n\
    \    long result = 1;\n    foreach(i; 1 .. n)\n    {\n        result *= factorial(i);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = special_factorial;\n\
    \n    assert(candidate(4L) == 288L);\n    assert(candidate(5L) == 34560L);\n \
    \   assert(candidate(7L) == 125411328000L);\n    assert(candidate(1L) == 1L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpretiadbh.d(21): Error: undefined identifier `factorial`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpretiadbh.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThe Brazilian factorial is\
    \ defined as:\n    brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    \    where n > 0\n\n    For example:\n    >>> special_factorial(4L)\n    288L\n\
    \n    The function will receive an integer as input and should return the special\n\
    \    factorial of this integer.\n    \n*/\nlong special_factorial(long n) \n{\n\
    \    long result = 1;\n    foreach(i; 1..n)\n    {\n        result *= factorial(i);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = special_factorial;\n\
    \n    assert(candidate(4L) == 288L);\n    assert(candidate(5L) == 34560L);\n \
    \   assert(candidate(7L) == 125411328000L);\n    assert(candidate(1L) == 1L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnbuo_xnj.d(21): Error: undefined identifier `factorial`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnbuo_xnj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThe Brazilian factorial is\
    \ defined as:\n    brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    \    where n > 0\n\n    For example:\n    >>> special_factorial(4L)\n    288L\n\
    \n    The function will receive an integer as input and should return the special\n\
    \    factorial of this integer.\n    \n*/\nlong special_factorial(long n) \n{\n\
    \    long result = 1;\n    foreach(i; 1..n)\n    {\n        result *= factorial(i);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = special_factorial;\n\
    \n    assert(candidate(4L) == 288L);\n    assert(candidate(5L) == 34560L);\n \
    \   assert(candidate(7L) == 125411328000L);\n    assert(candidate(1L) == 1L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnbuo_xnj.d(21): Error: undefined identifier `factorial`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnbuo_xnj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThe Brazilian factorial is\
    \ defined as:\n    brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    \    where n > 0\n\n    For example:\n    >>> special_factorial(4L)\n    288L\n\
    \n    The function will receive an integer as input and should return the special\n\
    \    factorial of this integer.\n    \n*/\nlong special_factorial(long n) \n{\n\
    \    long result = 1;\n    foreach(i; 1 .. n + 1)\n    {\n        result *= factorial(i);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = special_factorial;\n\
    \n    assert(candidate(4L) == 288L);\n    assert(candidate(5L) == 34560L);\n \
    \   assert(candidate(7L) == 125411328000L);\n    assert(candidate(1L) == 1L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpuplrz80n.d(21): Error: undefined identifier `factorial`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuplrz80n.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThe Brazilian factorial is\
    \ defined as:\n    brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    \    where n > 0\n\n    For example:\n    >>> special_factorial(4L)\n    288L\n\
    \n    The function will receive an integer as input and should return the special\n\
    \    factorial of this integer.\n    \n*/\nlong special_factorial(long n) \n{\n\
    \    long result = 1;\n    foreach(i; 1..n)\n    {\n        result *= factorial(i);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = special_factorial;\n\
    \n    assert(candidate(4L) == 288L);\n    assert(candidate(5L) == 34560L);\n \
    \   assert(candidate(7L) == 125411328000L);\n    assert(candidate(1L) == 1L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnbuo_xnj.d(21): Error: undefined identifier `factorial`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnbuo_xnj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThe Brazilian factorial is\
    \ defined as:\n    brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    \    where n > 0\n\n    For example:\n    >>> special_factorial(4L)\n    288L\n\
    \n    The function will receive an integer as input and should return the special\n\
    \    factorial of this integer.\n    \n*/\nlong special_factorial(long n) \n{\n\
    \    long result = 1;\n    for (long i = n; i > 0; i--)\n    {\n        result\
    \ *= factorial(i);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = special_factorial;\n\n    assert(candidate(4L) == 288L);\n    assert(candidate(5L)\
    \ == 34560L);\n    assert(candidate(7L) == 125411328000L);\n    assert(candidate(1L)\
    \ == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5qu7xjth.d(21): Error: undefined identifier `factorial`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5qu7xjth.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThe Brazilian factorial is\
    \ defined as:\n    brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    \    where n > 0\n\n    For example:\n    >>> special_factorial(4L)\n    288L\n\
    \n    The function will receive an integer as input and should return the special\n\
    \    factorial of this integer.\n    \n*/\nlong special_factorial(long n) \n{\n\
    \    long result = 1;\n    foreach(i; 1..n)\n    {\n        result *= factorial(i);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = special_factorial;\n\
    \n    assert(candidate(4L) == 288L);\n    assert(candidate(5L) == 34560L);\n \
    \   assert(candidate(7L) == 125411328000L);\n    assert(candidate(1L) == 1L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnbuo_xnj.d(21): Error: undefined identifier `factorial`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnbuo_xnj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThe Brazilian factorial is\
    \ defined as:\n    brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    \    where n > 0\n\n    For example:\n    >>> special_factorial(4L)\n    288L\n\
    \n    The function will receive an integer as input and should return the special\n\
    \    factorial of this integer.\n    \n*/\nlong special_factorial(long n) \n{\n\
    \    long result = 1;\n    foreach(i; 1..n)\n    {\n        result *= factorial(i);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = special_factorial;\n\
    \n    assert(candidate(4L) == 288L);\n    assert(candidate(5L) == 34560L);\n \
    \   assert(candidate(7L) == 125411328000L);\n    assert(candidate(1L) == 1L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnbuo_xnj.d(21): Error: undefined identifier `factorial`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnbuo_xnj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThe Brazilian factorial is\
    \ defined as:\n    brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    \    where n > 0\n\n    For example:\n    >>> special_factorial(4L)\n    288L\n\
    \n    The function will receive an integer as input and should return the special\n\
    \    factorial of this integer.\n    \n*/\nlong special_factorial(long n) \n{\n\
    \    long result = 1;\n    foreach(i; 1..n)\n    {\n        result *= factorial(i);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = special_factorial;\n\
    \n    assert(candidate(4L) == 288L);\n    assert(candidate(5L) == 34560L);\n \
    \   assert(candidate(7L) == 125411328000L);\n    assert(candidate(1L) == 1L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnbuo_xnj.d(21): Error: undefined identifier `factorial`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnbuo_xnj.d", "-I/tmp"]\n'''
  stdout: b''

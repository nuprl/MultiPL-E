language: d
name: HumanEval_53_add
results:
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nNegate a number x\n    >>> negate(2L)\n\
    \    -2L\n    >>> negate(5L)\n    -5L\n*/\nlong negate(long x) \n{\n    return\
    \ -x;\n}\n/*\nIncrement a number x\n    >>> increment(2L)\n    3L\n    >>> increment(5L)\n\
    \    6L\n*/\nlong increment(long x) \n{\n    return x + 1;\n}\n/*\nDecrement a\
    \ number x\n    >>> decrement(2L)\n    1L\n    >>> decrement(5L)\n    4L\n*/\n\
    long decrement(long x) \n{\n    return x - 1;\n}\n/*\nAbsolute value of a number\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n*/\nlong abs(long x) \n\
    {\n    return x < 0 ? -x : x;\n}\n/*\nSign of a number x\n    >>> sign(2L\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp43zppm_r.d(103): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp43zppm_r.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nFind the remainder of two numbers\
    \ x and y\n    >>> remainder(2L, 3L)\n    2L\n    >>> remainder(5L, 7L)\n    5L\n\
    */\nlong remainder(long x, long y) \n{\n    return x % y;\n}\n/*\nFind the absolute\
    \ value of a number x\n    >>> abs(-2L)\n    2L\n    >>> abs(5L)\n    5L\n*/\n\
    long abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nFind the maximum of two\
    \ numbers x and y\n    >>> max(2L, 3L)\n    3L\n    >>> max(5L, 7L)\n    7L\n\
    */\nlong max(long x, long y) \n{\n    return x > y ? x : y;\n}\n/*\nFind the minimum\
    \ of two numbers x and y\n    >>> min(2L, 3L)\n    2L\n    >>> min(5L, 7L)\n \
    \   5L\n*/\nlong min(long x, long y) \n{\n    return x < y ? x : y;\n}\n/*\nFind\
    \ the square root of a number x\n    >>> sqrt(4L)\n    2L\n    >>> sqrt(9L)\n\
    \    3L\n\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxjf49xhc.d(92): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpxjf49xhc.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n    \n*/\n\
    long multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nSubtract two numbers\
    \ x and y\n    >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n\
    \    \n*/\nlong subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n\
    \    0L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Divide two numbers x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L,\
    \ 7L)\n    0L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n\
    }\n/*\nDivide two numbers x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L,\
    \ 7L)\n    0L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n\
    }\n/*\nDivide two numbers x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L,\
    \ 7L)\n    0L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n\
    }\n/*\nDivide two numbers x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L,\
    \ 7L)\n    0L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n\
    }\n/*\nDivide two numbers x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L,\
    \ 7L\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L)\
    \ == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L)\
    \ == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L)\
    \ == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbsl76xeg.d(99): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpbsl76xeg.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n\
    \    0L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Modulo two numbers x and y\n    >>> modulo(2L, 3L)\n    2L\n    >>> modulo(5L,\
    \ 7L)\n    5L\n    \n*/\nlong modulo(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nPower two numbers x and y\n    >>> power(2L, 3L)\n    8L\n    >>> power(5L,\
    \ 7L)\n    78125L\n    \n*/\nlong power(long x, long y) \n{\n    return pow(x,\
    \ y);\n}\n/*\nNegate a number x\n    >>> negate(2L)\n    -2L\n    >>> negate(5L)\n\
    \    -5L\n    \n*/\nlong negate(long x) \n{\n    return -x;\n}\n/*\nAbsolute value\
    \ of a number x\n    >>> absolute(2L)\n    2L\n    >>> absolute(-5L)\n    5L\n\
    \    \n*/\nlong absolute(long x) \n{\n    return abs(x);\n}\n/*\nSign of a number\
    \ x\n    >>> sign(2L)\n    1L\n    >>> sign(-5L)\n    -1L\n    \n*/\nlong sign(long\
    \ x) \n{\n   \nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi1v0t686.d(110): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi1v0t686.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nNegate a number x\n    >>> negate(2L)\n\
    \    -2L\n    >>> negate(5L)\n    -5L\n*/\nlong negate(long x) \n{\n    return\
    \ -x;\n}\n/*\nIncrement a number x\n    >>> increment(2L)\n    3L\n    >>> increment(5L)\n\
    \    6L\n*/\nlong increment(long x) \n{\n    return x + 1;\n}\n/*\nDecrement a\
    \ number x\n    >>> decrement(2L)\n    1L\n    >>> decrement(5L)\n    4L\n*/\n\
    long decrement(long x) \n{\n    return x - 1;\n}\n/*\nAbsolute value of a number\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n*/\nlong abs(long x) \n\
    {\n    return x < 0 ? -x : x;\n}\n/*\nSign of a number x\n    >>> sign(2L\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp43zppm_r.d(103): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp43zppm_r.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nNegate a number x\n    >>> negate(2L)\n\
    \    -2L\n    >>> negate(5L)\n    -5L\n*/\nlong negate(long x) \n{\n    return\
    \ -x;\n}\n/*\nIncrement a number x\n    >>> increment(2L)\n    3L\n    >>> increment(5L)\n\
    \    6L\n*/\nlong increment(long x) \n{\n    return x + 1;\n}\n/*\nDecrement a\
    \ number x\n    >>> decrement(2L)\n    1L\n    >>> decrement(5L)\n    4L\n*/\n\
    long decrement(long x) \n{\n    return x - 1;\n}\n/*\nAbsolute value of a number\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n*/\nlong abs(long x) \n\
    {\n    return x < 0 ? -x : x;\n}\n/*\nSign of a number x\n    >>> sign(2L\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp43zppm_r.d(103): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp43zppm_r.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n\
    \    0L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Modulus two numbers x and y\n    >>> modulus(2L, 3L)\n    2L\n    >>> modulus(5L,\
    \ 7L)\n    5L\n    \n*/\nlong modulus(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nNegate a number x\n    >>> negate(2L)\n    -2L\n    >>> negate(5L)\n  \
    \  -5L\n    \n*/\nlong negate(long x) \n{\n    return -x;\n}\n/*\nIncrement a\
    \ number x\n    >>> increment(2L)\n    3L\n    >>> increment(5L)\n    6L\n   \
    \ \n*/\nlong increment(long x) \n{\n    return x + 1;\n}\n/*\nDecrement a number\
    \ x\n    >>> decrement(2L)\n    1L\n    >>> decrement(5L)\n    4L\n    \n*/\n\
    long decrement(long x) \n{\n    return x - 1;\n}\n/*\nAbsolute value of a number\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n    \n*/\nlong abs(long\
    \ x) \n{\n    return x < 0 ? -x : x;\n\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjv1aj5r5.d(111): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjv1aj5r5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nPower two numbers x and y\n    >>>\
    \ power(2L, 3L)\n    8L\n    >>> power(5L, 7L)\n    78125L\n*/\nlong power(long\
    \ x, long y) \n{\n    return pow(x, y);\n}\n/*\nSquare root of a number x\n  \
    \  >>> squareRoot(2L)\n    1.4142135623730951L\n    >>> squareRoot(5L)\n    2.23606797749979L\n\
    */\nlong squareRoot(long x) \n{\n    return sqrt(x);\n}\n/*\nAbsolute value of\
    \ a number x\n    >>> absoluteValue(2L)\n    2L\n    >>> absoluteValue(-5L)\n\
    \    5L\n*/\nlong absoluteValue(long x) \n{\n    return abs(x);\n}\n/*\nFloor\
    \ of a number x\n    >>> floor(2.5L)\n    2L\n    >>> floor(5.7L)\n    5L\n*/\n\
    long\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L)\
    \ == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L)\
    \ == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L)\
    \ == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6aninwdt.d(100): Error: no identifier for declarator `long`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6aninwdt.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n\
    \    0L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Modulo two numbers x and y\n    >>> modulo(2L, 3L)\n    2L\n    >>> modulo(5L,\
    \ 7L)\n    5L\n    \n*/\nlong modulo(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nBitwise and two numbers x and y\n    >>> bitwiseAnd(2L, 3L)\n    2L\n \
    \   >>> bitwiseAnd(5L, 7L)\n    5L\n    \n*/\nlong bitwiseAnd(long x, long y)\
    \ \n{\n    return x & y;\n}\n/*\nBitwise or two numbers x and y\n    >>> bitwiseOr(2L,\
    \ 3L)\n    3L\n    >>> bitwiseOr(5L, 7L)\n    7L\n    \n*/\nlong bitwiseOr(long\
    \ x, long y) \n{\n    return x | y;\n}\n/*\nBitwise xor two numbers x and y\n\
    \    >>> bitwiseXor(2L, 3L)\n    1L\n    >>> bitwiseXor(5L, 7L)\n    2L\n    \n\
    */\nlong bitwiseXor(long x, long y) \n{\n    return x ^ y;\n}\n/*\nBitwise left\
    \ shift\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L)\
    \ == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L)\
    \ == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L)\
    \ == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxih39zyx.d(99): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpxih39zyx.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nExponentiate two numbers x and y\n\
    \    >>> exponentiate(2L, 3L)\n    8L\n    >>> exponentiate(5L, 7L)\n    78125L\n\
    */\nlong exponentiate(long x, long y) \n{\n    return pow(x, y);\n}\n/*\nNegate\
    \ a number x\n    >>> negate(2L)\n    -2L\n    >>> negate(5L)\n    -5L\n*/\nlong\
    \ negate(long x) \n{\n    return -x;\n}\n/*\nAbsolute value of a number x\n  \
    \  >>> absolute(2L)\n    2L\n    >>> absolute(-5L)\n    5L\n*/\nlong absolute(long\
    \ x) \n{\n    return abs(x);\n}\n/*\nFloor of a number x\n    >>> floor(2.3L)\n\
    \    2L\n    >>> floor(5.7L)\n    5L\n*/\nlong floor(long x) \n{\n    return floor(x);\n\
    }\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) ==\
    \ 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) ==\
    \ 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) ==\
    \ 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n\
    \    0L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Modulo two numbers x and y\n    >>> modulo(2L, 3L)\n    2L\n    >>> modulo(5L,\
    \ 7L)\n    5L\n    \n*/\nlong modulo(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nNegate a number x\n    >>> negate(2L)\n    -2L\n    >>> negate(5L)\n  \
    \  -5L\n    \n*/\nlong negate(long x) \n{\n    return -x;\n}\n/*\nIncrement a\
    \ number x\n    >>> increment(2L)\n    3L\n    >>> increment(5L)\n    6L\n   \
    \ \n*/\nlong increment(long x) \n{\n    return x + 1;\n}\n/*\nDecrement a number\
    \ x\n    >>> decrement(2L)\n    1L\n    >>> decrement(5L)\n    4L\n    \n*/\n\
    long decrement(long x) \n{\n    return x - 1;\n}\n/*\nAbsolute value of a number\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n    \n*/\nlong abs(long\
    \ x) \n{\n    return x < 0 ? -x : x;\n\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2hyldn74.d(111): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2hyldn74.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2,\
    \ 3)\n    5\n    >>> add(5, 7)\n    12\n    \n*/\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''

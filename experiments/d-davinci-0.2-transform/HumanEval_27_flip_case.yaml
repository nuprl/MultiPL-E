name: HumanEval_27_flip_case
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase\
  \ characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\"\
  )\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n"
tests: "unittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
  ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
  These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
  \ ENDS\");\n}\nvoid main(){}"
completions: ["{\n    string result = \"\";\n    foreach(char c; string) \n    {\n\
    \        if(isUpper(c)) \n        {\n            result ~= toLower(c);\n     \
    \   } \n        else \n        {\n            result ~= toUpper(c);\n        }\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else\n            result ~= toUpper(c);\n    }\n    return result;\n}",
  "{\n    string result;\n    foreach(char c; string) \n    {\n        if(isUpper(c))\
    \ \n        {\n            result ~= toLower(c);\n        } \n        else \n\
    \        {\n            result ~= toUpper(c);\n        }\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(c; string) \n    {\n        if(isUpper(c))\
    \ \n        {\n            result ~= toLower(c);\n        } \n        else \n\
    \        {\n            result ~= toUpper(c);\n        }\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(char c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\
    \ if(isLower(c))\n            result ~= toUpper(c);\n        else\n          \
    \  result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n    foreach(c;\
    \ string) \n    {\n        if(isLower(c)) \n        {\n            result ~= toUpper(c);\n\
    \        }\n        else \n        {\n            result ~= toLower(c);\n    \
    \    }\n    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string) \n    {\n        if(isUpper(c)) \n        {\n            result ~=\
    \ toLower(c);\n        } \n        else \n        {\n            result ~= toUpper(c);\n\
    \        }\n    }\n    return result;\n}", "{\n    string result;\n    foreach(char\
    \ c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n\
    \        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n\
    \    foreach(char c; string)\n    {\n        if(isUpper(c))\n            result\
    \ ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n\
    \        else\n            result ~= c;\n    }\n    return result;\n}", "{\n \
    \   string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n  \
    \          result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}", "{\n    return string.map!(a\
    \ => a.isUpper ? a.toLower : a.toUpper)();\n}", "{\n    string result = \"\";\n\
    \    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~=\
    \ toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return\
    \ result;\n}", "{\n    string result;\n    foreach(char c; string)\n    {\n  \
    \      if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n\
    \            result ~= c.toUpper;\n        else\n            result ~= c;\n  \
    \  }\n    return result;\n}\n/*\n    Given a string, return a new string with\
    \ the reversed order of characters.\n    >>> reverse_string(\"Hello\")\n    \"\
    olleH\"\n*/\nstring reverse_string(string string)\n{\n    string result;\n   \
    \ foreach(char c; string)\n    {\n        result = c ~ result;\n    }\n    return\
    \ result;\n}\n/*\n    Given a string, return a new string with the reversed order\
    \ of words.\n    >>> reverse_words(\"Hello World\")\n    \"World Hello\"\n*/\n\
    string reverse_words(string string)\n{\n    string result;\n    foreach(string\
    \ word; string.split)\n    {\n        result = word ~ \" \" ~ result;\n    }\n\
    \    return result.stripRight;\n}\n/*\n    Given a string, return a new string\
    \ with the reversed order of words.\n    >>> reverse_words(\"Hello World\")\n\
    \    \"World Hello\"\n*/\nstring reverse_words(string string)\n{\n    string result;\n\
    \    foreach(string word; string.split)\n    {\n        result = word ~ \" \"\
    \ ~ result;\n    }\n    return result.stripRight;\n}\n/*\n    Given a string,\
    \ return a new string with the reversed order of words.\n    >>> reverse_words(\"\
    Hello World\")\n    \"World Hello\"\n*/\nstring reverse_words(string string)\n\
    {\n    string result;\n    foreach(string word; string.split)\n    {\n       \
    \ result = word ~ \" \" ~ result;\n    }\n    return result.stripRight;\n}\n/*\n\
    \    Given a string, return a new string with the reversed order of words.\n \
    \   >>> reverse_words(\"Hello World\")\n    \"World Hello\"\n*/\nstring reverse_words(string\
    \ string)\n{\n    string result;\n    foreach(string word; string.split)\n   \
    \ {\n        result", "{\n    string result;\n    foreach(c; string) \n    {\n\
    \        if (isUpper(c)) \n        {\n            result ~= toLower(c);\n    \
    \    } \n        else \n        {\n            result ~= toUpper(c);\n       \
    \ }\n    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string) \n    {\n        if(isUpper(c)) \n        {\n            result ~=\
    \ toLower(c);\n        } \n        else \n        {\n            result ~= toUpper(c);\n\
    \        }\n    }\n    return result;\n}", "{\n    string result;\n    foreach(char\
    \ c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else\n            result ~= toUpper(c);\n    }\n    return result;\n}",
  "{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(char c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\
    \ if(isLower(c))\n            result ~= toUpper(c);\n        else\n          \
    \  result ~= c;\n    }\n    return result;\n}", "{\n    string result = \"\";\n\
    \    foreach(char c; string)\n    {\n        if(c.isUpper)\n            result\
    \ ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return\
    \ result;\n}", "{\n    string result;\n    foreach(char c; string)\n    {\n  \
    \      if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n\
    \            result ~= toUpper(c);\n        else\n            result ~= c;\n \
    \   }\n    return result;\n}", "{\n    string result;\n    foreach(c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n\
    \            result ~= toUpper(c);\n    }\n    return result;\n}", "{\n    string\
    \ result;\n    foreach(char c; string)\n    {\n        if (c.isUpper)\n      \
    \      result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else\n            result ~= toUpper(c);\n    }\n    return result;\n}",
  "{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n \
    \           result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(char c; string)\n\
    \    {\n        if (isUpper(c))\n            result ~= toLower(c);\n        else\n\
    \            result ~= toUpper(c);\n    }\n    return result;\n}", "{\n    string\
    \ result = \"\";\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n\
    \    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n\
    \        else\n            result ~= c.toUpper;\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    foreach(char c; string) \n    {\n        if(isUpper(c))\
    \ \n        {\n            result ~= toLower(c);\n        }\n        else \n \
    \       {\n            result ~= toUpper(c);\n        }\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(char c; string)\n    {\n      \
    \  if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n\
    \            result ~= toUpper(c);\n        else\n            result ~= c;\n \
    \   }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string) \n    {\n        if(isUpper(c)) \n        {\n            result ~=\
    \ toLower(c);\n        } \n        else \n        {\n            result ~= toUpper(c);\n\
    \        }\n    }\n    return result;\n}", "{\n    string result = \"\";\n   \
    \ foreach(char c; string)\n    {\n        if(c.isUpper)\n            result ~=\
    \ c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return\
    \ result;\n}", "{\n    string result;\n    foreach(char c; string)\n    {\n  \
    \      if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n\
    \            result ~= c.toUpper;\n        else\n            result ~= c;\n  \
    \  }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n\
    \            result ~= toUpper(c);\n    }\n    return result;\n}", "{\n    string\
    \ result;\n    foreach(char c; string)\n    {\n        if (c.isUpper)\n      \
    \      result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n\
    \    foreach(char c; string)\n    {\n        if(isUpper(c))\n            result\
    \ ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n   \
    \ return result;\n}", "{\n    string result;\n    foreach(c; string) \n    {\n\
    \        if(isUpper(c)) \n        {\n            result ~= toLower(c);\n     \
    \   } \n        else \n        {\n            result ~= toUpper(c);\n        }\n\
    \    }\n    return result;\n}\n/*\n    Given a string, return a list of all the\
    \ unique characters in the string.\n    >>> unique_chars(\"Hello\")\n    ['H',\
    \ 'e', 'l', 'o']\n*/\nstring[] unique_chars(string string) \n{\n    string[] result;\n\
    \    foreach(c; string) \n    {\n        if(!result.canFind(c)) \n        {\n\
    \            result ~= c;\n        }\n    }\n    return result;\n}\n/*\n    Given\
    \ a string, return a list of all the unique characters in the string.\n    >>>\
    \ unique_chars(\"Hello\")\n    ['H', 'e', 'l', 'o']\n*/\nstring[] unique_chars(string\
    \ string) \n{\n    string[] result;\n    foreach(c; string) \n    {\n        if(!result.canFind(c))\
    \ \n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\n/*\n    Given a string, return a list of all the unique characters in the string.\n\
    \    >>> unique_chars(\"Hello\")\n    ['H', 'e', 'l', 'o']\n*/\nstring[] unique_chars(string\
    \ string) \n{\n    string[] result;\n    foreach(c; string) \n    {\n        if(!result.canFind(c))\
    \ \n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\n/*\n    Given a string, return a list of all the unique characters in the string.\n\
    \    >>> unique_chars(\"Hello\")\n    ['H', 'e', 'l', 'o']\n*/\nstring[] unique_chars(string\
    \ string) \n{\n    string[] result;\n    foreach(c; string) \n    {\n        if(!result.canFind",
  "{\n    string result = \"\";\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(char c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n\
    \            result ~= toUpper(c);\n    }\n    return result;\n}", "{\n    string\
    \ result = \"\";\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else if(c.isLower)\n            result\
    \ ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result;\n    foreach(c; string)\n    {\n        result ~= isUpper(c)\
    \ ? toLower(c) : toUpper(c);\n    }\n    return result;\n}", "{\n    string result;\n\
    \    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n\
    \        else\n            result ~= c.toUpper;\n    }\n    return result;\n}",
  "{\n    string result;\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string)\n    {\n        if(isAlpha(c))\n        {\n            if(isLower(c))\n\
    \            {\n                result ~= toUpper(c);\n            }\n       \
    \     else\n            {\n                result ~= toLower(c);\n           \
    \ }\n        }\n        else\n        {\n            result ~= c;\n        }\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n\
    \            result ~= toUpper(c);\n    }\n    return result;\n}", "{\n    string\
    \ result;\n    foreach(char c; string)\n    {\n        if (c.isUpper)\n      \
    \      result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n\
    \            result ~= toUpper(c);\n    }\n    return result;\n}", "{\n    string\
    \ flipped_string = \"\";\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n\
    \        {\n            flipped_string ~= c.toLower;\n        }\n        else\
    \ if(c.isLower)\n        {\n            flipped_string ~= c.toUpper;\n       \
    \ }\n        else\n        {\n            flipped_string ~= c;\n        }\n  \
    \  }\n    return flipped_string;\n}", "{\n    string result;\n    foreach(c; string)\n\
    \    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\
    \ if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result\
    \ ~= c;\n    }\n    return result;\n}", "{\n    string result;\n    foreach(c;\
    \ string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n  \
    \      else\n            result ~= c.toUpper;\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    foreach(char c; string) \n    {\n        if(isUpper(c))\
    \ \n        {\n            result ~= toLower(c);\n        } \n        else \n\
    \        {\n            result ~= toUpper(c);\n        }\n    }\n    return result;\n\
    }", "{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n\
    \    foreach(char c; string)\n    {\n        if(isUpper(c))\n            result\
    \ ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n   \
    \ return result;\n}", "{\n    string result;\n    foreach(c; string)\n    {\n\
    \        if(isUpper(c))\n            result ~= toLower(c);\n        else\n   \
    \         result ~= toUpper(c);\n    }\n    return result;\n}", "{\n    string\
    \ result;\n    foreach(ch; string)\n    {\n        if(isUpper(ch))\n         \
    \   result ~= toLower(ch);\n        else if(isLower(ch))\n            result ~=\
    \ toUpper(ch);\n        else\n            result ~= ch;\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(char c; string) \n    {\n     \
    \   if(c.isUpper) \n        {\n            result ~= c.toLower;\n        }\n \
    \       else \n        {\n            result ~= c.toUpper;\n        }\n    }\n\
    \    return result;\n}", "{\n    return string.map!(c => c.isUpper ? c.toLower\
    \ : c.toUpper);\n}", "{\n    string result = \"\";\n    foreach(char c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\
    \ if(isLower(c))\n            result ~= toUpper(c);\n        else\n          \
    \  result ~= c;\n    }\n    return result;\n}", "{\n    string result = \"\";\n\
    \    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n\
    \        else\n            result ~= c.toUpper;\n    }\n    return result;\n}",
  "{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(c; string)\n\
    \    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n\
    \            result ~= c.toUpper;\n    }\n    return result;\n}", "{\n    string\
    \ result = \"\";\n    foreach(char c; string) \n    {\n        if(isUpper(c))\
    \ \n        {\n            result ~= toLower(c);\n        } \n        else \n\
    \        {\n            result ~= toUpper(c);\n        }\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(char c; string)\n    {\n      \
    \  if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n\
    \            result ~= toUpper(c);\n        else\n            result ~= c;\n \
    \   }\n    return result;\n}", "{\n    string flipped = \"\";\n    foreach(char\
    \ c; string)\n    {\n        if(c.isUpper)\n            flipped ~= c.toLower;\n\
    \        else\n            flipped ~= c.toUpper;\n    }\n    return flipped;\n\
    }", "{\n    string result;\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(i, c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result;\n    foreach(c; string) \n    {\n        if(isUpper(c))\
    \ \n        {\n            result ~= toLower(c);\n        }\n        else \n \
    \       {\n            result ~= toUpper(c);\n        }\n    }\n    return result;\n\
    }", "{\n    string flipped = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n\
    \        {\n            flipped ~= c.toLower;\n        }\n        else\n     \
    \   {\n            flipped ~= c.toUpper;\n        }\n    }\n    return flipped;\n\
    }", "{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}", "{\n    string result\
    \ = \"\";\n    foreach(char c; string) \n    {\n        if(isUpper(c)) \n    \
    \    {\n            result ~= toLower(c);\n        } \n        else \n       \
    \ {\n            result ~= toUpper(c);\n        }\n    }\n    return result;\n\
    }", "{\n    string result;\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result;\n    foreach(char c; string)\n    {\n        if (c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else\n            result ~= toUpper(c);\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else if(c.isLower)\n            result\
    \ ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result;\n    foreach(c; string)\n    {\n        if (isLower(c))\n\
    \            result ~= toUpper(c);\n        else if (isUpper(c))\n           \
    \ result ~= toLower(c);\n        else\n            result ~= c;\n    }\n    return\
    \ result;\n}", "{\n    string result;\n    foreach(char c; string)\n    {\n  \
    \      if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n\
    \            result ~= toUpper(c);\n        else\n            result ~= c;\n \
    \   }\n    return result;\n}", "{\n    return string.map!(c => isAlpha(c) ? (isUpper(c)\
    \ ? toLower(c) : toUpper(c)) : c);\n}", "{\n    string result;\n    foreach(c;\
    \ string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}", "{\n    string result\
    \ = \"\";\n    foreach(c; string) \n    {\n        if(isUpper(c)) \n        {\n\
    \            result ~= toLower(c);\n        } \n        else \n        {\n   \
    \         result ~= toUpper(c);\n        }\n    }\n    return result;\n}", "{\n\
    \    string result;\n    foreach(c; string) \n    {\n        if(c.isUpper) \n\
    \        {\n            result ~= c.toLower;\n        }\n        else \n     \
    \   {\n            result ~= c.toUpper;\n        }\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(c; string)\n\
    \    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n      \
    \      {\n                result ~= toLower(c);\n            }\n            else\n\
    \            {\n                result ~= toUpper(c);\n            }\n       \
    \ }\n        else\n        {\n            result ~= c;\n        }\n    }\n   \
    \ return result;\n}", "{\n    string result;\n    foreach(char c; string)\n  \
    \  {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n\
    \            result ~= c.toUpper;\n    }\n    return result;\n}", "{\n    string\
    \ result = \"\";\n    foreach(char c; string) \n    {\n        if(isUpper(c))\
    \ \n        {\n            result ~= toLower(c);\n        } \n        else \n\
    \        {\n            result ~= toUpper(c);\n        }\n    }\n    return result;\n\
    }", "{\n    string flipped_string = \"\";\n    foreach(char c; string)\n    {\n\
    \        if(isUpper(c))\n        {\n            flipped_string ~= toLower(c);\n\
    \        }\n        else if(isLower(c))\n        {\n            flipped_string\
    \ ~= toUpper(c);\n        }\n        else\n        {\n            flipped_string\
    \ ~= c;\n        }\n    }\n    return flipped_string;\n}", "{\n    string result\
    \ = \"\";\n    foreach(c; string) \n    {\n        if(c.isUpper) \n        {\n\
    \            result ~= c.toLower;\n        } \n        else if(c.isLower) \n \
    \       {\n            result ~= c.toUpper;\n        } \n        else \n     \
    \   {\n            result ~= c;\n        }\n    }\n    return result;\n}\n/*\n\
    \    For a given string, return the first character that is not repeated elsewhere\
    \ in the string.\n    >>> first_non_repeating_letter('a')\n    'a'\n    >>> first_non_repeating_letter('stress')\n\
    \    't'\n    >>> first_non_repeating_letter('moonmen')\n    'e'\n*/\nchar first_non_repeating_letter(string\
    \ string) \n{\n    foreach(c; string) \n    {\n        if(count(string, c) ==\
    \ 1) \n        {\n            return c;\n        }\n    }\n    return ' ';\n}\n\
    /*\n    For a given string, return the number of words in the string.\n    >>>\
    \ count_words(\"Just an example here move along\")\n    6\n*/", "{\n    string\
    \ result;\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n      \
    \      result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result;\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(c;\
    \ string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else\n            result ~= toUpper(c);\n    }\n    return result;\n}",
  "{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\
    \ if(isLower(c))\n            result ~= toUpper(c);\n        else\n          \
    \  result ~= c;\n    }\n    return result;\n}", "{\n    string result = \"\";\n\
    \    foreach(char c; string)\n    {\n        if(isUpper(c))\n            result\
    \ ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n\
    \        else\n            result ~= c;\n    }\n    return result;\n}", "{\n \
    \   string result;\n    foreach(c; string) \n    {\n        if(isUpper(c)) \n\
    \        {\n            result ~= toLower(c);\n        } \n        else \n   \
    \     {\n            result ~= toUpper(c);\n        }\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(char c; string)\n    {\n      \
    \  if(c.isUpper)\n            result ~= c.toLower;\n        else\n           \
    \ result ~= c.toUpper;\n    }\n    return result;\n}", "{\n    string result;\n\
    \    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~=\
    \ toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return\
    \ result;\n}", "{\n    string result = \"\";\n    foreach(char c; string)\n  \
    \  {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\
    \ if(isLower(c))\n            result ~= toUpper(c);\n        else\n          \
    \  result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n    foreach(c;\
    \ string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else\n            result ~= toUpper(c);\n    }\n    return result;\n}",
  "{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(char c; string)\n    {\n      \
    \  if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n\
    \            result ~= toUpper(c);\n        else\n            result ~= c;\n \
    \   }\n    return result;\n}", "{\n    string result;\n    foreach(c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n\
    \            result ~= toUpper(c);\n    }\n    return result;\n}", "{\n    string\
    \ result = \"\";\n    foreach(char c; string) \n    {\n        if (isUpper(c))\
    \ \n        {\n            result ~= toLower(c);\n        } \n        else if\
    \ (isLower(c)) \n        {\n            result ~= toUpper(c);\n        } \n  \
    \      else \n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}", "{\n    string result = \"\";\n    foreach(char c; string)\n  \
    \  {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\
    \ if(isLower(c))\n            result ~= toUpper(c);\n        else\n          \
    \  result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n    foreach(c;\
    \ string) \n    {\n        if(isUpper(c)) \n        {\n            result ~= toLower(c);\n\
    \        } \n        else \n        {\n            result ~= toUpper(c);\n   \
    \     }\n    }\n    return result;\n}", "{\n    string result;\n    foreach(char\
    \ c; string)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n\
    \            {\n                result ~= toLower(c);\n            }\n       \
    \     else\n            {\n                result ~= toUpper(c);\n           \
    \ }\n        }\n        else\n        {\n            result ~= c;\n        }\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(c; string)\n\
    \    {\n        if(isLower(c))\n            result ~= toUpper(c);\n        else\
    \ if(isUpper(c))\n            result ~= toLower(c);\n        else\n          \
    \  result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n    foreach(char\
    \ c; string) \n    {\n        if(isUpper(c)) \n        {\n            result ~=\
    \ toLower(c);\n        } \n        else \n        {\n            result ~= toUpper(c);\n\
    \        }\n    }\n    return result;\n}", "{\n    string result = \"\";\n   \
    \ foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n\
    \    foreach(char c; string)\n    {\n        if (c.isUpper)\n            result\
    \ ~= c.toLower;\n        else if (c.isLower)\n            result ~= c.toUpper;\n\
    \        else\n            result ~= c;\n    }\n    return result;\n}", "{\n \
    \   string result;\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\
    \ if(isLower(c))\n            result ~= toUpper(c);\n        else\n          \
    \  result ~= c;\n    }\n    return result;\n}", "{\n    string result = \"\";\n\
    \    foreach(char c; string)\n    {\n        if(isUpper(c))\n            result\
    \ ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n   \
    \ return result;\n}", "{\n    string result;\n    foreach(char c; string)\n  \
    \  {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\
    \ if(isLower(c))\n            result ~= toUpper(c);\n        else\n          \
    \  result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n    foreach(char\
    \ c; string)\n    {\n        if (isUpper(c))\n            result ~= toLower(c);\n\
    \        else if (isLower(c))\n            result ~= toUpper(c);\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}", "{\n    string flipped_string\
    \ = \"\";\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n       \
    \ {\n            flipped_string ~= c.toLower;\n        }\n        else\n     \
    \   {\n            flipped_string ~= c.toUpper;\n        }\n    }\n    return\
    \ flipped_string;\n}", "{\n    string result;\n    foreach(c; string) \n    {\n\
    \        if(isUpper(c)) \n        {\n            result ~= toLower(c);\n     \
    \   } \n        else \n        {\n            result ~= toUpper(c);\n        }\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}", "{\n    string result\
    \ = \"\";\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n       \
    \     result ~= c.toLower;\n        else if(c.isLower)\n            result ~=\
    \ c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result;\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(char c; string)\n    {\n      \
    \  if(isUpper(c))\n            result ~= toLower(c);\n        else\n         \
    \   result ~= toUpper(c);\n    }\n    return result;\n}", "{\n    string result\
    \ = \"\";\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n      \
    \      result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(char c; string)\n    {\n      \
    \  if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n\
    \            result ~= c.toUpper;\n        else\n            result ~= c;\n  \
    \  }\n    return result;\n}\n/*\n    For a given string, return the first character\
    \ that is unique.\n    >>> first_unique(\"abcdab\")\n    'c'\n    >>> first_unique(\"\
    abcdab\")\n    'c'\n*/\nchar first_unique(string string)\n{\n    foreach(char\
    \ c; string)\n    {\n        if(count(string, c) == 1)\n            return c;\n\
    \    }\n    return '\\0';\n}\n/*\n    For a given string, return the first character\
    \ that is unique.\n    >>> first_unique(\"abcdab\")\n    'c'\n    >>> first_unique(\"\
    abcdab\")\n    'c'\n*/\nchar first_unique(string string)\n{\n    foreach(char\
    \ c; string)\n    {\n        if(count(string, c) == 1)\n            return c;\n\
    \    }\n    return '\\0';\n}\n/*\n    For a given string, return the first character\
    \ that is unique.\n    >>> first_unique(\"abcdab\")\n    'c'\n    >>> first_unique(\"\
    abcdab\")\n    'c'\n*/\nchar first_unique(string string)\n{\n    foreach(char\
    \ c; string)\n    {\n        if(count(string, c) == 1)\n            return c;\n\
    \    }\n    return '\\0';\n}\n/*\n    For a given string, return the first character\
    \ that is unique.\n    >>> first_unique(\"abcdab\")\n    'c'\n    >>> first_unique(\"\
    abcdab\")\n    'c'\n*/\nchar first_unique(string string)\n{\n    foreach(char\
    \ c; string)\n    {\n        if(count(string, c) == 1)\n            return c;\n\
    \    }\n    return '\\0';\n}\n/*\n    For a given string,", "{\n    string result\
    \ = \"\";\n    foreach(char c; string) \n    {\n        if(isUpper(c)) \n    \
    \    {\n            result ~= toLower(c);\n        } \n        else if(isLower(c))\
    \ \n        {\n            result ~= toUpper(c);\n        } \n        else \n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}",
  "{\n    string result;\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string) \n    {\n        if(isUpper(c)) \n        {\n            result ~=\
    \ toLower(c);\n        } \n        else \n        {\n            result ~= toUpper(c);\n\
    \        }\n    }\n    return result;\n}\n/*\n    For a given string, return the\
    \ number of words in the string.\n    >>> count_words(\"Hello world\")\n    2\n\
    */", "{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(c;\
    \ string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}", "{\n    string result\
    \ = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n           \
    \ result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n   \
    \ }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(c; string)\n\
    \    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n\
    \            result ~= c.toUpper;\n    }\n    return result;\n}", "{\n    string\
    \ result = \"\";\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n\
    \        else\n            result ~= c.toUpper;\n    }\n    return result;\n}",
  "{\n    string result;\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result;\n    foreach(char c; string) \n    {\n        if (c.isUpper)\
    \ \n        {\n            result ~= c.toLower;\n        } \n        else \n \
    \       {\n            result ~= c.toUpper;\n        }\n    }\n    return result;\n\
    }", "{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else\n            result ~= toUpper(c);\n    }\n    return result;\n}",
  "{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n \
    \           result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(c; string)\
    \ \n    {\n        if (isUpper(c))\n            result ~= toLower(c);\n      \
    \  else\n            result ~= toUpper(c);\n    }\n    return result;\n}", "{\n\
    \    string result = \"\";\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(c;\
    \ string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n\
    \    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~=\
    \ toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n\
    \        else\n            result ~= c;\n    }\n    return result;\n}", "{\n \
    \   string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n   \
    \         result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(c;\
    \ string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n  \
    \      else\n            result ~= c.toUpper;\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string flipped = \"\";\n    foreach(char c; string)\n    {\n     \
    \   if(c.isUpper)\n            flipped ~= c.toLower;\n        else\n         \
    \   flipped ~= c.toUpper;\n    }\n    return flipped;\n}", "{\n    string result\
    \ = \"\";\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n      \
    \      result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(c; string)\n\
    \    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\
    \ if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result\
    \ ~= c;\n    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(c;\
    \ string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n  \
    \      else if(c.isLower)\n            result ~= c.toUpper;\n        else\n  \
    \          result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n\
    \    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~=\
    \ toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return\
    \ result;\n}", "{\n    string result = \"\";\n    foreach(char c; string)\n  \
    \  {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\
    \ if(isLower(c))\n            result ~= toUpper(c);\n        else\n          \
    \  result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n    foreach(c;\
    \ string) \n    {\n        if(c.isUpper) \n        {\n            result ~= c.toLower;\n\
    \        }\n        else \n        {\n            result ~= c.toUpper;\n     \
    \   }\n    }\n    return result;\n}", "{\n    string result;\n    foreach(c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n\
    \            result ~= toUpper(c);\n    }\n    return result;\n}", "{\n    string\
    \ result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result\
    \ ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n\
    \        else\n            result ~= c;\n    }\n    return result;\n}", "{\n \
    \   string result = \"\";\n    foreach(c; string) \n    {\n        if(isUpper(c))\
    \ \n        {\n            result ~= toLower(c);\n        } \n        else \n\
    \        {\n            result ~= toUpper(c);\n        }\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string) \n    {\n        if(isUpper(c)) \n        {\n            result ~=\
    \ toLower(c);\n        } \n        else if(isLower(c)) \n        {\n         \
    \   result ~= toUpper(c);\n        } \n        else \n        {\n            result\
    \ ~= c;\n        }\n    }\n    return result;\n}", "{\n    string result;\n  \
    \  foreach(char c; string)\n    {\n        if(isUpper(c))\n            result\
    \ ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n\
    \        else\n            result ~= c;\n    }\n    return result;\n}", "{\n \
    \   string result = \"\";\n    foreach(char c; string) \n    {\n        if(isUpper(c))\
    \ \n        {\n            result ~= toLower(c);\n        } \n        else \n\
    \        {\n            result ~= toUpper(c);\n        }\n    }\n    return result;\n\
    }", "{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(c;\
    \ string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n  \
    \      else if(c.isLower)\n            result ~= c.toUpper;\n        else\n  \
    \          result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n\
    \    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n\
    \        else\n            result ~= c.toUpper;\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string flipped_string = \"\";\n    foreach(char\
    \ c; string)\n    {\n        if(c.isUpper)\n        {\n            flipped_string\
    \ ~= c.toLower;\n        }\n        else if(c.isLower)\n        {\n          \
    \  flipped_string ~= c.toUpper;\n        }\n        else\n        {\n        \
    \    flipped_string ~= c;\n        }\n    }\n    return flipped_string;\n}", "{\n\
    \    string result;\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string flipped = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n\
    \        {\n            flipped ~= c.toLower;\n        }\n        else\n     \
    \   {\n            flipped ~= c.toUpper;\n        }\n    }\n    return flipped;\n\
    }", "{\n    string result = \"\";\n    foreach(char c; string) \n    {\n     \
    \   if(c.isUpper) \n        {\n            result ~= c.toLower;\n        } \n\
    \        else \n        {\n            result ~= c.toUpper;\n        }\n    }\n\
    \    return result;\n}\n/*\n    Given a string, return a new string with the characters\
    \ reversed.\n    >>> reverse_string(\"Hello\")\n    \"olleH\"\n*/\nstring reverse_string(string\
    \ string) \n{\n    string result = \"\";\n    foreach(char c; string) \n    {\n\
    \        result = c ~ result;\n    }\n    return result;\n}\n/*\n    Given a string,\
    \ return a new string with the characters in reverse order.\n    >>> reverse_string(\"\
    Hello\")\n    \"olleH\"\n*/\nstring reverse_string_2(string string) \n{\n    string\
    \ result = \"\";\n    foreach_reverse(char c; string) \n    {\n        result\
    \ ~= c;\n    }\n    return result;\n}\n/*\n    Given a string, return a new string\
    \ with the characters in reverse order.\n    >>> reverse_string(\"Hello\")\n \
    \   \"olleH\"\n*/\nstring reverse_string_3(string string) \n{\n    string result\
    \ = \"\";\n    foreach(char c; string) \n    {\n        result = c ~ result;\n\
    \    }\n    return result;\n}\n/*\n    Given a string, return a new string with\
    \ the characters in reverse order.\n    >>> reverse_string(\"Hello\")\n    \"\
    olleH\"\n*/\nstring reverse_string_4(string string) \n{\n    string result = \"\
    \";\n    foreach(char c; string) \n    {\n        result = c ~ result;\n    }\n\
    \    return result;\n}\n/*\n    Given a string, return a new string with the characters\
    \ in reverse order.\n    >>> reverse_string(\"Hello\")\n    \"olleH\"\n*/\nstring\
    \ reverse_string_5(string string) \n{\n    string result = \"\";\n    foreach(char\
    \ c; string) \n    {\n", "{\n    string result = \"\";\n    foreach(char c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\
    \ if(isLower(c))\n            result ~= toUpper(c);\n        else\n          \
    \  result ~= c;\n    }\n    return result;\n}", "{\n    string result = \"\";\n\
    \    foreach(char c; string)\n    {\n        if(isUpper(c))\n            result\
    \ ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n\
    \        else\n            result ~= c;\n    }\n    return result;\n}", "{\n \
    \   string result = \"\";\n    foreach(c; string)\n    {\n        if (c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(c;\
    \ string) \n    {\n        if (c.isUpper)\n            result ~= c.toLower;\n\
    \        else if (c.isLower)\n            result ~= c.toUpper;\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}", "{\n    string result\
    \ = \"\";\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n      \
    \      result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(char c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n\
    \            result ~= toUpper(c);\n    }\n    return result;\n}", "{\n    string\
    \ result = \"\";\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\
    \ if(isLower(c))\n            result ~= toUpper(c);\n        else\n          \
    \  result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n    foreach(char\
    \ c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else\n            result ~= toUpper(c);\n    }\n    return result;\n}",
  "{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(i,\
    \ c; string) \n    {\n        if(isUpper(c)) \n        {\n            result ~=\
    \ toLower(c);\n        } \n        else \n        {\n            result ~= toUpper(c);\n\
    \        }\n    }\n    return result;\n}", "{\n    string result;\n    foreach(c;\
    \ string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}", "{\n    string result\
    \ = \"\";\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n       \
    \     result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n \
    \   }\n    return result;\n}", "{\n    string result;\n    foreach(c; string)\
    \ \n    {\n        if(c.isUpper) \n        {\n            result ~= c.toLower;\n\
    \        } \n        else \n        {\n            result ~= c.toUpper;\n    \
    \    }\n    }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string) \n    {\n        if(isLower(c)) \n        {\n            result ~=\
    \ toUpper(c);\n        } \n        else \n        {\n            result ~= toLower(c);\n\
    \        }\n    }\n    return result;\n}", "{\n    string result;\n    foreach(c;\
    \ string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n  \
    \      else\n            result ~= c.toUpper;\n    }\n    return result;\n}",
  "{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(c; string)\n\
    \    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\
    \ if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result\
    \ ~= c;\n    }\n    return result;\n}", "{\n    string result;\n    foreach(c;\
    \ string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else\n            result ~= toUpper(c);\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    foreach(c; string) \n    {\n        if(isAlpha(c))\n\
    \        {\n            if(isLower(c))\n            {\n                result\
    \ ~= toUpper(c);\n            }\n            else\n            {\n           \
    \     result ~= toLower(c);\n            }\n        }\n        else\n        {\n\
    \            result ~= c;\n        }\n    }\n    return result;\n}", "{\n    string\
    \ result = \"\";\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n\
    \            result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    foreach(char c; string)\n    {\n      \
    \  if (isUpper(c))\n            result ~= toLower(c);\n        else if (isLower(c))\n\
    \            result ~= toUpper(c);\n        else\n            result ~= c;\n \
    \   }\n    return result;\n}", "{\n    string result = \"\";\n    foreach(char\
    \ c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n\
    \        else\n            result ~= c.toUpper;\n    }\n    return result;\n}",
  "{\n    string result;\n    foreach(c; string)\n    {\n        if(isLower(c))\n\
    \            result ~= toUpper(c);\n        else\n            result ~= toLower(c);\n\
    \    }\n    return result;\n}", "{\n    string result;\n    foreach(char c; string)\n\
    \    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\
    \ if(isLower(c))\n            result ~= toUpper(c);\n        else\n          \
    \  result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n    foreach(c;\
    \ string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n\
    \        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}", "{\n    string result;\n\
    \    foreach(c; string)\n    {\n        if (isUpper(c))\n            result ~=\
    \ toLower(c);\n        else if (isLower(c))\n            result ~= toUpper(c);\n\
    \        else\n            result ~= c;\n    }\n    return result;\n}", "{\n \
    \   string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n\
    \            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n\
    \    }\n    return result;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

name: HumanEval_150_x_or_y
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\nA simple program which should\
  \ return the value of x if n is \n    a prime number and should return the value\
  \ of y otherwise.\n\n    Examples:\n    >>> x_or_y(7L, 34L, 12L)\n    34L\n    >>>\
  \ x_or_y(15L, 8L, 5L)\n    5L\n    \n    \n*/\nlong x_or_y(long n, long x, long\
  \ y) \n"
tests: "unittest\n{\n    alias candidate = x_or_y;\n\n    assert(candidate(7L, 34L,\
  \ 12L) == 34L);\n    assert(candidate(15L, 8L, 5L) == 5L);\n    assert(candidate(3L,\
  \ 33L, 5212L) == 33L);\n    assert(candidate(1259L, 3L, 52L) == 3L);\n    assert(candidate(7919L,\
  \ -1L, 12L) == -1L);\n    assert(candidate(3609L, 1245L, 583L) == 583L);\n    assert(candidate(91L,\
  \ 56L, 129L) == 129L);\n    assert(candidate(6L, 34L, 1234L) == 1234L);\n    assert(candidate(1L,\
  \ 2L, 0L) == 0L);\n    assert(candidate(2L, 2L, 0L) == 2L);\n}\nvoid main(){}"
completions: ["{\n    if (n <= 1L) \n    {\n        return y;\n    }\n    else \n\
    \    {\n        long i = 2L;\n        while (i <= (n - 1L)) \n        {\n    \
    \        if ((n % i) == 0L) \n            {\n                return y;\n     \
    \       }\n            i = i + 1L;\n        }\n        return x;\n    }\n}", "{\n\
    \    if (n == 2L)\n    {\n        return x;\n    }\n    if (n % 2L == 0L)\n  \
    \  {\n        return y;\n    }\n    long i = 3L;\n    while (i <= sqrt(n))\n \
    \   {\n        if (n % i == 0L)\n        {\n            return y;\n        }\n\
    \        i += 2L;\n    }\n    return x;\n}", "{\n    return isPrime(n) ? x : y;\n\
    }", "{\n    if (isPrime(n))\n        return x;\n    else\n        return y;\n}",
  "{\n    if (n < 2L) \n    {\n        return y;\n    }\n    else \n    {\n      \
    \  long i = 2L;\n        while (i < n) \n        {\n            if (n % i == 0L)\
    \ \n            {\n                return y;\n            }\n            i = i\
    \ + 1L;\n        }\n        return x;\n    }\n}", "{\n    if (n <= 1L)\n    {\n\
    \        return y;\n    }\n    else\n    {\n        long i = 2L;\n        while\
    \ (i < n)\n        {\n            if (n % i == 0L)\n            {\n          \
    \      return y;\n            }\n            i = i + 1L;\n        }\n        return\
    \ x;\n    }\n}", "{\n    if (n < 2L)\n    {\n        return y;\n    }\n    else\n\
    \    {\n        long i = 2L;\n        while (i < n)\n        {\n            if\
    \ (n % i == 0L)\n            {\n                return y;\n            }\n   \
    \         i = i + 1L;\n        }\n        return x;\n    }\n}\n/*\nA simple program\
    \ which should return the value of x if n is \n    a prime number and should return\
    \ the value of y otherwise.", "{\n    if (n < 2L) \n    {\n        return y;\n\
    \    }\n    else \n    {\n        long i = 2L;\n        while (i < n) \n     \
    \   {\n            if (n % i == 0L) \n            {\n                return y;\n\
    \            }\n            i = i + 1L;\n        }\n        return x;\n    }\n\
    }", "{\n    if (n <= 1L) \n    {\n        return y;\n    }\n    else \n    {\n\
    \        long i = 2L;\n        while (i < n) \n        {\n            if (n %\
    \ i == 0L) \n            {\n                return y;\n            }\n       \
    \     i = i + 1L;\n        }\n        return x;\n    }\n}", "{\n    if (n <= 1L)\
    \ \n    {\n        return y;\n    }\n    else if (n == 2L) \n    {\n        return\
    \ x;\n    }\n    else \n    {\n        long i = 2L;\n        while (i < n) \n\
    \        {\n            if (n % i == 0L) \n            {\n                return\
    \ y;\n            }\n            i = i + 1L;\n        }\n        return x;\n \
    \   }\n}\n/*\nA function which should return the value of x if n is \n    a prime\
    \ number and should return the value of y otherwise.", "{\n    if (n <= 1L) \n\
    \    {\n        return y;\n    }\n    else if (n <= 3L) \n    {\n        return\
    \ x;\n    }\n    else if ((n % 2L) == 0L || (n % 3L) == 0L) \n    {\n        return\
    \ y;\n    }\n    long i = 5L;\n    while (i * i <= n) \n    {\n        if ((n\
    \ % i) == 0L || (n % (i + 2L)) == 0L) \n        {\n            return y;\n   \
    \     }\n        i = i + 6L;\n    }\n    return x;\n}", "{\n    if (n == 2L) {\n\
    \        return x;\n    }\n    if (n % 2L == 0L) {\n        return y;\n    }\n\
    \    long i = 3L;\n    while (i * i <= n) {\n        if (n % i == 0L) {\n    \
    \        return y;\n        }\n        i += 2L;\n    }\n    return x;\n}", "{\n\
    \    if (n < 2L)\n    {\n        return y;\n    }\n    else\n    {\n        long\
    \ i = 2L;\n        while (i < n)\n        {\n            if (n % i == 0L)\n  \
    \          {\n                return y;\n            }\n            i += 1L;\n\
    \        }\n        return x;\n    }\n}", "{\n    if (isPrime(n))\n    {\n   \
    \     return x;\n    }\n    else\n    {\n        return y;\n    }\n}", "{\n  \
    \  if (n < 2L) \n    {\n        return y;\n    }\n    else \n    {\n        long\
    \ i = 2L;\n        while (i < n) \n        {\n            if (n % i == 0L) \n\
    \            {\n                return y;\n            }\n            i = i +\
    \ 1L;\n        }\n        return x;\n    }\n}", "{\n    if (n <= 1L)\n    {\n\
    \        return y;\n    }\n    if (n == 2L)\n    {\n        return x;\n    }\n\
    \    if (n % 2L == 0L)\n    {\n        return y;\n    }\n    long i = 3L;\n  \
    \  while (i * i <= n)\n    {\n        if (n % i == 0L)\n        {\n          \
    \  return y;\n        }\n        i += 2L;\n    }\n    return x;\n}", "{\n    long\
    \ i = 2L;\n    while (i < n) {\n        if (n % i == 0L) {\n            return\
    \ y;\n        }\n        i = i + 1L;\n    }\n    return x;\n}", "{\n    if(n <=\
    \ 1L) \n    {\n        return y;\n    }\n    else \n    {\n        long i = 2L;\n\
    \        while(i < n) \n        {\n            if(n % i == 0L) \n            {\n\
    \                return y;\n            }\n            i = i + 1L;\n        }\n\
    \        return x;\n    }\n}\n/*\nA simple program which should return the value\
    \ of x if n is \n    a prime number and should return the value of y otherwise.",
  "{\n    if (n == 2L)\n    {\n        return x;\n    }\n    else if (n % 2L == 0L)\n\
    \    {\n        return y;\n    }\n    else\n    {\n        long i = 3L;\n    \
    \    while (i <= sqrt(n))\n        {\n            if (n % i == 0L)\n         \
    \   {\n                return y;\n            }\n            i = i + 2L;\n   \
    \     }\n        return x;\n    }\n}", "{\n    long i = 2L;\n    for (; i < n;\
    \ i++)\n    {\n        if (n % i == 0L)\n        {\n            return y;\n  \
    \      }\n    }\n    return x;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

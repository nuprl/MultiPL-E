{
  "name": "mbpp_736_left_insertion",
  "language": "php",
  "prompt": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_736_left_insertion.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x == $a[$mid]) {\n            return $mid;\n        } else if ($x < $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 6, 7, 8, 9, 11, 13, 16, 18, 19, 20, 22, 24, 26, 28, 30, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99);\n$x = intval(fgets(STDIN));\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp90vj_mlh.php:28\nStack trace:\n#0 /tmp/tmp90vj_mlh.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp90vj_mlh.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] == $x) {\n            return $m;\n        } elseif ($a[$m] > $x) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptb055zgz.php:28\nStack trace:\n#0 /tmp/tmptb055zgz.php(33): test()\n#1 {main}\n  thrown in /tmp/tmptb055zgz.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\n$result = left_insertion($a, $x);\necho \"The left insertion point for $x is $result\";\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "The left insertion point for 3 is 2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm5nw4u2a.php:27\nStack trace:\n#0 /tmp/tmpm5nw4u2a.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpm5nw4u2a.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptmgrtvtf.php:26\nStack trace:\n#0 /tmp/tmptmgrtvtf.php(31): test()\n#1 {main}\n  thrown in /tmp/tmptmgrtvtf.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpern1w0qw.php:26\nStack trace:\n#0 /tmp/tmpern1w0qw.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpern1w0qw.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9kgq_scf.php:26\nStack trace:\n#0 /tmp/tmp9kgq_scf.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp9kgq_scf.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 2, 4, 5, 6, 7, 8, 9];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0uw17ub1.php:26\nStack trace:\n#0 /tmp/tmp0uw17ub1.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp0uw17ub1.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = (int) (($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99];\n$x = $argv[1];\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpsi8bcj_x.php on line 19\n0",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl4a3xp4b.php:26\nStack trace:\n#0 /tmp/tmpl4a3xp4b.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpl4a3xp4b.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6, 8, 9, 10);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgo_e1qf7.php:26\nStack trace:\n#0 /tmp/tmpgo_e1qf7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpgo_e1qf7.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x == $a[$mid]) {\n            return $mid;\n        } elseif ($x < $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwsngo6u4.php:28\nStack trace:\n#0 /tmp/tmpwsngo6u4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpwsngo6u4.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(2, 4, 5, 6, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdtvk9shb.php:26\nStack trace:\n#0 /tmp/tmpdtvk9shb.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpdtvk9shb.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x > $a[$m]) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfnv1ov9b.php:26\nStack trace:\n#0 /tmp/tmpfnv1ov9b.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpfnv1ov9b.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n;\n    while ($left < $right) {\n        $mid = (int)(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz5kw3cof.php:26\nStack trace:\n#0 /tmp/tmpz5kw3cof.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpz5kw3cof.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $i = 0;\n    while ($i < count($a) && $a[$i] < $x) {\n        $i++;\n    }\n    return $i;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $i = 0;\n    while ($i < count($a) && $a[$i] < $x) {\n        $i++;\n    }\n    return $i;\n}\n\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $l = count($a);\n    $i = 0;\n    while ($i < $l) {\n        if ($a[$i] >= $x) {\n            return $i;\n        }\n        $i++;\n    }\n    return $i;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = (int) (($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx4c20oax.php:26\nStack trace:\n#0 /tmp/tmpx4c20oax.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpx4c20oax.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5, 6, 7, 8, 9, 10];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp865o4ed.php:26\nStack trace:\n#0 /tmp/tmpp865o4ed.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpp865o4ed.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $left = 0;\n    $right = count($a) - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpko98nmzy.php:25\nStack trace:\n#0 /tmp/tmpko98nmzy.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpko98nmzy.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpph0svm3v.php:26\nStack trace:\n#0 /tmp/tmpph0svm3v.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpph0svm3v.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz5kw3cof.php:26\nStack trace:\n#0 /tmp/tmpz5kw3cof.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpz5kw3cof.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] >= $x) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0gznnagb.php:26\nStack trace:\n#0 /tmp/tmp0gznnagb.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp0gznnagb.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp6d8jqpd.php:26\nStack trace:\n#0 /tmp/tmpp6d8jqpd.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpp6d8jqpd.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 3, 5, 7, 9, 11);\n$x = 4;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $low;\n}\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3xxibci6.php:24\nStack trace:\n#0 /tmp/tmp3xxibci6.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp3xxibci6.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = (int)(($left + $right) / 2);\n        if ($a[$mid] < $x) {\n            $left = $mid + 1;\n        } else {\n            $right = $mid - 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($x > $a[$mid]) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $low;\n}\n\n$a = array(2, 4, 6, 8, 9);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x > $a[$mid]) {\n            $left = $mid + 1;\n        } else {\n            $right = $mid - 1;\n        }\n    }\n    return $left;\n}\n$a = array(2, 4, 6, 8, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp27sw93q1.php:25\nStack trace:\n#0 /tmp/tmp27sw93q1.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp27sw93q1.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x < $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc91w8n2u.php:26\nStack trace:\n#0 /tmp/tmpc91w8n2u.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpc91w8n2u.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = (int)(($left + $right) / 2);\n        if ($a[$mid] < $x) {\n            $left = $mid + 1;\n        } else {\n            $right = $mid;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg0crulad.php:26\nStack trace:\n#0 /tmp/tmpg0crulad.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpg0crulad.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqg2b4u37.php:26\nStack trace:\n#0 /tmp/tmpqg2b4u37.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqg2b4u37.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x > $a[$mid]) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $low;\n}\n$a = [1, 2, 4, 5, 6, 7, 8, 9];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7tth1eju.php:24\nStack trace:\n#0 /tmp/tmp7tth1eju.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7tth1eju.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $i = 0;\n    while ($i < count($a) && $a[$i] < $x) {\n        $i++;\n    }\n    return $i;\n}\n\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x == $a[$mid]) {\n            return $mid;\n        } else if ($x < $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4favwg3j.php:28\nStack trace:\n#0 /tmp/tmp4favwg3j.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4favwg3j.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $i = 0;\n    $j = $n;\n    while ($i < $j) {\n        $k = floor(($i + $j) / 2);\n        if ($x > $a[$k]) {\n            $i = $k + 1;\n        } else {\n            $j = $k;\n        }\n    }\n    return $i;\n}\n\n$a = [1, 2, 4, 5, 6, 7, 8, 9];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4j8q722i.php:26\nStack trace:\n#0 /tmp/tmp4j8q722i.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp4j8q722i.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] == $x) {\n            return $m;\n        } elseif ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n$a1 = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a1, $x);\necho \"\\n\";\n$a2 = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a2, $x);\necho \"\\n\";\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt9mbcbky.php:32\nStack trace:\n#0 /tmp/tmpt9mbcbky.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpt9mbcbky.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $i = 0;\n    $j = count($a);\n    while ($i < $j) {\n        $k = ($i + $j) / 2;\n        if ($x > $a[$k]) {\n            $i = $k + 1;\n        } else {\n            $j = $k;\n        }\n    }\n    return $i;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "\nDeprecated: Implicit conversion from float 4.5 to int loses precision in /tmp/tmpkxedq6ly.php on line 8\n\nDeprecated: Implicit conversion from float 2.25 to int loses precision in /tmp/tmpkxedq6ly.php on line 8\n\nDeprecated: Implicit conversion from float 3.875 to int loses precision in /tmp/tmpkxedq6ly.php on line 8\n\nDeprecated: Implicit conversion from float 3.5625 to int loses precision in /tmp/tmpkxedq6ly.php on line 8\n\nDeprecated: Implicit conversion from float 3.40625 to int loses precision in /tmp/tmpkxedq6ly.php on line 8\n\nDeprecated: Implicit conversion from float 3.328125 to int loses precision in /tmp/tmpkxedq6ly.php on line 8\n\nDeprecated: Implicit conversion from float 3.2890625 to int loses precision in /tmp/tmpkxedq6ly.php on line 8\n\nDeprecated: Implicit conversion from float 3.26953125 to int loses precision in /tmp/tmpkxedq6ly.php on line 8\n\nDeprecated: Implicit conversion from float 3.259765625 to int loses precision in /tmp/tmpkxedq6ly.php on line 8\n\nDeprecated: Implicit conversion from float",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(2, 4, 6, 8, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8dai674z.php:26\nStack trace:\n#0 /tmp/tmp8dai674z.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp8dai674z.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    if ($x <= $a[0]) {\n        return 0;\n    }\n    if ($x > $a[$n - 1]) {\n        return $n;\n    }\n    $low = 0;\n    $high = $n - 1;\n    while ($low < $high) {\n        $mid = (int) (($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $high;\n}\n\n$a = [1, 3, 5, 7];\necho left_insertion($a, 0);\necho \"\\n\";\necho left_insertion($a, 1);\necho \"\\n\";\necho left_insertion($a, 2);\necho \"\\n\";\necho left_insertion($a, 3);\necho \"\\n\";\necho left_insertion($a, 4);\necho \"\\n\";\necho left_insertion($a, 5);\necho \"\\n\";\necho left_insertion($a, 6);\necho \"\\n\";\necho left_insertion($a, 7);\necho \"\\n\";\necho left_insertion($a, 8);\necho \"\\n\";\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "0\n0\n1\n1\n2\n2\n3\n3\n4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $i = 0;\n    while ($i < count($a) && $a[$i] < $x) {\n        $i++;\n    }\n    return $i;\n}\n\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $i = 0;\n    while ($i < $n) {\n        if ($a[$i] >= $x) {\n            break;\n        }\n        $i++;\n    }\n    return $i;\n}\n\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyyv0obkp.php:26\nStack trace:\n#0 /tmp/tmpyyv0obkp.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpyyv0obkp.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $low;\n}\n$a = array(2, 4, 6, 8, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3_49_bkz.php:25\nStack trace:\n#0 /tmp/tmp3_49_bkz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp3_49_bkz.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x > $a[$mid]) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $low;\n}\n\n$a = array(2, 4, 6, 8, 9);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbqrn2nxo.php:25\nStack trace:\n#0 /tmp/tmpbqrn2nxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbqrn2nxo.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 2, 4, 5, 6, 7, 8, 9, 10];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zohzj_3.php:26\nStack trace:\n#0 /tmp/tmp7zohzj_3.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp7zohzj_3.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 6, 7, 8, 9);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqqytgu_z.php:26\nStack trace:\n#0 /tmp/tmpqqytgu_z.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqqytgu_z.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    if ($x <= $a[0]) {\n        return 0;\n    }\n    if ($x > $a[$n - 1]) {\n        return $n;\n    }\n    $low = 0;\n    $high = $n - 1;\n    while ($low < $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $high;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpph0svm3v.php:26\nStack trace:\n#0 /tmp/tmpph0svm3v.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpph0svm3v.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    if ($x <= $a[0]) {\n        return 0;\n    }\n    if ($x > $a[$n - 1]) {\n        return $n;\n    }\n    $low = 0;\n    $high = $n - 1;\n    while ($low < $high) {\n        $mid = (int) (($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $high;\n}\n\n$a = array(1, 3, 5, 7);\n$x = 5;\necho left_insertion($a, $x);\necho \"\\n\";\n$x = 2;\necho left_insertion($a, $x);\necho \"\\n\";\n$x = 7;\necho left_insertion($a, $x);\necho \"\\n\";\n$x = 0;\necho left_insertion($a, $x);\necho \"\\n\";\n$x = 8;\necho left_insertion($a, $x);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\n1\n3\n0\n4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    $m = 0;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 8, 9);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf6mv2gdl.php:27\nStack trace:\n#0 /tmp/tmpf6mv2gdl.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpf6mv2gdl.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x == $a[$m]) {\n            return $m;\n        }\n        if ($x < $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16bx_9n8.php:29\nStack trace:\n#0 /tmp/tmp16bx_9n8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp16bx_9n8.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x < $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp86iwyxxx.php:26\nStack trace:\n#0 /tmp/tmp86iwyxxx.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp86iwyxxx.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = (int)(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$x = 5;\n$result = left_insertion($a, $x);\necho $result;\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9ctmnbh.php:27\nStack trace:\n#0 /tmp/tmpc9ctmnbh.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpc9ctmnbh.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    for ($i = 0; $i < $n; $i++) {\n        if ($x <= $a[$i]) {\n            return $i;\n        }\n    }\n    return $n;\n}\n\n$a = array(2, 4, 6, 8, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $l = 0;\n    $r = count($a) - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5, 6, 7, 8, 9];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnprie1d4.php:25\nStack trace:\n#0 /tmp/tmpnprie1d4.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpnprie1d4.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $l = 0;\n    $r = count($a) - 1;\n    while ($l < $r) {\n        $m = intdiv($l + $r, 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzl115iiw.php:25\nStack trace:\n#0 /tmp/tmpzl115iiw.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpzl115iiw.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = (int) (($left + $right) / 2);\n        if ($a[$mid] < $x) {\n            $left = $mid + 1;\n        } else {\n            $right = $mid - 1;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$x = 5;\necho left_insertion($a, $x);\n\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_6vumb8a.php:26\nStack trace:\n#0 /tmp/tmp_6vumb8a.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp_6vumb8a.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa64mz0m7.php:26\nStack trace:\n#0 /tmp/tmpa64mz0m7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpa64mz0m7.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $i = 0;\n    $j = count($a) - 1;\n    while ($i < $j) {\n        $m = (int)(($i + $j) / 2);\n        if ($a[$m] < $x) {\n            $i = $m + 1;\n        } else {\n            $j = $m;\n        }\n    }\n    return $i;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy9xplsby.php:25\nStack trace:\n#0 /tmp/tmpy9xplsby.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpy9xplsby.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $l = 0;\n    $r = count($a);\n    while ($l < $r) {\n        $m = (int)(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($a[$mid] < $x) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $low;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ibc8lig.php:25\nStack trace:\n#0 /tmp/tmp1ibc8lig.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp1ibc8lig.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphgo7xllk.php:26\nStack trace:\n#0 /tmp/tmphgo7xllk.php(31): test()\n#1 {main}\n  thrown in /tmp/tmphgo7xllk.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    if ($x <= $a[0]) {\n        return 0;\n    }\n    if ($x > $a[$n - 1]) {\n        return $n;\n    }\n    $low = 0;\n    $high = $n - 1;\n    while ($low < $high) {\n        $mid = (int) (($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $high;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $i = 0;\n    while ($i < count($a) && $a[$i] < $x) {\n        $i++;\n    }\n    return $i;\n}\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = (int)(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd2wxyq71.php:26\nStack trace:\n#0 /tmp/tmpd2wxyq71.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpd2wxyq71.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    if ($x < $a[0]) {\n        return 0;\n    }\n    if ($x > $a[$n - 1]) {\n        return $n;\n    }\n    $low = 0;\n    $high = $n - 1;\n    while ($low < $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $high;\n}\n\n$a = array(1, 2, 4, 6, 7, 9, 11, 13, 15, 17, 19, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100);\n$x = 4;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    if ($x <= $a[0]) {\n        return 0;\n    }\n    if ($x > $a[$n-1]) {\n        return $n;\n    }\n    $low = 0;\n    $high = $n - 1;\n    while ($low < $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $high;\n}\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x == $a[$mid]) {\n            return $mid;\n        } else if ($x < $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$x = intval(fgets(STDIN));\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsjaih9ba.php:28\nStack trace:\n#0 /tmp/tmpsjaih9ba.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpsjaih9ba.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x > $a[$mid]) {\n            $low = $mid + 1;\n        } elseif ($x < $a[$mid]) {\n            $high = $mid - 1;\n        } else {\n            return $mid;\n        }\n    }\n    return $low;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt5jcy2m7.php:27\nStack trace:\n#0 /tmp/tmpt5jcy2m7.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpt5jcy2m7.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3jw65asw.php:26\nStack trace:\n#0 /tmp/tmp3jw65asw.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp3jw65asw.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $low;\n}\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3xxibci6.php:24\nStack trace:\n#0 /tmp/tmp3xxibci6.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp3xxibci6.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n;\n    while ($left < $right) {\n        $mid = (int)(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(2, 4, 5, 6, 9);\n$x = 5;\necho left_insertion($a, $x);\n\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $left = 0;\n    $right = count($a) - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($a[$mid] < $x) {\n            $left = $mid + 1;\n        } else {\n            $right = $mid;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqg0t61pu.php:25\nStack trace:\n#0 /tmp/tmpqg0t61pu.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpqg0t61pu.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = (int)(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo1t3c7jf.php:26\nStack trace:\n#0 /tmp/tmpo1t3c7jf.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpo1t3c7jf.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x == $a[$mid]) {\n            return $mid;\n        } else if ($x < $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl3og5ls9.php:27\nStack trace:\n#0 /tmp/tmpl3og5ls9.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpl3og5ls9.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x == $a[$mid]) {\n            return $mid;\n        } else if ($x < $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n$a = array(2, 3, 4, 10, 40);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj7xbjzh8.php:27\nStack trace:\n#0 /tmp/tmpj7xbjzh8.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpj7xbjzh8.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = ($l + $r) / 2;\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100];\n$x = 10;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "\nDeprecated: Implicit conversion from float 48.5 to int loses precision in /tmp/tmp7ar0fwh_.php on line 9\n\nDeprecated: Implicit conversion from float 24.25 to int loses precision in /tmp/tmp7ar0fwh_.php on line 9\n\nDeprecated: Implicit conversion from float 12.125 to int loses precision in /tmp/tmp7ar0fwh_.php on line 9\n\nDeprecated: Implicit conversion from float 6.0625 to int loses precision in /tmp/tmp7ar0fwh_.php on line 9\n\nDeprecated: Implicit conversion from float 9.59375 to int loses precision in /tmp/tmp7ar0fwh_.php on line 9\n\nDeprecated: Implicit conversion from float 8.328125 to int loses precision in /tmp/tmp7ar0fwh_.php on line 9\n\nDeprecated: Implicit conversion from float 7.6953125 to int loses precision in /tmp/tmp7ar0fwh_.php on line 9\n\nDeprecated: Implicit conversion from float 7.37890625 to int loses precision in /tmp/tmp7ar0fwh_.php on line 9\n\nDeprecated: Implicit conversion from float 7.220703125 to int loses precision in /tmp/tmp7ar0fwh_.php on line 9\n\nDeprecated: Implicit conversion from fl",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $low;\n}\n\n$a = array(2, 4, 6, 8, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqhqt0pl4.php:25\nStack trace:\n#0 /tmp/tmpqhqt0pl4.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpqhqt0pl4.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = (int)(($left + $right) / 2);\n        if ($a[$mid] < $x) {\n            $left = $mid + 1;\n        } else {\n            $right = $mid;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7edazvfs.php:26\nStack trace:\n#0 /tmp/tmp7edazvfs.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp7edazvfs.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    if ($x <= $a[0]) {\n        return 0;\n    }\n    if ($x > $a[$n-1]) {\n        return $n;\n    }\n    $low = 0;\n    $high = $n - 1;\n    while ($low < $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $high;\n}\n\n$a = [1, 3, 5, 7];\n$x = 5;\necho left_insertion($a, $x);\necho \"\\n\";\n\n$a = [1, 3, 5, 7];\n$x = -1;\necho left_insertion($a, $x);\necho \"\\n\";\n\n$a = [1, 3, 5, 7];\n$x = 10;\necho left_insertion($a, $x);\necho \"\\n\";\n\n$a = [1, 3, 5, 7];\n$x = 2;\necho left_insertion($a, $x);\necho \"\\n\";\n\n$a = [1, 3, 5, 7];\n$x = 4;\necho left_insertion($a, $x);\necho \"\\n\";\n\n$a = [1, 3, 5, 7];\n$x = 6;\necho left_insertion($a, $x);\necho \"\\n\";\n\n$a = [1, 3, 5, 7];\n$x = 8;\necho left_insertion($a, $x);\necho \"\\n\";\n\n$a = [1, 3, 5, 7];\n$x = 0;\necho left_insertion($a, $x);\necho \"\\n\";\n\n$a = [1, 3, 5, 7];\n$x = 1;\necho left_insertion($a, $x);\necho \"\\n\";\n\n$a = [1, 3, 5, 7];\n$x = 3;\necho left_insertion($a, $x\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpeg4hi3f8.php on line 72\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] == $x) {\n            return $m;\n        } else if ($a[$m] > $x) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpclt9umqn.php:28\nStack trace:\n#0 /tmp/tmpclt9umqn.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpclt9umqn.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp78__9h6a.php:26\nStack trace:\n#0 /tmp/tmp78__9h6a.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp78__9h6a.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = (int) (($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1hhgfao.php:26\nStack trace:\n#0 /tmp/tmpv1hhgfao.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpv1hhgfao.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $i = 0;\n    while ($i < count($a)) {\n        if ($a[$i] >= $x) {\n            return $i;\n        }\n        $i++;\n    }\n    return $i;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x == $a[$mid]) {\n            return $mid;\n        } elseif ($x < $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwsngo6u4.php:28\nStack trace:\n#0 /tmp/tmpwsngo6u4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpwsngo6u4.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $i = 0;\n    while ($i < count($a) && $a[$i] < $x) {\n        $i++;\n    }\n    return $i;\n}\n\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = (int)(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n$a = array(2, 4, 6, 8, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n;\n    while ($left < $right) {\n        $mid = (int)(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(2, 4, 6, 8, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m;\n        }\n    }\n    return $l;\n}\n\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpufbq803w.php:23\nStack trace:\n#0 /tmp/tmpufbq803w.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpufbq803w.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($a[$mid] < $x) {\n            $left = $mid + 1;\n        } else {\n            $right = $mid - 1;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpitr054_8.php:26\nStack trace:\n#0 /tmp/tmpitr054_8.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpitr054_8.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = (int)(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiqasf03_.php:26\nStack trace:\n#0 /tmp/tmpiqasf03_.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpiqasf03_.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = (int) (($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplrcwp8n9.php:26\nStack trace:\n#0 /tmp/tmplrcwp8n9.php(31): test()\n#1 {main}\n  thrown in /tmp/tmplrcwp8n9.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = (int)(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu13l5np0.php:26\nStack trace:\n#0 /tmp/tmpu13l5np0.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpu13l5np0.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n;\n    while ($left < $right) {\n        $mid = (int) (($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x == $a[$m]) {\n            return $m;\n        } else if ($x < $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnjj0yhq8.php:28\nStack trace:\n#0 /tmp/tmpnjj0yhq8.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpnjj0yhq8.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $left = 0;\n    $right = count($a) - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($a[$mid] < $x) {\n            $left = $mid + 1;\n        } else {\n            $right = $mid - 1;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 2, 4, 5, 6, 7, 8, 9, 10];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa393nao8.php:25\nStack trace:\n#0 /tmp/tmpa393nao8.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpa393nao8.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] == $x) {\n            return $m;\n        } else if ($a[$m] > $x) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkiez5hm_.php:28\nStack trace:\n#0 /tmp/tmpkiez5hm_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpkiez5hm_.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n\t$n = count($a);\n\t$l = 0;\n\t$r = $n - 1;\n\twhile ($l < $r) {\n\t\t$m = floor(($l + $r) / 2);\n\t\tif ($x <= $a[$m]) {\n\t\t\t$r = $m;\n\t\t} else {\n\t\t\t$l = $m + 1;\n\t\t}\n\t}\n\treturn $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjbsdurf7.php:26\nStack trace:\n#0 /tmp/tmpjbsdurf7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpjbsdurf7.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 2, 4, 5, 6, 7, 8, 9, 10];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zohzj_3.php:26\nStack trace:\n#0 /tmp/tmp7zohzj_3.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp7zohzj_3.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x > $a[$m]) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzpeqn6iv.php:26\nStack trace:\n#0 /tmp/tmpzpeqn6iv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzpeqn6iv.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $low;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnd9q__db.php:25\nStack trace:\n#0 /tmp/tmpnd9q__db.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpnd9q__db.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $i = 0;\n    while ($i < count($a) && $a[$i] < $x) {\n        $i++;\n    }\n    return $i;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp806ea7wl.php:26\nStack trace:\n#0 /tmp/tmp806ea7wl.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp806ea7wl.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $left = 0;\n    $right = count($a);\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(2, 4, 5, 6, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk55gxoct.php:25\nStack trace:\n#0 /tmp/tmpk55gxoct.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpk55gxoct.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpafsq1tcc.php:26\nStack trace:\n#0 /tmp/tmpafsq1tcc.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpafsq1tcc.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($a[$mid] < $x) {\n            $left = $mid + 1;\n        } else {\n            $right = $mid;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo4_klp7j.php:26\nStack trace:\n#0 /tmp/tmpo4_klp7j.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpo4_klp7j.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x > $a[$mid]) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $low;\n}\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp01ya08cn.php:24\nStack trace:\n#0 /tmp/tmp01ya08cn.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp01ya08cn.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);\n\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnluz1oxj.php:27\nStack trace:\n#0 /tmp/tmpnluz1oxj.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpnluz1oxj.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnral592w.php:25\nStack trace:\n#0 /tmp/tmpnral592w.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpnral592w.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $left = 0;\n    $right = count($a) - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($a[$mid] < $x) {\n            $left = $mid + 1;\n        } else {\n            $right = $mid - 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8f3c1rer.php:25\nStack trace:\n#0 /tmp/tmp8f3c1rer.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8f3c1rer.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x > $a[$m]) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 7, 8, 9);\n$x = 5;\necho \"Original array :\\n\";\necho implode(', ', $a);\necho \"\\n\";\necho \"Value to insert : $x\\n\";\necho \"The insertion point for $x is : \" . left_insertion($a, $x);\necho \"\\n\";\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "Original array :\n1, 2, 4, 5, 7, 8, 9\nValue to insert : 5\nThe insertion point for 5 is : 3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfb12ejxr.php:31\nStack trace:\n#0 /tmp/tmpfb12ejxr.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfb12ejxr.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] == $x) {\n            return $m;\n        } elseif ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbmes75f8.php:28\nStack trace:\n#0 /tmp/tmpbmes75f8.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpbmes75f8.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa64mz0m7.php:26\nStack trace:\n#0 /tmp/tmpa64mz0m7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpa64mz0m7.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ywab3pm.php:26\nStack trace:\n#0 /tmp/tmp6ywab3pm.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp6ywab3pm.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($a[$mid] < $x) {\n            $left = $mid + 1;\n        } else {\n            $right = $mid - 1;\n        }\n    }\n    return $left;\n}\n$a = array(1, 2, 4, 5, 6, 7, 8, 9);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kd5hojm.php:25\nStack trace:\n#0 /tmp/tmp1kd5hojm.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp1kd5hojm.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $low;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgrpi3p8g.php:25\nStack trace:\n#0 /tmp/tmpgrpi3p8g.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpgrpi3p8g.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n$arr = array(1, 2, 4, 6, 8, 9, 10);\n$x = 5;\necho left_insertion($arr, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc_p6a6jh.php:25\nStack trace:\n#0 /tmp/tmpc_p6a6jh.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpc_p6a6jh.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $mid = floor(($l + $r) / 2);\n        if ($a[$mid] == $x) {\n            return $mid;\n        } else if ($x < $a[$mid]) {\n            $r = $mid - 1;\n        } else {\n            $l = $mid + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpon3uzi5a.php:28\nStack trace:\n#0 /tmp/tmpon3uzi5a.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpon3uzi5a.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmx59gssr.php:26\nStack trace:\n#0 /tmp/tmpmx59gssr.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpmx59gssr.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = (int)(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd2wxyq71.php:26\nStack trace:\n#0 /tmp/tmpd2wxyq71.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpd2wxyq71.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x == $a[$mid]) {\n            return $mid;\n        } elseif ($x < $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwsngo6u4.php:28\nStack trace:\n#0 /tmp/tmpwsngo6u4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpwsngo6u4.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $left = 0;\n    $right = count($a);\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($a[$mid] < $x) {\n            $left = $mid + 1;\n        } else {\n            $right = $mid;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp25xxryor.php:25\nStack trace:\n#0 /tmp/tmp25xxryor.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp25xxryor.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $i = 0;\n    while ($i < count($a) && $a[$i] < $x) {\n        $i++;\n    }\n    return $i;\n}\n\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz5kw3cof.php:26\nStack trace:\n#0 /tmp/tmpz5kw3cof.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpz5kw3cof.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x == $a[$mid]) {\n            return $mid;\n        } elseif ($x < $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_w8fpyw.php:28\nStack trace:\n#0 /tmp/tmps_w8fpyw.php(33): test()\n#1 {main}\n  thrown in /tmp/tmps_w8fpyw.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3zmjqbf2.php:26\nStack trace:\n#0 /tmp/tmp3zmjqbf2.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp3zmjqbf2.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpph0svm3v.php:26\nStack trace:\n#0 /tmp/tmpph0svm3v.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpph0svm3v.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($a[$mid] < $x) {\n            $left = $mid + 1;\n        } else {\n            $right = $mid - 1;\n        }\n    }\n    return $left;\n}\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwc27dowq.php:25\nStack trace:\n#0 /tmp/tmpwc27dowq.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpwc27dowq.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n\t$n = count($a);\n\t$l = 0;\n\t$r = $n - 1;\n\twhile ($l < $r) {\n\t\t$m = floor(($l + $r) / 2);\n\t\tif ($a[$m] < $x) {\n\t\t\t$l = $m + 1;\n\t\t} else {\n\t\t\t$r = $m;\n\t\t}\n\t}\n\treturn $l;\n}\n\n$a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfmrjpgi5.php:26\nStack trace:\n#0 /tmp/tmpfmrjpgi5.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpfmrjpgi5.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzvhfe_4o.php:26\nStack trace:\n#0 /tmp/tmpzvhfe_4o.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzvhfe_4o.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = (int)(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd2wxyq71.php:26\nStack trace:\n#0 /tmp/tmpd2wxyq71.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpd2wxyq71.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsbfoqbv9.php:26\nStack trace:\n#0 /tmp/tmpsbfoqbv9.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpsbfoqbv9.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $low = 0;\n    $high = count($a) - 1;\n    $mid = 0;\n    while ($low < $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $low;\n}\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjyyyfjq2.php:25\nStack trace:\n#0 /tmp/tmpjyyyfjq2.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpjyyyfjq2.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $i = 0;\n    while ($i < count($a) && $a[$i] < $x) {\n        $i++;\n    }\n    return $i;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqg2b4u37.php:26\nStack trace:\n#0 /tmp/tmpqg2b4u37.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqg2b4u37.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcj7xl7pu.php:26\nStack trace:\n#0 /tmp/tmpcj7xl7pu.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpcj7xl7pu.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $i = 0;\n    while ($i < count($a) && $a[$i] < $x) {\n        $i++;\n    }\n    return $i;\n}\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpern1w0qw.php:26\nStack trace:\n#0 /tmp/tmpern1w0qw.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpern1w0qw.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $l = 0;\n    $r = count($a) - 1;\n    while ($l < $r) {\n        $m = (int)(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7fm7fdaj.php:25\nStack trace:\n#0 /tmp/tmp7fm7fdaj.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp7fm7fdaj.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpujtdvmzm.php:26\nStack trace:\n#0 /tmp/tmpujtdvmzm.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpujtdvmzm.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x < $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5dkdcq7f.php:26\nStack trace:\n#0 /tmp/tmp5dkdcq7f.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp5dkdcq7f.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcj7xl7pu.php:26\nStack trace:\n#0 /tmp/tmpcj7xl7pu.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpcj7xl7pu.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9kgq_scf.php:26\nStack trace:\n#0 /tmp/tmp9kgq_scf.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp9kgq_scf.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = (int)(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $i = 0;\n    while ($i < count($a) && $a[$i] < $x) {\n        $i++;\n    }\n    return $i;\n}\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(2, 4, 5, 6, 9);\n$x = 5;\necho left_insertion($a, $x);\n\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5rnyzwc.php:27\nStack trace:\n#0 /tmp/tmpb5rnyzwc.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpb5rnyzwc.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf0pujpr0.php:25\nStack trace:\n#0 /tmp/tmpf0pujpr0.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpf0pujpr0.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = (int)(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($a[$mid] == $x) {\n            return $mid;\n        } elseif ($a[$mid] > $x) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp75y_krxy.php:28\nStack trace:\n#0 /tmp/tmp75y_krxy.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp75y_krxy.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = intval(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5, 6, 7, 8, 9];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeird0_w8.php:26\nStack trace:\n#0 /tmp/tmpeird0_w8.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpeird0_w8.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = (int)(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx7u0a32t.php:26\nStack trace:\n#0 /tmp/tmpx7u0a32t.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpx7u0a32t.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $i = 0;\n    while ($i < count($a) && $a[$i] < $x) {\n        $i++;\n    }\n    return $i;\n}\n\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);\n\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = (int)(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpern1w0qw.php:26\nStack trace:\n#0 /tmp/tmpern1w0qw.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpern1w0qw.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppnejewrf.php:26\nStack trace:\n#0 /tmp/tmppnejewrf.php(31): test()\n#1 {main}\n  thrown in /tmp/tmppnejewrf.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    if ($x <= $a[0]) {\n        return 0;\n    }\n    if ($x > $a[$n - 1]) {\n        return $n;\n    }\n    $low = 0;\n    $high = $n - 1;\n    while ($low < $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $high;\n}\n\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n;\n    while ($l < $r) {\n        $m = intdiv($l + $r, 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyiku90j0.php:26\nStack trace:\n#0 /tmp/tmpyiku90j0.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpyiku90j0.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpszisek5w.php:26\nStack trace:\n#0 /tmp/tmpszisek5w.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpszisek5w.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x > $a[$mid]) {\n            $low = $mid + 1;\n        } elseif ($x < $a[$mid]) {\n            $high = $mid - 1;\n        } else {\n            return $mid;\n        }\n    }\n    return $low;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp52wgw_pm.php:27\nStack trace:\n#0 /tmp/tmp52wgw_pm.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp52wgw_pm.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzvhfe_4o.php:26\nStack trace:\n#0 /tmp/tmpzvhfe_4o.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzvhfe_4o.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = (int)(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjxmvrvu3.php:26\nStack trace:\n#0 /tmp/tmpjxmvrvu3.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpjxmvrvu3.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $l = 0;\n    $r = count($a) - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5, 6, 7, 9];\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprx5eqqzn.php:25\nStack trace:\n#0 /tmp/tmprx5eqqzn.php(30): test()\n#1 {main}\n  thrown in /tmp/tmprx5eqqzn.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $low;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\necho left_insertion($a, $x);\n\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0_2yp0s0.php:27\nStack trace:\n#0 /tmp/tmp0_2yp0s0.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp0_2yp0s0.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz5kw3cof.php:26\nStack trace:\n#0 /tmp/tmpz5kw3cof.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpz5kw3cof.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpph0svm3v.php:26\nStack trace:\n#0 /tmp/tmpph0svm3v.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpph0svm3v.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5, 6, 7, 8, 9, 10];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgd4fjni0.php:26\nStack trace:\n#0 /tmp/tmpgd4fjni0.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpgd4fjni0.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $low;\n}\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\n$result = left_insertion($a, $x);\necho \"The left insertion point for $x is $result\";\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "The left insertion point for 5 is 3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_1cn5_j3.php:25\nStack trace:\n#0 /tmp/tmp_1cn5_j3.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp_1cn5_j3.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = ($left + $right) / 2;\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "2\nDeprecated: Implicit conversion from float 1.5 to int loses precision in /tmp/tmpbok78xm7.php on line 9\n\nDeprecated: Implicit conversion from float 2.75 to int loses precision in /tmp/tmpbok78xm7.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbok78xm7.php:26\nStack trace:\n#0 /tmp/tmpbok78xm7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbok78xm7.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] >= $x) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5, 6, 7, 8, 9];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd4488esu.php:26\nStack trace:\n#0 /tmp/tmpd4488esu.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpd4488esu.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $i = 0;\n    while ($i < $n) {\n        if ($x <= $a[$i]) {\n            return $i;\n        }\n        $i++;\n    }\n    return $n;\n}\n\n$a = array(1, 2, 5, 7, 9, 10);\n$x = 6;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x > $a[$mid]) {\n            $low = $mid + 1;\n        } elseif ($x < $a[$mid]) {\n            $high = $mid - 1;\n        } else {\n            return $mid;\n        }\n    }\n    return $low;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp52wgw_pm.php:27\nStack trace:\n#0 /tmp/tmp52wgw_pm.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp52wgw_pm.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $mid = floor(($l + $r) / 2);\n        if ($a[$mid] == $x) {\n            return $mid;\n        } elseif ($a[$mid] > $x) {\n            $r = $mid - 1;\n        } else {\n            $l = $mid + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy9ki09fr.php:28\nStack trace:\n#0 /tmp/tmpy9ki09fr.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpy9ki09fr.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $left = 0;\n    $right = count($a);\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(2, 4, 5, 6, 8, 9);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7s4nn5in.php:25\nStack trace:\n#0 /tmp/tmp7s4nn5in.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp7s4nn5in.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg7xzqxbd.php:26\nStack trace:\n#0 /tmp/tmpg7xzqxbd.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpg7xzqxbd.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($a[$mid] == $x) {\n            return $mid;\n        } elseif ($a[$mid] > $x) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70_nm7ae.php:28\nStack trace:\n#0 /tmp/tmp70_nm7ae.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp70_nm7ae.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $i = 0;\n    $j = $n;\n    while ($i < $j) {\n        $k = floor(($i + $j) / 2);\n        if ($x > $a[$k]) {\n            $i = $k + 1;\n        } else {\n            $j = $k;\n        }\n    }\n    return $i;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw45amsz6.php:26\nStack trace:\n#0 /tmp/tmpw45amsz6.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpw45amsz6.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x == $a[$m]) {\n            return $m;\n        } elseif ($x < $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmt7hy944.php:28\nStack trace:\n#0 /tmp/tmpmt7hy944.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpmt7hy944.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $i = 0;\n    while ($i < count($a) && $a[$i] < $x) {\n        $i++;\n    }\n    return $i;\n}\n\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $l = 0;\n    $r = count($a) - 1;\n    while ($l < $r) {\n        $m = (int)(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpph463azu.php:25\nStack trace:\n#0 /tmp/tmpph463azu.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpph463azu.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n;\n    while ($left < $right) {\n        $mid = (int)(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpern1w0qw.php:26\nStack trace:\n#0 /tmp/tmpern1w0qw.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpern1w0qw.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $low;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgrpi3p8g.php:25\nStack trace:\n#0 /tmp/tmpgrpi3p8g.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpgrpi3p8g.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpujtdvmzm.php:26\nStack trace:\n#0 /tmp/tmpujtdvmzm.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpujtdvmzm.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    if ($x <= $a[0]) {\n        return 0;\n    }\n    if ($x > $a[$n - 1]) {\n        return $n;\n    }\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsunxekp9.php:33\nStack trace:\n#0 /tmp/tmpsunxekp9.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpsunxekp9.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $left = 0;\n    $right = count($a) - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($a[$mid] < $x) {\n            $left = $mid + 1;\n        } else {\n            $right = $mid;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaigx17s7.php:25\nStack trace:\n#0 /tmp/tmpaigx17s7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpaigx17s7.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $l = 0;\n    $r = count($a) - 1;\n    while ($l < $r) {\n        $m = (int)(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5, 6, 7, 8, 9];\necho left_insertion($a, 3);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi9om69ad.php:24\nStack trace:\n#0 /tmp/tmpi9om69ad.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpi9om69ad.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $low;\n}\n$a = array(2, 3, 5, 6, 8, 9, 10);\n$x = 7;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpobjzfsfa.php:24\nStack trace:\n#0 /tmp/tmpobjzfsfa.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpobjzfsfa.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = (int)(($left + $right) / 2);\n        if ($a[$mid] < $x) {\n            $left = $mid + 1;\n        } else {\n            $right = $mid;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7edazvfs.php:26\nStack trace:\n#0 /tmp/tmp7edazvfs.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp7edazvfs.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 9, 10, 11);\n$x = 8;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6j2ilv2p.php:26\nStack trace:\n#0 /tmp/tmp6j2ilv2p.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp6j2ilv2p.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x > $a[$m]) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 7, 9, 11, 13, 15, 17, 19, 20);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoqznxwyu.php:26\nStack trace:\n#0 /tmp/tmpoqznxwyu.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpoqznxwyu.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmx59gssr.php:26\nStack trace:\n#0 /tmp/tmpmx59gssr.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpmx59gssr.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] >= $x) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph9wxl1bw.php:26\nStack trace:\n#0 /tmp/tmph9wxl1bw.php(31): test()\n#1 {main}\n  thrown in /tmp/tmph9wxl1bw.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124226,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqg2b4u37.php:26\nStack trace:\n#0 /tmp/tmpqg2b4u37.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqg2b4u37.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x < $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\n$result = left_insertion($a, $x);\necho \"Left insertion point for $x is: \" . $result;\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "Left insertion point for 3 is: 2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnmlrsiav.php:27\nStack trace:\n#0 /tmp/tmpnmlrsiav.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpnmlrsiav.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n    $n = count($a);\n    if ($x <= $a[0]) {\n        return 0;\n    }\n    if ($x > $a[$n - 1]) {\n        return $n;\n    }\n    $low = 0;\n    $high = $n - 1;\n    while ($low < $high) {\n        $mid = (int) (($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $high;\n}\n\n$a = array(2, 4, 6, 8, 9);\n$x = 5;\necho left_insertion($a, $x);\nfunction candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124227,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
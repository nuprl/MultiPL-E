{
  "name": "mbpp_784_mul_even_odd",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the product of first even and odd number of a given list.\nfunction mul_even_odd($list1) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_784_mul_even_odd.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return mul_even_odd(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 4, 1, 6, 8)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== 10) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $even = 0;\n    $odd = 0;\n    $count = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 == 0) {\n            $even = $list1[$i];\n            $count++;\n            break;\n        }\n    }\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 != 0) {\n            $odd = $list1[$i];\n            $count++;\n            break;\n        }\n    }\n    if ($count == 2) {\n        echo $even * $odd;\n    } else {\n        echo \"Either even or odd number is not present\";\n    }\n}\n$list1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nmul_even_odd($list1);",
    "    $even = 0;\n    $odd = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 == 0) {\n            $even = $list1[$i];\n            break;\n        }\n    }\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 != 0) {\n            $odd = $list1[$i];\n            break;\n        }\n    }\n    return $even * $odd;\n}\n$list1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho mul_even_odd($list1);",
    "    $even_num = 0;\n    $odd_num = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 == 0) {\n            $even_num = $list1[$i];\n            break;\n        }\n    }\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 != 0) {\n            $odd_num = $list1[$i];\n            break;\n        }\n    }\n    return $even_num * $odd_num;\n}\n$list1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho mul_even_odd($list1);",
    "    $even = 0;\n    $odd = 0;\n    $count = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 == 0) {\n            $even = $list1[$i];\n            $count++;\n            break;\n        }\n    }\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 != 0) {\n            $odd = $list1[$i];\n            $count++;\n            break;\n        }\n    }\n    if ($count == 2) {\n        return $even * $odd;\n    } else {\n        return \"Either even or odd number is not present in the list\";\n    }\n}\n$list1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho mul_even_odd($list1);",
    "    $even = 0;\n    $odd = 0;\n    $count = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 == 0) {\n            $even = $list1[$i];\n            $count++;\n            break;\n        }\n    }\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 != 0) {\n            $odd = $list1[$i];\n            $count++;\n            break;\n        }\n    }\n    if ($count == 2) {\n        return $even * $odd;\n    } else {\n        return \"Either even or odd number is not present\";\n    }\n}\n\n$list1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho mul_even_odd($list1);",
    "    $even = 0;\n    $odd = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 == 0) {\n            $even = $list1[$i];\n            break;\n        }\n    }\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 != 0) {\n            $odd = $list1[$i];\n            break;\n        }\n    }\n    return $even * $odd;\n}\n\n$list1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho mul_even_odd($list1);",
    "    $even = 0;\n    $odd = 0;\n    $count = 0;\n    $count1 = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 == 0) {\n            $even = $list1[$i];\n            $count++;\n            break;\n        }\n    }\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 != 0) {\n            $odd = $list1[$i];\n            $count1++;\n            break;\n        }\n    }\n    if ($count == 0 || $count1 == 0) {\n        echo \"0\";\n    } else {\n        echo $even * $odd;\n    }\n}\n$list1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nmul_even_odd($list1);",
    "    $even = 0;\n    $odd = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 == 0) {\n            $even = $list1[$i];\n            break;\n        }\n    }\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 != 0) {\n            $odd = $list1[$i];\n            break;\n        }\n    }\n    return $even * $odd;\n}\n$list1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho mul_even_odd($list1);",
    "    $even_num = 0;\n    $odd_num = 0;\n    $len = count($list1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($list1[$i] % 2 == 0) {\n            $even_num = $list1[$i];\n            break;\n        }\n    }\n    for ($i = 0; $i < $len; $i++) {\n        if ($list1[$i] % 2 != 0) {\n            $odd_num = $list1[$i];\n            break;\n        }\n    }\n    return $even_num * $odd_num;\n}\n$list1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho \"Product of first even and odd number of a given list is : \" . mul_even_odd($list1);",
    "    $even = 0;\n    $odd = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 == 0) {\n            $even = $list1[$i];\n            break;\n        }\n    }\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 != 0) {\n            $odd = $list1[$i];\n            break;\n        }\n    }\n    return $even * $odd;\n}\n$list1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho mul_even_odd($list1);",
    "    $even = $odd = 1;\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 == 0) {\n            $even = $even * $list1[$i];\n        } else {\n            $odd = $odd * $list1[$i];\n        }\n    }\n    return $even * $odd;\n}\n\n$list1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho \"Product of first even and odd number of a given list is : \" . mul_even_odd($list1);",
    "    $even = 0;\n    $odd = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 == 0) {\n            $even = $list1[$i];\n            break;\n        }\n    }\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 != 0) {\n            $odd = $list1[$i];\n            break;\n        }\n    }\n    return $even * $odd;\n}\n$list1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\necho mul_even_odd($list1);",
    "    $even = 0;\n    $odd = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 == 0) {\n            $even = $list1[$i];\n            break;\n        }\n    }\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 != 0) {\n            $odd = $list1[$i];\n            break;\n        }\n    }\n    return $even * $odd;\n}\n$list1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho mul_even_odd($list1);",
    "    $even = 1;\n    $odd = 1;\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 == 0) {\n            $even = $even * $list1[$i];\n            break;\n        }\n    }\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 != 0) {\n            $odd = $odd * $list1[$i];\n            break;\n        }\n    }\n    echo \"Product of first even and odd number of a given list is: \" . $even * $odd;\n}\n$list1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nmul_even_odd($list1);",
    "    $even_number = 0;\n    $odd_number = 0;\n    $product = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 == 0) {\n            $even_number = $list1[$i];\n            break;\n        }\n    }\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 != 0) {\n            $odd_number = $list1[$i];\n            break;\n        }\n    }\n    $product = $even_number * $odd_number;\n    return $product;\n}\n$list1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho mul_even_odd($list1);",
    "    $even = 0;\n    $odd = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 == 0) {\n            $even = $list1[$i];\n            break;\n        }\n    }\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 != 0) {\n            $odd = $list1[$i];\n            break;\n        }\n    }\n    return $even * $odd;\n}\n$list1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho mul_even_odd($list1);",
    "    $even_num = 0;\n    $odd_num = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 == 0) {\n            $even_num = $list1[$i];\n            break;\n        }\n    }\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 != 0) {\n            $odd_num = $list1[$i];\n            break;\n        }\n    }\n    return $even_num * $odd_num;\n}\n$list1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho mul_even_odd($list1);",
    "    $even = 0;\n    $odd = 0;\n    $count = 0;\n    $count1 = 0;\n    for ($i = 0; $i < sizeof($list1); $i++) {\n        if ($list1[$i] % 2 == 0) {\n            $even = $list1[$i];\n            $count = $count + 1;\n            if ($count == 1) {\n                break;\n            }\n        }\n    }\n    for ($i = 0; $i < sizeof($list1); $i++) {\n        if ($list1[$i] % 2 != 0) {\n            $odd = $list1[$i];\n            $count1 = $count1 + 1;\n            if ($count1 == 1) {\n                break;\n            }\n        }\n    }\n    return $even * $odd;\n}\n$list1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho \"The product of first even and odd number of a given list is : \" . mul_even_odd($list1);",
    "    $even = $odd = 1;\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($list1[$i] % 2 == 0) {\n            $even *= $list1[$i];\n        } else {\n            $odd *= $list1[$i];\n        }\n    }\n    return $even * $odd;\n}\n\n$list1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho mul_even_odd($list1);",
    "    $even_num = 0;\n    $odd_num = 0;\n    for ($i = 0; $i < sizeof($list1); $i++) {\n        if ($list1[$i] % 2 == 0) {\n            $even_num = $list1[$i];\n            break;\n        }\n    }\n    for ($i = 0; $i < sizeof($list1); $i++) {\n        if ($list1[$i] % 2 != 0) {\n            $odd_num = $list1[$i];\n            break;\n        }\n    }\n    return $even_num * $odd_num;\n}\n\n$list1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho \"Product of first even and odd number of a given list is: \" . mul_even_odd($list1);"
  ]
}
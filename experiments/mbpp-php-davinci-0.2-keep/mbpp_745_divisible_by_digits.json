{
  "name": "mbpp_745_divisible_by_digits",
  "language": "php",
  "prompt": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_745_divisible_by_digits.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $numbers = range($startnum, $endnum);\n    $result = array_filter($numbers, function($num) {\n        $digits = str_split($num);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($num % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \";\necho implode(\", \", $result);",
    "    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit !== 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\necho \"<pre>\";\nprint_r(divisible_by_digits(1, 100));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(divisible_by_digits(100, 1000));\necho \"</pre>\";",
    "    $numbers = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $numbers[] = $i;\n        }\n    }\n    return $numbers;\n}\n\nprint_r(divisible_by_digits(1, 100));\nprint_r(divisible_by_digits(100, 1000));",
    "    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit !== 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \" . implode(', ', $result);",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));\n",
    "    $arr = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $arr[] = $i;\n        }\n    }\n    return $arr;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \" . implode(', ', $result);",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"The numbers between $startnum and $endnum which are divisible by every digit it contains are: \";\necho implode(\", \", $result);",
    "    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"The numbers between $startnum and $endnum divisible by their digits are: \" . implode(\", \", $result);",
    "\t$result = array();\n\tfor ($i = $startnum; $i <= $endnum; $i++) {\n\t\t$digits = str_split($i);\n\t\t$divisible = true;\n\t\tforeach ($digits as $digit) {\n\t\t\tif ($i % $digit != 0) {\n\t\t\t\t$divisible = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ($divisible) {\n\t\t\t$result[] = $i;\n\t\t}\n\t}\n\treturn $result;\n}\n\necho \"Divisible by digits: \" . implode(\", \", divisible_by_digits(1, 100)) . \"\\n\";\n",
    "    $arr = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $arr[] = $i;\n        }\n    }\n    return $arr;\n}\n\necho \"<pre>\";\nprint_r(divisible_by_digits(1, 100));\necho \"</pre>\";",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\nprint_r(divisible_by_digits($startnum, $endnum));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n\n$result = divisible_by_digits($startnum, $endnum);\nprint_r($result);",
    "    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $isDivisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $isDivisible = false;\n                break;\n            }\n        }\n        if ($isDivisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\necho \"<pre>\";\nprint_r(divisible_by_digits(1, 100));\necho \"</pre>\";",
    "    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));\nprint_r(divisible_by_digits(100, 200));\nprint_r(divisible_by_digits(1000, 2000));\nprint_r(divisible_by_digits(10000, 20000));\nprint_r(divisible_by_digits(100000, 200000));\nprint_r(divisible_by_digits(1000000, 2000000));\nprint_r(divisible_by_digits(10000000, 20000000));\nprint_r(divisible_by_digits(100000000, 200000000));\nprint_r(divisible_by_digits(1000000000, 2000000000));\nprint_r(divisible_by_digits(10000000000, 20000000000));\nprint_r(divisible_by_digits(100000000000, 200000000000));\nprint_r(divisible_by_digits(1000000000000, 2000000000000));\nprint_r(divisible_by_digits(10000000000000, 20000000000000));\nprint_r(divisible_by_digits(100000000000000, 200000000000000));\nprint_r(divisible_by_digits(1000000000000000, 2000000000000000));\nprint_r(divisible_by_digits(10000000000000000, 20000000000000000));\nprint_r(divisible_by_digits(100000000000000000, 200000000000000000));\nprint_r(divisible_by_digits(1000000000000000000, 2000000000000000000));\nprint_r(divisible_by_digits(10000000000000000000, 20000000000000000000));\nprint_r(divisible_by_digits(100000000000000000000,",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\necho \"Divisible by digits: \" . implode(\", \", divisible_by_digits(1, 100)) . \"\\n\";\n",
    "    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum that are divisible by every digit it contains: \";\necho implode(', ', $result);\necho \"\\n\";\n",
    "\t$result = array();\n\tfor ($i = $startnum; $i <= $endnum; $i++) {\n\t\t$digits = str_split($i);\n\t\t$divisible = true;\n\t\tforeach ($digits as $digit) {\n\t\t\tif ($i % $digit != 0) {\n\t\t\t\t$divisible = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ($divisible) {\n\t\t\t$result[] = $i;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$startnum = intval(readline('Enter start number: '));\n$endnum = intval(readline('Enter end number: '));\n$result = divisible_by_digits($startnum, $endnum);\necho implode(', ', $result);",
    "    $divisible_numbers = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $divisible_numbers[] = $i;\n        }\n    }\n    return $divisible_numbers;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$divisible_numbers = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \" . implode(', ', $divisible_numbers);"
  ]
}
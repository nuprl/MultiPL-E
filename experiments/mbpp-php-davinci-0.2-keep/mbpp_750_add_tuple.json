{
  "name": "mbpp_750_add_tuple",
  "language": "php",
  "prompt": "<?php\n// Write a function to add the given tuple to the given list.\nfunction add_tuple($test_list, $test_tup) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_750_add_tuple.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return add_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7), array(9, 10)) !== array(5, 6, 7, 9, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7, 8), array(10, 11)) !== array(6, 7, 8, 10, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9), array(11, 12)) !== array(7, 8, 9, 11, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $test_list[] = $test_tup;\n    return $test_list;\n}\n",
    "    $test_list[] = $test_tup;\n    return $test_list;\n}\n",
    "    $test_list[] = $test_tup;\n    return $test_list;\n}\n",
    "    $test_list[] = $test_tup;\n    return $test_list;\n}\n",
    "    array_push($test_list, $test_tup);\n    return $test_list;\n}\n",
    "  $test_list[] = $test_tup;\n  return $test_list;\n}\n",
    "    $test_list[] = $test_tup;\n    return $test_list;\n}\n",
    "  $test_list[] = $test_tup;\n  return $test_list;\n}\n",
    "    $test_list[] = $test_tup;\n    return $test_list;\n}\n",
    "\t$test_list[] = $test_tup;\n\treturn $test_list;\n}\n",
    "    $test_list[] = $test_tup;\n    return $test_list;\n}",
    "    $test_list[] = $test_tup;\n    return $test_list;\n}\n",
    "    $test_list[] = $test_tup;\n    return $test_list;\n}\n",
    "    $test_list[] = $test_tup;\n    return $test_list;\n}\n",
    "    $test_list[] = $test_tup;\n    return $test_list;\n}\n",
    "    $test_list[] = $test_tup;\n    return $test_list;\n}\n",
    "    $test_list[] = $test_tup;\n    return $test_list;\n}\n",
    "    $test_list[] = $test_tup;\n    return $test_list;\n}\n",
    "    $test_list[] = $test_tup;\n    return $test_list;\n}\n",
    "    $test_list[] = $test_tup;\n    return $test_list;\n}\n"
  ]
}
{
  "name": "mbpp_113_check_integer",
  "language": "php",
  "prompt": "<?php\n// Write a function to check if a string represents an integer or not.\nfunction check_integer($text) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_113_check_integer.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return check_integer(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"python\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"12345\") !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    if (preg_match('/^[0-9]+$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match('/^[0-9]+$/', $text)) {\n        return true;\n    }\n    return false;\n}\n",
    "    if (preg_match('/^[0-9]+$/', $text)) {\n        return true;\n    }\n    return false;\n}\n",
    "    if (is_numeric($text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match('/^[0-9]+$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match(\"/^[0-9]+$/\", $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\tif (preg_match(\"/^[0-9]+$/\", $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    if (is_numeric($text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\tif (preg_match(\"/^[0-9]+$/\", $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    if (preg_match('/^[0-9]+$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (strlen($text) == 0) {\n        return false;\n    }\n    $i = 0;\n    if ($text[0] == '-') {\n        $i = 1;\n    }\n    for (; $i < strlen($text); $i++) {\n        if ($text[$i] < '0' || $text[$i] > '9') {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    if (preg_match('/^[0-9]+$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match('/^[0-9]+$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match(\"/^[0-9]+$/\", $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match('/^[0-9]+$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match(\"/^-?[0-9]+$/\", $text)) {\n        return \"true\";\n    }\n    else {\n        return \"false\";\n    }\n}\n\necho check_integer(\"-123\").\"\\n\";\necho check_integer(\"123\").\"\\n\";\necho check_integer(\"123.12\").\"\\n\";\necho check_integer(\"abcd123\").\"\\n\";\necho check_integer(\"123abcd\").\"\\n\";\necho check_integer(\"\").\"\\n\";\necho check_integer(\" \").\"\\n\";",
    "    if (preg_match(\"/^-?[0-9]+$/\", $text)) {\n        return true;\n    }\n    return false;\n}\n",
    "    if (preg_match(\"/^[0-9]+$/\", $text)) {\n        return true;\n    }\n    return false;\n}\n",
    "\tif (is_numeric($text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "  if (preg_match('/^[0-9]+$/', $text)) {\n    return true;\n  }\n  return false;\n}\n"
  ]
}
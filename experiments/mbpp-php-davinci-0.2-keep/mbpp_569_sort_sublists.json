{
  "name": "mbpp_569_sort_sublists",
  "language": "php",
  "prompt": "<?php\n// Write a function to sort each sublist of strings in a given list of lists.\nfunction sort_sublists($list1) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_569_sort_sublists.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $result = array();\n    foreach ($list1 as $list2) {\n        sort($list2);\n        array_push($result, $list2);\n    }\n    return $result;\n}\n",
    "    foreach ($list1 as $key => $value) {\n        sort($value);\n        $list1[$key] = $value;\n    }\n    return $list1;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));",
    "    $list2 = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $list2[] = $sublist;\n    }\n    return $list2;\n}\n",
    "    $list2 = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $list2[] = $sublist;\n    }\n    return $list2;\n}\n\n$list1 = array(\n    array('a', 'c', 'b', 'e', 'd'),\n    array('g', 'e', 'f')\n);\n\n$list2 = sort_sublists($list1);\nprint_r($list2);\n",
    "    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));\n",
    "    foreach ($list1 as $key => $value) {\n        sort($value);\n        $list1[$key] = $value;\n    }\n    return $list1;\n}\n",
    "    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\nprint_r(sort_sublists($list1));",
    "\t$list2 = array();\n\tforeach ($list1 as $sublist) {\n\t\tsort($sublist);\n\t\t$list2[] = $sublist;\n\t}\n\treturn $list2;\n}\n\n$list1 = array(\n\tarray('a', 'c', 'b', 'e', 'd'),\n\tarray('g', 'e', 'f')\n);\n\n$list2 = sort_sublists($list1);\n\nprint_r($list2);\n",
    "    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));\n",
    "    $list2 = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $list2[] = $sublist;\n    }\n    return $list2;\n}\n",
    "    foreach ($list1 as $key => $value) {\n        sort($value);\n        $list1[$key] = $value;\n    }\n    return $list1;\n}\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\nprint_r(sort_sublists($list1));",
    "    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n",
    "    $list2 = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $list2[] = $sublist;\n    }\n    return $list2;\n}\n\n$list1 = array(\n    array('a', 'c', 'b', 'e', 'd'),\n    array('g', 'e', 'f'),\n);\nprint_r(sort_sublists($list1));\n",
    "    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n",
    "    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n",
    "    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n",
    "    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n",
    "    $list2 = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $list2[] = $sublist;\n    }\n    return $list2;\n}\n\n$list1 = array(\n    array(\"a\", \"b\", \"c\"),\n    array(\"d\", \"e\", \"f\"),\n    array(\"g\", \"h\", \"i\"),\n);\n\nprint_r(sort_sublists($list1));\n",
    "    for ($i = 0; $i < count($list1); $i++) {\n        sort($list1[$i]);\n    }\n    return $list1;\n}\n",
    "    $list2 = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $list2[] = $sublist;\n    }\n    return $list2;\n}\n"
  ]
}
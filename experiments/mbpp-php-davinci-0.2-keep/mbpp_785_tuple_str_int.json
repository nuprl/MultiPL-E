{
  "name": "mbpp_785_tuple_str_int",
  "language": "php",
  "prompt": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_785_tuple_str_int.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n",
    "    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n",
    "    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $result = array();\n    foreach ($test_str as $value) {\n        $result[] = (int) $value;\n    }\n    return $result;\n}\n",
    "    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n",
    "    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n",
    "    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n",
    "    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n",
    "    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n",
    "    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(',', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = str_replace('\\'', '', $test_str);\n    $test_str = str_replace('\"', '', $test_str);\n    $test_str = str_replace('[', '', $test_str);\n    $test_str = str_replace(']', '', $test_str);\n    $test_str = str_replace('{', '', $test_str);\n    $test_str = str_replace('}', '', $test_str);\n    $test_str = str_replace(';', '', $test_str);\n    $test_str = str_replace('\\n', '', $test_str);\n    $test_str = str_replace('\\r', '', $test_str);\n    $test_str = str_replace('\\t', '', $test_str);\n    $test_str = str_replace('\\f', '', $test_str);\n    $test_str = str_replace('\\v', '', $test_str);\n    $test_str = str_replace('\\b', '', $test_str);\n    $test_str = str_replace('\\0', '', $test_str);\n    $test_str = str_replace('\\x0B', '', $test_str);\n    $test_str = str_replace('\\x0C', '', $test_str);\n    $test_str = str_replace('\\x0D', '', $test_str);\n    $test_str = str_replace('\\x0E', '', $test_str);\n    $test_str = str_replace('\\x0F', '', $test_str);\n    $test_str = str_replace('\\x10', '', $test_str);\n    $test_str = str_",
    "    $test_arr = explode(\",\", $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n",
    "    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n",
    "    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n",
    "    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n",
    "    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n",
    "    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n",
    "    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n",
    "    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n",
    "    $test_str = str_replace(\"(\", \"\", $test_str);\n    $test_str = str_replace(\")\", \"\", $test_str);\n    $test_str = str_replace(\" \", \"\", $test_str);\n    $test_str = explode(\",\", $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n",
    "    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n",
    "    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n"
  ]
}
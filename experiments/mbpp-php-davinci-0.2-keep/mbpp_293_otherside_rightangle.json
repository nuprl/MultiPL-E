{
  "name": "mbpp_293_otherside_rightangle",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the third side of a right angled triangle.\nfunction otherside_rightangle($w, $h) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_293_otherside_rightangle.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return otherside_rightangle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 8) !== 10.63014581273465) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 15) !== 16.55294535724685) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $z = sqrt(pow($w, 2) + pow($h, 2));\n    return $z;\n}\n\necho otherside_rightangle(3, 4);\n",
    "    $hypotenuse = sqrt(pow($w, 2) + pow($h, 2));\n    return $hypotenuse;\n}\n\necho otherside_rightangle(3, 4);\n",
    "    $hypotenuse = sqrt(pow($w, 2) + pow($h, 2));\n    return $hypotenuse;\n}\n\necho otherside_rightangle(3, 4);",
    "    $hypotenuse = sqrt(pow($w, 2) + pow($h, 2));\n    return $hypotenuse;\n}\necho otherside_rightangle(3, 4) . \"\\n\";\n",
    "    $z = sqrt(($w * $w) + ($h * $h));\n    return $z;\n}\n\necho otherside_rightangle(3, 4);",
    "    $hypotenuse = sqrt(pow($w, 2) + pow($h, 2));\n    return $hypotenuse;\n}\n\necho otherside_rightangle(3, 4);\n",
    "    $sq = $w * $w + $h * $h;\n    $s = sqrt($sq);\n    return $s;\n}\n\necho otherside_rightangle(3, 4);\necho \"<br>\";\n",
    "    $hypotenuse = sqrt(($w * $w) + ($h * $h));\n    return $hypotenuse;\n}\necho otherside_rightangle(3, 4);",
    "    $hypotenuse = sqrt(pow($w, 2) + pow($h, 2));\n    return $hypotenuse;\n}\n",
    "    $hypotenuse = sqrt(pow($w, 2) + pow($h, 2));\n    return $hypotenuse;\n}\n\necho otherside_rightangle(3, 4);",
    "    $hypotenuse = sqrt(pow($w, 2) + pow($h, 2));\n    return $hypotenuse;\n}\necho otherside_rightangle(5, 12);",
    "    $hypotenuse = sqrt(pow($w, 2) + pow($h, 2));\n    return $hypotenuse;\n}\n\necho otherside_rightangle(3, 4);\n",
    "    $hypotenuse = sqrt(pow($w, 2) + pow($h, 2));\n    return $hypotenuse;\n}\n\necho otherside_rightangle(3, 4);\n",
    "    $p = pow($w, 2) + pow($h, 2);\n    $c = sqrt($p);\n    return $c;\n}\necho otherside_rightangle(3, 4);",
    "  $hypotenuse = sqrt(pow($w, 2) + pow($h, 2));\n  return $hypotenuse;\n}\n\necho otherside_rightangle(3, 4);\n",
    "    $hypotenuse = sqrt(pow($w, 2) + pow($h, 2));\n    return $hypotenuse;\n}\n\necho otherside_rightangle(3, 4);\n",
    "    $hypotenuse = sqrt(pow($w, 2) + pow($h, 2));\n    return $hypotenuse;\n}\n\necho otherside_rightangle(3, 4);\necho \"\\n\";\n",
    "    return sqrt(pow($w, 2) + pow($h, 2));\n}\necho otherside_rightangle(3, 4);",
    "    $z = sqrt($w * $w + $h * $h);\n    return $z;\n}\n\necho otherside_rightangle(5, 12) . \"\\n\";\n",
    "    $hypotenuse = sqrt(pow($w, 2) + pow($h, 2));\n    return $hypotenuse;\n}\n\necho otherside_rightangle(3, 4);\n"
  ]
}
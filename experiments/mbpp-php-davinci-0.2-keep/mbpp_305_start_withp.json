{
  "name": "mbpp_305_start_withp",
  "language": "php",
  "prompt": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_305_start_withp.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $p_words = [];\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $p_words[] = $word;\n        }\n    }\n    return $p_words;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\nprint_r(start_withp($words));",
    "    $pwords = [];\n    foreach ($words as $word) {\n        if (strtolower(substr($word, 0, 1)) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['Pineapple', 'Apple', 'Banana', 'Pear', 'Peach', 'Plum'];\n$pwords = start_withp($words);\nprint_r($pwords);\n",
    "    $p_words = array();\n    foreach ($words as $word) {\n        if (preg_match('/^p/', $word)) {\n            $p_words[] = $word;\n        }\n    }\n    return $p_words;\n}\n",
    "  $p_words = [];\n  foreach ($words as $word) {\n    if (strtolower($word[0]) == 'p') {\n      $p_words[] = $word;\n    }\n  }\n  return $p_words;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\n$p_words = start_withp($words);\necho implode(', ', $p_words);",
    "\t$pwords = array();\n\tforeach ($words as $word) {\n\t\tif (preg_match('/^p/', $word)) {\n\t\t\t$pwords[] = $word;\n\t\t}\n\t}\n\treturn $pwords;\n}\n\n$words = array('pizza', 'pasta', 'penguin', 'panda', 'pumpkin', 'potato', 'pepper', 'pancake');\nprint_r(start_withp($words));",
    "\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (strtolower(substr($word, 0, 1)) == 'p') {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('PHP', 'Ruby', 'Python', 'JavaScript');\nprint_r(start_withp($words));\n",
    "\t$p_words = array();\n\tforeach ($words as $word) {\n\t\tif (strtolower(substr($word, 0, 1)) == 'p') {\n\t\t\t$p_words[] = $word;\n\t\t}\n\t}\n\treturn $p_words;\n}\n\n$words = array('PHP', 'Perl', 'Python', 'JavaScript', 'Ruby', 'C', 'C++', 'C#');\n$p_words = start_withp($words);\nvar_dump($p_words);",
    "  $result = array();\n  foreach ($words as $word) {\n    if (strtolower(substr($word, 0, 1)) == 'p') {\n      array_push($result, $word);\n    }\n  }\n  return $result;\n}\n\n$words = array('PHP', 'Java', 'Python', 'Perl', 'Ruby', 'C', 'C++', 'C#');\nprint_r(start_withp($words));\n",
    "    $pwords = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['pizza', 'pasta', 'pepperoni', 'potato', 'pork', 'prawns', 'pastries'];\nprint_r(start_withp($words));\n",
    "    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pear', 'apple', 'pineapple', 'orange', 'papaya', 'peach'];\n\nprint_r(start_withp($words));",
    "  $pwords = [];\n  foreach ($words as $word) {\n    if (preg_match('/^p/', $word)) {\n      $pwords[] = $word;\n    }\n  }\n  return $pwords;\n}\n\n$words = ['pizza', 'pasta', 'pudding', 'potato', 'pepper', 'pancake'];\nprint_r(start_withp($words));\n",
    "  $pwords = array();\n  foreach ($words as $word) {\n    if (strtolower($word[0]) == 'p') {\n      $pwords[] = $word;\n    }\n  }\n  return $pwords;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'pineapple', 'pork', 'prawns');\n$pwords = start_withp($words);\nprint_r($pwords);\n",
    "\t$pwords = array();\n\tforeach ($words as $word) {\n\t\tif (substr($word, 0, 1) == 'p') {\n\t\t\t$pwords[] = $word;\n\t\t}\n\t}\n\treturn $pwords;\n}\n\n$words = array('pizza', 'pasta', 'pepper', 'potato', 'pork', 'prawns', 'pastry', 'peas');\n$pwords = start_withp($words);\nprint_r($pwords);",
    "  $result = [];\n  foreach ($words as $word) {\n    if (strtolower(substr($word, 0, 1)) == 'p') {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\nprint_r(start_withp($words));\n",
    "    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'peach', 'pineapple'];\nprint_r(start_withp($words));",
    "    $result = [];\n    foreach ($words as $word) {\n        if (strtolower(substr($word, 0, 1)) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'pasta', 'potato', 'pumpkin', 'pepper', 'parsnip'];\nprint_r(start_withp($words));\n",
    "  $p_words = array();\n  foreach ($words as $word) {\n    if (substr($word, 0, 1) == 'p') {\n      array_push($p_words, $word);\n    }\n  }\n  return $p_words;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'pizza', 'pear');\n$p_words = start_withp($words);\nprint_r($p_words);",
    "    $result = [];\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pear', 'apple', 'pineapple', 'orange', 'papaya'];\n$result = start_withp($words);\nprint_r($result);\n",
    "    $result = [];\n    foreach ($words as $word) {\n        if (strtolower(substr($word, 0, 1)) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\nprint_r(start_withp($words));",
    "    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'pineapple', 'peach', 'potato');\nprint_r(start_withp($words));",
    "\t$pwords = array();\n\tforeach ($words as $word) {\n\t\tif (strpos($word, 'p') === 0) {\n\t\t\t$pwords[] = $word;\n\t\t}\n\t}\n\treturn $pwords;\n}\n\n$words = array('pizza', 'apple', 'pear', 'pork', 'pineapple', 'banana');\n$pwords = start_withp($words);\nprint_r($pwords);",
    "\t$pwords = array();\n\tforeach ($words as $word) {\n\t\tif (preg_match('/^p/', $word)) {\n\t\t\t$pwords[] = $word;\n\t\t}\n\t}\n\treturn $pwords;\n}\n\n$words = array('pizza', 'pasta', 'pepperoni', 'potato', 'pork', 'prawns', 'peas');\nprint_r(start_withp($words));",
    "\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (preg_match('/^p/', $word)) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'peach', 'plum', 'pomegranate');\nprint_r(start_withp($words));",
    "    $pwords = [];\n    foreach($words as $word) {\n        if(strtolower($word[0]) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['Pineapple', 'Apple', 'Orange', 'Banana', 'Pear', 'Peach'];\n$pwords = start_withp($words);\nprint_r($pwords);",
    "    $pwords = array();\n    foreach ($words as $word) {\n        if (preg_match('/^p/', $word)) {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('pizza', 'pasta', 'penguin', 'potato', 'pepper', 'pig', 'piggy', 'piglet');\n$pwords = start_withp($words);\nprint_r($pwords);",
    "  $p_words = [];\n  foreach ($words as $word) {\n    if (strpos($word, 'p') === 0) {\n      $p_words[] = $word;\n    }\n  }\n  return $p_words;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pineapple', 'pork', 'prawn'];\necho '<pre>';\nprint_r(start_withp($words));\necho '</pre>';",
    "  $result = [];\n  foreach ($words as $word) {\n    if (strpos($word, 'p') === 0) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pancake', 'potato', 'pencil'];\nprint_r(start_withp($words));\n",
    "    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'pasta', 'pudding', 'pancake', 'pie', 'pudding', 'pizza', 'pasta', 'pudding', 'pancake', 'pie', 'pudding');\n$result = start_withp($words);\nprint_r($result);",
    "    $pwords = [];\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['pizza', 'pasta', 'pancake', 'apple', 'orange', 'pear'];\n$pwords = start_withp($words);\nprint_r($pwords);\n",
    "    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'peach', 'pork', 'pudding');\nprint_r(start_withp($words));\n",
    "    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'pasta', 'pomodoro', 'pepperoni', 'pesto', 'pollo', 'pane'];\nprint_r(start_withp($words));\n",
    "  $result = [];\n  foreach ($words as $word) {\n    if (strpos($word, 'p') === 0) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = ['pizza', 'pasta', 'penguin', 'potato', 'pepper', 'papaya'];\n$result = start_withp($words);\nprint_r($result);",
    "    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'peach', 'pineapple', 'pork', 'potato'];\n$result = start_withp($words);\nprint_r($result);",
    "    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['apple', 'pear', 'pineapple', 'banana', 'papaya', 'peach'];\nvar_dump(start_withp($words));\n",
    "  $pwords = [];\n  foreach ($words as $word) {\n    if (strtolower(substr($word, 0, 1)) == 'p') {\n      $pwords[] = $word;\n    }\n  }\n  return $pwords;\n}\n\n$words = ['PHP', 'Javascript', 'Python', 'Java', 'C++'];\n$pwords = start_withp($words);\nprint_r($pwords);\n",
    "\t$pwords = [];\n\tforeach ($words as $word) {\n\t\tif (substr($word, 0, 1) == 'p') {\n\t\t\t$pwords[] = $word;\n\t\t}\n\t}\n\treturn $pwords;\n}\n\n$words = ['pizza', 'pasta', 'pepperoni', 'potato', 'pork', 'prawns', 'peas'];\n$pwords = start_withp($words);\nprint_r($pwords);\n",
    "\t$p_words = array();\n\tforeach ($words as $word) {\n\t\tif (strpos($word, 'p') === 0) {\n\t\t\t$p_words[] = $word;\n\t\t}\n\t}\n\treturn $p_words;\n}\n\n$words = array('pizza', 'pasta', 'pumpkin', 'potato', 'pepper', 'pancake');\n$p_words = start_withp($words);\nprint_r($p_words);\n",
    "    $result = [];\n    foreach ($words as $word) {\n        if (strtolower(substr($word, 0, 1)) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['PHP', 'Laravel', 'Python', 'JavaScript', 'C#', 'C++', 'C', 'Java', 'Ruby', 'Perl', 'Go', 'Swift'];\n$result = start_withp($words);\nprint_r($result);\n",
    "    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'pudding', 'potato');\nprint_r(start_withp($words));",
    "    $pwords = [];\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['pizza', 'apple', 'pear', 'peach', 'banana', 'pineapple'];\nprint_r(start_withp($words));\n",
    "    $pwords = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['pear', 'apple', 'orange', 'pineapple', 'plum', 'papaya'];\n$pwords = start_withp($words);\nprint_r($pwords);\n",
    "\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (strpos($word, 'p') === 0) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('pear', 'apple', 'orange', 'pineapple', 'peach');\nprint_r(start_withp($words));\n",
    "\t$pwords = array();\n\tforeach ($words as $word) {\n\t\tif (strpos($word, 'p') === 0) {\n\t\t\t$pwords[] = $word;\n\t\t}\n\t}\n\treturn $pwords;\n}\n\n$words = array('pizza', 'pepperoni', 'potato', 'pumpkin', 'pear', 'pomegranate', 'peach');\n$pwords = start_withp($words);\nprint_r($pwords);\n",
    "    $pwords = array();\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'pineapple');\n$pwords = start_withp($words);\nprint_r($pwords);",
    "    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pear', 'apple', 'peach', 'pineapple', 'orange', 'papaya', 'pepper');\n$result = start_withp($words);\nprint_r($result);",
    "    $result = [];\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\nprint_r(start_withp($words));",
    "    $result = array();\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'pasta', 'pepper', 'potato', 'pork', 'prawns', 'pineapple');\n$result = start_withp($words);\nprint_r($result);",
    "    $pwords = array();\n    foreach ($words as $word) {\n        if (strtolower(substr($word, 0, 1)) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'pineapple', 'orange', 'potato');\n$pwords = start_withp($words);\nprint_r($pwords);",
    "    $result = [];\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pizza', 'potato', 'pizza'];\n$result = start_withp($words);\nprint_r($result);",
    "    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'pineapple');\nprint_r(start_withp($words));",
    "    $words_with_p = [];\n    foreach ($words as $word) {\n        if (strtolower(substr($word, 0, 1)) == 'p') {\n            $words_with_p[] = $word;\n        }\n    }\n    return $words_with_p;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\nprint_r(start_withp($words));",
    "    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'pineapple', 'banana');\n$result = start_withp($words);\nprint_r($result);",
    "    $result = [];\n    foreach ($words as $word) {\n        if (strtolower(substr($word, 0, 1)) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['PHP', 'HTML', 'CSS', 'JavaScript', 'Python', 'Ruby', 'C', 'C++', 'C#', 'Swift', 'Objective-C'];\n$result = start_withp($words);\nprint_r($result);",
    "  $pwords = array();\n  foreach ($words as $word) {\n    if (preg_match('/^p/', $word)) {\n      $pwords[] = $word;\n    }\n  }\n  return $pwords;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'pancake');\nprint_r(start_withp($words));",
    "  $result = [];\n  foreach ($words as $word) {\n    if (strpos($word, 'p') === 0) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pomegranate', 'potato', 'peach'];\nprint_r(start_withp($words));\n",
    "    $p_words = array();\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $p_words[] = $word;\n        }\n    }\n    return $p_words;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'pineapple');\n$p_words = start_withp($words);\nprint_r($p_words);",
    "    $p_words = [];\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $p_words[] = $word;\n        }\n    }\n    return $p_words;\n}\n\n$words = ['apple', 'banana', 'pear', 'pineapple', 'orange', 'peach'];\n$p_words = start_withp($words);\nprint_r($p_words);\n",
    "    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n$words = array('pizza', 'pasta', 'pepper', 'potato', 'pork', 'prawns', 'peas');\nprint_r(start_withp($words));",
    "\t$result = array();\n\tforeach ($words as $word) {\n\t\tif ($word[0] == 'p') {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'papaya', 'pineapple');\nprint_r(start_withp($words));",
    "  $p_words = array();\n  foreach ($words as $word) {\n    if (preg_match('/^p/', $word)) {\n      $p_words[] = $word;\n    }\n  }\n  return $p_words;\n}\n\n$words = array('pizza', 'apple', 'pear', 'pepper', 'pizza', 'pizza', 'pizza');\nprint_r(start_withp($words));",
    "\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (preg_match('/^p/', $word)) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('pizza', 'pasta', 'pudding', 'pancake', 'pie', 'potato', 'pepper');\n$result = start_withp($words);\nprint_r($result);",
    "    $words_with_p = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $words_with_p[] = $word;\n        }\n    }\n    return $words_with_p;\n}\n\n$words = ['pizza', 'pasta', 'parmesan', 'parsley', 'potato', 'pepper', 'parsnip', 'paprika', 'pomegranate', 'pumpkin'];\n$words_with_p = start_withp($words);\n\necho '<pre>';\nprint_r($words_with_p);\necho '</pre>';\n",
    "    $result = array();\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'orange', 'pineapple');\n$result = start_withp($words);\nprint_r($result);",
    "\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (strpos($word, 'p') === 0) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'pineapple', 'peach');\n$result = start_withp($words);\nprint_r($result);",
    "\t$result = [];\n\tforeach ($words as $word) {\n\t\tif (strpos($word, 'p') === 0) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pineapple', 'banana'];\nprint_r(start_withp($words));\n",
    "  $pwords = [];\n  foreach ($words as $word) {\n    if (substr($word, 0, 1) == 'p') {\n      $pwords[] = $word;\n    }\n  }\n  return $pwords;\n}\n\n$words = ['apple', 'orange', 'pear', 'pineapple', 'plum', 'peach', 'papaya'];\n$pwords = start_withp($words);\nprint_r($pwords);\n",
    "    $result = array();\n    foreach ($words as $word) {\n        if (strtolower(substr($word, 0, 1)) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('PHP', 'HTML', 'CSS', 'JavaScript', 'Python', 'C', 'C++', 'C#', 'Ruby', 'Go', 'Swift', 'Objective-C', 'R', 'MATLAB', 'Perl', 'Lisp', 'Pascal', 'Scala', 'Haskell', 'Lua', 'Clojure', 'Rust', 'Erlang', 'Julia', 'D', 'Groovy', 'Elixir', 'F#', 'Elm', 'CoffeeScript', 'PowerShell', 'Visual Basic', 'TypeScript', 'Racket', 'Assembly', 'AutoHotkey', 'VimL', 'Emacs Lisp', 'Prolog', 'Common Lisp', 'Scheme', 'Tcl', 'Smalltalk', 'Bash', 'Fortran', 'Ada', 'Objective-C++', 'Mathematica', 'Visual Basic .NET', 'OCaml', 'Dart', 'Nim', 'Alice', 'Puppet', 'ActionScript', 'LiveScript', 'Vala', 'Objective-J', 'Dylan', 'Nemerle', 'Standard ML', 'Squeak', 'XSLT', 'Io', 'AGS Script', 'Game Maker Language', 'Gosu', 'PureBasic', 'AppleScript', 'LabVIEW', 'OpenEdge ABL', 'AutoIt', 'M', 'UnrealScript', 'Gambas', 'IDL', 'OpenSCAD', 'BlitzMax', 'Xojo', 'OpenEdge ABL', 'GML', 'SQLPL', 'XQuery', 'Oz', 'Max', 'AGS Script', 'Game Maker Language', 'Gosu', 'PureBasic', 'AppleScript', 'LabVIEW', 'OpenEdge ABL', 'AutoIt', 'M', 'UnrealScript', 'Gambas', 'IDL', 'OpenSCAD', 'BlitzMax', 'Xojo', 'OpenEdge ABL', 'GML', 'SQLPL', 'XQuery",
    "    $result = [];\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pineapple', 'orange', 'banana', 'papaya'];\n$result = start_withp($words);\nprint_r($result);\n",
    "    $p_words = [];\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $p_words[] = $word;\n        }\n    }\n    return $p_words;\n}\n\n$words = ['pizza', 'apple', 'pear', 'peach', 'pork', 'porkchop', 'porkpie'];\nprint_r(start_withp($words));\n",
    "    $p_words = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $p_words[] = $word;\n        }\n    }\n    return $p_words;\n}\n\n$words = ['pear', 'apple', 'pineapple', 'peach', 'papaya', 'orange', 'grape'];\n$p_words = start_withp($words);\nprint_r($p_words);",
    "\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (strpos($word, 'p') === 0) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'pizza', 'pear');\n$result = start_withp($words);\nprint_r($result);",
    "  $result = [];\n  foreach ($words as $word) {\n    if (strpos($word, 'p') === 0) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = ['pizza', 'pasta', 'pumpkin', 'potato', 'pepper', 'parsley'];\nprint_r(start_withp($words));\n",
    "    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'pineapple');\n$result = start_withp($words);\nprint_r($result);\n",
    "    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'pasta', 'pomodoro', 'parmigiana', 'pollo', 'pane'];\nprint_r(start_withp($words));\n",
    "\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (preg_match(\"/^p/\", $word)) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n$words = array(\"pizza\", \"pasta\", \"potato\", \"pepper\", \"pork\", \"prawns\", \"paneer\");\n$result = start_withp($words);\nprint_r($result);",
    "    $pwords = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pork', 'pineapple'];\n$pwords = start_withp($words);\nprint_r($pwords);\n",
    "    $pwords = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('pizza', 'pasta', 'pepper', 'potato', 'pork', 'peas');\n$pwords = start_withp($words);\nprint_r($pwords);",
    "\t$pwords = array();\n\tforeach ($words as $word) {\n\t\tif (preg_match('/^p/', $word)) {\n\t\t\t$pwords[] = $word;\n\t\t}\n\t}\n\treturn $pwords;\n}\n\n$words = array('pear', 'apple', 'orange', 'pineapple', 'pumpkin', 'peach');\n$pwords = start_withp($words);\nprint_r($pwords);\n",
    "\t$pwords = array();\n\tforeach ($words as $word) {\n\t\tif (preg_match('/^p/', $word)) {\n\t\t\t$pwords[] = $word;\n\t\t}\n\t}\n\treturn $pwords;\n}\n\n$words = array('pizza', 'apple', 'pear', 'pineapple', 'orange');\n$pwords = start_withp($words);\nprint_r($pwords);",
    "    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'banana', 'pizza'];\nprint_r(start_withp($words));\n",
    "    $p_words = [];\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $p_words[] = $word;\n        }\n    }\n    return $p_words;\n}\n\n$words = ['pizza', 'apple', 'pear', 'banana'];\n$p_words = start_withp($words);\nprint_r($p_words);\n",
    "    $result = array();\n    foreach ($words as $word) {\n        if (strtolower(substr($word, 0, 1)) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('PHP', 'JS', 'Python', 'Java', 'C', 'C++', 'C#', 'Ruby', 'Perl', 'Pascal');\nprint_r(start_withp($words));",
    "    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'pepperoni', 'parmesan', 'parsley', 'paprika', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya',",
    "    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'peach', 'pineapple', 'potato'];\nprint_r(start_withp($words));",
    "    $pwords = array();\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('PHP', 'HTML', 'CSS', 'JavaScript', 'Python', 'Ruby');\nprint_r(start_withp($words));",
    "  $result = [];\n  foreach ($words as $word) {\n    if (strtolower(substr($word, 0, 1)) == 'p') {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = ['Pineapple', 'Apple', 'Orange', 'Banana', 'Pear'];\nprint_r(start_withp($words));",
    "    $pwords = array();\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('pear', 'apple', 'orange', 'pineapple', 'grape', 'banana');\n$pwords = start_withp($words);\nprint_r($pwords);",
    "    $pwords = [];\n    foreach ($words as $word) {\n        if (preg_match('/^p/', $word)) {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['pizza', 'pasta', 'pomodoro', 'parmesan', 'pepperoni', 'pesto', 'parsley', 'potato', 'pork', 'pork belly', 'pork chop', 'pork loin', 'pork shoulder', 'pork tenderloin', 'pork butt', 'pork ribs', 'pork rinds', 'pork sausage', 'pork belly', 'pork chop', 'pork loin', 'pork shoulder', 'pork tenderloin', 'pork butt', 'pork ribs', 'pork rinds', 'pork sausage', 'pork belly', 'pork chop', 'pork loin', 'pork shoulder', 'pork tenderloin', 'pork butt', 'pork ribs', 'pork rinds', 'pork sausage', 'pork belly', 'pork chop', 'pork loin', 'pork shoulder', 'pork tenderloin', 'pork butt', 'pork ribs', 'pork rinds', 'pork sausage', 'pork belly', 'pork chop', 'pork loin', 'pork shoulder', 'pork tenderloin', 'pork butt', 'pork ribs', 'pork rinds', 'pork sausage', 'pork belly', 'pork chop', 'pork loin', 'pork shoulder', 'pork tenderloin', 'pork butt', 'pork ribs', 'pork rinds', 'pork sausage', 'pork belly', 'pork chop', 'pork loin', 'pork shoulder', 'pork tenderloin', 'pork butt', 'pork ribs', 'pork rinds', 'pork sausage', 'pork belly', 'pork chop', 'pork loin', 'pork shoulder', 'pork tenderloin', 'pork butt', 'pork ribs', 'pork rinds', 'pork sausage', 'pork belly",
    "\t$result = array();\n\tforeach ($words as $word) {\n\t\tif ($word[0] == 'p') {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('pear', 'apple', 'orange', 'pineapple', 'peach', 'grape');\n$result = start_withp($words);\nprint_r($result);",
    "    $words_with_p = [];\n    foreach ($words as $word) {\n        if (strtolower(substr($word, 0, 1)) == 'p') {\n            $words_with_p[] = $word;\n        }\n    }\n    return array_slice($words_with_p, 0, 2);\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\nprint_r(start_withp($words));",
    "    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n$words = ['pizza', 'pasta', 'potato', 'prawns', 'pepperoni'];\nprint_r(start_withp($words));",
    "    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'peach', 'pineapple', 'potato');\nprint_r(start_withp($words));",
    "    $result = [];\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\nprint_r(start_withp($words));",
    "\t$result = array();\n\tforeach ($words as $word) {\n\t\tif ($word[0] == 'p') {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('pear', 'apple', 'orange', 'pineapple');\nprint_r(start_withp($words));\n",
    "    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pineapple', 'orange'];\nprint_r(start_withp($words));\n",
    "    $result = [];\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\necho implode(', ', start_withp($words));",
    "    $result = array();\n    foreach ($words as $word) {\n        if (strtolower(substr($word, 0, 1)) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('PHP', 'HTML', 'CSS', 'JavaScript', 'Python', 'Ruby');\n$result = start_withp($words);\nprint_r($result);",
    "    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pineapple', 'peach', 'pork', 'prawn'];\nprint_r(start_withp($words));\n",
    "    $pwords = [];\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\nprint_r(start_withp($words));\n",
    "    $pwords = array();\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('pizza', 'pepper', 'penguin', 'potato', 'pork', 'pear', 'peach', 'pumpkin', 'peas', 'pancake');\n$pwords = start_withp($words);\nprint_r($pwords);",
    "    $result = [];\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n$words = ['pizza', 'apple', 'pear', 'pineapple', 'orange'];\nprint_r(start_withp($words));",
    "    $pwords = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('apple', 'orange', 'pear', 'pineapple', 'peach', 'plum');\n$pwords = start_withp($words);\nprint_r($pwords);\n",
    "    $p_words = [];\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $p_words[] = $word;\n        }\n    }\n    return $p_words;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\n$p_words = start_withp($words);\nprint_r($p_words);",
    "    $p_words = [];\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $p_words[] = $word;\n        }\n    }\n    return $p_words;\n}\n\n$words = ['pizza', 'apple', 'pear', 'peach', 'pineapple', 'potato'];\n$p_words = start_withp($words);\necho '<pre>';\nprint_r($p_words);\necho '</pre>';\n",
    "  $result = array();\n  foreach ($words as $word) {\n    if (preg_match('/^p/', $word)) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'peach', 'potato');\nprint_r(start_withp($words));",
    "    $result = array();\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('PHP', 'HTML', 'CSS', 'JavaScript', 'Python', 'Ruby');\nprint_r(start_withp($words));",
    "  $result = array();\n  foreach ($words as $word) {\n    if (preg_match('/^p/', $word)) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = array('pear', 'apple', 'orange', 'pineapple', 'plum');\nprint_r(start_withp($words));\n",
    "\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (substr($word, 0, 1) == 'p') {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('pear', 'apple', 'orange', 'pineapple', 'plum');\n$result = start_withp($words);\nprint_r($result);\n",
    "\t$pwords = array();\n\tforeach ($words as $word) {\n\t\tif (strpos($word, 'p') === 0) {\n\t\t\t$pwords[] = $word;\n\t\t}\n\t}\n\treturn $pwords;\n}\n\n$words = array('pizza', 'pasta', 'pepper', 'potato', 'pork', 'prawns', 'peas');\n$pwords = start_withp($words);\nprint_r($pwords);\n",
    "    $result = array();\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('PHP', 'HTML', 'CSS', 'JavaScript', 'jQuery', 'Bootstrap', 'AngularJS');\n$result = start_withp($words);\necho '<pre>';\nprint_r($result);\necho '</pre>';",
    "    $p_words = array();\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $p_words[] = $word;\n        }\n    }\n    return $p_words;\n}\n\n$words = array('pizza', 'pasta', 'parmesan', 'parsley', 'pepper', 'parsnip', 'potato', 'pumpkin', 'peas', 'peaches', 'pear', 'pomegranate', 'pineapple', 'papaya', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'pars",
    "    $pwords = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('pear', 'apple', 'orange', 'pineapple', 'papaya');\nprint_r(start_withp($words));",
    "    $result = array();\n    foreach ($words as $word) {\n        if (preg_match('/^p/', $word)) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'peach', 'pork', 'porkchop');\n$result = start_withp($words);\nprint_r($result);",
    "\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (preg_match('/^p/', $word)) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'peach', 'pork', 'porky', 'porker', 'porky');\nprint_r(start_withp($words));\n",
    "    $result = array();\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) === 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'pineapple');\nprint_r(start_withp($words));",
    "\t$p_words = array();\n\tforeach ($words as $word) {\n\t\tif (substr($word, 0, 1) == 'p') {\n\t\t\t$p_words[] = $word;\n\t\t}\n\t}\n\treturn $p_words;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'orange', 'pasta', 'pesto', 'potato');\n$p_words = start_withp($words);\nprint_r($p_words);",
    "  $p_words = [];\n  foreach ($words as $word) {\n    if (substr($word, 0, 1) == 'p') {\n      array_push($p_words, $word);\n    }\n  }\n  return $p_words;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pizza', 'pizza'];\nprint_r(start_withp($words));\n",
    "    $result = array();\n    foreach ($words as $word) {\n        if (preg_match('/^p/', $word)) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'pasta', 'pepper', 'potato', 'pork', 'prawns', 'pumpkin', 'peas');\nprint_r(start_withp($words));",
    "    $pwords = [];\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['pizza', 'apple', 'pear', 'peach', 'pork'];\nprint_r(start_withp($words));",
    "  $result = [];\n  foreach ($words as $word) {\n    if (strpos($word, 'p') === 0) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = ['pizza', 'pasta', 'pumpkin', 'potato', 'pepper', 'parsley'];\nprint_r(start_withp($words));\n",
    "    $pwords = [];\n    foreach ($words as $word) {\n        if (preg_match('/^p/', $word)) {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['pizza', 'apple', 'pear', 'peach', 'pork', 'porkchop', 'porkpie'];\n\nprint_r(start_withp($words));",
    "    $p_words = [];\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $p_words[] = $word;\n        }\n    }\n    return $p_words;\n}\n\n$words = ['pizza', 'pasta', 'pudding', 'pancakes', 'pie', 'potatoes', 'pepper', 'parsley'];\nprint_r(start_withp($words));\n",
    "  $pwords = [];\n  foreach ($words as $word) {\n    if (strtolower($word[0]) == 'p') {\n      $pwords[] = $word;\n    }\n  }\n  return $pwords;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\n\nprint_r(start_withp($words));\n",
    "    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'peach', 'pineapple');\nprint_r(start_withp($words));",
    "\t$p_words = array();\n\tforeach ($words as $word) {\n\t\tif (strtolower(substr($word, 0, 1)) == 'p') {\n\t\t\t$p_words[] = $word;\n\t\t}\n\t}\n\treturn $p_words;\n}\n\n$words = array('PHP', 'Java', 'Python', 'Perl', 'C', 'C++', 'C#');\n$p_words = start_withp($words);\nprint_r($p_words);",
    "  $result = array();\n  foreach ($words as $word) {\n    if (preg_match('/^p/', $word)) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'pork', 'porky', 'porker');\nprint_r(start_withp($words));",
    "    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pear', 'apple', 'orange', 'pineapple', 'banana');\nprint_r(start_withp($words));",
    "    $result = array();\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('PHP', 'HTML', 'CSS', 'JavaScript', 'Python', 'Ruby');\n$result = start_withp($words);\nprint_r($result);",
    "  $result = [];\n  foreach ($words as $word) {\n    if (strpos($word, 'p') === 0) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = ['pizza', 'pasta', 'pomegranate', 'potato', 'pepperoni'];\nprint_r(start_withp($words));\n",
    "    $pwords = [];\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\nprint_r(start_withp($words));",
    "\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (substr($word, 0, 1) == 'p') {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('apple', 'orange', 'pear', 'pineapple', 'plum', 'peach', 'papaya', 'pomegranate');\n$result = start_withp($words);\nprint_r($result);",
    "    $result = [];\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'pepperoni', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza',",
    "\t$p_words = array();\n\tforeach ($words as $word) {\n\t\tif (substr($word, 0, 1) == 'p') {\n\t\t\t$p_words[] = $word;\n\t\t}\n\t}\n\treturn $p_words;\n}\n\n$words = array('pear', 'apple', 'orange', 'plum', 'pineapple', 'peach', 'pumpkin');\n$p_words = start_withp($words);\nprint_r($p_words);",
    "    $p_words = array();\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $p_words[] = $word;\n        }\n    }\n    return $p_words;\n}\n\n$words = array('pizza', 'apple', 'pear', 'potato', 'peach', 'pineapple');\nprint_r(start_withp($words));",
    "\t$pwords = array();\n\tforeach ($words as $word) {\n\t\tif (preg_match('/^p/', $word)) {\n\t\t\t$pwords[] = $word;\n\t\t}\n\t}\n\treturn $pwords;\n}\n\n$words = array('pear', 'apple', 'orange', 'pineapple', 'plum');\n$pwords = start_withp($words);\nprint_r($pwords);",
    "    $result = array();\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('apple', 'pear', 'pineapple', 'orange', 'papaya', 'peach', 'pomegranate');\nprint_r(start_withp($words));\n",
    "    $pwords = array();\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'papaya', 'pineapple');\n$pwords = start_withp($words);\nprint_r($pwords);",
    "\t$p_words = array();\n\tforeach ($words as $word) {\n\t\tif (preg_match('/^p/', $word)) {\n\t\t\t$p_words[] = $word;\n\t\t}\n\t}\n\treturn $p_words;\n}\n\n$words = array('pizza', 'pasta', 'pepper', 'potato', 'pork', 'prawns', 'pineapple');\n$p_words = start_withp($words);\nprint_r($p_words);",
    "    $p_words = array();\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $p_words[] = $word;\n        }\n    }\n    return $p_words;\n}\n\n$words = array('PHP', 'is', 'a', 'widely-used', 'open', 'source', 'general-purpose', 'scripting', 'language');\nprint_r(start_withp($words));",
    "  $p_words = array();\n  foreach ($words as $word) {\n    if (substr($word, 0, 1) == 'p') {\n      $p_words[] = $word;\n    }\n  }\n  return array_slice($p_words, 0, 2);\n}\n",
    "    $pwords = [];\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\nprint_r(start_withp($words));",
    "  $result = [];\n  foreach ($words as $word) {\n    if (strpos($word, 'p') === 0) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'peach', 'pomegranate', 'pineapple'];\nprint_r(start_withp($words));\n",
    "  $p_words = array();\n  foreach ($words as $word) {\n    if (strtolower(substr($word, 0, 1)) == 'p') {\n      $p_words[] = $word;\n    }\n  }\n  return $p_words;\n}\n\n$words = array('pizza', 'pasta', 'pudding', 'pancakes', 'potato', 'pepper', 'parsley');\n$p_words = start_withp($words);\nprint_r($p_words);",
    "\t$pwords = array();\n\tforeach ($words as $word) {\n\t\tif (preg_match('/^p/', $word)) {\n\t\t\t$pwords[] = $word;\n\t\t}\n\t}\n\treturn $pwords;\n}\n\n$words = array('pizza', 'pasta', 'pudding', 'potato', 'prawns', 'paneer');\nprint_r(start_withp($words));",
    "    $result = array();\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('PHP', 'JS', 'Python', 'Java', 'C#', 'C++', 'C', 'Go', 'Perl', 'Ruby', 'Swift');\nprint_r(start_withp($words));\n",
    "    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'peach', 'pineapple'];\nprint_r(start_withp($words));\n",
    "    $pwords = array();\n    foreach ($words as $word) {\n        if ($word[0] == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('pizza', 'apple', 'pear', 'pineapple', 'orange', 'papaya');\n$pwords = start_withp($words);\nprint_r($pwords);\n",
    "    $pwords = [];\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return array_slice($pwords, 0, 2);\n}\n\n$words = ['pizza', 'pasta', 'paprika', 'potato', 'pepper'];\nprint_r(start_withp($words));\n",
    "    $words_with_p = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $words_with_p[] = $word;\n        }\n    }\n    return $words_with_p;\n}\n\n$words = ['pizza', 'apple', 'pear', 'potato', 'pineapple'];\n$words_with_p = start_withp($words);\nprint_r($words_with_p);",
    "\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (strpos($word, 'p') === 0) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'pork', 'prawns');\n$result = start_withp($words);\nprint_r($result);",
    "    $pwords = [];\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pineapple', 'orange', 'potato', 'pumpkin'];\nprint_r(start_withp($words));\n",
    "    $result = [];\n    foreach ($words as $word) {\n        if (preg_match('/^p/', $word)) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'pepper', 'pasta', 'potato', 'pork', 'peas'];\nprint_r(start_withp($words));\n",
    "    $pwords = [];\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\nprint_r(start_withp($words));",
    "    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'pasta', 'pepperoni', 'parmesan', 'parsley', 'parsnip', 'potato', 'pumpkin', 'pear'];\nprint_r(start_withp($words));\n",
    "    $p_words = [];\n    foreach ($words as $word) {\n        if (preg_match('/^p/', $word)) {\n            $p_words[] = $word;\n        }\n    }\n    return $p_words;\n}\n$words = ['pizza', 'pasta', 'parmesan', 'parsley', 'paprika', 'potato', 'pepperoni', 'parsnip', 'pepper', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'p",
    "  $p_words = [];\n  foreach ($words as $word) {\n    if (strpos($word, 'p') === 0) {\n      $p_words[] = $word;\n    }\n  }\n  return $p_words;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pork', 'papaya', 'pineapple', 'potato'];\nprint_r(start_withp($words));\n",
    "    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pear', 'apple', 'peach', 'plum', 'pineapple', 'pumpkin');\n$result = start_withp($words);\nprint_r($result);\n",
    "  $p_words = [];\n  foreach ($words as $word) {\n    if (substr($word, 0, 1) == \"p\") {\n      $p_words[] = $word;\n    }\n  }\n  return array_slice($p_words, 0, 2);\n}\n\n$words = ['pizza', 'pasta', 'parmesan', 'parsley', 'paprika', 'pepper', 'potato', 'pumpkin'];\nprint_r(start_withp($words));",
    "    $pwords = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['pizza', 'pepper', 'penguin', 'panda', 'pumpkin', 'potato', 'peas'];\n$pwords = start_withp($words);\nprint_r($pwords);\n",
    "    $pwords = array();\n    foreach ($words as $word) {\n        if (preg_match('/^p/', $word)) {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('pizza', 'pasta', 'pepper', 'potato', 'pork', 'prawns', 'peas');\n$pwords = start_withp($words);\nprint_r($pwords);",
    "    $pwords = array();\n    foreach ($words as $word) {\n        if (preg_match('/^p/', $word)) {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('pizza', 'apple', 'pear', 'peach', 'pork', 'pumpkin');\n$pwords = start_withp($words);\nprint_r($pwords);",
    "    $p_words = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $p_words[] = $word;\n        }\n    }\n    return $p_words;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pineapple', 'plum', 'peach'];\n$p_words = start_withp($words);\nprint_r($p_words);\n",
    "    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza',",
    "\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (substr($word, 0, 1) == 'p') {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'pizza', 'pear');\nprint_r(start_withp($words));",
    "  $result = [];\n  foreach ($words as $word) {\n    if (preg_match('/^p/', $word)) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = ['pizza', 'pasta', 'pepperoni', 'potato', 'peas'];\nprint_r(start_withp($words));\n",
    "\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (strtolower(substr($word, 0, 1)) == 'p') {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('PHP', 'HTML', 'CSS', 'JavaScript', 'jQuery', 'AJAX', 'XML');\n$result = start_withp($words);\necho '<pre>';\nprint_r($result);\necho '</pre>';",
    "\t$p_words = array();\n\tforeach ($words as $word) {\n\t\tif (strpos($word, 'p') === 0) {\n\t\t\t$p_words[] = $word;\n\t\t}\n\t}\n\treturn array_slice($p_words, 0, 2);\n}\n\n$words = ['pizza', 'pasta', 'pancake', 'potato', 'pepper', 'pumpkin', 'pear'];\nprint_r(start_withp($words));",
    "    $result = array();\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('PHP', 'MySQL', 'JavaScript', 'HTML', 'CSS');\nprint_r(start_withp($words));",
    "  $result = [];\n  foreach ($words as $word) {\n    if (strtolower($word[0]) == 'p') {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'peach', 'pineapple', 'potato'];\nprint_r(start_withp($words));\n",
    "    $result = [];\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\nprint_r(start_withp($words));",
    "    $result = array();\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pear', 'apple', 'orange', 'plum', 'peach');\n$result = start_withp($words);\necho '<pre>';\nprint_r($result);\necho '</pre>';",
    "    $result = array();\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'peach', 'pineapple'];\n$result = start_withp($words);\nprint_r($result);\n",
    "\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (preg_match('/^p/', $word)) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('pear', 'apple', 'orange', 'pineapple', 'peach', 'plum');\nprint_r(start_withp($words));\n",
    "    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'peach', 'pineapple'];\nprint_r(start_withp($words));\n",
    "    $pwords = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('pizza', 'pasta', 'pumpkin', 'potato', 'pepper', 'parsley');\n$pwords = start_withp($words);\nprint_r($pwords);",
    "\t$pwords = array();\n\tforeach ($words as $word) {\n\t\tif (preg_match('/^p/', $word)) {\n\t\t\t$pwords[] = $word;\n\t\t}\n\t}\n\treturn $pwords;\n}\n\n$words = array('pizza', 'pasta', 'pepper', 'pancake', 'potato', 'pudding', 'pork', 'prawn', 'pear', 'pineapple');\n$pwords = start_withp($words);\nprint_r($pwords);",
    "  $p_words = [];\n  foreach ($words as $word) {\n    if (strtolower($word[0]) == 'p') {\n      $p_words[] = $word;\n    }\n  }\n  return $p_words;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\nprint_r(start_withp($words));",
    "\t$p_words = array();\n\tforeach ($words as $word) {\n\t\tif (substr($word, 0, 1) == 'p') {\n\t\t\t$p_words[] = $word;\n\t\t}\n\t}\n\treturn $p_words;\n}\n\n$words = array('pear', 'apple', 'orange', 'pineapple', 'plum', 'peach');\n$p_words = start_withp($words);\nprint_r($p_words);",
    "    $pwords = [];\n    foreach ($words as $word) {\n        if (preg_match('/^p/', $word)) {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pizza'];\nprint_r(start_withp($words));",
    "  $pwords = [];\n  foreach ($words as $word) {\n    if (strtolower($word[0]) == 'p') {\n      $pwords[] = $word;\n    }\n  }\n  return $pwords;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pineapple', 'orange', 'peach'];\n$pwords = start_withp($words);\nprint_r($pwords);\n",
    "  $pwords = array();\n  foreach ($words as $word) {\n    if (preg_match('/^p/', $word)) {\n      $pwords[] = $word;\n    }\n  }\n  return $pwords;\n}\n\n$words = array('pear', 'apple', 'peach', 'pineapple', 'pumpkin', 'potato');\nprint_r(start_withp($words));\n",
    "\t$pwords = array();\n\tforeach ($words as $word) {\n\t\tif (preg_match('/^p/', $word)) {\n\t\t\t$pwords[] = $word;\n\t\t}\n\t}\n\treturn $pwords;\n}\n\n$words = array('pizza', 'pasta', 'parmesan', 'parsley', 'pepper', 'parsnip', 'potato', 'pumpkin', 'peas', 'pear', 'peach');\nprint_r(start_withp($words));",
    "  $result = [];\n  foreach ($words as $word) {\n    if (substr($word, 0, 1) == 'p') {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pineapple', 'banana', 'peach'];\nvar_dump(start_withp($words));\n",
    "  $result = array();\n  foreach ($words as $word) {\n    if (preg_match('/^p/', $word)) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = array('pizza', 'pasta', 'pepper', 'pig', 'pork', 'potato', 'pumpkin', 'pear');\nprint_r(start_withp($words));",
    "\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (strpos($word, 'p') === 0) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('pear', 'apple', 'orange', 'pineapple', 'grape');\n$result = start_withp($words);\nprint_r($result);",
    "\t$pwords = array();\n\tforeach ($words as $word) {\n\t\tif (preg_match('/^p/', $word)) {\n\t\t\t$pwords[] = $word;\n\t\t}\n\t}\n\treturn $pwords;\n}\n\n$words = array('pear', 'apple', 'orange', 'pineapple', 'papaya', 'pumpkin');\nprint_r(start_withp($words));\n",
    "  $result = array();\n  foreach ($words as $word) {\n    if (preg_match('/^p/', $word)) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'pudding', 'pineapple');\nprint_r(start_withp($words));",
    "    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'pasta', 'pudding', 'pancakes', 'potatoes', 'pepper', 'parsley'];\n\nprint_r(start_withp($words));\n",
    "    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pineapple', 'pork', 'porky'];\nprint_r(start_withp($words));\n",
    "    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pancake'];\nprint_r(start_withp($words));\n",
    "    $pwords = array();\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('PHP', 'is', 'a', 'widely-used', 'open', 'source', 'general-purpose', 'scripting', 'language');\n$pwords = start_withp($words);\necho implode(' ', $pwords);",
    "    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'peach', 'pineapple');\nprint_r(start_withp($words));\n",
    "    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'pork', 'potato', 'pen', 'peach', 'pudding');\n$result = start_withp($words);\nprint_r($result);\n",
    "    $pwords = array();\n    foreach ($words as $word) {\n        if (preg_match('/^p/', $word)) {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('pizza', 'pasta', 'pepper', 'potato', 'pork', 'prawns', 'peas');\nprint_r(start_withp($words));",
    "  $result = [];\n  foreach ($words as $word) {\n    if (strpos($word, 'p') === 0) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'peach', 'pineapple', 'pork', 'prawn'];\nprint_r(start_withp($words));",
    "  $result = [];\n  foreach ($words as $word) {\n    if (strpos($word, 'p') === 0) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = ['pear', 'apple', 'peach', 'pineapple', 'pumpkin', 'papaya'];\nprint_r(start_withp($words));",
    "\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (strpos($word, 'p') === 0) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'pineapple', 'banana');\n$result = start_withp($words);\nprint_r($result);",
    "\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (strtolower($word[0]) == 'p') {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('PHP', 'HTML', 'CSS', 'JavaScript', 'Python', 'C', 'C++', 'C#', 'Java', 'Ruby', 'Perl', 'Pascal', 'Go', 'Swift', 'Scala', 'Lisp', 'Bash', 'Haskell', 'MATLAB', 'Clojure', 'Groovy', 'Objective-C', 'R', 'VBA', 'Fortran', 'Assembly', 'Rust', 'Erlang', 'CoffeeScript', 'Julia', 'D', 'Elixir', 'F#', 'OCaml', 'Haxe', 'Puppet', 'PowerShell', 'Prolog', 'Scheme', 'Smalltalk', 'Tcl', 'Visual Basic .NET', 'Apex', 'AppleScript', 'AutoHotkey', 'AutoIt', 'Awk', 'Batch', 'bc', 'BlitzMax', 'Boo', 'Ceylon', 'Chapel', 'Clean', 'Clipper', 'CMake', 'COBOL', 'ColdFusion', 'Dart', 'Delphi', 'Eiffel', 'Elm', 'Emacs Lisp', 'EmberScript', 'EQ', 'Fantom', 'Forth', 'Gambas', 'GAP', 'GLSL', 'Go', 'Gosu', 'Hack', 'Io', 'Ioke', 'J', 'Kotlin', 'LabVIEW', 'Ladder Logic', 'Lasso', 'Limbo', 'LiveCode', 'Logo', 'Logtalk', 'Lua', 'M', 'M4', 'MAD', 'Magic', 'Max', 'MaxScript', 'Mercury', 'Mirah', 'MQL4', 'MQL5', 'Nemerle', 'Nimrod', 'NQC', 'NSIS', 'Nu', 'Oberon', 'OpenCL', 'OpenEdge ABL', 'OpenSCAD', 'Ox', 'Oxygene', 'Parrot', 'Pike', 'P",
    "\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (strtolower($word[0]) == 'p') {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('PHP', 'is', 'a', 'widely-used', 'open', 'source', 'general-purpose', 'scripting', 'language');\nprint_r(start_withp($words));",
    "  $pwords = [];\n  foreach ($words as $word) {\n    if (substr($word, 0, 1) == 'p') {\n      $pwords[] = $word;\n    }\n  }\n  return $pwords;\n}\n\n$words = ['pizza', 'pasta', 'pepperoni', 'potato', 'pork', 'prawns', 'peas'];\nprint_r(start_withp($words));\n"
  ]
}
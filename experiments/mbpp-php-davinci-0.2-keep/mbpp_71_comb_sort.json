{
  "name": "mbpp_71_comb_sort",
  "language": "php",
  "prompt": "<?php\n// Write a function to sort a list of elements.\nfunction comb_sort($nums) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_71_comb_sort.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return comb_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 15, 37, 25, 79)) !== array(5, 15, 25, 37, 79)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(41, 32, 15, 19, 22)) !== array(15, 19, 22, 32, 41)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(99, 15, 13, 47)) !== array(13, 15, 47, 99)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $gap = count($nums);\n    $shrink = 1.3;\n    $swapped = true;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = floor($gap / $shrink);\n        }\n        $swapped = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                list($nums[$i], $nums[$i + $gap]) = array($nums[$i + $gap], $nums[$i]);\n                $swapped = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n",
    "    $gap = count($nums);\n    $swapped = true;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = floor($gap / 1.25);\n        }\n        $swapped = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                $temp = $nums[$i];\n                $nums[$i] = $nums[$i + $gap];\n                $nums[$i + $gap] = $temp;\n                $swapped = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n\n$nums = array(1, 3, 2, 5, 4);\nprint_r(comb_sort($nums));",
    "    $gap = count($nums);\n    $shrink = 1.3;\n    $swapped = true;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = floor($gap / $shrink);\n        }\n        $swapped = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                $temp = $nums[$i];\n                $nums[$i] = $nums[$i + $gap];\n                $nums[$i + $gap] = $temp;\n                $swapped = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n\n$nums = array(10, 5, 2, 3);\n$nums = comb_sort($nums);\nprint_r($nums);",
    "    $gap = count($nums);\n    $shrink = 1.3;\n    $swapped = true;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = floor($gap / $shrink);\n        }\n        $swapped = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                $temp = $nums[$i];\n                $nums[$i] = $nums[$i + $gap];\n                $nums[$i + $gap] = $temp;\n                $swapped = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n",
    "    $gap = count($nums);\n    $swap = true;\n    while ($gap > 1 || $swap) {\n        if ($gap > 1) {\n            $gap = floor($gap / 1.25);\n        }\n        $swap = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                $tmp = $nums[$i];\n                $nums[$i] = $nums[$i + $gap];\n                $nums[$i + $gap] = $tmp;\n                $swap = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n\n$nums = array(10, 5, 2, 3);\nprint_r(comb_sort($nums));",
    "    $gap = count($nums);\n    $swap = true;\n    while ($gap > 1 || $swap) {\n        if ($gap > 1) {\n            $gap = floor($gap / 1.25);\n        }\n        $swap = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                $temp = $nums[$i];\n                $nums[$i] = $nums[$i + $gap];\n                $nums[$i + $gap] = $temp;\n                $swap = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n\n$nums = [5, 4, 3, 2, 1];\necho implode(', ', comb_sort($nums));",
    "\t$gap = count($nums);\n\t$shrink = 1.3;\n\t$swapped = true;\n\twhile ($gap > 1 || $swapped) {\n\t\tif ($gap > 1) {\n\t\t\t$gap = floor($gap / $shrink);\n\t\t}\n\t\t$swapped = false;\n\t\t$i = 0;\n\t\twhile ($i + $gap < count($nums)) {\n\t\t\tif ($nums[$i] > $nums[$i + $gap]) {\n\t\t\t\t$temp = $nums[$i];\n\t\t\t\t$nums[$i] = $nums[$i + $gap];\n\t\t\t\t$nums[$i + $gap] = $temp;\n\t\t\t\t$swapped = true;\n\t\t\t}\n\t\t\t$i++;\n\t\t}\n\t}\n\treturn $nums;\n}\n",
    "    $gap = count($nums);\n    $shrink = 1.3;\n    $swapped = true;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = floor($gap / $shrink);\n        }\n        $swapped = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                $temp = $nums[$i];\n                $nums[$i] = $nums[$i + $gap];\n                $nums[$i + $gap] = $temp;\n                $swapped = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n\n$nums = [1, 5, 3, 2, 7, 4, 9, 8, 6];\nprint_r(comb_sort($nums));",
    "    $gap = count($nums);\n    $swap = true;\n    while ($gap > 1 || $swap) {\n        if ($gap > 1) {\n            $gap = floor($gap / 1.25);\n        }\n        $swap = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                $temp = $nums[$i];\n                $nums[$i] = $nums[$i + $gap];\n                $nums[$i + $gap] = $temp;\n                $swap = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n\n$nums = [1, 3, 5, 7, 9, 2, 4, 6, 8, 10];\n$nums = comb_sort($nums);\nprint_r($nums);",
    "    $gap = count($nums);\n    $shrink = 1.3;\n    $swapped = true;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = floor($gap / $shrink);\n        }\n        $swapped = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                list($nums[$i], $nums[$i + $gap]) = array($nums[$i + $gap], $nums[$i]);\n                $swapped = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n\n$nums = array(5, 4, 3, 2, 1);\nprint_r(comb_sort($nums));\n",
    "    $gap = count($nums);\n    $shrink = 1.3;\n    $swapped = true;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = floor($gap / $shrink);\n        }\n        $swapped = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                $temp = $nums[$i];\n                $nums[$i] = $nums[$i + $gap];\n                $nums[$i + $gap] = $temp;\n                $swapped = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n",
    "    $gap = count($nums);\n    $shrink = 1.3;\n    $swapped = true;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = floor($gap / $shrink);\n        }\n        $swapped = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                list($nums[$i], $nums[$i + $gap]) = array($nums[$i + $gap], $nums[$i]);\n                $swapped = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n\n$nums = array(3, 1, 2, 5, 4);\nprint_r(comb_sort($nums));",
    "    $gap = count($nums);\n    $shrink = 1.3;\n    $swapped = true;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = floor($gap / $shrink);\n        }\n        $swapped = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                list($nums[$i], $nums[$i + $gap]) = array($nums[$i + $gap], $nums[$i]);\n                $swapped = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n\n$nums = array(1, 3, 5, 7, 9, 2, 4, 6, 8, 10);\nprint_r(comb_sort($nums));",
    "    $gap = count($nums);\n    $swap = true;\n    while ($gap > 1 || $swap) {\n        if ($gap > 1) {\n            $gap = floor($gap / 1.25);\n        }\n        $swap = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                $temp = $nums[$i];\n                $nums[$i] = $nums[$i + $gap];\n                $nums[$i + $gap] = $temp;\n                $swap = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n\n$nums = array(1, 3, 2, 5, 4, 7, 6, 9, 8);\nprint_r(comb_sort($nums));",
    "    $gap = count($nums);\n    $shrink = 1.3;\n    $swapped = true;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = floor($gap / $shrink);\n        }\n        $swapped = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                $temp = $nums[$i];\n                $nums[$i] = $nums[$i + $gap];\n                $nums[$i + $gap] = $temp;\n                $swapped = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n\n$nums = array(1, 5, 2, 7, 3, 9, 4);\nprint_r(comb_sort($nums));",
    "    $gap = count($nums);\n    $swap = true;\n    while ($gap > 1 || $swap) {\n        if ($gap > 1) {\n            $gap /= 1.25;\n        }\n        $swap = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                list($nums[$i], $nums[$i + $gap]) = array($nums[$i + $gap], $nums[$i]);\n                $swap = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n\n$nums = array(10, 5, 2, 3);\nprint_r(comb_sort($nums));",
    "    $gap = count($nums);\n    $shrink = 1.3;\n    $swapped = true;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = floor($gap / $shrink);\n        }\n        $swapped = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                $temp = $nums[$i];\n                $nums[$i] = $nums[$i + $gap];\n                $nums[$i + $gap] = $temp;\n                $swapped = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n\n$nums = array(1, 5, 2, 7, 3, 9, 4);\nprint_r(comb_sort($nums));",
    "    $gap = count($nums);\n    $swap = true;\n    while ($gap > 1 || $swap) {\n        if ($gap > 1) {\n            $gap = floor($gap / 1.25);\n        }\n        $swap = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                $temp = $nums[$i];\n                $nums[$i] = $nums[$i + $gap];\n                $nums[$i + $gap] = $temp;\n                $swap = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n\n$nums = array(10, 50, 20, 40, 30);\nprint_r(comb_sort($nums));",
    "    $gap = count($nums);\n    $shrink = 1.3;\n    $swapped = true;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = floor($gap / $shrink);\n        }\n        $swapped = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                $temp = $nums[$i];\n                $nums[$i] = $nums[$i + $gap];\n                $nums[$i + $gap] = $temp;\n                $swapped = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n\n$nums = array(1, 3, 2, 5, 4, 7, 6, 9, 8);\nprint_r(comb_sort($nums));",
    "    $gap = count($nums);\n    $shrink = 1.3;\n    $swapped = true;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = floor($gap / $shrink);\n        }\n        $swapped = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                $temp = $nums[$i];\n                $nums[$i] = $nums[$i + $gap];\n                $nums[$i + $gap] = $temp;\n                $swapped = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n\n$nums = [1, 3, 2, 4, 5, 7, 6, 9, 8];\nprint_r(comb_sort($nums));"
  ]
}
{
  "name": "mbpp_395_first_non_repeating_character",
  "language": "php",
  "prompt": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_395_first_non_repeating_character.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "\t$str_len = strlen($str1);\n\tfor($i=0; $i<$str_len; $i++) {\n\t\t$char = $str1[$i];\n\t\tif(substr_count($str1, $char) == 1) {\n\t\t\treturn $char;\n\t\t}\n\t}\n\treturn null;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');",
    "    $str = str_split($str1);\n    $count = array_count_values($str);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return 'No non-repeating character found';\n}\necho first_non_repeating_character('abcdabcd');",
    "    $str_len = strlen($str1);\n    for ($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if (substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return null;\n}\n\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");",
    "    $str1 = strtolower($str1);\n    $str1_array = str_split($str1);\n    $str1_array_count = array_count_values($str1_array);\n    foreach ($str1_array_count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return null;\n}\n\necho first_non_repeating_character('aabbccddeeffgg');",
    "    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $str1 = array_unique($str1);\n    $str1 = implode($str1);\n    $str1 = str_split($str1);\n    $str1 = array_values($str1);\n    return $str1[0];\n}\n\necho first_non_repeating_character(\"abcdefghija\");\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho first_non_repeating_character(\"go hang a salami, im a lasagna hog!\");\necho first_non_repeating_character(\"hello world, eh?\");\necho first_non_repeating_character(\"sTreSS\");\necho first_non_repeating_character(\"Go hang a salami I'm a lasagna hog!\");",
    "    $str1 = strtolower($str1);\n    $str_len = strlen($str1);\n    $char_count = array();\n    for($i = 0; $i < $str_len; $i++) {\n        if(!array_key_exists($str1[$i], $char_count)) {\n            $char_count[$str1[$i]] = 1;\n        } else {\n            $char_count[$str1[$i]] += 1;\n        }\n    }\n    for($i = 0; $i < $str_len; $i++) {\n        if($char_count[$str1[$i]] == 1) {\n            return $str1[$i];\n        }\n    }\n    return 'No non-repeating character found';\n}\n\necho first_non_repeating_character('aabbccddeeff');",
    "    $str1 = strtolower($str1);\n    for ($i = 0; $i < strlen($str1); $i++) {\n        $char = $str1[$i];\n        if (substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return null;\n}\n\n$str1 = 'the quick brown fox jumps then quickly blow air';\necho first_non_repeating_character($str1);",
    "    $str_len = strlen($str1);\n    for($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if(substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return null;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');",
    "    $str_arr = str_split($str1);\n    $count = array_count_values($str_arr);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first",
    "    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $arr = array();\n    foreach ($str1 as $key => $value) {\n        if (array_key_exists($value, $arr)) {\n            $arr[$value] += 1;\n        } else {\n            $arr[$value] = 1;\n        }\n    }\n    foreach ($arr as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz');",
    "    $str1 = strtolower($str1);\n    $arr = str_split($str1);\n    $arr_count = array_count_values($arr);\n    foreach ($arr_count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return \"No non-repeating character found\";\n}\n\n$str1 = \"aabcd\";\necho first_non_repeating_character($str1);",
    "    $str_len = strlen($str1);\n    for($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if(substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return -1;\n}\n\n$str1 = 'abcdab';\necho first_non_repeating_character($str1);",
    "    $str_len = strlen($str1);\n    for($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if(substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return null;\n}\n\n$str1 = 'the quick brown fox jumps then quickly blow air';\necho first_non_repeating_character($str1);",
    "    $str1 = strtolower($str1);\n    $str1_array = str_split($str1);\n    $str1_array_unique = array_unique($str1_array);\n    $str1_array_unique_count = count($str1_array_unique);\n    $str1_array_unique_count_index = 0;\n    $str1_array_unique_count_index_value = '';\n    while ($str1_array_unique_count_index < $str1_array_unique_count) {\n        $str1_array_unique_count_index_value = $str1_array_unique[$str1_array_unique_count_index];\n        $str1_array_unique_count_index_value_count = substr_count($str1, $str1_array_unique_count_index_value);\n        if ($str1_array_unique_count_index_value_count == 1) {\n            return $str1_array_unique_count_index_value;\n        }\n        $str1_array_unique_count_index++;\n    }\n    return false;\n}\necho first_non_repeating_character('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz');",
    "    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character(\"abcdcd\");",
    "    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $arr1 = array();\n    foreach ($str1 as $key => $value) {\n        if (array_key_exists($value, $arr1)) {\n            $arr1[$value] += 1;\n        } else {\n            $arr1[$value] = 1;\n        }\n    }\n    foreach ($arr1 as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return '_';\n}\n\necho first_non_repeating_character('abcdabcd');\necho \"\\n\";\necho first_non_repeating_character('abcdabcdabcd');\necho \"\\n\";\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyziflskecznslkjfabe');\necho \"\\n\";\necho first_non_repeating_character('bcccccccccccccyb');\necho \"\\n\";\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyziflskecznslkjfabe');\necho \"\\n\";\necho first_non_repeating_character('bcccccccccccccyb');\necho \"\\n\";\necho first_non_repeating_character('xdnxxlvupzuwgigeqjggosgljuhliybkjpibyatofcjbfxwtalc');\necho \"\\n\";\necho first_non_repeating_character('ngrhhqbhnsipkcoqjyviikvxbxyphsnjpdxkhtadltsuxbfbrkof');\necho \"\\n\";\necho first_non_repeating_character('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaabcdefghijklmnopqrstuvwxyziflskecznslkjfabe');\necho \"\\n\";\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyziflskecznslkjfabe');\necho \"\\n\";\necho",
    "    $str1 = strtolower($str1);\n    $len = strlen($str1);\n    for($i=0; $i<$len; $i++) {\n        if(substr_count($str1, $str1[$i]) == 1) {\n            return $str1[$i];\n        }\n    }\n    return 'No non-repeating character found';\n}\n\necho first_non_repeating_character('aabbccddeeffgg');",
    "    $str = strtolower($str1);\n    $len = strlen($str);\n    for ($i = 0; $i < $len; $i++) {\n        if (substr_count($str, $str[$i]) == 1) {\n            return $str[$i];\n        }\n    }\n    return \"No non-repeating character found\";\n}\n\necho first_non_repeating_character(\"abcab\");\necho \"\\n\";\necho first_non_repeating_character(\"abab\");\necho \"\\n\";\necho first_non_repeating_character(\"aabbbc\");\necho \"\\n\";\necho first_non_repeating_character(\"aabbdbc\");\n",
    "    $str = str_split($str1);\n    $count = array_count_values($str);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\n",
    "    $str1 = strtolower($str1);\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        $char = $str1[$i];\n        if (substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return false;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho"
  ]
}
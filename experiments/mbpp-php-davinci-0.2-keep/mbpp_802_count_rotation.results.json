{
  "name": "mbpp_802_count_rotation",
  "language": "php",
  "prompt": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_802_count_rotation.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [8, 9, 10, 2, 5, 6];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "3",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\n$n = count($arr);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5t6bptp7.php:23\nStack trace:\n#0 /tmp/tmp5t6bptp7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp5t6bptp7.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9fhxh3i2.php:23\nStack trace:\n#0 /tmp/tmp9fhxh3i2.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp9fhxh3i2.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [5, 6, 7, 8, 9, 10, 1, 2, 3];\necho count_rotation($arr);\n\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "6",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while($low <= $high) {\n        if($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\n$count = count_rotation($arr);\necho \"Count of rotations: $count\";\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "Count of rotations: 2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [5, 6, 7, 8, 9, 10, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = (int)($low + $high) / 2;\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "\nDeprecated: Implicit conversion from float 3.5 to int loses precision in /tmp/tmp4wuotpne.php on line 12\n\nDeprecated: Implicit conversion from float 7.5 to int loses precision in /tmp/tmp4wuotpne.php on line 13\n\nDeprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmp4wuotpne.php on line 14\n\nDeprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmp4wuotpne.php on line 14\n2.5",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $low = 0;\n    $high = count($arr) - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % count($arr);\n        $prev = ($mid + count($arr) - 1) % count($arr);\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [5, 6, 7, 8, 9, 10, 1, 2, 3];\necho count_rotation($arr);\n\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "6",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while($low <= $high) {\n        if($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = -1;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_bfb3uej.php:23\nStack trace:\n#0 /tmp/tmp_bfb3uej.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp_bfb3uej.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $min = $arr[0];\n    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [5, 6, 7, 8, 9, 10, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmnbeudt_.php:22\nStack trace:\n#0 /tmp/tmpmnbeudt_.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpmnbeudt_.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $mid = 0;\n    while($low <= $high) {\n        if($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = $low + floor(($high - $low) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n\t$n = count($arr);\n\t$min = min($arr);\n\t$min_index = array_search($min, $arr);\n\treturn $min_index;\n}\n\n$arr = array(4, 5, 6, 7, 1, 2, 3);\n$n = count($arr);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk8ogpsds.php:18\nStack trace:\n#0 /tmp/tmpk8ogpsds.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpk8ogpsds.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $mid = 0;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\n$n = count($arr);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = ($low + $high) / 2;\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124074,
      "stdout": "\nDeprecated: Implicit conversion from float 3.5 to int loses precision in /tmp/tmp32gzseez.php on line 12\n\nDeprecated: Implicit conversion from float 7.5 to int loses precision in /tmp/tmp32gzseez.php on line 13\n\nDeprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmp32gzseez.php on line 14\n\nDeprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmp32gzseez.php on line 14\n2.5",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min_index = 0;\n    $min_value = $arr[0];\n    for($i=0;$i<$n;$i++) {\n        if($arr[$i] < $min_value) {\n            $min_value = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124059,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqo3yur8o.php:23\nStack trace:\n#0 /tmp/tmpqo3yur8o.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpqo3yur8o.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124059,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd6o2z90v.php:23\nStack trace:\n#0 /tmp/tmpd6o2z90v.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpd6o2z90v.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(5, 6, 7, 8, 9, 10, 1, 2, 3);\n$n = count($arr);\necho \"The array is \\n\";\nprint_r($arr);\n\n$count = count_rotation($arr);\necho \"\\nThe number of rotations is $count\";\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124074,
      "stdout": "The array is \nArray\n(\n    [0] => 5\n    [1] => 6\n    [2] => 7\n    [3] => 8\n    [4] => 9\n    [5] => 10\n    [6] => 1\n    [7] => 2\n    [8] => 3\n)\n\nThe number of rotations is 6",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i=0; $i<$n; $i++) {\n        if($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(4,5,6,7,1,2,3);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124059,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp013vw531.php:23\nStack trace:\n#0 /tmp/tmp013vw531.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp013vw531.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n\t$count = 0;\n\t$n = count($arr);\n\tfor ($i = 0; $i < $n - 1; $i++) {\n\t\tif ($arr[$i] > $arr[$i + 1]) {\n\t\t\t$count = $i + 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn $count;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124059,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while($low <= $high) {\n        if($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = min($arr);\n    $min_index = array_search($min, $arr);\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124059,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3y1qpr10.php:17\nStack trace:\n#0 /tmp/tmp3y1qpr10.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp3y1qpr10.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n$arr = [8, 9, 10, 2, 5, 6];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124074,
      "stdout": "3",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\n\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124074,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124059,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpalv_rfip.php:23\nStack trace:\n#0 /tmp/tmpalv_rfip.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpalv_rfip.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [5, 6, 7, 8, 9, 10, 1, 2, 3, 4];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124059,
      "stdout": "6\nWarning: Undefined array key 3 in /tmp/tmpcb9qht4m.php on line 6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcb9qht4m.php:24\nStack trace:\n#0 /tmp/tmpcb9qht4m.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpcb9qht4m.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\n$n = count($arr);\n$count = count_rotation($arr);\necho \"The array is rotated $count times\";\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124074,
      "stdout": "The array is rotated 2 times",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [8, 9, 10, 2, 5, 6];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124074,
      "stdout": "3",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5t6bptp7.php:23\nStack trace:\n#0 /tmp/tmp5t6bptp7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp5t6bptp7.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124074,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = min($arr);\n    $min_index = array_search($min, $arr);\n    return ($min_index + $n - 1) % $n;\n}\n\n$arr = array(5, 6, 7, 8, 9, 10, 1, 2, 3);\n$n = count($arr);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124059,
      "stdout": "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7_3yql2_.php:19\nStack trace:\n#0 /tmp/tmp7_3yql2_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp7_3yql2_.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $mid = 0;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < count($arr); $i++) {\n        if($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124059,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmhg51lhh.php:22\nStack trace:\n#0 /tmp/tmpmhg51lhh.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpmhg51lhh.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n\t$n = count($arr);\n\t$min = $arr[0];\n\t$min_index = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif ($min > $arr[$i]) {\n\t\t\t$min = $arr[$i];\n\t\t\t$min_index = $i;\n\t\t}\n\t}\n\treturn $min_index;\n}\n\n$arr = [3, 4, 5, 1, 2];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124059,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxo9j43rg.php:23\nStack trace:\n#0 /tmp/tmpxo9j43rg.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpxo9j43rg.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = $low + floor(($high - $low) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124074,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = $low + (int)(($high - $low) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124074,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5t6bptp7.php:23\nStack trace:\n#0 /tmp/tmp5t6bptp7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp5t6bptp7.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = ($low + $high) / 2;\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [8, 9, 10, 2, 5, 6];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124074,
      "stdout": "\nDeprecated: Implicit conversion from float 3.5 to int loses precision in /tmp/tmp3rydxpj3.php on line 12\n\nDeprecated: Implicit conversion from float 7.5 to int loses precision in /tmp/tmp3rydxpj3.php on line 13\n\nDeprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmp3rydxpj3.php on line 14\n\nDeprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmp3rydxpj3.php on line 16\n\nDeprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmp3rydxpj3.php on line 18\n\nDeprecated: Implicit conversion from float 3.5 to int loses precision in /tmp/tmp3rydxpj3.php on line 8\n3.5",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min_index = 0;\n    $min = $arr[0];\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124059,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwgw2qj_t.php:23\nStack trace:\n#0 /tmp/tmpwgw2qj_t.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpwgw2qj_t.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = ($low + $high) / 2;\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [4, 5, 6, 7, 8, 9, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124074,
      "stdout": "\nDeprecated: Implicit conversion from float 7.5 to int loses precision in /tmp/tmp4p3g7zbt.php on line 12\n\nDeprecated: Implicit conversion from float 14.5 to int loses precision in /tmp/tmp4p3g7zbt.php on line 13\n\nDeprecated: Implicit conversion from float 6.5 to int loses precision in /tmp/tmp4p3g7zbt.php on line 14\n\nDeprecated: Implicit conversion from float 6.5 to int loses precision in /tmp/tmp4p3g7zbt.php on line 14\n6.5",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [3, 4, 5, 6, 1, 2];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124074,
      "stdout": "4",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124059,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n\t$n = count($arr);\n\t$min = $arr[0];\n\t$min_index = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif ($arr[$i] < $min) {\n\t\t\t$min = $arr[$i];\n\t\t\t$min_index = $i;\n\t\t}\n\t}\n\treturn $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\n$arr2 = [7, 9, 11, 12, 5];\n$arr3 = [7, 9, 11, 12, 15];\necho count_rotation($arr) . \"\\n\";\necho count_rotation($arr2) . \"\\n\";\necho count_rotation($arr3) . \"\\n\";\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124059,
      "stdout": "2\n4\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv6ptq_sz.php:27\nStack trace:\n#0 /tmp/tmpv6ptq_sz.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpv6ptq_sz.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = -1;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124059,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9orgunqu.php:23\nStack trace:\n#0 /tmp/tmp9orgunqu.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp9orgunqu.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = $low + floor(($high - $low) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n}\n\n$arr = [8, 9, 10, 2, 5, 6];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124074,
      "stdout": "3",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = intval(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(4, 5, 6, 7, 8, 9, 1, 2, 3);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124074,
      "stdout": "6",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n\t$count = 0;\n\t$n = count($arr);\n\tfor($i = 0; $i < $n - 1; $i++) {\n\t\tif($arr[$i] > $arr[$i + 1]) {\n\t\t\t$count = $i + 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn $count;\n}\n\n$arr = array(5, 6, 7, 8, 9, 10, 1, 2, 3);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124060,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $mid = 0;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = $low + ($high - $low) / 2;\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124074,
      "stdout": "\nDeprecated: Implicit conversion from float 3.5 to int loses precision in /tmp/tmpm9hymlac.php on line 13\n\nDeprecated: Implicit conversion from float 7.5 to int loses precision in /tmp/tmpm9hymlac.php on line 14\n\nDeprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmpm9hymlac.php on line 15\n\nDeprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmpm9hymlac.php on line 15\n2.5",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i=0; $i<$n; $i++) {\n        if($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [4, 5, 6, 7, 8, 9, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124060,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphbw145de.php:23\nStack trace:\n#0 /tmp/tmphbw145de.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphbw145de.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\n$n = count($arr);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while($low <= $high) {\n        if($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $mid = 0;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 1);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124060,
      "stdout": "9\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfg7adimz.php:23\nStack trace:\n#0 /tmp/tmpfg7adimz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpfg7adimz.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = array(5, 6, 7, 8, 9, 10, 1, 2, 3);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124060,
      "stdout": "6\nWarning: Undefined array key 3 in /tmp/tmptrkd6bel.php on line 6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptrkd6bel.php:24\nStack trace:\n#0 /tmp/tmptrkd6bel.php(28): test()\n#1 {main}\n  thrown in /tmp/tmptrkd6bel.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [8, 9, 10, 2, 5, 6];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "3",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $mid = 0;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $mid = 0;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [4, 5, 6, 7, 1, 2, 3];\n$n = count($arr);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124074,
      "stdout": "4",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(5, 6, 7, 8, 9, 10, 1, 2, 3);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124060,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwldeogc5.php:23\nStack trace:\n#0 /tmp/tmpwldeogc5.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpwldeogc5.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = (int)($low + $high) / 2;\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(4, 5, 6, 7, 1, 2, 3);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124075,
      "stdout": "4",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124074,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [5,6,7,8,9,10,1,2,3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124060,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4w_74jwv.php:23\nStack trace:\n#0 /tmp/tmp4w_74jwv.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp4w_74jwv.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while($low <= $high) {\n        if($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124075,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124074,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = (int) (($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124075,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $start = 0;\n    $end = count($arr) - 1;\n    $min = $arr[0];\n    $min_index = 0;\n    while ($start <= $end) {\n        $mid = floor(($start + $end) / 2);\n        if ($arr[$mid] <= $arr[$mid - 1] && $arr[$mid] <= $arr[$mid + 1]) {\n            $min = $arr[$mid];\n            $min_index = $mid;\n            break;\n        } else if ($arr[$mid] <= $arr[$end]) {\n            $end = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$start]) {\n            $start = $mid + 1;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [5, 6, 7, 8, 9, 10, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124075,
      "stdout": "6",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124074,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = ($low + $high) / 2;\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124074,
      "stdout": "\nDeprecated: Implicit conversion from float 3.5 to int loses precision in /tmp/tmp32gzseez.php on line 12\n\nDeprecated: Implicit conversion from float 7.5 to int loses precision in /tmp/tmp32gzseez.php on line 13\n\nDeprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmp32gzseez.php on line 14\n\nDeprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmp32gzseez.php on line 14\n2.5",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = (int)($low + ($high - $low) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [8, 9, 10, 2, 5, 6];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124075,
      "stdout": "3",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5t6bptp7.php:23\nStack trace:\n#0 /tmp/tmp5t6bptp7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp5t6bptp7.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while($low <= $high) {\n        if($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [1,2,3,4,5,6,7,8,9,10];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124060,
      "stdout": "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2_z96wf4.php:23\nStack trace:\n#0 /tmp/tmp2_z96wf4.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp2_z96wf4.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [4, 5, 6, 7, 8, 9, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124075,
      "stdout": "6",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [5, 6, 7, 8, 9, 10, 1, 2, 3];\n$n = count($arr);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124075,
      "stdout": "6",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [2, 3, 4, 5, 6, 7, 8, 1];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124089,
      "stdout": "7",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [3, 4, 5, 1, 2];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124089,
      "stdout": "3",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = $low + floor(($high - $low) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [8, 9, 10, 2, 5, 6];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124089,
      "stdout": "3",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $mid = 0;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = $low + ($high - $low) / 2;\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(4, 5, 6, 7, 1, 2, 3);\n$n = count($arr);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124089,
      "stdout": "4",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = ($low + $high) / 2;\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [5, 6, 7, 8, 9, 10, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124089,
      "stdout": "\nDeprecated: Implicit conversion from float 7.5 to int loses precision in /tmp/tmp3m_zta8m.php on line 12\n\nDeprecated: Implicit conversion from float 14.5 to int loses precision in /tmp/tmp3m_zta8m.php on line 13\n\nDeprecated: Implicit conversion from float 6.5 to int loses precision in /tmp/tmp3m_zta8m.php on line 14\n\nDeprecated: Implicit conversion from float 6.5 to int loses precision in /tmp/tmp3m_zta8m.php on line 14\n6.5",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124089,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = ($low + $high) / 2;\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [2, 3, 4, 5, 6, 7, 8, 1];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124089,
      "stdout": "\nDeprecated: Implicit conversion from float 4.5 to int loses precision in /tmp/tmp9a0k561g.php on line 12\n\nDeprecated: Implicit conversion from float 10.5 to int loses precision in /tmp/tmp9a0k561g.php on line 13\n\nDeprecated: Implicit conversion from float 3.5 to int loses precision in /tmp/tmp9a0k561g.php on line 14\n\nDeprecated: Implicit conversion from float 3.5 to int loses precision in /tmp/tmp9a0k561g.php on line 14\n\nDeprecated: Implicit conversion from float 3.5 to int loses precision in /tmp/tmp9a0k561g.php on line 16\n\nDeprecated: Implicit conversion from float 3.5 to int loses precision in /tmp/tmp9a0k561g.php on line 18\n\nDeprecated: Implicit conversion from float 4.5 to int loses precision in /tmp/tmp9a0k561g.php on line 8\n\nDeprecated: Implicit conversion from float 6.75 to int loses precision in /tmp/tmp9a0k561g.php on line 12\n\nDeprecated: Implicit conversion from float 12.75 to int loses precision in /tmp/tmp9a0k561g.php on line 13\n\nDeprecated: Implicit conversion from float 5.75 to int loses precision in /tmp/tmp9a0k561g.php on line 14\n\nDeprecated: Implicit conversion from float 5.75 to int loses precision in /tmp/tmp9a0k561g.php on line 14\n\nDeprecated: Implicit conversion from float 5.75 to int loses precision in /tmp/tmp9a0k561g.php on line 16\n\nDeprecated: Implicit conversion from float 5.75 to int loses precision in /tmp/tmp9a0k561g.php on line 18\n\nDeprecated: Implicit conversion from float 4.5 to int loses precision in /tmp/tmp9a0k561g.php on line 18\n\nDeprecated: Implicit conversion from float 6.75 to int loses precision in /tmp/tmp9a0k561g.php on line 8\n\nDeprecated: Implicit conversion from float 7.875 to int loses precision in /tmp/tmp9a0k561g.php on line 12\n\nDeprecated: Implicit conversion from float 13.875 to int loses precision in /tmp/tmp9a0k561g.php on line 13\n\nDeprecated: Implicit conversion from float 6.875 to int loses precision in /tmp/tmp9a0k561g.php on line 14\n\nDeprecated: Implicit conversion from float 6.875 to int loses precision in /tmp/tmp9a0k561g.php on line 16\n\nDeprecated: Impli",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [4, 5, 6, 7, 8, 9, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124074,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj8v86gbq.php:23\nStack trace:\n#0 /tmp/tmpj8v86gbq.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpj8v86gbq.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $count = 0;\n    for($i = 0; $i < $n - 1; $i++) {\n        if($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = array(7, 9, 11, 12, 5);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124074,
      "stdout": "4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [5, 6, 7, 8, 9, 10, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124074,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp32pkpu8c.php:23\nStack trace:\n#0 /tmp/tmp32pkpu8c.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp32pkpu8c.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n\t$count = 0;\n\tfor ($i=0; $i < count($arr); $i++) { \n\t\tif ($arr[$i] > $arr[$i+1]) {\n\t\t\t$count = $i+1;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn $count;\n}\n\n$arr = [4, 5, 6, 7, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124074,
      "stdout": "4\nWarning: Undefined array key 3 in /tmp/tmpev57cqkh.php on line 6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpev57cqkh.php:24\nStack trace:\n#0 /tmp/tmpev57cqkh.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpev57cqkh.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [6, 7, 8, 9, 10, 1, 2, 3, 4, 5];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124074,
      "stdout": "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprqhed4rl.php:23\nStack trace:\n#0 /tmp/tmprqhed4rl.php(30): test()\n#1 {main}\n  thrown in /tmp/tmprqhed4rl.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [8, 9, 10, 2, 5, 6];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "3",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124074,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124059,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(4, 5, 6, 7, 1, 2, 3);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124075,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe6x24pqe.php:23\nStack trace:\n#0 /tmp/tmpe6x24pqe.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpe6x24pqe.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $low = 0;\n    $high = count($arr) - 1;\n    while ($low < $high) {\n        $mid = (int)($low + ($high - $low) / 2);\n        if ($arr[$mid] > $arr[$high]) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid;\n        }\n    }\n    return $low;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124075,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_l5yort.php:24\nStack trace:\n#0 /tmp/tmpa_l5yort.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpa_l5yort.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [8, 9, 10, 2, 5, 6];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "3",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [8, 9, 10, 2, 5, 6];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "3",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [4, 5, 6, 7, 8, 9, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124089,
      "stdout": "6",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = 0;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            $result = $low;\n            break;\n        }\n        $mid = (int)($low + ($high - $low) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            $result = $mid;\n            break;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124089,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(4, 5, 6, 7, 1, 2, 3);\n$n = count($arr);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124075,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjenkpg2d.php:24\nStack trace:\n#0 /tmp/tmpjenkpg2d.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpjenkpg2d.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [8, 9, 10, 2, 5, 6];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "3",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124089,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $mid = 0;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [5, 6, 7, 8, 9, 10, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124089,
      "stdout": "6",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = (int)($low + $high) / 2;\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124089,
      "stdout": "\nDeprecated: Implicit conversion from float 3.5 to int loses precision in /tmp/tmpuvjc5kl2.php on line 12\n\nDeprecated: Implicit conversion from float 7.5 to int loses precision in /tmp/tmpuvjc5kl2.php on line 13\n\nDeprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmpuvjc5kl2.php on line 14\n\nDeprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmpuvjc5kl2.php on line 14\n2.5",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(4,5,6,7,8,9,1,2,3);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124075,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpljxeu7vz.php:23\nStack trace:\n#0 /tmp/tmpljxeu7vz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpljxeu7vz.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $mid = 0;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [8, 9, 10, 2, 5, 6];\necho count_rotation($arr);\n\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124090,
      "stdout": "3",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = ($low + $high) / 2;\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [4, 5, 6, 7, 8, 9, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124074,
      "stdout": "\nDeprecated: Implicit conversion from float 7.5 to int loses precision in /tmp/tmp4p3g7zbt.php on line 12\n\nDeprecated: Implicit conversion from float 14.5 to int loses precision in /tmp/tmp4p3g7zbt.php on line 13\n\nDeprecated: Implicit conversion from float 6.5 to int loses precision in /tmp/tmp4p3g7zbt.php on line 14\n\nDeprecated: Implicit conversion from float 6.5 to int loses precision in /tmp/tmp4p3g7zbt.php on line 14\n6.5",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $mid = 0;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [3, 4, 5, 6, 7, 1, 2];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124075,
      "stdout": "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7kjn802o.php:23\nStack trace:\n#0 /tmp/tmp7kjn802o.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp7kjn802o.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [5, 6, 7, 8, 9, 10, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124090,
      "stdout": "6",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [4, 5, 6, 7, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124075,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfac9b99.php:23\nStack trace:\n#0 /tmp/tmpbfac9b99.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbfac9b99.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124059,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd6o2z90v.php:23\nStack trace:\n#0 /tmp/tmpd6o2z90v.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpd6o2z90v.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124059,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpalv_rfip.php:23\nStack trace:\n#0 /tmp/tmpalv_rfip.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpalv_rfip.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n\t$count = 0;\n\t$n = count($arr);\n\tfor ($i = 0; $i < $n - 1; $i++) {\n\t\tif ($arr[$i] > $arr[$i + 1]) {\n\t\t\t$count = $i + 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn $count;\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1];\n$arr = [4, 5, 6, 7, 8, 9, 10, 1, 2, 3];\n$arr = [3, 4, 5, 6, 7, 8, 9, 10, 1, 2];\n$arr = [2, 3, 4, 5, 6, 7, 8, 9, 10, 1];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1];\n$arr = [4, 5, 6, 7, 8, 9, 10, 1, 2, 3];\n$arr = [3, 4, 5, 6, 7, 8, 9, 10, 1, 2];\n$arr = [2, 3, 4, 5, 6, 7, 8, 9, 10, 1];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124075,
      "stdout": "9",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(5, 6, 1, 2, 3, 4);\necho count_rotation($arr);\n\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124090,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $mid = 0;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [8, 9, 10, 2, 5, 6];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124090,
      "stdout": "3",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while($low <= $high) {\n        if($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = (int)($low + $high) / 2;\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [4, 5, 6, 7, 8, 9, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124090,
      "stdout": "\nDeprecated: Implicit conversion from float 7.5 to int loses precision in /tmp/tmp47ab_ecb.php on line 12\n\nDeprecated: Implicit conversion from float 14.5 to int loses precision in /tmp/tmp47ab_ecb.php on line 13\n\nDeprecated: Implicit conversion from float 6.5 to int loses precision in /tmp/tmp47ab_ecb.php on line 14\n\nDeprecated: Implicit conversion from float 6.5 to int loses precision in /tmp/tmp47ab_ecb.php on line 14\n6.5",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124074,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [5, 6, 7, 8, 9, 10, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124075,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpux8o2suf.php:23\nStack trace:\n#0 /tmp/tmpux8o2suf.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpux8o2suf.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $mid = 0;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [8, 9, 10, 2, 5, 6];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124090,
      "stdout": "3",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124089,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $low = 0;\n    $high = count($arr) - 1;\n    $n = count($arr);\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124090,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = $low + floor(($high - $low) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124090,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = min($arr);\n    $min_index = array_search($min, $arr);\n    return ($min_index + $n - 1) % $n;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124075,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprz1wo3gm.php:18\nStack trace:\n#0 /tmp/tmprz1wo3gm.php(24): test()\n#1 {main}\n  thrown in /tmp/tmprz1wo3gm.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $mid = 0;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(10, 15, 20, 0, 5);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124090,
      "stdout": "3",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $mid = 0;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124059,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd6o2z90v.php:23\nStack trace:\n#0 /tmp/tmpd6o2z90v.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpd6o2z90v.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [4, 5, 6, 7, 8, 9, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124075,
      "stdout": "6",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124075,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9kio96lp.php:23\nStack trace:\n#0 /tmp/tmp9kio96lp.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp9kio96lp.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $mid = 0;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124090,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    for ($i = 0; $i < count($arr) - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124075,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = -1;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124059,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9orgunqu.php:23\nStack trace:\n#0 /tmp/tmp9orgunqu.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp9orgunqu.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [5, 6, 7, 8, 9, 10, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124090,
      "stdout": "6",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [5, 6, 7, 8, 9, 10, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124090,
      "stdout": "6",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5t6bptp7.php:23\nStack trace:\n#0 /tmp/tmp5t6bptp7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp5t6bptp7.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $mid = 0;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [6, 7, 8, 9, 10, 1, 2, 3, 4, 5];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124104,
      "stdout": "5",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = -1;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_bfb3uej.php:23\nStack trace:\n#0 /tmp/tmp_bfb3uej.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp_bfb3uej.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $mid = 0;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = $low + ($high - $low) / 2;\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124104,
      "stdout": "\nDeprecated: Implicit conversion from float 3.5 to int loses precision in /tmp/tmpvnb2qpof.php on line 13\n\nDeprecated: Implicit conversion from float 7.5 to int loses precision in /tmp/tmpvnb2qpof.php on line 14\n\nDeprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmpvnb2qpof.php on line 15\n\nDeprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmpvnb2qpof.php on line 15\n2.5",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $mid = 0;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $mid = 0;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [8, 9, 10, 2, 5, 6];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124090,
      "stdout": "3",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $mid = 0;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = $low + ($high - $low) / 2;\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124104,
      "stdout": "\nDeprecated: Implicit conversion from float 3.5 to int loses precision in /tmp/tmpdqis0smz.php on line 13\n\nDeprecated: Implicit conversion from float 7.5 to int loses precision in /tmp/tmpdqis0smz.php on line 14\n\nDeprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmpdqis0smz.php on line 15\n\nDeprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmpdqis0smz.php on line 15\n2.5",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $mid = 0;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $prev = ($mid + $n - 1) % $n;\n        $next = ($mid + 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124104,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n\t$n = count($arr);\n\t$min = $arr[0];\n\t$min_index = 0;\n\tfor($i=0; $i<$n; $i++) {\n\t\tif($arr[$i] < $min) {\n\t\t\t$min = $arr[$i];\n\t\t\t$min_index = $i;\n\t\t}\n\t}\n\treturn $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124089,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdyn5nyrl.php:23\nStack trace:\n#0 /tmp/tmpdyn5nyrl.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpdyn5nyrl.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [5, 6, 7, 8, 9, 10, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124075,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpux8o2suf.php:23\nStack trace:\n#0 /tmp/tmpux8o2suf.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpux8o2suf.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = min($arr);\n    $min_index = array_search($min, $arr);\n    return ($min_index + $n - 1) % $n;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124075,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprz1wo3gm.php:18\nStack trace:\n#0 /tmp/tmprz1wo3gm.php(24): test()\n#1 {main}\n  thrown in /tmp/tmprz1wo3gm.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = (int) (($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\n$n = count($arr);\n$count = count_rotation($arr);\necho \"The array is rotated \" . $count . \" times\";\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124104,
      "stdout": "The array is rotated 2 times",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low < $high) {\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124104,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = -1;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\n$n = count($arr);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124090,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5pkdshzn.php:24\nStack trace:\n#0 /tmp/tmp5pkdshzn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp5pkdshzn.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $mid = 0;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124090,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = (int)($low + $high) / 2;\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124104,
      "stdout": "\nDeprecated: Implicit conversion from float 3.5 to int loses precision in /tmp/tmp8cm4tzhy.php on line 12\n\nDeprecated: Implicit conversion from float 7.5 to int loses precision in /tmp/tmp8cm4tzhy.php on line 13\n\nDeprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmp8cm4tzhy.php on line 14\n\nDeprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmp8cm4tzhy.php on line 14\n2.5",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\n$n = count($arr);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $low = 0;\n    $high = count($arr) - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = ($low + $high) / 2;\n        $next = ($mid + 1) % count($arr);\n        $prev = ($mid + count($arr) - 1) % count($arr);\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [8, 9, 10, 2, 5, 6];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124105,
      "stdout": "\nDeprecated: Implicit conversion from float 3.5 to int loses precision in /tmp/tmphdt3b_p7.php on line 11\n\nDeprecated: Implicit conversion from float 7.5 to int loses precision in /tmp/tmphdt3b_p7.php on line 12\n\nDeprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmphdt3b_p7.php on line 13\n\nDeprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmphdt3b_p7.php on line 15\n\nDeprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmphdt3b_p7.php on line 17\n\nDeprecated: Implicit conversion from float 3.5 to int loses precision in /tmp/tmphdt3b_p7.php on line 7\n3.5",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $mid = 0;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = $low + floor(($high - $low) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\n$n = count($arr);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124104,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124090,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgcwhdv1g.php:23\nStack trace:\n#0 /tmp/tmpgcwhdv1g.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpgcwhdv1g.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while($low <= $high) {\n        if($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124074,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = (int) (($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124105,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [5, 6, 7, 8, 9, 10, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124090,
      "stdout": "6",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = -1;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [4, 5, 6, 7, 8, 9, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124090,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpivn8j8dz.php:23\nStack trace:\n#0 /tmp/tmpivn8j8dz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpivn8j8dz.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    for($i = 0; $i < count($arr); $i++) {\n        if($arr[$i] > $arr[$i+1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [7, 9, 11, 12, 15];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124090,
      "stdout": "\nWarning: Undefined array key 5 in /tmp/tmp5ujd3rqq.php on line 6\n5\nWarning: Undefined array key 3 in /tmp/tmp5ujd3rqq.php on line 6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5ujd3rqq.php:24\nStack trace:\n#0 /tmp/tmp5ujd3rqq.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp5ujd3rqq.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124059,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpalv_rfip.php:23\nStack trace:\n#0 /tmp/tmpalv_rfip.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpalv_rfip.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(4, 5, 6, 7, 1, 2, 3);\n$n = count($arr);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124075,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjenkpg2d.php:24\nStack trace:\n#0 /tmp/tmpjenkpg2d.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpjenkpg2d.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124059,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd6o2z90v.php:23\nStack trace:\n#0 /tmp/tmpd6o2z90v.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpd6o2z90v.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509824,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124059,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd6o2z90v.php:23\nStack trace:\n#0 /tmp/tmpd6o2z90v.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpd6o2z90v.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [2, 3, 4, 5, 6, 7, 8, 9, 10, 1];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124090,
      "stdout": "9\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcqrpjatn.php:23\nStack trace:\n#0 /tmp/tmpcqrpjatn.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpcqrpjatn.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
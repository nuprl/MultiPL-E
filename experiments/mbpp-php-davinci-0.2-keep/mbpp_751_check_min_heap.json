{
  "name": "mbpp_751_check_min_heap",
  "language": "php",
  "prompt": "<?php\n// Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\nfunction check_min_heap($arr) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_751_check_min_heap.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return check_min_heap(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 3, 4, 5, 10, 15)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4, 5, 3, 15)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $len = count($arr);\n    for ($i = 0; $i < $len; $i++) {\n        $left_child = 2 * $i + 1;\n        $right_child = 2 * $i + 2;\n        if ($left_child < $len && $arr[$i] > $arr[$left_child]) {\n            return false;\n        }\n        if ($right_child < $len && $arr[$i] > $arr[$right_child]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr2 = [90, 15, 10, 7, 12, 2, 7];\n$arr3 = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr4 = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\nvar_dump(check_min_heap($arr));\nvar_dump(check_min_heap($arr2));\nvar_dump(check_min_heap($arr3));\nvar_dump(check_min_heap($arr4));",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nvar_dump(check_min_heap($arr));\n\n$arr = [9, 15, 10, 7, 12, 11];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'Yes' : 'No';",
    "\t$n = count($arr);\n\tfor ($i = 0; $i <= ($n - 2) / 2; $i++) {\n\t\tif ($arr[$i] > $arr[2 * $i + 1]) {\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nvar_dump(check_min_heap($arr));\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 2, 1];\nvar_dump(check_min_heap($arr));",
    "\t$n = count($arr);\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif ($arr[$i] > $arr[2 * $i + 1]) {\n\t\t\treturn false;\n\t\t}\n\t\tif ($arr[$i] > $arr[2 * $i + 2]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr2 = [90, 15, 10, 7, 12, 2, 7];\n$arr3 = [90, 15, 10, 7, 12, 2];\n$arr4 = [90, 15, 10, 7, 12];\n$arr5 = [90, 15, 10, 7];\n$arr6 = [90, 15, 10];\n$arr7 = [90, 15];\n$arr8 = [90];\n\nvar_dump(check_min_heap($arr));\nvar_dump(check_min_heap($arr2));\nvar_dump(check_min_heap($arr3));\nvar_dump(check_min_heap($arr4));\nvar_dump(check_min_heap($arr5));\nvar_dump(check_min_heap($arr6));\nvar_dump(check_min_heap($arr7));\nvar_dump(check_min_heap($arr8));",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        $left = 2 * $i + 1;\n        $right = 2 * $i + 2;\n        if ($left < $n && $arr[$i] > $arr[$left]) {\n            return false;\n        }\n        if ($right < $n && $arr[$i] > $arr[$right]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nvar_dump(check_min_heap($arr));\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($i < ($n - 2) / 2 && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [4, 2, 3, 1, 6, 0, 5];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [4, 2, 3, 1, 6, 0, 5, 7];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [4, 2, 3, 1, 6, 0, 5, 7, 8];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [4, 2, 3, 1, 6, 0, 5, 7, 8, 9];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [4, 2, 3, 1, 6, 0, 5, 7, 8, 9, 10];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [4, 2, 3, 1, 6, 0, 5, 7, 8, 9, 10",
    "    $len = count($arr);\n    for ($i = 0; $i <= ($len - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $len && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [4, 7, 10, 14, 16, 19, 21, 31, 35, 42, 47, 54, 56, 65, 70, 78];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"true\" : \"false\";\n\necho \"\\n\";\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 1];\necho check_min_heap($arr) ? \"true\" : \"false\";",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = array(90, 15, 10, 7, 12, 2, 7, 3);\n$n = count($arr);\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\";\n} else {\n    echo \"Given array is not a min heap\";\n}",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($i < ($n - 2) / 2 && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [4, 5, 6, 7, 8, 9, 10, 100, 12, 13, 14, 15, 16];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 15, 10, 5];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 15, 10, 5, 4, 3, 2, 1];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33",
    "    $size = count($arr);\n    for ($i = 0; $i < $size; $i++) {\n        $left = 2 * $i + 1;\n        $right = 2 * $i + 2;\n        if ($left < $size && $arr[$i] > $arr[$left]) {\n            return false;\n        }\n        if ($right < $size && $arr[$i] > $arr[$right]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\n$arr2 = [9, 15, 10, 7, 12, 11];\n\necho check_min_heap($arr) ? \"true\" : \"false\";\necho \"\\n\";\necho check_min_heap($arr2) ? \"true\" : \"false\";",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr1 = [9, 15, 10, 7, 12, 11];\n$arr2 = [90, 85, 100, 80];\n$arr3 = [10, 14, 19, 26, 31, 42, 27, 44, 35, 33, 35, 31, 26, 19, 21, 13, 8, 4, 1, 7, 2, 3];\n\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\necho check_min_heap($arr1) ? 'true' : 'false';\necho \"\\n\";\necho check_min_heap($arr2) ? 'true' : 'false';\necho \"\\n\";\necho check_min_heap($arr3) ? 'true' : 'false';\necho \"\\n\";",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($i < ($n - 2) / 2 && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\n",
    "    $n = count($arr);\n    for ($i = ($n - 2) / 2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';",
    "    $n = count($arr);\n    for ($i = ($n - 2) / 2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    $n = count($arr);\n    for ($i = ($n - 2) / 2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    $n = count($arr);\n    for ($i = ($n - 2) / 2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr2 = [90, 15, 10, 7, 12, 2, 7];\n$arr3 = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171,",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = array(90, 15, 10, 7, 12, 2, 7, 3);\n$n = count($arr);\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\";\n} else {\n    echo \"Given array is not a min heap\";\n}",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr1 = [9, 15, 10, 7, 12, 11];\n$arr2 = [90, 85, 100, 80];\n$arr3 = [10, 14, 19, 26, 31, 42, 27, 44, 35, 33, 35, 31];\n\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\necho check_min_heap($arr1) ? 'true' : 'false';\necho \"\\n\";\necho check_min_heap($arr2) ? 'true' : 'false';\necho \"\\n\";\necho check_min_heap($arr3) ? 'true' : 'false';\necho \"\\n\";",
    "    $size = count($arr);\n    for ($i = 0; $i <= ($size - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $size && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\n$arr2 = [9, 15, 10, 7, 12, 11];\n\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\necho check_min_heap($arr2) ? 'true' : 'false';\necho PHP_EOL;",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        $left = 2 * $i + 1;\n        $right = 2 * $i + 2;\n        if ($left < $n && $arr[$i] > $arr[$left]) {\n            return false;\n        }\n        if ($right < $n && $arr[$i] > $arr[$right]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\nvar_dump(check_min_heap($arr));\n\n$arr = [9, 15, 10, 7, 12, 11];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nvar_dump(check_min_heap($arr));\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 100];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$result = check_min_heap($arr);\necho $result ? 'true' : 'false';",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nvar_dump(check_min_heap($arr));\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = array(90, 15, 10, 7, 12, 2, 7, 3);\n$n = count($arr);\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\";\n} else {\n    echo \"Given array is not a min heap\";\n}",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$result = check_min_heap($arr);\nif ($result) {\n    echo \"Given array is a min heap\";\n} else {\n    echo \"Given array is not a min heap\";\n}",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr2 = [90, 15, 10, 7, 12, 2, 7];\n$arr3 = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5, 6, 7, 8, 9, 10];\n\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\necho check_min_heap($arr2) ? 'true' : 'false';\necho \"\\n\";\necho check_min_heap($arr3) ? 'true' : 'false';\necho \"\\n\";",
    "    $n = count($arr);\n    for ($i = ($n - 2) / 2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n$arr = [90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 15, 10, 5];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n$arr = [90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 15, 10, 5, 1];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1] || $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\n\n$arr = [90, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\n\n$arr = [90, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\n\n$arr = [90, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\n\n$arr = [90, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\n\n$arr = [90, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\n\n$arr = [90, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\n\n$arr = [90, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\n\n$arr = [90, 15, 10, 7, 12, 11];\necho check",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = array(90, 15, 10, 7, 12, 2, 7, 3);\n$n = count($arr);\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\";\n} else {\n    echo \"Given array is not a min heap\";\n}",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $arr[($i - 1) / 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\necho check_min_heap($arr) ? \"Yes\" : \"No\";",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n$arr = [90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 15, 10, 5];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n$arr = [90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 15, 10, 5, 4, 3, 2, 1];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n$arr = [90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 15, 10, 5, 4, 3, 2, 1, 0];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1] || $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"Yes\" : \"No\";",
    "    $n = count($arr);\n    for ($i = ($n - 2) / 2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr);",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nvar_dump(check_min_heap($arr));\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 4];\nvar_dump(check_min_heap($arr));",
    "    $len = count($arr);\n    for ($i = 0; $i < $len; $i++) {\n        $left = 2 * $i + 1;\n        $right = 2 * $i + 2;\n        if ($left < $len && $arr[$i] > $arr[$left]) {\n            return false;\n        }\n        if ($right < $len && $arr[$i] > $arr[$right]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$result = check_min_heap($arr);\nvar_dump($result);",
    "    $n = count($arr);\n    for ($i = ($n - 1) / 2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\n$arr1 = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\necho check_min_heap($arr1) ? 'true' : 'false';",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = array(90, 15, 10, 7, 12, 2, 7, 3);\n$n = count($arr);\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\";\n} else {\n    echo \"Given array is not a min heap\";\n}",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        $left_child = 2 * $i + 1;\n        $right_child = 2 * $i + 2;\n        if ($left_child < $n && $arr[$i] > $arr[$left_child]) {\n            return false;\n        }\n        if ($right_child < $n && $arr[$i] > $arr[$right_child]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr1 = [90, 15, 10, 7, 12, 2, 7];\n$arr2 = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n$arr3 = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100];\n\nvar_dump(check_min_heap($arr));\nvar_dump(check_min_heap($arr1));\nvar_dump(check_min_heap($arr2));\nvar_dump(check_min_heap($arr3));",
    "\t$n = count($arr);\n\tfor ($i = ($n - 1) / 2; $i >= 0; $i--) {\n\t\tif ($arr[$i] > $arr[2 * $i + 1]) {\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [4, 3, 2, 1];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [1, 2, 3, 4];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [90, 85, 100, 80, 120, 110, 70, 75, 105, 60, 115, 55, 50, 45, 40, 35, 30, 25, 20, 15, 10, 5, 65, 70, 75, 80, 85, 90, 95, 100, 105, 110, 115, 120];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [90, 85, 100, 80, 120, 110, 70, 75, 105,",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] > $arr[($i - 1) / 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = ($n - 2) / 2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1])\n            return false;\n        if ($i < ($n - 2) / 2 && $arr[$i] > $arr[2 * $i + 2])\n            return false;\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$n = count($arr);\nif (check_min_heap($arr))\n    echo \"Given array is a min heap\";\nelse\n    echo \"Given array is not a min heap\";",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] > $arr[($i - 1) / 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"Yes\" : \"No\";",
    "    $n = count($arr);\n    for ($i = ($n - 2) / 2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = ($n - 2) / 2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr);\n",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        $left = 2 * $i + 1;\n        $right = 2 * $i + 2;\n        if ($left < $n && $arr[$i] > $arr[$left]) {\n            return false;\n        }\n        if ($right < $n && $arr[$i] > $arr[$right]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr2 = [90, 15, 10, 7, 12, 2, 7];\n$arr3 = [90, 15, 10, 7, 12, 2];\n$arr4 = [90, 15, 10, 7, 12];\n$arr5 = [90, 15, 10, 7];\n$arr6 = [90, 15, 10];\n$arr7 = [90, 15];\n$arr8 = [90];\n$arr9 = [];\n\necho check_min_heap($arr) . PHP_EOL;\necho check_min_heap($arr2) . PHP_EOL;\necho check_min_heap($arr3) . PHP_EOL;\necho check_min_heap($arr4) . PHP_EOL;\necho check_min_heap($arr5) . PHP_EOL;\necho check_min_heap($arr6) . PHP_EOL;\necho check_min_heap($arr7) . PHP_EOL;\necho check_min_heap($arr8) . PHP_EOL;\necho check_min_heap($arr9) . PHP_EOL;",
    "    $n = count($arr);\n    for ($i = ($n - 2) / 2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($i > 0 && $arr[$i] > $arr[2 * $i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($i < ($n - 2) / 2 && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\n$arr1 = [9, 15, 10, 7, 12, 11];\n$arr2 = [90, 85, 80, 75, 70, 65, 60];\n$arr3 = [90, 85, 80, 75, 70, 65, 60, 55];\n$arr4 = [90, 85, 80, 75, 70, 65, 60, 55, 50];\n$arr5 = [90, 85, 80, 75, 70, 65, 60, 55, 50, 45];\n$arr6 = [90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40];\n$arr7 = [90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35];\n$arr8 = [90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30];\n$arr9 = [90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25];\n$arr10 = [90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20];\n$arr11 = [90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 15];\n$arr12 = [90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 15, 10];\n$arr13 = [90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25,",
    "    $n = count($arr);\n    for ($i = 0; $i < ($n - 1) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    $len = count($arr);\n    $last_parent_index = floor($len / 2) - 1;\n    for ($i = 0; $i <= $last_parent_index; $i++) {\n        $left_child_index = 2 * $i + 1;\n        $right_child_index = 2 * $i + 2;\n        if ($left_child_index < $len && $arr[$i] > $arr[$left_child_index]) {\n            return false;\n        }\n        if ($right_child_index < $len && $arr[$i] > $arr[$right_child_index]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\nvar_dump(check_min_heap($arr));\n\n$arr = [9, 15, 10, 7, 12, 11];\nvar_dump(check_min_heap($arr));",
    "\t$len = count($arr);\n\tfor ($i = 0; $i < $len; $i++) {\n\t\t$left = 2 * $i + 1;\n\t\t$right = 2 * $i + 2;\n\t\tif ($left < $len && $arr[$i] > $arr[$left]) {\n\t\t\treturn false;\n\t\t}\n\t\tif ($right < $len && $arr[$i] > $arr[$right]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr1 = [90, 15, 10, 7, 12, 2, 7];\n$arr2 = [90, 15, 10, 7, 12, 2];\n$arr3 = [90, 15, 10, 7, 12];\n$arr4 = [90, 15, 10, 7];\n$arr5 = [90, 15, 10];\n$arr6 = [90, 15];\n$arr7 = [90];\n$arr8 = [90, 15, 10, 7, 12, 2, 7, 3, 1];\n$arr9 = [90, 15, 10, 7, 12, 2, 7, 3, 1, 2];\n$arr10 = [90, 15, 10, 7, 12, 2, 7, 3, 1, 2, 3];\n$arr11 = [90, 15, 10, 7, 12, 2, 7, 3, 1, 2, 3, 4];\n$arr12 = [90, 15, 10, 7, 12, 2, 7, 3, 1, 2, 3, 4, 5];\n$arr13 = [90, 15, 10, 7, 12, 2, 7, 3, 1, 2, 3, 4, 5, 6];\n$arr14 = [90, 15, 10, 7, 12, 2, 7, 3, 1, 2, 3, 4, 5, 6, 7];\n$arr15 = [90, 15, 10, 7, 12, 2, 7, 3, 1, 2, 3, 4, 5, 6, 7, 8];\n$arr16 = [90, 15, 10",
    "    $n = count($arr);\n    for ($i = ($n - 2) / 2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\n\n$arr = [4, 2, 3, 1];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\n\n$arr = [4, 2, 3, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\n\n$arr = [4, 2, 3, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\n\n$arr = [4, 2, 3, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\n\n$arr = [4, 2, 3, 1, 5, 6, 7, 8, 9, 10, 11,",
    "    $n = count($arr);\n    for ($i = 0; $i < floor($n / 2); $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($i < floor($n / 2) - 1 && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\n$arr = [90, 15, 10, 7, 12, 2, 7];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\n$arr = [90, 15, 10, 7, 12, 2];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\n$arr = [90, 15, 10, 7, 12];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\n$arr = [90, 15, 10, 7];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\n$arr = [90, 15, 10];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\n$arr = [90, 15];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\n$arr = [90];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\n$arr = [];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($i < ($n - 2) / 2 && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = array(90, 15, 10, 7, 12, 2, 7, 3);\n$n = count($arr);\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\";\n} else {\n    echo \"Given array is not a min heap\";\n}",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n$arr = [4, 3, 2, 1];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n$arr = [1, 2, 3, 4];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n$arr = [1, 2, 3, 4, 5];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n$arr = [5, 4, 3, 2, 1];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";",
    "\t$n = count($arr);\n\tfor ($i = ($n-2)/2; $i >= 0; $i--) {\n\t\tif ($arr[$i] > $arr[2*$i+1]) {\n\t\t\treturn false;\n\t\t}\n\t\tif ($2*$i+2 < $n && $arr[$i] > $arr[2*$i+2]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($i < ($n - 2) / 2 && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'Yes' : 'No';\necho PHP_EOL;\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? 'Yes' : 'No';\necho PHP_EOL;\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'Yes' : 'No';\necho PHP_EOL;\n\n$arr = [4, 3, 2, 1];\necho check_min_heap($arr) ? 'Yes' : 'No';\necho PHP_EOL;\n\n$arr = [1, 2, 3, 4];\necho check_min_heap($arr) ? 'Yes' : 'No';\necho PHP_EOL;\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\necho check_min_heap($arr) ? 'Yes' : 'No';\necho PHP_EOL;\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'Yes' : 'No';\necho PHP_EOL;\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'Yes' : 'No';\necho PHP_EOL;\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] > $arr[($i - 1) / 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\\n\";\n} else {\n    echo \"Given array is not a min heap\\n\";\n}\n\n$arr = [9, 15, 10, 7, 12, 11];\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\\n\";\n} else {\n    echo \"Given array is not a min heap\\n\";\n}",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        $left = 2 * $i + 1;\n        $right = 2 * $i + 2;\n        if ($left < $n && $arr[$i] > $arr[$left]) {\n            return false;\n        }\n        if ($right < $n && $arr[$i] > $arr[$right]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nvar_dump(check_min_heap($arr));\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 1];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [4, 3, 2, 1];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";",
    "    $len = count($arr);\n    for ($i = 0; $i < $len; $i++) {\n        $left = 2 * $i + 1;\n        $right = 2 * $i + 2;\n        if ($left < $len && $arr[$i] > $arr[$left]) {\n            return false;\n        }\n        if ($right < $len && $arr[$i] > $arr[$right]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\nvar_dump(check_min_heap($arr));\n\n$arr = [9, 15, 10, 7, 12, 11];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = ($n-2)/2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2*$i+1]) {\n            return false;\n        }\n        if ($2*$i+2 < $n && $arr[$i] > $arr[2*$i+2]) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        $left = 2 * $i + 1;\n        $right = 2 * $i + 2;\n        if ($left < $n && $arr[$i] > $arr[$left]) {\n            return false;\n        }\n        if ($right < $n && $arr[$i] > $arr[$right]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\necho check_min_heap($arr) ? \"Yes\" : \"No\";",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = array(90, 15, 10, 7, 12, 2, 7, 3);\n$n = count($arr);\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\";\n} else {\n    echo \"Given array is not a min heap\";\n}",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\n\n$arr = [90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 15, 10, 5, 0];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\n\n$arr = [90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 15, 10, 5];\necho check_min_heap($arr) ? \"Yes\" : \"No\";",
    "    $n = count($arr);\n    for ($i = ($n - 2) / 2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';",
    "    $len = count($arr);\n    for ($i = 0; $i <= ($len - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nvar_dump(check_min_heap($arr));\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 4];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = ($n - 2) / 2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';",
    "    $n = count($arr);\n    for ($i = ($n - 1) / 2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($i > 0 && $arr[$i] > $arr[2 * $i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 4];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr1 = [90, 15, 10, 7, 12, 2, 7, 3, 4];\n$arr2 = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5];\n$arr3 = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5, 6];\n$arr4 = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5, 6, 7];\n$arr5 = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5, 6, 7, 8];\n$arr6 = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5, 6, 7, 8, 9];\n$arr7 = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr8 = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$arr9 = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n$arr10 = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n$arr11 = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n$arr12 = [90, 15, 10, 7, 12, 2, 7, 3",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($i < ($n - 2) / 2 && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\";\n} else {\n    echo \"Given array is not a min heap\";\n}\n",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        $left = 2 * $i + 1;\n        $right = 2 * $i + 2;\n        if ($left < $n && $arr[$i] > $arr[$left]) {\n            return false;\n        }\n        if ($right < $n && $arr[$i] > $arr[$right]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr2 = [90, 15, 10, 7, 12, 2, 7];\n$arr3 = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n$arr4 = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100];\n\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\necho check_min_heap($arr2) ? 'true' : 'false';\necho PHP_EOL;\necho check_min_heap($arr3) ? 'true' : 'false';\n",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\n$arr1 = [9, 15, 10, 7, 12, 11];\nvar_dump(check_min_heap($arr));\nvar_dump(check_min_heap($arr1));",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        if (2 * $i + 1 < $n && $arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nvar_dump(check_min_heap($arr));\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 1];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        $left = 2 * $i + 1;\n        $right = 2 * $i + 2;\n        if ($left < $n && $arr[$i] > $arr[$left]) {\n            return false;\n        }\n        if ($right < $n && $arr[$i] > $arr[$right]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr1 = [9, 15, 10, 7, 12, 11];\n$arr2 = [90, 85, 100, 80];\n$arr3 = [10, 14, 19, 26, 31, 42, 27, 44, 35, 33, 35, 31];\n\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\necho check_min_heap($arr1) ? 'true' : 'false';\necho \"\\n\";\necho check_min_heap($arr2) ? 'true' : 'false';\necho \"\\n\";\necho check_min_heap($arr3) ? 'true' : 'false';\necho \"\\n\";",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($i < ($n - 2) / 2 && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\n\necho PHP_EOL;\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\";\n} else {\n    echo \"Given array is not a min heap\";\n}",
    "    $n = count($arr);\n    for ($i = ($n - 2) / 2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';\n\necho PHP_EOL;\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? 'true' : 'false';\n\necho PHP_EOL;\n\n$arr = [9, 15, 10, 7, 12, 11, -1];\necho check_min_heap($arr) ? 'true' : 'false';",
    "    $n = count($arr);\n    for ($i = ($n - 2) / 2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nvar_dump(check_min_heap($arr));\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 4];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr2 = [90, 15, 10, 7, 12, 2, 7, 3, 4];\n\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\necho check_min_heap($arr2) ? 'true' : 'false';",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($i < ($n - 2) / 2 && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\nvar_dump(check_min_heap($arr));\n\n$arr = [9, 15, 10, 7, 12, 11];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr1 = [9, 15, 10, 7, 12, 11];\n$arr2 = [90, 85, 80, 75, 70, 65, 60];\n$arr3 = [4, 1, 3, 2, 16, 9, 10, 14, 8, 7];\n\nvar_dump(check_min_heap($arr));\nvar_dump(check_min_heap($arr1));\nvar_dump(check_min_heap($arr2));\nvar_dump(check_min_heap($arr3));",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\nvar_dump(check_min_heap($arr));\n\n$arr = [9, 15, 10, 7, 12, 11];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\n$arr = [9, 15, 10, 7, 12, 11];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($i < ($n - 2) / 2 && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = array(90, 15, 10, 7, 12, 2, 7, 3);\n$n = count($arr);\nif (check_min_heap($arr)) {\n    echo \"Given array is a min Heap\";\n} else {\n    echo \"Given array is not a min Heap\";\n}",
    "    $n = count($arr);\n    for ($i = 0; $i < ($n - 1) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [4, 3, 2, 1];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [1, 2, 3, 4];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' :",
    "    $len = count($arr);\n    for ($i = 0; $i < $len; $i++) {\n        $left = 2 * $i + 1;\n        $right = 2 * $i + 2;\n        if ($left < $len && $arr[$i] > $arr[$left]) {\n            return false;\n        }\n        if ($right < $len && $arr[$i] > $arr[$right]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"Yes\" : \"No\";",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] > $arr[$i * 2 + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[$i * 2 + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nvar_dump(check_min_heap($arr));\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 1];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] > $arr[($i - 1) / 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    $n = count($arr);\n    for($i = ($n-2)/2; $i >= 0; $i--) {\n        if($arr[$i] > $arr[2*$i+1] || $arr[$i] > $arr[2*$i+2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\nvar_dump(check_min_heap($arr));\n\n$arr = [9, 15, 10, 7, 12, 11];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n) {\n            if ($arr[$i] > $arr[2 * $i + 2]) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';",
    "    $n = count($arr);\n    for ($i = ($n-2)/2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2*$i + 1] || ($arr[$i] > $arr[2*$i + 2] && 2*$i + 2 < $n)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"true\" : \"false\";\necho \"\\n\";\n$arr = [90, 15, 10, 7, 12, 2, 7];\necho check_min_heap($arr) ? \"true\" : \"false\";\necho \"\\n\";\n$arr = [90, 15, 10, 7, 12, 2];\necho check_min_heap($arr) ? \"true\" : \"false\";\necho \"\\n\";\n$arr = [90, 15, 10, 7, 12];\necho check_min_heap($arr) ? \"true\" : \"false\";\necho \"\\n\";\n$arr = [90, 15, 10, 7];\necho check_min_heap($arr) ? \"true\" : \"false\";\necho \"\\n\";\n$arr = [90, 15, 10];\necho check_min_heap($arr) ? \"true\" : \"false\";\necho \"\\n\";\n$arr = [90, 15];\necho check_min_heap($arr) ? \"true\" : \"false\";\necho \"\\n\";\n$arr = [90];\necho check_min_heap($arr) ? \"true\" : \"false\";\necho \"\\n\";\n$arr = [];\necho check_min_heap($arr) ? \"true\" : \"false\";\necho \"\\n\";",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        $left = 2 * $i + 1;\n        $right = 2 * $i + 2;\n        if ($left < $n && $arr[$i] > $arr[$left]) {\n            return false;\n        }\n        if ($right < $n && $arr[$i] > $arr[$right]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr);\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr);",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        $left = 2 * $i + 1;\n        $right = 2 * $i + 2;\n        if ($left < $n && $arr[$i] > $arr[$left]) {\n            return false;\n        }\n        if ($right < $n && $arr[$i] > $arr[$right]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr1 = [9, 15, 10, 7, 12, 11];\n$arr2 = [90, 85, 100, 80];\n$arr3 = [3, 5, 9, 6, 8, 20, 10, 12, 18, 9];\n\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\necho check_min_heap($arr1) ? 'true' : 'false';\necho \"\\n\";\necho check_min_heap($arr2) ? 'true' : 'false';\necho \"\\n\";\necho check_min_heap($arr3) ? 'true' : 'false';",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($i < ($n - 2) / 2 && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr = [9, 15, 10, 7, 12, 11];\n$arr = [90, 15, 10, 7, 12, 2];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr = [90, 15",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = array(90, 15, 10, 7, 12, 2, 7, 3);\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\";\n} else {\n    echo \"Given array is not a min heap\";\n}",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho PHP_EOL;\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho PHP_EOL;\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho PHP_EOL;\n\n$arr = [90, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho PHP_EOL;\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho PHP_EOL;",
    "\t$n = count($arr);\n\tfor($i = 0; $i < ($n - 2)/2; $i++) {\n\t\tif($arr[$i] > $arr[2*$i + 1] || $arr[$i] > $arr[2*$i + 2]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\necho check_min_heap($arr) ? \"true\" : \"false\";\n",
    "    $n = count($arr);\n    for ($i = 0; $i < floor($n / 2); $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr1 = [9, 15, 10, 7, 12, 11];\n$arr2 = [90, 85, 100, 80];\n$arr3 = [3, 5, 9, 6, 8, 20, 10, 12, 18, 9];\n\necho check_min_heap($arr) ? \"true\" : \"false\";\necho \"\\n\";\necho check_min_heap($arr1) ? \"true\" : \"false\";\necho \"\\n\";\necho check_min_heap($arr2) ? \"true\" : \"false\";\necho \"\\n\";\necho check_min_heap($arr3) ? \"true\" : \"false\";\necho \"\\n\";",
    "    $n = count($arr);\n    for ($i = ($n-2)/2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2*$i+1] || $arr[$i] > $arr[2*$i+2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        $left = 2 * $i + 1;\n        $right = 2 * $i + 2;\n        if ($left < $n && $arr[$i] > $arr[$left]) {\n            return false;\n        }\n        if ($right < $n && $arr[$i] > $arr[$right]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr2 = [90, 15, 10, 7, 12, 2, 7];\n$arr3 = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr4 = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n$arr5 = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100];\n\nvar_dump(check_min_heap($arr));\nvar_dump(check_min_heap($arr2));\nvar_dump(check_min_",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';\n\necho PHP_EOL;\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? 'true' : 'false';\n\necho PHP_EOL;\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';\n\necho PHP_EOL;\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? 'true' : 'false';\n\necho PHP_EOL;",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($i < ($n - 2) / 2 && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr1 = [9, 15, 10, 7, 12, 11];\n$arr2 = [90, 85, 100, 80];\n$arr3 = [10, 14, 19, 26, 31, 42, 27, 44, 35, 33, 35, 31, 26, 19, 21, 16];\n$arr4 = [90, 15, 10, 7, 12, 2];\n$arr5 = [90, 15, 10, 7, 12, 2, 7, 3];\n\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\necho check_min_heap($arr1) ? 'true' : 'false';\necho PHP_EOL;\necho check_min_heap($arr2) ? 'true' : 'false';\necho PHP_EOL;\necho check_min_heap($arr3) ? 'true' : 'false';\necho PHP_EOL;\necho check_min_heap($arr4) ? 'true' : 'false';\necho PHP_EOL;\necho check_min_heap($arr5) ? 'true' : 'false';\necho PHP_EOL;",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($i < ($n - 2) / 2 && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nvar_dump(check_min_heap($arr));\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 1];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\\n\";\n} else {\n    echo \"Given array is not a min heap\\n\";\n}\n\n$arr = [9, 15, 10, 7, 12, 11];\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\\n\";\n} else {\n    echo \"Given array is not a min heap\\n\";\n}",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = array(90, 15, 10, 7, 12, 2, 7, 3);\n$n = count($arr);\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\";\n} else {\n    echo \"Given array is not a min heap\";\n}",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\n$result = check_min_heap($arr);\nif ($result) {\n    echo \"Given array is a min heap\";\n} else {\n    echo \"Given array is not a min heap\";\n}",
    "    $len = count($arr);\n    for ($i = 0; $i < $len; $i++) {\n        $left = 2 * $i + 1;\n        $right = 2 * $i + 2;\n        if ($left < $len && $arr[$i] > $arr[$left]) {\n            return false;\n        }\n        if ($right < $len && $arr[$i] > $arr[$right]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\n\n$arr = [90, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\n\n$arr = [90, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\n\n$arr = [90, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\n\n$arr = [90, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\n\n$arr = [90, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\n\n$arr = [90, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? 'true' : 'false';",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($i < ($n - 2) / 2 && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\n$arr1 = [9, 15, 10, 7, 12, 11];\n\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\necho check_min_heap($arr1) ? \"Yes\" : \"No\";",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\nvar_dump(check_min_heap($arr));\n\n$arr = [9, 15, 10, 7, 12, 11];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';\n\necho PHP_EOL;\n\n$arr = [90, 15, 10, 7, 12, 2, 7];\necho check_min_heap($arr) ? 'true' : 'false';",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = array(90, 15, 10, 7, 12, 2, 7, 3);\n$n = count($arr);\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\";\n} else {\n    echo \"Given array is not a min heap\";\n}",
    "    $n = count($arr);\n    for ($i = ($n - 2) / 2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\n",
    "    $n = count($arr);\n    for ($i = ($n - 1) / 2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "\t$n = count($arr);\n\tfor ($i = ($n - 2) / 2; $i >= 0; $i--) {\n\t\tif ($arr[$i] > $arr[2 * $i + 1] || ($arr[$i] > $arr[2 * $i + 2] && 2 * $i + 2 < $n)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr2 = [90, 15, 10, 7, 12, 2, 7];\n$arr3 = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr4 = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\necho check_min_heap($arr) ? \"true\\n\" : \"false\\n\";\necho check_min_heap($arr2) ? \"true\\n\" : \"false\\n\";\necho check_min_heap($arr3) ? \"true\\n\" : \"false\\n\";\necho check_min_heap($arr4) ? \"true\\n\" : \"false\\n\";",
    "    $n = count($arr);\n    for ($i = 0; $i < ($n - 1) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';",
    "    $n = count($arr);\n    for ($i = ($n - 2) / 2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\nvar_dump(check_min_heap($arr));\n\n$arr = [9, 15, 10, 7, 12, 11];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"true\" : \"false\";\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"true\" : \"false\";\necho \"\\n\";\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"true\" : \"false\";\necho \"\\n\";\n\n$arr = [4, 3, 2, 1];\necho check_min_heap($arr) ? \"true\" : \"false\";\necho \"\\n\";\n\n$arr = [1, 2, 3, 4];\necho check_min_heap($arr) ? \"true\" : \"false\";\necho \"\\n\";\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\necho check_min_heap($arr) ? \"true\" : \"false\";\necho \"\\n\";\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"true\" : \"false\";\necho \"\\n\";\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"true\" : \"false\";\necho \"\\n\";\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"true\" : \"false\";\necho \"\\n\";\n\n$arr = [90",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = ($n - 2) / 2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($i > 0 && $arr[$i] > $arr[2 * $i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [9, 4, 3, 7, 6, 5];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [9, 4, 3, 7, 6, 5, 1];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr1 = [9, 15, 10, 7, 12, 11];\n\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\necho check_min_heap($arr1) ? 'true' : 'false';",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr1 = [90, 15, 10, 7, 12, 2, 7];\n$arr2 = [90, 15, 10, 7, 12, 2, 7, 3, 1];\n$arr3 = [90, 15, 10, 7, 12, 2, 7, 3, 1, 2];\n\nvar_dump(check_min_heap($arr));\nvar_dump(check_min_heap($arr1));\nvar_dump(check_min_heap($arr2));\nvar_dump(check_min_heap($arr3));",
    "    $size = count($arr);\n    for ($i = 0; $i <= ($size - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $size && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nvar_dump(check_min_heap($arr));\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 1];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\necho check_min_heap($arr) ? \"true\" : \"false\";\n\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"true\" : \"false\";",
    "    $n = count($arr);\n    for ($i = ($n - 2) / 2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"Yes\" : \"No\";",
    "    $n = count($arr);\n    $i = 0;\n    while ($i < $n) {\n        if ($arr[$i] > $arr[2*$i+1] || $arr[$i] > $arr[2*$i+2]) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\";\n} else {\n    echo \"Given array is not a min heap\";\n}",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr1 = [9, 15, 10, 7, 12, 11];\n$arr2 = [90, 85, 100, 80];\n$arr3 = [3, 5, 9, 6, 8, 20, 10, 12, 18, 9];\n\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\necho check_min_heap($arr1) ? 'true' : 'false';\necho \"\\n\";\necho check_min_heap($arr2) ? 'true' : 'false';\necho \"\\n\";\necho check_min_heap($arr3) ? 'true' : 'false';\necho \"\\n\";",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($i < ($n - 2) / 2 && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr2 = [90, 15, 10, 7, 12, 2, 7];\n$arr3 = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5, 6, 7, 8, 9, 10];\n\nvar_dump(check_min_heap($arr));\nvar_dump(check_min_heap($arr2));\nvar_dump(check_min_heap($arr3));",
    "    $n = count($arr);\n    for ($i = ($n - 2) / 2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [4, 1, 3, 2, 16, 9, 10, 14, 8, 7];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";",
    "    $size = count($arr);\n    for ($i = 0; $i <= ($size - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $size && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';",
    "    $n = count($arr);\n    for ($i = ($n - 2) / 2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nvar_dump(check_min_heap($arr));\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 1];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nvar_dump(check_min_heap($arr));\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 1];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr1 = [90, 15, 10, 7, 12, 2, 7];\n$arr2 = [90, 15, 10, 7, 12, 2];\n$arr3 = [90, 15, 10, 7, 12];\n$arr4 = [90, 15, 10, 7];\n$arr5 = [90, 15, 10];\n$arr6 = [90, 15];\n$arr7 = [90];\n$arr8 = [];\n\necho check_min_heap($arr) ? \"true\" : \"false\";\necho \"\\n\";\necho check_min_heap($arr1) ? \"true\" : \"false\";\necho \"\\n\";\necho check_min_heap($arr2) ? \"true\" : \"false\";\necho \"\\n\";\necho check_min_heap($arr3) ? \"true\" : \"false\";\necho \"\\n\";\necho check_min_heap($arr4) ? \"true\" : \"false\";\necho \"\\n\";\necho check_min_heap($arr5) ? \"true\" : \"false\";\necho \"\\n\";\necho check_min_heap($arr6) ? \"true\" : \"false\";\necho \"\\n\";\necho check_min_heap($arr7) ? \"true\" : \"false\";\necho \"\\n\";\necho check_min_heap($arr8) ? \"true\" : \"false\";\necho \"\\n\";",
    "    $n = count($arr);\n    for ($i = 0; $i < ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = array(90, 15, 10, 7, 12, 2, 7, 3);\n$n = count($arr);\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\";\n} else {\n    echo \"Given array is not a min heap\";\n}",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\n\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($i < ($n - 2) / 2 && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr1 = [9, 15, 10, 7, 12, 11];\n\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho PHP_EOL;\necho check_min_heap($arr1) ? \"Yes\" : \"No\";",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"Given array is a min heap\" : \"Given array is not a min heap\";",
    "    $n = count($arr);\n    for ($i = 0; $i < ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\n$arr1 = [9, 15, 10, 7, 12, 11];\n\necho check_min_heap($arr) ? \"true\" : \"false\";\necho \"\\n\";\necho check_min_heap($arr1) ? \"true\" : \"false\";",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\";\n} else {\n    echo \"Given array is not a min heap\";\n}",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\n",
    "    $len = count($arr);\n    for ($i = ($len - 1) / 2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if (2 * $i + 2 < $len && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\necho check_min_heap($arr) ? \"Yes\" : \"No\";",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        $left = 2 * $i + 1;\n        $right = 2 * $i + 2;\n        if ($left < $n && $arr[$i] > $arr[$left]) {\n            return false;\n        }\n        if ($right < $n && $arr[$i] > $arr[$right]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr1 = [9, 15, 10, 7, 12, 11];\n$arr2 = [90, 85, 100, 80];\n$arr3 = [10, 14, 19, 26, 31, 42, 27, 44, 35, 33, 35, 31];\n\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\necho check_min_heap($arr1) ? 'true' : 'false';\necho PHP_EOL;\necho check_min_heap($arr2) ? 'true' : 'false';\necho PHP_EOL;\necho check_min_heap($arr3) ? 'true' : 'false';\necho PHP_EOL;",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\nvar_dump(check_min_heap($arr));\n\n$arr = [9, 15, 10, 7, 12, 11];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] > $arr[($i - 1) / 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\nvar_dump(check_min_heap($arr));\n\n$arr = [9, 15, 10, 7, 12, 11];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = ($n - 2) / 2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2 * $i + 1] || ($arr[2 * $i + 2] && $arr[$i] > $arr[2 * $i + 2])) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\";\n} else {\n    echo \"Given array is not a min heap\";\n}",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nvar_dump(check_min_heap($arr));\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 1];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        $left = 2 * $i + 1;\n        $right = 2 * $i + 2;\n        if ($left < $n && $arr[$i] > $arr[$left]) {\n            return false;\n        }\n        if ($right < $n && $arr[$i] > $arr[$right]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\n$arr2 = [9, 15, 10, 7, 12, 11];\n\nvar_dump(check_min_heap($arr));\nvar_dump(check_min_heap($arr2));",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\";\n} else {\n    echo \"Given array is not a min heap\";\n}\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\";\n} else {\n    echo \"Given array is not a min heap\";\n}\necho \"\\n\";\n\n$arr = [9, 4, 7, 1, -2, 6, 5];\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\";\n} else {\n    echo \"Given array is not a min heap\";\n}\necho \"\\n\";\n\n$arr = [25, 20, 15, 10, 5];\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\";\n} else {\n    echo \"Given array is not a min heap\";\n}\necho \"\\n\";\n\n$arr = [90, 15, 10, 7, 12, 11, 2, 7, 3];\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\";\n} else {\n    echo \"Given array is not a min heap\";\n}\necho \"\\n\";\n\n$arr = [4, 1, 3, 2, 16, 9, 10, 14, 8, 7];\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\";\n} else {\n    echo \"Given array is not a min heap\";\n}",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($i < ($n - 2) / 2 && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\n",
    "    $n = count($arr);\n    for ($i = 0; $i < ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nvar_dump(check_min_heap($arr));\n\n$arr = [90, 15, 10, 7, 12, 2, 7];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr1 = [9, 15, 10, 7, 12, 11];\n\nvar_dump(check_min_heap($arr));\nvar_dump(check_min_heap($arr1));",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\nvar_dump(check_min_heap($arr));\n\n$arr = [9, 15, 10, 7, 12, 11];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n$arr = [4, 3, 2, 1];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n$arr = [1, 2, 3, 4];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1])\n            return false;\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2])\n            return false;\n    }\n    return true;\n}\n\n$arr = array(90, 15, 10, 7, 12, 2, 7, 3);\n$n = count($arr);\n\nif (check_min_heap($arr))\n    echo \"Given array is a min heap\";\nelse\n    echo \"Given array is not a min heap\";",
    "    $n = count($arr);\n    for ($i = 0; $i < ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr = [9, 15, 10, 7, 12, 11];\n$arr = [90, 85, 100, 80];\n$arr = [10, 20, 30, 40, 50];\n$arr = [100, 19, 36, 17];\n$arr = [19, 36, 17, 3, 25, 1, 2, 7];\n$arr = [10, 20, 30, 25, 5, 40, 35];\n$arr = [90, 15, 10, 7, 12, 2];\n$arr = [10, 20, 15, 17, 25];\n$arr = [90, 15, 10, 7, 12, 11, 14, 13, 16, 17, 19];\n$arr = [90, 15, 10, 7, 12, 11, 14, 13, 16, 17, 19, 18];\n$arr = [90, 15, 10, 7, 12, 11, 14, 13, 16, 17, 19, 18, 20];\n$arr = [90, 15, 10, 7, 12, 11, 14, 13, 16, 17, 19, 18, 20, 21];\n$arr = [90, 15, 10, 7, 12, 11, 14, 13, 16, 17, 19, 18, 20, 21, 22];\n$arr = [90, 15, 10, 7, 12, 11, 14, 13, 16, 17, 19, 18, 20, 21, 22, 23];\n$arr = [90, 15, 10, 7, 12, 11, 14, 13, 16, 17, 19, 18, 20, 21, 22, 23, 24];\n$arr = [90, 15, 10, 7, 12, 11,",
    "    $n = count($arr);\n    for ($i = ($n - 2) / 2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($i < ($n - 2) / 2 && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = array(90, 15, 10, 7, 12, 2, 7, 3);\n$n = count($arr);\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\";\n} else {\n    echo \"Given array is not a min heap\";\n}",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = array(90, 15, 10, 7, 12, 2, 7, 3);\n$n = count($arr);\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\";\n} else {\n    echo \"Given array is not a min heap\";\n}",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr2 = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\necho check_min_heap($arr2) ? 'true' : 'false';",
    "\t$n = count($arr);\n\tfor ($i = ($n - 2) / 2; $i >= 0; $i--) {\n\t\tif ($arr[$i] > $arr[2 * $i + 1]) {\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165,",
    "    $n = count($arr);\n    for ($i = 0; $i < ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "\t$n = count($arr);\n\tfor ($i = 0; $i <= ($n - 2) / 2; $i++) {\n\t\tif ($arr[$i] > $arr[2 * $i + 1]) {\n\t\t\treturn false;\n\t\t}\n\t\tif ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr2 = [90, 15, 10, 7, 12, 2, 7];\n$arr3 = [90, 15, 10, 7, 12, 2, 7, 3, 1];\necho check_min_heap($arr) . PHP_EOL;\necho check_min_heap($arr2) . PHP_EOL;\necho check_min_heap($arr3) . PHP_EOL;",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nvar_dump(check_min_heap($arr));\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$result = check_min_heap($arr);\nvar_dump($result);",
    "    $n = count($arr);\n    for ($i = 0; $i < ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [90, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" :",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = array(90, 15, 10, 7, 12, 2, 7, 3);\n$n = count($arr);\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\";\n} else {\n    echo \"Given array is not a min heap\";\n}\n",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\n$arr1 = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\necho check_min_heap($arr1) ? 'true' : 'false';",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [4, 3, 2, 1];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [1, 2, 3, 4];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [1, 2, 3, 4, 5];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [5, 4, 3, 2, 1];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [5, 4, 3, 2, 1, 0];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        $left = 2 * $i + 1;\n        $right = 2 * $i + 2;\n        if ($left < $n && $arr[$i] > $arr[$left]) {\n            return false;\n        }\n        if ($right < $n && $arr[$i] > $arr[$right]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr = [9, 15, 10, 7, 12, 11];\n$arr = [90, 15, 10, 7, 12, 11];\n$arr = [90, 85, 82, 72, 60, 50];\n$arr = [90, 85, 82, 72, 60, 50, 45];\n$arr = [90, 85, 82, 72, 60, 50, 45, 30];\n$arr = [90, 85, 82, 72, 60, 50, 45, 30, 25];\n$arr = [90, 85, 82, 72, 60, 50, 45, 30, 25, 20];\n$arr = [90, 85, 82, 72, 60, 50, 45, 30, 25, 20, 15];\n$arr = [90, 85, 82, 72, 60, 50, 45, 30, 25, 20, 15, 10];\n$arr = [90, 85, 82, 72, 60, 50, 45, 30, 25, 20, 15, 10, 5];\n$arr = [90, 85, 82, 72, 60, 50, 45, 30, 25, 20, 15, 10, 5, 2];\n$arr = [90, 85, 82, 72, 60, 50, 45, 30, 25, 20, 15, 10, 5, 2, 1];\n$arr = [90, 85, 82, 72, 60, 50, 45, 30, 25, 20, 15, 10, 5, 2, 1, 0];\n$arr = [90, 85, 82, 72, 60, 50, 45, 30, 25, 20, 15, 10, 5, 2, 1, 0",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr = [9, 15, 10, 7, 12, 11];\n$arr = [90, 15, 10, 7, 12, 2];\n$arr = [90, 15, 10, 7, 12, 2, 7];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 16, 14];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 16, 14, 8];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 16, 14, 8, 9];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 16, 14, 8, 9, 1];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 16, 14, 8, 9, 1, 20];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 16, 14, 8, 9, 1, 20, 6];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 16, 14, 8, 9, 1, 20, 6, 4];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 16, 14, 8, 9, 1, 20, 6, 4, 5];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 16, 14, 8, 9, 1, 20, 6, 4, 5, 13];\n$arr = [90, 15, 10, 7, 12, 2, 7,",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr1 = [9, 15, 10, 7, 12, 11];\n$arr2 = [90, 85, 100, 80];\n$arr3 = [3, 5, 9, 6, 8, 20, 10, 12, 18, 9];\n\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\necho check_min_heap($arr1) ? 'true' : 'false';\necho \"\\n\";\necho check_min_heap($arr2) ? 'true' : 'false';\necho \"\\n\";\necho check_min_heap($arr3) ? 'true' : 'false';\necho \"\\n\";",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n-2)/2; $i++) {\n        if ($arr[$i] > $arr[2*$i + 1]) {\n            return false;\n        }\n        if ((2*$i + 2) < $n && $arr[$i] > $arr[2*$i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\n$arr = [9, 15, 10, 7, 12, 11];\n$arr = [90, 85, 100, 80];\n$arr = [10, 14, 19, 26, 31, 42, 27, 44, 35, 33, 35, 31, 26, 19, 21, 13, 8, 4, 2, 3];\n$arr = [10, 14, 19, 26, 31, 42, 27, 44, 35, 33, 35, 31, 26, 19, 21, 13, 8, 4, 2, 3];\n$arr = [90, 15, 10, 7, 12, 2];\n$arr = [9, 15, 10, 7, 12, 11];\n$arr = [90, 85, 100, 80];\n$arr = [10, 14, 19, 26, 31, 42, 27, 44, 35, 33, 35, 31, 26, 19, 21, 13, 8, 4, 2, 3];\n$arr = [10, 14, 19, 26, 31, 42, 27, 44, 35, 33, 35, 31, 26, 19, 21, 13, 8, 4, 2, 3];\n\necho check_min_heap($arr) ? \"Yes\" : \"No\";",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"Yes\" : \"No\";",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr2 = [90, 15, 10, 7, 12, 2, 7];\n\nvar_dump(check_min_heap($arr));\nvar_dump(check_min_heap($arr2));",
    "    $n = count($arr);\n    for ($i = 0; $i < ($n - 1) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr = [9, 15, 10, 7, 12, 11];\n$arr = [90, 15, 10, 7, 12, 2];\n$arr = [90, 15, 10, 7, 12, 2, 7];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 16];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 16, 8];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 16, 8, 9];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 16, 8, 9, 14];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 16, 8, 9, 14, 1];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 16, 8, 9, 14, 1, 17];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 16, 8, 9, 14, 1, 17, 19];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 16, 8, 9, 14, 1, 17, 19, 20];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 16, 8, 9, 14, 1, 17, 19, 20, 21];\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 16, 8, 9",
    "    $n = count($arr);\n    for ($i = ($n - 2) / 2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr1 = [90, 15, 10, 7, 12, 2, 7];\n\necho check_min_heap($arr) ? \"True\" : \"False\";\necho \"\\n\";\necho check_min_heap($arr1) ? \"True\" : \"False\";"
  ]
}
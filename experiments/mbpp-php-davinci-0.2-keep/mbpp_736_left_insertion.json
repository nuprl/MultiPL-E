{
  "name": "mbpp_736_left_insertion",
  "language": "php",
  "prompt": "<?php\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion($a, $x) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_736_left_insertion.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return left_insertion(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 5), 6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 3) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 5), 7) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x == $a[$mid]) {\n            return $mid;\n        } else if ($x < $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 6, 7, 8, 9, 11, 13, 16, 18, 19, 20, 22, 24, 26, 28, 30, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99);\n$x = intval(fgets(STDIN));\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] == $x) {\n            return $m;\n        } elseif ($a[$m] > $x) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\n$result = left_insertion($a, $x);\necho \"The left insertion point for $x is $result\";",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 2, 4, 5, 6, 7, 8, 9];\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = (int) (($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99];\n$x = $argv[1];\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6, 8, 9, 10);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x == $a[$mid]) {\n            return $mid;\n        } elseif ($x < $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(2, 4, 5, 6, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x > $a[$m]) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n;\n    while ($left < $right) {\n        $mid = (int)(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $i = 0;\n    while ($i < count($a) && $a[$i] < $x) {\n        $i++;\n    }\n    return $i;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8);\n$x = 5;\necho left_insertion($a, $x);",
    "    $i = 0;\n    while ($i < count($a) && $a[$i] < $x) {\n        $i++;\n    }\n    return $i;\n}\n\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);",
    "    $l = count($a);\n    $i = 0;\n    while ($i < $l) {\n        if ($a[$i] >= $x) {\n            return $i;\n        }\n        $i++;\n    }\n    return $i;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = (int) (($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5, 6, 7, 8, 9, 10];\n$x = 3;\necho left_insertion($a, $x);",
    "    $left = 0;\n    $right = count($a) - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] >= $x) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 3, 5, 7, 9, 11);\n$x = 4;\necho left_insertion($a, $x);",
    "    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $low;\n}\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = (int)(($left + $right) / 2);\n        if ($a[$mid] < $x) {\n            $left = $mid + 1;\n        } else {\n            $right = $mid - 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9);\n$x = 3;\necho left_insertion($a, $x);",
    "    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($x > $a[$mid]) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $low;\n}\n\n$a = array(2, 4, 6, 8, 9);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x > $a[$mid]) {\n            $left = $mid + 1;\n        } else {\n            $right = $mid - 1;\n        }\n    }\n    return $left;\n}\n$a = array(2, 4, 6, 8, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x < $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = (int)(($left + $right) / 2);\n        if ($a[$mid] < $x) {\n            $left = $mid + 1;\n        } else {\n            $right = $mid;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x > $a[$mid]) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $low;\n}\n$a = [1, 2, 4, 5, 6, 7, 8, 9];\n$x = 3;\necho left_insertion($a, $x);",
    "    $i = 0;\n    while ($i < count($a) && $a[$i] < $x) {\n        $i++;\n    }\n    return $i;\n}\n\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x == $a[$mid]) {\n            return $mid;\n        } else if ($x < $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $i = 0;\n    $j = $n;\n    while ($i < $j) {\n        $k = floor(($i + $j) / 2);\n        if ($x > $a[$k]) {\n            $i = $k + 1;\n        } else {\n            $j = $k;\n        }\n    }\n    return $i;\n}\n\n$a = [1, 2, 4, 5, 6, 7, 8, 9];\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] == $x) {\n            return $m;\n        } elseif ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n$a1 = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a1, $x);\necho \"\\n\";\n$a2 = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a2, $x);\necho \"\\n\";",
    "    $i = 0;\n    $j = count($a);\n    while ($i < $j) {\n        $k = ($i + $j) / 2;\n        if ($x > $a[$k]) {\n            $i = $k + 1;\n        } else {\n            $j = $k;\n        }\n    }\n    return $i;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(2, 4, 6, 8, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    if ($x <= $a[0]) {\n        return 0;\n    }\n    if ($x > $a[$n - 1]) {\n        return $n;\n    }\n    $low = 0;\n    $high = $n - 1;\n    while ($low < $high) {\n        $mid = (int) (($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $high;\n}\n\n$a = [1, 3, 5, 7];\necho left_insertion($a, 0);\necho \"\\n\";\necho left_insertion($a, 1);\necho \"\\n\";\necho left_insertion($a, 2);\necho \"\\n\";\necho left_insertion($a, 3);\necho \"\\n\";\necho left_insertion($a, 4);\necho \"\\n\";\necho left_insertion($a, 5);\necho \"\\n\";\necho left_insertion($a, 6);\necho \"\\n\";\necho left_insertion($a, 7);\necho \"\\n\";\necho left_insertion($a, 8);\necho \"\\n\";",
    "    $i = 0;\n    while ($i < count($a) && $a[$i] < $x) {\n        $i++;\n    }\n    return $i;\n}\n\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $i = 0;\n    while ($i < $n) {\n        if ($a[$i] >= $x) {\n            break;\n        }\n        $i++;\n    }\n    return $i;\n}\n\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $low;\n}\n$a = array(2, 4, 6, 8, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x > $a[$mid]) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $low;\n}\n\n$a = array(2, 4, 6, 8, 9);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 2, 4, 5, 6, 7, 8, 9, 10];\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 6, 7, 8, 9);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    if ($x <= $a[0]) {\n        return 0;\n    }\n    if ($x > $a[$n - 1]) {\n        return $n;\n    }\n    $low = 0;\n    $high = $n - 1;\n    while ($low < $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $high;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    if ($x <= $a[0]) {\n        return 0;\n    }\n    if ($x > $a[$n - 1]) {\n        return $n;\n    }\n    $low = 0;\n    $high = $n - 1;\n    while ($low < $high) {\n        $mid = (int) (($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $high;\n}\n\n$a = array(1, 3, 5, 7);\n$x = 5;\necho left_insertion($a, $x);\necho \"\\n\";\n$x = 2;\necho left_insertion($a, $x);\necho \"\\n\";\n$x = 7;\necho left_insertion($a, $x);\necho \"\\n\";\n$x = 0;\necho left_insertion($a, $x);\necho \"\\n\";\n$x = 8;\necho left_insertion($a, $x);\necho \"\\n\";\n",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    $m = 0;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 8, 9);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x == $a[$m]) {\n            return $m;\n        }\n        if ($x < $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x < $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = (int)(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$x = 5;\n$result = left_insertion($a, $x);\necho $result;",
    "    $n = count($a);\n    for ($i = 0; $i < $n; $i++) {\n        if ($x <= $a[$i]) {\n            return $i;\n        }\n    }\n    return $n;\n}\n\n$a = array(2, 4, 6, 8, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $l = 0;\n    $r = count($a) - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5, 6, 7, 8, 9];\n$x = 3;\necho left_insertion($a, $x);",
    "    $l = 0;\n    $r = count($a) - 1;\n    while ($l < $r) {\n        $m = intdiv($l + $r, 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = (int) (($left + $right) / 2);\n        if ($a[$mid] < $x) {\n            $left = $mid + 1;\n        } else {\n            $right = $mid - 1;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$x = 5;\necho left_insertion($a, $x);\n",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9);\n$x = 3;\necho left_insertion($a, $x);",
    "    $i = 0;\n    $j = count($a) - 1;\n    while ($i < $j) {\n        $m = (int)(($i + $j) / 2);\n        if ($a[$m] < $x) {\n            $i = $m + 1;\n        } else {\n            $j = $m;\n        }\n    }\n    return $i;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);",
    "    $l = 0;\n    $r = count($a);\n    while ($l < $r) {\n        $m = (int)(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n",
    "    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($a[$mid] < $x) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $low;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    if ($x <= $a[0]) {\n        return 0;\n    }\n    if ($x > $a[$n - 1]) {\n        return $n;\n    }\n    $low = 0;\n    $high = $n - 1;\n    while ($low < $high) {\n        $mid = (int) (($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $high;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);",
    "    $i = 0;\n    while ($i < count($a) && $a[$i] < $x) {\n        $i++;\n    }\n    return $i;\n}\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = (int)(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    if ($x < $a[0]) {\n        return 0;\n    }\n    if ($x > $a[$n - 1]) {\n        return $n;\n    }\n    $low = 0;\n    $high = $n - 1;\n    while ($low < $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $high;\n}\n\n$a = array(1, 2, 4, 6, 7, 9, 11, 13, 15, 17, 19, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100);\n$x = 4;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    if ($x <= $a[0]) {\n        return 0;\n    }\n    if ($x > $a[$n-1]) {\n        return $n;\n    }\n    $low = 0;\n    $high = $n - 1;\n    while ($low < $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $high;\n}\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x == $a[$mid]) {\n            return $mid;\n        } else if ($x < $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$x = intval(fgets(STDIN));\necho left_insertion($a, $x);",
    "    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x > $a[$mid]) {\n            $low = $mid + 1;\n        } elseif ($x < $a[$mid]) {\n            $high = $mid - 1;\n        } else {\n            return $mid;\n        }\n    }\n    return $low;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $low;\n}\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n;\n    while ($left < $right) {\n        $mid = (int)(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(2, 4, 5, 6, 9);\n$x = 5;\necho left_insertion($a, $x);\n",
    "    $left = 0;\n    $right = count($a) - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($a[$mid] < $x) {\n            $left = $mid + 1;\n        } else {\n            $right = $mid;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = (int)(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x == $a[$mid]) {\n            return $mid;\n        } else if ($x < $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x == $a[$mid]) {\n            return $mid;\n        } else if ($x < $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n$a = array(2, 3, 4, 10, 40);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = ($l + $r) / 2;\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100];\n$x = 10;\necho left_insertion($a, $x);",
    "    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $low;\n}\n\n$a = array(2, 4, 6, 8, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = (int)(($left + $right) / 2);\n        if ($a[$mid] < $x) {\n            $left = $mid + 1;\n        } else {\n            $right = $mid;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    if ($x <= $a[0]) {\n        return 0;\n    }\n    if ($x > $a[$n-1]) {\n        return $n;\n    }\n    $low = 0;\n    $high = $n - 1;\n    while ($low < $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $high;\n}\n\n$a = [1, 3, 5, 7];\n$x = 5;\necho left_insertion($a, $x);\necho \"\\n\";\n\n$a = [1, 3, 5, 7];\n$x = -1;\necho left_insertion($a, $x);\necho \"\\n\";\n\n$a = [1, 3, 5, 7];\n$x = 10;\necho left_insertion($a, $x);\necho \"\\n\";\n\n$a = [1, 3, 5, 7];\n$x = 2;\necho left_insertion($a, $x);\necho \"\\n\";\n\n$a = [1, 3, 5, 7];\n$x = 4;\necho left_insertion($a, $x);\necho \"\\n\";\n\n$a = [1, 3, 5, 7];\n$x = 6;\necho left_insertion($a, $x);\necho \"\\n\";\n\n$a = [1, 3, 5, 7];\n$x = 8;\necho left_insertion($a, $x);\necho \"\\n\";\n\n$a = [1, 3, 5, 7];\n$x = 0;\necho left_insertion($a, $x);\necho \"\\n\";\n\n$a = [1, 3, 5, 7];\n$x = 1;\necho left_insertion($a, $x);\necho \"\\n\";\n\n$a = [1, 3, 5, 7];\n$x = 3;\necho left_insertion($a, $x",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] == $x) {\n            return $m;\n        } else if ($a[$m] > $x) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = (int) (($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9);\n$x = 3;\necho left_insertion($a, $x);",
    "    $i = 0;\n    while ($i < count($a)) {\n        if ($a[$i] >= $x) {\n            return $i;\n        }\n        $i++;\n    }\n    return $i;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x == $a[$mid]) {\n            return $mid;\n        } elseif ($x < $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);",
    "    $i = 0;\n    while ($i < count($a) && $a[$i] < $x) {\n        $i++;\n    }\n    return $i;\n}\n",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = (int)(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n$a = array(2, 4, 6, 8, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n;\n    while ($left < $right) {\n        $mid = (int)(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(2, 4, 6, 8, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m;\n        }\n    }\n    return $l;\n}\n",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($a[$mid] < $x) {\n            $left = $mid + 1;\n        } else {\n            $right = $mid - 1;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = (int)(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = (int) (($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = (int)(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n;\n    while ($left < $right) {\n        $mid = (int) (($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x == $a[$m]) {\n            return $m;\n        } else if ($x < $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);",
    "    $left = 0;\n    $right = count($a) - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($a[$mid] < $x) {\n            $left = $mid + 1;\n        } else {\n            $right = $mid - 1;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 2, 4, 5, 6, 7, 8, 9, 10];\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] == $x) {\n            return $m;\n        } else if ($a[$m] > $x) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);",
    "\t$n = count($a);\n\t$l = 0;\n\t$r = $n - 1;\n\twhile ($l < $r) {\n\t\t$m = floor(($l + $r) / 2);\n\t\tif ($x <= $a[$m]) {\n\t\t\t$r = $m;\n\t\t} else {\n\t\t\t$l = $m + 1;\n\t\t}\n\t}\n\treturn $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 2, 4, 5, 6, 7, 8, 9, 10];\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x > $a[$m]) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);",
    "    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $low;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $i = 0;\n    while ($i < count($a) && $a[$i] < $x) {\n        $i++;\n    }\n    return $i;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$x = 5;\necho left_insertion($a, $x);",
    "    $left = 0;\n    $right = count($a);\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(2, 4, 5, 6, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($a[$mid] < $x) {\n            $left = $mid + 1;\n        } else {\n            $right = $mid;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);",
    "    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x > $a[$mid]) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $low;\n}\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);\n",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $left = 0;\n    $right = count($a) - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($a[$mid] < $x) {\n            $left = $mid + 1;\n        } else {\n            $right = $mid - 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x > $a[$m]) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 7, 8, 9);\n$x = 5;\necho \"Original array :\\n\";\necho implode(', ', $a);\necho \"\\n\";\necho \"Value to insert : $x\\n\";\necho \"The insertion point for $x is : \" . left_insertion($a, $x);\necho \"\\n\";",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] == $x) {\n            return $m;\n        } elseif ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($a[$mid] < $x) {\n            $left = $mid + 1;\n        } else {\n            $right = $mid - 1;\n        }\n    }\n    return $left;\n}\n$a = array(1, 2, 4, 5, 6, 7, 8, 9);\n$x = 3;\necho left_insertion($a, $x);",
    "    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $low;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n$arr = array(1, 2, 4, 6, 8, 9, 10);\n$x = 5;\necho left_insertion($arr, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $mid = floor(($l + $r) / 2);\n        if ($a[$mid] == $x) {\n            return $mid;\n        } else if ($x < $a[$mid]) {\n            $r = $mid - 1;\n        } else {\n            $l = $mid + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = (int)(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x == $a[$mid]) {\n            return $mid;\n        } elseif ($x < $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);",
    "    $left = 0;\n    $right = count($a);\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($a[$mid] < $x) {\n            $left = $mid + 1;\n        } else {\n            $right = $mid;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);",
    "    $i = 0;\n    while ($i < count($a) && $a[$i] < $x) {\n        $i++;\n    }\n    return $i;\n}\n\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x == $a[$mid]) {\n            return $mid;\n        } elseif ($x < $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($a[$mid] < $x) {\n            $left = $mid + 1;\n        } else {\n            $right = $mid - 1;\n        }\n    }\n    return $left;\n}\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);",
    "\t$n = count($a);\n\t$l = 0;\n\t$r = $n - 1;\n\twhile ($l < $r) {\n\t\t$m = floor(($l + $r) / 2);\n\t\tif ($a[$m] < $x) {\n\t\t\t$l = $m + 1;\n\t\t} else {\n\t\t\t$r = $m;\n\t\t}\n\t}\n\treturn $l;\n}\n\n$a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = (int)(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9);\n$x = 5;\necho left_insertion($a, $x);",
    "    $low = 0;\n    $high = count($a) - 1;\n    $mid = 0;\n    while ($low < $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $low;\n}\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);",
    "    $i = 0;\n    while ($i < count($a) && $a[$i] < $x) {\n        $i++;\n    }\n    return $i;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9);\n$x = 3;\necho left_insertion($a, $x);",
    "    $i = 0;\n    while ($i < count($a) && $a[$i] < $x) {\n        $i++;\n    }\n    return $i;\n}\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);",
    "    $l = 0;\n    $r = count($a) - 1;\n    while ($l < $r) {\n        $m = (int)(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x < $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = (int)(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\necho left_insertion($a, $x);",
    "    $i = 0;\n    while ($i < count($a) && $a[$i] < $x) {\n        $i++;\n    }\n    return $i;\n}\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(2, 4, 5, 6, 9);\n$x = 5;\necho left_insertion($a, $x);\n",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = (int)(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($a[$mid] == $x) {\n            return $mid;\n        } elseif ($a[$mid] > $x) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = intval(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5, 6, 7, 8, 9];\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = (int)(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $i = 0;\n    while ($i < count($a) && $a[$i] < $x) {\n        $i++;\n    }\n    return $i;\n}\n\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);\n",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = (int)(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    if ($x <= $a[0]) {\n        return 0;\n    }\n    if ($x > $a[$n - 1]) {\n        return $n;\n    }\n    $low = 0;\n    $high = $n - 1;\n    while ($low < $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $high;\n}\n\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n;\n    while ($l < $r) {\n        $m = intdiv($l + $r, 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);",
    "    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x > $a[$mid]) {\n            $low = $mid + 1;\n        } elseif ($x < $a[$mid]) {\n            $high = $mid - 1;\n        } else {\n            return $mid;\n        }\n    }\n    return $low;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = (int)(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9);\n$x = 3;\necho left_insertion($a, $x);",
    "    $l = 0;\n    $r = count($a) - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5, 6, 7, 9];\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $low;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\necho left_insertion($a, $x);\n",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l < $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5, 6, 7, 8, 9, 10];\n$x = 3;\necho left_insertion($a, $x);",
    "    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $low;\n}\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\n$result = left_insertion($a, $x);\necho \"The left insertion point for $x is $result\";",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = ($left + $right) / 2;\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] >= $x) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5, 6, 7, 8, 9];\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $i = 0;\n    while ($i < $n) {\n        if ($x <= $a[$i]) {\n            return $i;\n        }\n        $i++;\n    }\n    return $n;\n}\n\n$a = array(1, 2, 5, 7, 9, 10);\n$x = 6;\necho left_insertion($a, $x);",
    "    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x > $a[$mid]) {\n            $low = $mid + 1;\n        } elseif ($x < $a[$mid]) {\n            $high = $mid - 1;\n        } else {\n            return $mid;\n        }\n    }\n    return $low;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $mid = floor(($l + $r) / 2);\n        if ($a[$mid] == $x) {\n            return $mid;\n        } elseif ($a[$mid] > $x) {\n            $r = $mid - 1;\n        } else {\n            $l = $mid + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$x = 5;\necho left_insertion($a, $x);",
    "    $left = 0;\n    $right = count($a);\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(2, 4, 5, 6, 8, 9);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($a[$mid] == $x) {\n            return $mid;\n        } elseif ($a[$mid] > $x) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $i = 0;\n    $j = $n;\n    while ($i < $j) {\n        $k = floor(($i + $j) / 2);\n        if ($x > $a[$k]) {\n            $i = $k + 1;\n        } else {\n            $j = $k;\n        }\n    }\n    return $i;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x == $a[$m]) {\n            return $m;\n        } elseif ($x < $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6);\n$x = 3;\necho left_insertion($a, $x);",
    "    $i = 0;\n    while ($i < count($a) && $a[$i] < $x) {\n        $i++;\n    }\n    return $i;\n}\n",
    "    $l = 0;\n    $r = count($a) - 1;\n    while ($l < $r) {\n        $m = (int)(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n;\n    while ($left < $right) {\n        $mid = (int)(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5);\n$x = 3;\necho left_insertion($a, $x);",
    "    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $low;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x <= $a[$m]) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    if ($x <= $a[0]) {\n        return 0;\n    }\n    if ($x > $a[$n - 1]) {\n        return $n;\n    }\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $left = 0;\n    $right = count($a) - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($a[$mid] < $x) {\n            $left = $mid + 1;\n        } else {\n            $right = $mid;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\necho left_insertion($a, $x);",
    "    $l = 0;\n    $r = count($a) - 1;\n    while ($l < $r) {\n        $m = (int)(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5, 6, 7, 8, 9];\necho left_insertion($a, 3);",
    "    $low = 0;\n    $high = count($a) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $low;\n}\n$a = array(2, 3, 5, 6, 8, 9, 10);\n$x = 7;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = (int)(($left + $right) / 2);\n        if ($a[$mid] < $x) {\n            $left = $mid + 1;\n        } else {\n            $right = $mid;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left < $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 9, 10, 11);\n$x = 8;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($x > $a[$m]) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = array(1, 2, 4, 5, 7, 9, 11, 13, 15, 17, 19, 20);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 4, 5];\n$x = 3;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($a[$m] >= $x) {\n            $r = $m - 1;\n        } else {\n            $l = $m + 1;\n        }\n    }\n    return $l;\n}\n\n$a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x <= $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho left_insertion($a, $x);",
    "    $n = count($a);\n    $left = 0;\n    $right = $n - 1;\n    while ($left <= $right) {\n        $mid = floor(($left + $right) / 2);\n        if ($x < $a[$mid]) {\n            $right = $mid - 1;\n        } else {\n            $left = $mid + 1;\n        }\n    }\n    return $left;\n}\n\n$a = array(1, 2, 4, 5, 6, 7, 8, 9, 10);\n$x = 3;\n$result = left_insertion($a, $x);\necho \"Left insertion point for $x is: \" . $result;",
    "    $n = count($a);\n    if ($x <= $a[0]) {\n        return 0;\n    }\n    if ($x > $a[$n - 1]) {\n        return $n;\n    }\n    $low = 0;\n    $high = $n - 1;\n    while ($low < $high) {\n        $mid = (int) (($low + $high) / 2);\n        if ($x <= $a[$mid]) {\n            $high = $mid;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $high;\n}\n\n$a = array(2, 4, 6, 8, 9);\n$x = 5;\necho left_insertion($a, $x);"
  ]
}
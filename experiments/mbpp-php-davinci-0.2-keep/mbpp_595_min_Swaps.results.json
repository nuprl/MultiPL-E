{
  "name": "mbpp_595_min_Swaps",
  "language": "php",
  "prompt": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_595_min_Swaps.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"11001\";\n$str2 = \"11111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9n7gkdy4.php:21\nStack trace:\n#0 /tmp/tmp9n7gkdy4.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp9n7gkdy4.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10001\";\n$str2 = \"11111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpojcl40a6.php:21\nStack trace:\n#0 /tmp/tmpojcl40a6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpojcl40a6.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho min_Swaps(\"10011\", \"10101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpctu50boc.php:19\nStack trace:\n#0 /tmp/tmpctu50boc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpctu50boc.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i = 0; $i < $len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"100101\";\n$str2 = \"110101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvf3mz1b1.php:22\nStack trace:\n#0 /tmp/tmpvf3mz1b1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpvf3mz1b1.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for($i = 0; $i < strlen($str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10101\";\n$str2 = \"11011\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4_2bvq8m.php:21\nStack trace:\n#0 /tmp/tmp4_2bvq8m.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp4_2bvq8m.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2g91g4sj.php:22\nStack trace:\n#0 /tmp/tmp2g91g4sj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2g91g4sj.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpysed6taa.php:21\nStack trace:\n#0 /tmp/tmpysed6taa.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpysed6taa.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"11101\";\n$str2 = \"01111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1mr37wwk.php:23\nStack trace:\n#0 /tmp/tmp1mr37wwk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp1mr37wwk.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10101\";\n$str2 = \"11011\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzjy0ihm.php:22\nStack trace:\n#0 /tmp/tmpzzjy0ihm.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzzjy0ihm.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfsy_d7nx.php:23\nStack trace:\n#0 /tmp/tmpfsy_d7nx.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpfsy_d7nx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqokewiym.php:19\nStack trace:\n#0 /tmp/tmpqokewiym.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpqokewiym.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i = 0; $i < $len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm2fkt0c2.php:22\nStack trace:\n#0 /tmp/tmpm2fkt0c2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpm2fkt0c2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpput_rujz.php:23\nStack trace:\n#0 /tmp/tmpput_rujz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpput_rujz.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2g91g4sj.php:22\nStack trace:\n#0 /tmp/tmp2g91g4sj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2g91g4sj.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2g91g4sj.php:22\nStack trace:\n#0 /tmp/tmp2g91g4sj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2g91g4sj.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpput_rujz.php:23\nStack trace:\n#0 /tmp/tmpput_rujz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpput_rujz.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdogsbnex.php:19\nStack trace:\n#0 /tmp/tmpdogsbnex.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpdogsbnex.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpysed6taa.php:21\nStack trace:\n#0 /tmp/tmpysed6taa.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpysed6taa.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2g91g4sj.php:22\nStack trace:\n#0 /tmp/tmp2g91g4sj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2g91g4sj.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7t24xmaf.php:20\nStack trace:\n#0 /tmp/tmp7t24xmaf.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp7t24xmaf.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10011\";\n$str2 = \"01100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph_48szpl.php:21\nStack trace:\n#0 /tmp/tmph_48szpl.php(26): test()\n#1 {main}\n  thrown in /tmp/tmph_48szpl.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzjquyh_a.php:20\nStack trace:\n#0 /tmp/tmpzjquyh_a.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpzjquyh_a.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i = 0; $i < $len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho min_Swaps(\"10111\", \"11101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptut00kr1.php:20\nStack trace:\n#0 /tmp/tmptut00kr1.php(25): test()\n#1 {main}\n  thrown in /tmp/tmptut00kr1.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for($i = 0; $i < strlen($str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"1110\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqszkditr.php:21\nStack trace:\n#0 /tmp/tmpqszkditr.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpqszkditr.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n\t$count = 0;\n\t$len = strlen($str1);\n\tfor ($i = 0; $i < $len; $i++) {\n\t\tif ($str1[$i] != $str2[$i]) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"0110\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfgevnqsl.php:22\nStack trace:\n#0 /tmp/tmpfgevnqsl.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpfgevnqsl.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho min_Swaps(\"1101\", \"0111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy208_ljz.php:20\nStack trace:\n#0 /tmp/tmpy208_ljz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpy208_ljz.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $n = strlen($str1);\n    for ($i = 0; $i < $n; $i++) {\n        if ($str1[$i] != $str2[$i])\n            $count++;\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplcck7z18.php:19\nStack trace:\n#0 /tmp/tmplcck7z18.php(23): test()\n#1 {main}\n  thrown in /tmp/tmplcck7z18.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10001\", \"11111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzl03zgar.php:20\nStack trace:\n#0 /tmp/tmpzl03zgar.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpzl03zgar.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\n$result = min_Swaps($str1, $str2);\necho $result;\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5fmay_hx.php:23\nStack trace:\n#0 /tmp/tmp5fmay_hx.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp5fmay_hx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\necho min_Swaps(\"1101\", \"0111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1qqq_4x1.php:19\nStack trace:\n#0 /tmp/tmp1qqq_4x1.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp1qqq_4x1.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpput_rujz.php:23\nStack trace:\n#0 /tmp/tmpput_rujz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpput_rujz.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqvhxjmf5.php:22\nStack trace:\n#0 /tmp/tmpqvhxjmf5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpqvhxjmf5.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7mnro1q6.php:20\nStack trace:\n#0 /tmp/tmp7mnro1q6.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp7mnro1q6.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n  $count = 0;\n  $len = strlen($str1);\n  for($i = 0; $i < $len; $i++) {\n    if($str1[$i] != $str2[$i]) {\n      $count++;\n    }\n  }\n  return $count / 2;\n}\n\necho min_Swaps(\"11001\", \"01111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe4q47o5_.php:21\nStack trace:\n#0 /tmp/tmpe4q47o5_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpe4q47o5_.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplog35u53.php:19\nStack trace:\n#0 /tmp/tmplog35u53.php(24): test()\n#1 {main}\n  thrown in /tmp/tmplog35u53.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx0cuoe25.php:20\nStack trace:\n#0 /tmp/tmpx0cuoe25.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpx0cuoe25.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7t24xmaf.php:20\nStack trace:\n#0 /tmp/tmp7t24xmaf.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp7t24xmaf.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp49ojge_.php:21\nStack trace:\n#0 /tmp/tmpp49ojge_.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpp49ojge_.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho min_Swaps(\"10011\", \"01100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbzwkah8l.php:20\nStack trace:\n#0 /tmp/tmpbzwkah8l.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpbzwkah8l.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqvhxjmf5.php:22\nStack trace:\n#0 /tmp/tmpqvhxjmf5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpqvhxjmf5.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i = 0; $i < $len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm2fkt0c2.php:22\nStack trace:\n#0 /tmp/tmpm2fkt0c2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpm2fkt0c2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"11001\";\n$str2 = \"01111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvc6bzm2s.php:22\nStack trace:\n#0 /tmp/tmpvc6bzm2s.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpvc6bzm2s.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpput_rujz.php:23\nStack trace:\n#0 /tmp/tmpput_rujz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpput_rujz.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10101\";\n$str2 = \"11011\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeo4mhwc3.php:21\nStack trace:\n#0 /tmp/tmpeo4mhwc3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpeo4mhwc3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho min_Swaps(\"11101\", \"01111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprx1y92w1.php:19\nStack trace:\n#0 /tmp/tmprx1y92w1.php(24): test()\n#1 {main}\n  thrown in /tmp/tmprx1y92w1.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdogsbnex.php:19\nStack trace:\n#0 /tmp/tmpdogsbnex.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpdogsbnex.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"11001\";\n$str2 = \"11011\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpega4ohh5.php:22\nStack trace:\n#0 /tmp/tmpega4ohh5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpega4ohh5.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i=0; $i<$len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe7x4o3ws.php:20\nStack trace:\n#0 /tmp/tmpe7x4o3ws.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpe7x4o3ws.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i=0; $i<$len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2p2w8z_5.php:23\nStack trace:\n#0 /tmp/tmp2p2w8z_5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2p2w8z_5.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"11101\";\n$str2 = \"10101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeni9ftet.php:22\nStack trace:\n#0 /tmp/tmpeni9ftet.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpeni9ftet.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"1110\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkoilb827.php:22\nStack trace:\n#0 /tmp/tmpkoilb827.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpkoilb827.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0111\");\necho \"\\n\";\necho min_Swaps(\"10011\", \"11100\");\necho \"\\n\";\necho min_Swaps(\"11010101\", \"01010101\");\necho \"\\n\";\necho min_Swaps(\"10011\", \"11100\");\necho \"\\n\";\necho min_Swaps(\"1101\", \"0111\");\necho \"\\n\";\necho min_Swaps(\"11010101\", \"01010101\");\necho \"\\n\";\necho min_Swaps(\"10011\", \"11100\");\necho \"\\n\";\necho min_Swaps(\"1101\", \"0111\");\necho \"\\n\";\necho min_Swaps(\"11010101\", \"01010101\");\necho \"\\n\";\necho min_Swaps(\"10011\", \"11100\");\necho \"\\n\";\necho min_Swaps(\"1101\", \"0111\");\necho \"\\n\";\necho min_Swaps(\"11010101\", \"01010101\");\necho \"\\n\";\necho min_Swaps(\"10011\", \"11100\");\necho \"\\n\";\necho min_Swaps(\"1101\", \"0111\");\necho \"\\n\";\necho min_Swaps(\"11010101\", \"01010101\");\necho \"\\n\";\necho min_Swaps(\"10011\", \"11100\");\necho \"\\n\";\necho min_Swaps(\"1101\", \"0111\");\necho \"\\n\";\necho min_Swaps(\"11010101\", \"01010101\");\necho \"\\n\";\necho min_Swaps(\"10011\", \"11100\");\necho \"\\n\";\necho min_Swaps(\"1101\", \"0111\");\necho \"\\n\";\necho min_Swaps(\"11010101\", \"01010101\");\necho \"\\n\";\necho min_Swaps(\"10011\", \"11100\");\necho\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpf_ti_xqn.php on line 57\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10101\";\n$str2 = \"11011\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeo4mhwc3.php:21\nStack trace:\n#0 /tmp/tmpeo4mhwc3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpeo4mhwc3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"11101\";\n$str2 = \"01111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr0q4ju6w.php:22\nStack trace:\n#0 /tmp/tmpr0q4ju6w.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpr0q4ju6w.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho min_Swaps('11001', '01111');\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7iwtk1qc.php:20\nStack trace:\n#0 /tmp/tmp7iwtk1qc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp7iwtk1qc.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i = 0; $i < $len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10111\";\n$str2 = \"11000\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_cefnv00.php:22\nStack trace:\n#0 /tmp/tmp_cefnv00.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp_cefnv00.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for($i = 0; $i < strlen($str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho min_Swaps(\"10011\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_736b703.php:19\nStack trace:\n#0 /tmp/tmp_736b703.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp_736b703.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10101\";\n$str2 = \"11011\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzjy0ihm.php:22\nStack trace:\n#0 /tmp/tmpzzjy0ihm.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzzjy0ihm.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7mnro1q6.php:20\nStack trace:\n#0 /tmp/tmp7mnro1q6.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp7mnro1q6.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"11001\";\n$str2 = \"11011\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpega4ohh5.php:22\nStack trace:\n#0 /tmp/tmpega4ohh5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpega4ohh5.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpput_rujz.php:23\nStack trace:\n#0 /tmp/tmpput_rujz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpput_rujz.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for($i = 0; $i < strlen($str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10101\";\n$str2 = \"11011\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4_2bvq8m.php:21\nStack trace:\n#0 /tmp/tmp4_2bvq8m.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp4_2bvq8m.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho min_Swaps(\"10011\", \"01100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_eklfkyv.php:19\nStack trace:\n#0 /tmp/tmp_eklfkyv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp_eklfkyv.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps('1101', '1110');\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphodopmtp.php:20\nStack trace:\n#0 /tmp/tmphodopmtp.php(24): test()\n#1 {main}\n  thrown in /tmp/tmphodopmtp.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps('10011', '11100');\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9hsqtt5g.php:20\nStack trace:\n#0 /tmp/tmp9hsqtt5g.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp9hsqtt5g.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"1011\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1h8bcpj9.php:23\nStack trace:\n#0 /tmp/tmp1h8bcpj9.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp1h8bcpj9.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7t24xmaf.php:20\nStack trace:\n#0 /tmp/tmp7t24xmaf.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp7t24xmaf.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"110101\";\n$str2 = \"111010\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7dq52afx.php:21\nStack trace:\n#0 /tmp/tmp7dq52afx.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7dq52afx.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n\t$count = 0;\n\t$len = strlen($str1);\n\tfor ($i = 0; $i < $len; $i++) {\n\t\tif ($str1[$i] != $str2[$i]) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppgvol64_.php:22\nStack trace:\n#0 /tmp/tmppgvol64_.php(27): test()\n#1 {main}\n  thrown in /tmp/tmppgvol64_.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"11001\", \"11100\");\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf_5h8zx8.php:21\nStack trace:\n#0 /tmp/tmpf_5h8zx8.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpf_5h8zx8.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"11101\";\n$str2 = \"10101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfn1_p2f2.php:23\nStack trace:\n#0 /tmp/tmpfn1_p2f2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpfn1_p2f2.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10101\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpky4gsqum.php:22\nStack trace:\n#0 /tmp/tmpky4gsqum.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpky4gsqum.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $str1 = str_split($str1);\n    $str2 = str_split($str2);\n    for($i = 0; $i < count($str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1dto8czd.php:23\nStack trace:\n#0 /tmp/tmp1dto8czd.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp1dto8czd.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i = 0; $i < $len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"1110\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwoyv6tqb.php:22\nStack trace:\n#0 /tmp/tmpwoyv6tqb.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpwoyv6tqb.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzfc1te54.php:18\nStack trace:\n#0 /tmp/tmpzfc1te54.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpzfc1te54.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx0cuoe25.php:20\nStack trace:\n#0 /tmp/tmpx0cuoe25.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpx0cuoe25.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7mnro1q6.php:20\nStack trace:\n#0 /tmp/tmp7mnro1q6.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp7mnro1q6.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx0cuoe25.php:20\nStack trace:\n#0 /tmp/tmpx0cuoe25.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpx0cuoe25.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"1011\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvtvjd40l.php:22\nStack trace:\n#0 /tmp/tmpvtvjd40l.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpvtvjd40l.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7mnro1q6.php:20\nStack trace:\n#0 /tmp/tmp7mnro1q6.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp7mnro1q6.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i=0; $i < strlen($str1); $i++) { \n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho min_Swaps(\"10011\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5y43psdc.php:19\nStack trace:\n#0 /tmp/tmp5y43psdc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp5y43psdc.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx0cuoe25.php:20\nStack trace:\n#0 /tmp/tmpx0cuoe25.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpx0cuoe25.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8wxw_yxt.php:23\nStack trace:\n#0 /tmp/tmp8wxw_yxt.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp8wxw_yxt.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"11101\";\n$str2 = \"01111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1mr37wwk.php:23\nStack trace:\n#0 /tmp/tmp1mr37wwk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp1mr37wwk.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2g91g4sj.php:22\nStack trace:\n#0 /tmp/tmp2g91g4sj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2g91g4sj.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzjquyh_a.php:20\nStack trace:\n#0 /tmp/tmpzjquyh_a.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpzjquyh_a.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2g91g4sj.php:22\nStack trace:\n#0 /tmp/tmp2g91g4sj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2g91g4sj.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"11001\", \"01111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpul7o8tcw.php:20\nStack trace:\n#0 /tmp/tmpul7o8tcw.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpul7o8tcw.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplog35u53.php:19\nStack trace:\n#0 /tmp/tmplog35u53.php(24): test()\n#1 {main}\n  thrown in /tmp/tmplog35u53.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_sj7pads.php:20\nStack trace:\n#0 /tmp/tmp_sj7pads.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp_sj7pads.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpysed6taa.php:21\nStack trace:\n#0 /tmp/tmpysed6taa.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpysed6taa.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpput_rujz.php:23\nStack trace:\n#0 /tmp/tmpput_rujz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpput_rujz.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for($i=0; $i<strlen($str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}\n\necho min_Swaps(\"10011\", \"01100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "2.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6lpvqzp3.php:20\nStack trace:\n#0 /tmp/tmp6lpvqzp3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp6lpvqzp3.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i=0; $i<$len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp75flucff.php:23\nStack trace:\n#0 /tmp/tmp75flucff.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp75flucff.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpput_rujz.php:23\nStack trace:\n#0 /tmp/tmpput_rujz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpput_rujz.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\necho min_Swaps(\"10011\", \"11001\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9okrznli.php:20\nStack trace:\n#0 /tmp/tmp9okrznli.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp9okrznli.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho min_Swaps(\"1101\", \"0101\") . \"\\n\";\necho min_Swaps(\"10011001\", \"01100110\") . \"\\n\";\necho min_Swaps(\"11010101\", \"01010101\") . \"\\n\";\necho min_Swaps(\"11010101\", \"01010101\") . \"\\n\";\necho min_Swaps(\"11010101\", \"01010101\") . \"\\n\";\necho min_Swaps(\"11010101\", \"01010101\") . \"\\n\";\necho min_Swaps(\"11010101\", \"01010101\") . \"\\n\";\necho min_Swaps(\"11010101\", \"01010101\") . \"\\n\";\necho min_Swaps(\"11010101\", \"01010101\") . \"\\n\";\necho min_Swaps(\"11010101\", \"01010101\") . \"\\n\";\necho min_Swaps(\"11010101\", \"01010101\") . \"\\n\";\necho min_Swaps(\"11010101\", \"01010101\") . \"\\n\";\necho min_Swaps(\"11010101\", \"01010101\") . \"\\n\";\necho min_Swaps(\"11010101\", \"01010101\") . \"\\n\";\necho min_Swaps(\"11010101\", \"01010101\") . \"\\n\";\necho min_Swaps(\"11010101\", \"01010101\") . \"\\n\";\necho min_Swaps(\"11010101\", \"01010101\") . \"\\n\";\necho min_Swaps(\"11010101\", \"01010101\") . \"\\n\";\necho min_Swaps(\"11010101\", \"01010101\") . \"\\n\";\necho min_Swaps(\"11010101\", \"01010101\") . \"\\n\";\necho min_Swaps(\"11010101\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "\nParse error: syntax error, unexpected integer \"1101\", expecting \")\" in /tmp/tmpxkup53yf.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2g91g4sj.php:22\nStack trace:\n#0 /tmp/tmp2g91g4sj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2g91g4sj.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0101\");\necho \"\\n\";\necho min_Swaps(\"10011001\", \"01100110\");\necho \"\\n\";\necho min_Swaps(\"110101010101\", \"010101010101\");\necho \"\\n\";\necho min_Swaps(\"110101010101\", \"010101010101\");\necho \"\\n\";\necho min_Swaps(\"110101010101\", \"010101010101\");\necho \"\\n\";\necho min_Swaps(\"110101010101\", \"010101010101\");\necho \"\\n\";\necho min_Swaps(\"110101010101\", \"010101010101\");\necho \"\\n\";\necho min_Swaps(\"110101010101\", \"010101010101\");\necho \"\\n\";\necho min_Swaps(\"110101010101\", \"010101010101\");\necho \"\\n\";\necho min_Swaps(\"110101010101\", \"010101010101\");\necho \"\\n\";\necho min_Swaps(\"110101010101\", \"010101010101\");\necho \"\\n\";\necho min_Swaps(\"110101010101\", \"010101010101\");\necho \"\\n\";\necho min_Swaps(\"110101010101\", \"010101010101\");\necho \"\\n\";\necho min_Swaps(\"110101010101\", \"010101010101\");\necho \"\\n\";\necho min_Swaps(\"110101010101\", \"010101010101\");\necho \"\\n\";\necho min_Swaps(\"110101010101\", \"010101010101\");\necho \"\\n\";\necho min_Swaps(\"110101010101\", \"0101\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "\nParse error: syntax error, unexpected integer \"1101\", expecting \")\" in /tmp/tmpp3jfwoev.php on line 52\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"1110\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprn8u6ykt.php:21\nStack trace:\n#0 /tmp/tmprn8u6ykt.php(26): test()\n#1 {main}\n  thrown in /tmp/tmprn8u6ykt.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for($i = 0; $i < strlen($str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz0l29c32.php:21\nStack trace:\n#0 /tmp/tmpz0l29c32.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpz0l29c32.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpput_rujz.php:23\nStack trace:\n#0 /tmp/tmpput_rujz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpput_rujz.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10101\", \"11010\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc6xio18i.php:20\nStack trace:\n#0 /tmp/tmpc6xio18i.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpc6xio18i.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"11001\";\n$str2 = \"11111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bs3r_3r.php:23\nStack trace:\n#0 /tmp/tmp4bs3r_3r.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp4bs3r_3r.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10101\";\n$str2 = \"11011\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzjy0ihm.php:22\nStack trace:\n#0 /tmp/tmpzzjy0ihm.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzzjy0ihm.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps('1101', '0111');\necho \"\\n\";\necho min_Swaps('1100', '1001');\necho \"\\n\";\necho min_Swaps('1101', '0111');\necho \"\\n\";\necho min_Swaps('100', '001');\necho \"\\n\";\necho min_Swaps('10101', '11100');\necho \"\\n\";\necho min_Swaps('000', '111');\necho \"\\n\";\necho min_Swaps('11000', '00111');\necho \"\\n\";\necho min_Swaps('10101', '10111');\necho \"\\n\";\necho min_Swaps('11000', '01111');\necho \"\\n\";\necho min_Swaps('11111', '11111');\necho \"\\n\";\necho min_Swaps('00000', '00000');\necho \"\\n\";\necho min_Swaps('11001', '10110');\necho \"\\n\";\necho min_Swaps('11001', '10110');\necho \"\\n\";\necho min_Swaps('11001', '10110');\necho \"\\n\";\necho min_Swaps('11001', '10110');\necho \"\\n\";\necho min_Swaps('11001', '10110');\necho \"\\n\";\necho min_Swaps('11001', '10110');\necho \"\\n\";\necho min_Swaps('11001', '10110');\necho \"\\n\";\necho min_Swaps('11001', '10110');\necho \"\\n\";\necho min_Swaps('11001', '10110');\necho \"\\n\";\necho min_Swaps('11001', '10110');\necho \"\\n\";\necho min_Swaps('11001', '10110');\necho \"\\n\";\necho min_Swaps('11001', '10110');\necho \"\\n\";\necho min_Swaps\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmpxhir9elx.php on line 61\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplog35u53.php:19\nStack trace:\n#0 /tmp/tmplog35u53.php(24): test()\n#1 {main}\n  thrown in /tmp/tmplog35u53.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpput_rujz.php:23\nStack trace:\n#0 /tmp/tmpput_rujz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpput_rujz.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10101\";\n$str2 = \"11011\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzjy0ihm.php:22\nStack trace:\n#0 /tmp/tmpzzjy0ihm.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzzjy0ihm.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7mnro1q6.php:20\nStack trace:\n#0 /tmp/tmp7mnro1q6.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp7mnro1q6.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"110001\";\n$str2 = \"011001\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptpkiebrw.php:22\nStack trace:\n#0 /tmp/tmptpkiebrw.php(26): test()\n#1 {main}\n  thrown in /tmp/tmptpkiebrw.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i=0; $i<$len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}\n\n$str1 = \"10101\";\n$str2 = \"11011\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbjxrvknw.php:23\nStack trace:\n#0 /tmp/tmpbjxrvknw.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpbjxrvknw.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i = 0; $i < $len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10101\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpao9t86un.php:22\nStack trace:\n#0 /tmp/tmpao9t86un.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpao9t86un.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpput_rujz.php:23\nStack trace:\n#0 /tmp/tmpput_rujz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpput_rujz.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkwl1fjmy.php:19\nStack trace:\n#0 /tmp/tmpkwl1fjmy.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkwl1fjmy.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for($i=0; $i<strlen($str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2sdtkf5t.php:20\nStack trace:\n#0 /tmp/tmp2sdtkf5t.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2sdtkf5t.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpysed6taa.php:21\nStack trace:\n#0 /tmp/tmpysed6taa.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpysed6taa.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10101\";\n$str2 = \"11011\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeo4mhwc3.php:21\nStack trace:\n#0 /tmp/tmpeo4mhwc3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpeo4mhwc3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"110001\";\n$str2 = \"011011\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphy15st5f.php:21\nStack trace:\n#0 /tmp/tmphy15st5f.php(26): test()\n#1 {main}\n  thrown in /tmp/tmphy15st5f.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i=0; $i<$len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}\n\necho min_Swaps(\"10011\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl61rmyfy.php:21\nStack trace:\n#0 /tmp/tmpl61rmyfy.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpl61rmyfy.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i = 0; $i < $len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm2fkt0c2.php:22\nStack trace:\n#0 /tmp/tmpm2fkt0c2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpm2fkt0c2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpput_rujz.php:23\nStack trace:\n#0 /tmp/tmpput_rujz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpput_rujz.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpput_rujz.php:23\nStack trace:\n#0 /tmp/tmpput_rujz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpput_rujz.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"10101\";\n$str2 = \"11011\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphqvbvvay.php:23\nStack trace:\n#0 /tmp/tmphqvbvvay.php(27): test()\n#1 {main}\n  thrown in /tmp/tmphqvbvvay.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"11101\";\n$str2 = \"01111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1mr37wwk.php:23\nStack trace:\n#0 /tmp/tmp1mr37wwk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp1mr37wwk.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp49ojge_.php:21\nStack trace:\n#0 /tmp/tmpp49ojge_.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpp49ojge_.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho min_Swaps('1101', '1110');\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9dbrldfu.php:20\nStack trace:\n#0 /tmp/tmp9dbrldfu.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp9dbrldfu.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqvhxjmf5.php:22\nStack trace:\n#0 /tmp/tmpqvhxjmf5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpqvhxjmf5.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"11001\";\n$str2 = \"01111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqf01cgoy.php:23\nStack trace:\n#0 /tmp/tmpqf01cgoy.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpqf01cgoy.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7mnro1q6.php:20\nStack trace:\n#0 /tmp/tmp7mnro1q6.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp7mnro1q6.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"11101\", \"01111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfoko_nnp.php:20\nStack trace:\n#0 /tmp/tmpfoko_nnp.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpfoko_nnp.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2g91g4sj.php:22\nStack trace:\n#0 /tmp/tmp2g91g4sj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2g91g4sj.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10101\";\n$str2 = \"11011\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzjy0ihm.php:22\nStack trace:\n#0 /tmp/tmpzzjy0ihm.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzzjy0ihm.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\n\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo1a1c890.php:22\nStack trace:\n#0 /tmp/tmpo1a1c890.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpo1a1c890.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10101\";\n$str2 = \"11011\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzjy0ihm.php:22\nStack trace:\n#0 /tmp/tmpzzjy0ihm.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzzjy0ihm.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $str1 = str_split($str1);\n    $str2 = str_split($str2);\n    for ($i = 0; $i < count($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho min_Swaps('11001', '11010');\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp50qz0tu0.php:21\nStack trace:\n#0 /tmp/tmp50qz0tu0.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp50qz0tu0.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho min_Swaps(\"10011\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpur3euh9d.php:19\nStack trace:\n#0 /tmp/tmpur3euh9d.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpur3euh9d.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpput_rujz.php:23\nStack trace:\n#0 /tmp/tmpput_rujz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpput_rujz.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4kl81ff0.php:22\nStack trace:\n#0 /tmp/tmp4kl81ff0.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp4kl81ff0.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpput_rujz.php:23\nStack trace:\n#0 /tmp/tmpput_rujz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpput_rujz.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2g91g4sj.php:22\nStack trace:\n#0 /tmp/tmp2g91g4sj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2g91g4sj.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0111\");\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt4q2apd7.php:21\nStack trace:\n#0 /tmp/tmpt4q2apd7.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpt4q2apd7.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i = 0; $i < $len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\n\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb_87va61.php:23\nStack trace:\n#0 /tmp/tmpb_87va61.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpb_87va61.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps('10011', '11100');\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9hsqtt5g.php:20\nStack trace:\n#0 /tmp/tmp9hsqtt5g.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp9hsqtt5g.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i=0; $i < strlen($str1); $i++) { \n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphegngoad.php:20\nStack trace:\n#0 /tmp/tmphegngoad.php(24): test()\n#1 {main}\n  thrown in /tmp/tmphegngoad.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp49ojge_.php:21\nStack trace:\n#0 /tmp/tmpp49ojge_.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpp49ojge_.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"11001\", \"01111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpul7o8tcw.php:20\nStack trace:\n#0 /tmp/tmpul7o8tcw.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpul7o8tcw.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10001\";\n$str2 = \"11111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkdx44nke.php:22\nStack trace:\n#0 /tmp/tmpkdx44nke.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpkdx44nke.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkwl1fjmy.php:19\nStack trace:\n#0 /tmp/tmpkwl1fjmy.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkwl1fjmy.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i = 0; $i < $len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm2fkt0c2.php:22\nStack trace:\n#0 /tmp/tmpm2fkt0c2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpm2fkt0c2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    if (strlen($str1) != strlen($str2)) {\n        return -1;\n    }\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"10101\";\n$str2 = \"11010\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo0dyg78r.php:25\nStack trace:\n#0 /tmp/tmpo0dyg78r.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpo0dyg78r.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4kl81ff0.php:22\nStack trace:\n#0 /tmp/tmp4kl81ff0.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp4kl81ff0.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7mnro1q6.php:20\nStack trace:\n#0 /tmp/tmp7mnro1q6.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp7mnro1q6.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i = 0; $i < $len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10001\";\n$str2 = \"11111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwrnoz11m.php:22\nStack trace:\n#0 /tmp/tmpwrnoz11m.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpwrnoz11m.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i = 0; $i < $len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}\n\necho min_Swaps(\"1101\", \"0111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2vrfu_hc.php:21\nStack trace:\n#0 /tmp/tmp2vrfu_hc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp2vrfu_hc.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho min_Swaps(\"10011\", \"11100\");\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdp6homjp.php:21\nStack trace:\n#0 /tmp/tmpdp6homjp.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdp6homjp.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp49ojge_.php:21\nStack trace:\n#0 /tmp/tmpp49ojge_.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpp49ojge_.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqvhxjmf5.php:22\nStack trace:\n#0 /tmp/tmpqvhxjmf5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpqvhxjmf5.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"11101\";\n$str2 = \"10101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfn1_p2f2.php:23\nStack trace:\n#0 /tmp/tmpfn1_p2f2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpfn1_p2f2.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10101\";\n$str2 = \"11011\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzjy0ihm.php:22\nStack trace:\n#0 /tmp/tmpzzjy0ihm.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzzjy0ihm.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7t24xmaf.php:20\nStack trace:\n#0 /tmp/tmp7t24xmaf.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp7t24xmaf.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"11001\", \"01111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoz1ocx0k.php:21\nStack trace:\n#0 /tmp/tmpoz1ocx0k.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpoz1ocx0k.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i = 0; $i < $len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"11101\";\n$str2 = \"01111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnvgohg0j.php:22\nStack trace:\n#0 /tmp/tmpnvgohg0j.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpnvgohg0j.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqvhxjmf5.php:22\nStack trace:\n#0 /tmp/tmpqvhxjmf5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpqvhxjmf5.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpysed6taa.php:21\nStack trace:\n#0 /tmp/tmpysed6taa.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpysed6taa.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"11101\";\n$str2 = \"01111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnreei1s9.php:21\nStack trace:\n#0 /tmp/tmpnreei1s9.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpnreei1s9.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"11001\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpozjyzuob.php:20\nStack trace:\n#0 /tmp/tmpozjyzuob.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpozjyzuob.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"110001\";\n$str2 = \"010111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpacg7n60f.php:23\nStack trace:\n#0 /tmp/tmpacg7n60f.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpacg7n60f.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkwl1fjmy.php:19\nStack trace:\n#0 /tmp/tmpkwl1fjmy.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkwl1fjmy.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91qpo8zv.php:21\nStack trace:\n#0 /tmp/tmp91qpo8zv.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp91qpo8zv.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"01100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "2.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps5nlyjn2.php:20\nStack trace:\n#0 /tmp/tmps5nlyjn2.php(24): test()\n#1 {main}\n  thrown in /tmp/tmps5nlyjn2.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho min_Swaps('10011', '11100');\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2r7hu1bd.php:19\nStack trace:\n#0 /tmp/tmp2r7hu1bd.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2r7hu1bd.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"110001\";\n$str2 = \"010111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwtg264br.php:22\nStack trace:\n#0 /tmp/tmpwtg264br.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpwtg264br.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10011\";\n$str2 = \"10101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpngzsjkal.php:22\nStack trace:\n#0 /tmp/tmpngzsjkal.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpngzsjkal.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"11001\", \"01111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpul7o8tcw.php:20\nStack trace:\n#0 /tmp/tmpul7o8tcw.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpul7o8tcw.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"10101\";\n$str2 = \"11011\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphqvbvvay.php:23\nStack trace:\n#0 /tmp/tmphqvbvvay.php(27): test()\n#1 {main}\n  thrown in /tmp/tmphqvbvvay.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho min_Swaps('1101', '1011');\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpysjmbt2g.php:20\nStack trace:\n#0 /tmp/tmpysjmbt2g.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpysjmbt2g.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\necho min_Swaps(\"1101\", \"0111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpofmmr8jf.php:20\nStack trace:\n#0 /tmp/tmpofmmr8jf.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpofmmr8jf.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10001\", \"11111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzl03zgar.php:20\nStack trace:\n#0 /tmp/tmpzl03zgar.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpzl03zgar.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqokewiym.php:19\nStack trace:\n#0 /tmp/tmpqokewiym.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpqokewiym.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"01100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "2.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps5nlyjn2.php:20\nStack trace:\n#0 /tmp/tmps5nlyjn2.php(24): test()\n#1 {main}\n  thrown in /tmp/tmps5nlyjn2.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2g91g4sj.php:22\nStack trace:\n#0 /tmp/tmp2g91g4sj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2g91g4sj.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzjquyh_a.php:20\nStack trace:\n#0 /tmp/tmpzjquyh_a.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpzjquyh_a.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for($i = 0; $i < strlen($str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"0110\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprz8elc98.php:21\nStack trace:\n#0 /tmp/tmprz8elc98.php(26): test()\n#1 {main}\n  thrown in /tmp/tmprz8elc98.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx0cuoe25.php:20\nStack trace:\n#0 /tmp/tmpx0cuoe25.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpx0cuoe25.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i=0; $i<$len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}\n\n$str1 = \"11001\";\n$str2 = \"01111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxqie79do.php:23\nStack trace:\n#0 /tmp/tmpxqie79do.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpxqie79do.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplog35u53.php:19\nStack trace:\n#0 /tmp/tmplog35u53.php(24): test()\n#1 {main}\n  thrown in /tmp/tmplog35u53.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfsy_d7nx.php:23\nStack trace:\n#0 /tmp/tmpfsy_d7nx.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpfsy_d7nx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp49ojge_.php:21\nStack trace:\n#0 /tmp/tmpp49ojge_.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpp49ojge_.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2g91g4sj.php:22\nStack trace:\n#0 /tmp/tmp2g91g4sj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2g91g4sj.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10111\";\n$str2 = \"11001\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphduf0oie.php:22\nStack trace:\n#0 /tmp/tmphduf0oie.php(27): test()\n#1 {main}\n  thrown in /tmp/tmphduf0oie.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7mnro1q6.php:20\nStack trace:\n#0 /tmp/tmp7mnro1q6.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp7mnro1q6.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = '1101';\n$str2 = '0101';\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpra2tnh_t.php:21\nStack trace:\n#0 /tmp/tmpra2tnh_t.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpra2tnh_t.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91qpo8zv.php:21\nStack trace:\n#0 /tmp/tmp91qpo8zv.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp91qpo8zv.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp34zp1cj8.php:20\nStack trace:\n#0 /tmp/tmp34zp1cj8.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp34zp1cj8.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx0cuoe25.php:20\nStack trace:\n#0 /tmp/tmpx0cuoe25.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpx0cuoe25.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i = 0; $i < $len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10101\";\n$str2 = \"11001\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcdggq31c.php:22\nStack trace:\n#0 /tmp/tmpcdggq31c.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpcdggq31c.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkwl1fjmy.php:19\nStack trace:\n#0 /tmp/tmpkwl1fjmy.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkwl1fjmy.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122609,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7mnro1q6.php:20\nStack trace:\n#0 /tmp/tmp7mnro1q6.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp7mnro1q6.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509801,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpput_rujz.php:23\nStack trace:\n#0 /tmp/tmpput_rujz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpput_rujz.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
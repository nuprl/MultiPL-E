{
  "name": "mbpp_96_divisor",
  "language": "php",
  "prompt": "<?php\n// Write a python function to find the number of divisors of a given integer.\nfunction divisor($n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_96_divisor.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(15) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$n = 12;\necho divisor($n);",
    "    $divisor = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n            $divisor++;\n        }\n    }\n    return $divisor;\n}\necho divisor(12);",
    "    $divisor = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n            $divisor++;\n        }\n    }\n    return $divisor;\n}\n\necho divisor(12);",
    "    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho divisor(10);",
    "    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho divisor(10);",
    "    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho divisor(10);",
    "    $divisors = array();\n    for ($i = 1; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n            $divisors[] = $i;\n        }\n    }\n    return $divisors;\n}\n\n$n = 12;\n$divisors = divisor($n);\necho \"Divisors of $n are: \";\nforeach ($divisors as $divisor) {\n    echo \"$divisor \";\n}",
    "    $divisors = array();\n    for ($i = 1; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n            $divisors[] = $i;\n        }\n    }\n    return $divisors;\n}\n\nprint_r(divisor(10));",
    "    $divisor = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n            $divisor++;\n        }\n    }\n    return $divisor;\n}\n\necho divisor(10);",
    "    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho divisor(10);",
    "    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\necho divisor(10);",
    "    $divisors = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n            $divisors++;\n        }\n    }\n    return $divisors;\n}\n\n$n = 12;\necho divisor($n);",
    "    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$n = 12;\necho divisor($n);",
    "    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho divisor(6);",
    "    $divisor = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n            $divisor++;\n        }\n    }\n    return $divisor;\n}\n\necho divisor(10);",
    "    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho divisor(6);",
    "    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho divisor(12);",
    "    $divisor = 0;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n            $divisor++;\n        }\n    }\n    return $divisor;\n}\necho divisor(6);",
    "    $divisors = array();\n    for ($i = 1; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n            $divisors[] = $i;\n        }\n    }\n    return $divisors;\n}\n\n$n = 12;\n$divisors = divisor($n);\necho \"Divisors of $n are: \" . implode(\", \", $divisors);",
    "    $count = 0;\n    for ($i=1; $i<=$n; $i++) {\n        if ($n % $i == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n"
  ]
}
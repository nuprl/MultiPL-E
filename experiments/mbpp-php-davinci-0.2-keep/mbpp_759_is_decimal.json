{
  "name": "mbpp_759_is_decimal",
  "language": "php",
  "prompt": "<?php\n// Write a function to check whether a given string is a decimal number with a precision of 2.\nfunction is_decimal($num) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_759_is_decimal.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return is_decimal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"123.11\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"e666.86\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"3.124587\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1.11\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1.1.11\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    return preg_match('/^\\d+(\\.\\d{1,2})?$/', $num);\n}\n",
    "    if (preg_match(\"/^\\d+(\\.\\d{1,2})?$/\", $num)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_decimal(\"12.23\") . \"\\n\";\necho is_decimal(\"12.2\") . \"\\n\";\necho is_decimal(\"12.2.3\") . \"\\n\";\necho is_decimal(\"12\") . \"\\n\";\necho is_decimal(\"12.234\") . \"\\n\";\necho is_decimal(\"12.2.34\") . \"\\n\";\n",
    "    return preg_match('/^\\d+(\\.\\d{1,2})?$/', $num);\n}\n\n$num = '123.45';\nif (is_decimal($num)) {\n    echo \"Yes, $num is a decimal number with a precision of 2.\";\n} else {\n    echo \"No, $num is not a decimal number with a precision of 2.\";\n}",
    "    if(is_numeric($num)) {\n        $num = (string)$num;\n        $num_arr = explode('.', $num);\n        if(count($num_arr) == 2) {\n            if(strlen($num_arr[1]) == 2) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n",
    "    if(preg_match('/^[0-9]+(\\.[0-9]{1,2})?$/', $num)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if(preg_match('/^[0-9]+(\\.[0-9]{1,2})?$/', $num)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match('/^[0-9]+(\\.[0-9]{1,2})?$/', $num)) {\n        return true;\n    }\n    return false;\n}\n",
    "    return preg_match('/^[0-9]+(\\.[0-9]{1,2})?$/', $num);\n}\n\necho is_decimal('0.00') . PHP_EOL;\necho is_decimal('0.0') . PHP_EOL;\necho is_decimal('0.000') . PHP_EOL;\necho is_decimal('0.01') . PHP_EOL;\necho is_decimal('0.10') . PHP_EOL;\necho is_decimal('0.11') . PHP_EOL;\necho is_decimal('0.111') . PHP_EOL;\necho is_decimal('1.00') . PHP_EOL;\necho is_decimal('1.0') . PHP_EOL;\necho is_decimal('1.000') . PHP_EOL;\necho is_decimal('1.01') . PHP_EOL;\necho is_decimal('1.10') . PHP_EOL;\necho is_decimal('1.11') . PHP_EOL;\necho is_decimal('1.111') . PHP_EOL;\necho is_decimal('11.00') . PHP_EOL;\necho is_decimal('11.0') . PHP_EOL;\necho is_decimal('11.000') . PHP_EOL;\necho is_decimal('11.01') . PHP_EOL;\necho is_decimal('11.10') . PHP_EOL;\necho is_decimal('11.11') . PHP_EOL;\necho is_decimal('11.111') . PHP_EOL;\necho is_decimal('111.00') . PHP_EOL;\necho is_decimal('111.0') . PHP_EOL;\necho is_decimal('111.000') . PHP_EOL;\necho is_decimal('111.01') . PHP_EOL;\necho is_decimal('111.10') . PHP_EOL;\necho is_decimal('111.11') . PHP_EOL;\necho is_decimal('111.111') . PHP_EOL",
    "    if (preg_match('/^[0-9]+(\\.[0-9]{1,2})?$/', $num)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match('/^[0-9]+(\\.[0-9]{1,2})?$/', $num)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match('/^[0-9]+(\\.[0-9]{1,2})?$/', $num)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    return preg_match('/^[0-9]+(\\.[0-9]{1,2})?$/', $num);\n}\n",
    "    return preg_match('/^[0-9]+(\\.[0-9]{1,2})?$/', $num);\n}\n",
    "    return preg_match(\"/^[0-9]+(\\.[0-9]{1,2})?$/\", $num);\n}\n",
    "    return preg_match(\"/^[0-9]+(\\.[0-9]{1,2})?$/\", $num);\n}\n",
    "    return preg_match(\"/^\\d+(\\.\\d{1,2})?$/\", $num);\n}\n\n$num = \"123.45\";\nif (is_decimal($num)) {\n    echo \"$num is a decimal number with a precision of 2.\";\n} else {\n    echo \"$num is not a decimal number with a precision of 2.\";\n}",
    "    return preg_match(\"/^[0-9]+(\\.[0-9]{1,2})?$/\", $num);\n}\n",
    "    return is_numeric($num) && floor($num) != $num;\n}\n\necho is_decimal(12.2) . \"\\n\";\necho is_decimal(12.0) . \"\\n\";\necho is_decimal(12) . \"\\n\";\necho is_decimal(12.20) . \"\\n\";\necho is_decimal(12.22) . \"\\n\";\necho is_decimal(12.222) . \"\\n\";\necho is_decimal(12.2222) . \"\\n\";\necho is_decimal(12.22222) . \"\\n\";\necho is_decimal(12.222222) . \"\\n\";\necho is_decimal(12.2222222) . \"\\n\";\necho is_decimal(12.22222222) . \"\\n\";\necho is_decimal(12.222222222) . \"\\n\";\necho is_decimal(12.2222222222) . \"\\n\";\necho is_decimal(12.22222222222) . \"\\n\";\necho is_decimal(12.222222222222) . \"\\n\";\necho is_decimal(12.2222222222222) . \"\\n\";\necho is_decimal(12.22222222222222) . \"\\n\";\necho is_decimal(12.222222222222222) . \"\\n\";\necho is_decimal(12.2222222222222222) . \"\\n\";\necho is_decimal(12.22222222222222222) . \"\\n\";\necho is_decimal(12.222222222222222222) . \"\\n\";\necho is_decimal(12.2222222222222222222) . \"\\n\";\necho is_decimal(12.22222222222222222222) . \"\\n\";\necho is_decimal(12.222222222222222222222) . \"\\n\";\necho is_decimal(12.2222222222222222222222) . \"\\n\";\necho is_decimal(12.2222222222222222",
    "    if (preg_match('/^\\d+(\\.\\d{1,2})?$/', $num)) {\n        return true;\n    }\n    return false;\n}\n\n$num = '12.34';\nif (is_decimal($num)) {\n    echo $num . ' is a decimal number with a precision of 2.';\n} else {\n    echo $num . ' is not a decimal number with a precision of 2.';\n}\n\necho '<br>';\n\n$num = '12.345';\nif (is_decimal($num)) {\n    echo $num . ' is a decimal number with a precision of 2.';\n} else {\n    echo $num . ' is not a decimal number with a precision of 2.';\n}\n\necho '<br>';\n\n$num = '12';\nif (is_decimal($num)) {\n    echo $num . ' is a decimal number with a precision of 2.';\n} else {\n    echo $num . ' is not a decimal number with a precision of 2.';\n}\n\necho '<br>';\n\n$num = '12.3';\nif (is_decimal($num)) {\n    echo $num . ' is a decimal number with a precision of 2.';\n} else {\n    echo $num . ' is not a decimal number with a precision of 2.';\n}\n\necho '<br>';\n\n$num = '12.3456';\nif (is_decimal($num)) {\n    echo $num . ' is a decimal number with a precision of 2.';\n} else {\n    echo $num . ' is not a decimal number with a precision of 2.';\n}\n\necho '<br>';\n\n$num = '12.00';\nif (is_decimal($num)) {\n    echo $num . ' is a decimal number with a precision of 2.';\n} else {\n    echo $num . ' is not a decimal number with a precision of 2.';\n}\n\necho '<br>';\n\n$num = '12.0';\nif (is_decimal($num)) {\n    echo $num . ' is a decimal number with a precision of",
    "\treturn preg_match('/^[0-9]+(\\.[0-9]{1,2})?$/', $num);\n}\n"
  ]
}
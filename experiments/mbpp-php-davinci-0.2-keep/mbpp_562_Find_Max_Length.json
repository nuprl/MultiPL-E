{
  "name": "mbpp_562_Find_Max_Length",
  "language": "php",
  "prompt": "<?php\n// Write a python function to find the length of the longest sublists.\nfunction Find_Max_Length($lst) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_562_Find_Max_Length.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 2, 3, array(4, 5, 6, array(7, 8, 9)));\necho Find_Max_Length($lst);",
    "\t$max = 0;\n\t$count = 0;\n\tforeach($lst as $item) {\n\t\tif(is_array($item)) {\n\t\t\t$count = Find_Max_Length($item);\n\t\t} else {\n\t\t\t$count++;\n\t\t}\n\t\tif($count > $max) {\n\t\t\t$max = $count;\n\t\t}\n\t}\n\treturn $max;\n}\n\n$lst = array(1,2,3,array(4,5,6,array(7,8,9,array(10,11,12,array(13,14,15,array(16,17,18,array(19,20,21,array(22,23,24,array(25,26,27,array(28,29,30,array(31,32,33,array(34,35,36,array(37,38,39,array(40,41,42,array(43,44,45,array(46,47,48,array(49,50,51,array(52,53,54,array(55,56,57,array(58,59,60,array(61,62,63,array(64,65,66,array(67,68,69,array(70,71,72,array(73,74,75,array(76,77,78,array(79,80,81,array(82,83,84,array(85,86,87,array(88,89,90,array(91,92,93,array(94,95,96,array(97,98,99,array(100,101,102,array(103,104,105,array(106,107,108,array(109,110,111,array(112,113,114,array(115,116,117,array(118,119,120,array(121,122,123,array(124,125,126,array(127,128,129,array(130,131,132,array(133,134,135,array(136,137,138,array(139,140,141,array(142,143,144,array(145,146,147,array(148,149,150,",
    "    $max_length = 0;\n    $curr_length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $curr_length = Find_Max_Length($item);\n        } else {\n            $curr_length = 1;\n        }\n        if ($curr_length > $max_length) {\n            $max_length = $curr_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5]], 6, [7, 8, [9, 10, [11, 12]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $current_length = 0;\n    foreach($lst as $item) {\n        if(is_array($item)) {\n            $current_length = Find_Max_Length($item);\n        }\n        else {\n            $current_length = 1;\n        }\n        if($current_length > $max_length) {\n            $max_length = $current_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, 6, [7, 8, 9]]], 10];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, 3, [4, 5, 6, [7, 8, 9, [10, 11, 12, [13, 14, 15]]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $length = Find_Max_Length($item);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, 6, [7, 8, 9, 10]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $current_length = 0;\n    $current_element = null;\n    foreach ($lst as $element) {\n        if ($current_element === null) {\n            $current_element = $element;\n            $current_length = 1;\n        } else if ($current_element === $element) {\n            $current_length += 1;\n        } else {\n            $current_element = $element;\n            $current_length = 1;\n        }\n        if ($current_length > $max_length) {\n            $max_length = $current_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, 6, [7, 8, 9, 10]]], 11, 12, 13];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $curr_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $curr_length = Find_Max_Length($lst[$i]);\n        } else {\n            $curr_length = 1;\n        }\n        if ($curr_length > $max_length) {\n            $max_length = $curr_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, [6, 7, 8], 9, 10], 11, 12], 13, 14, 15];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $length = Find_Max_Length($item);\n        } else {\n            $length++;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\necho \"The length of the longest sublist is: \" . Find_Max_Length($lst) . \"\\n\";\n\n$lst = array(1, 2, 3, array(4, 5, 6, 7, 8, 9), 10, 11, 12);\necho \"The length of the longest sublist is: \" . Find_Max_Length($lst) . \"\\n\";\n\n$lst = array(1, 2, 3, array(4, 5, array(6, 7, 8, 9), 10, 11), 12, 13, 14);\necho \"The length of the longest sublist is: \" . Find_Max_Length($lst) . \"\\n\";",
    "    $max_length = 0;\n    $length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $length = Find_Max_Length($item);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, 4], [5, 6, [7, 8, 9, [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $length = Find_Max_Length($item);\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n        }\n    }\n    return $max_length + 1;\n}\n\n$lst = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    foreach($lst as $item) {\n        if(is_array($item)) {\n            $length = Find_Max_Length($item);\n        } else {\n            $length = 1;\n        }\n        if($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, [3, 4], 5], [6, 7], 8, [9, [10, 11]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $length = Find_Max_Length($item);\n        } else {\n            $length++;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, [6, 7, 8, [9, 10]]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $length = Find_Max_Length($item);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3], [4, [5, 6, [7, 8, 9]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, 6, [7, 8, 9]]], 10, 11, 12];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $count = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $count += 1;\n            $count += Find_Max_Length($item);\n        } else {\n            $count += 1;\n        }\n        if ($count > $max_length) {\n            $max_length = $count;\n        }\n        $count = 0;\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, 3, [4, 5, 6, [7, 8, 9, [10, 11, 12, [13, 14, 15, [16, 17, 18, [19, 20, 21, [22, 23, 24, [25, 26, 27, [28, 29, 30, [31, 32, 33, [34, 35, 36, [37, 38, 39, [40, 41, 42, [43, 44, 45, [46, 47, 48, [49, 50, 51, [52, 53, 54, [55, 56, 57, [58, 59, 60, [61, 62, 63, [64, 65, 66, [67, 68, 69, [70, 71, 72, [73, 74, 75, [76, 77, 78, [79, 80, 81, [82, 83, 84, [85, 86, 87, [88, 89, 90, [91, 92, 93, [94, 95, 96, [97, 98, 99, [100, 101, 102, [103, 104, 105, [106, 107, 108, [109, 110, 111, [112, 113, 114, [115, 116, 117, [118, 119, 120, [121, 122, 123, [124, 125, 126, [127, 128, 129, [130, 131, 132, [133, 134, 135, [136, 137, 138, [139, 140, 141, [142, 143, 144, [145, 146, 147, [148, 149, 150, [151, 152, 153, [154, 155, 156, [157, 158, 159, [160, 161, 162, [163, 164, 165, [166",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho Find_Max_Length($lst);\necho \"<br>\";\n\n$lst = array(1, 2, array(3, 4, array(5, 6, 7, 8, 9, 10)));\necho Find_Max_Length($lst);\necho \"<br>\";\n\n$lst = array(1, 2, array(3, 4, array(5, 6, 7, 8, 9, 10), 11, 12), 13, 14, 15);\necho Find_Max_Length($lst);\necho \"<br>\";\n\n$lst = array(1, 2, array(3, 4, array(5, 6, 7, 8, 9, 10), 11, 12), 13, 14, 15, array(16, 17, 18, 19, 20));\necho Find_Max_Length($lst);\necho \"<br>\";\n\n$lst = array(1, 2, array(3, 4, array(5, 6, 7, 8, 9, 10), 11, 12), 13, 14, 15, array(16, 17, 18, 19, 20), 21, 22, 23, 24, 25);\necho Find_Max_Length($lst);\necho \"<br>\";\n\n$lst = array(1, 2, array(3, 4, array(5, 6, 7, 8, 9, 10), 11, 12), 13, 14, 15, array(16, 17, 18, 19, 20), 21, 22, 23, 24, 25, array(26, 27, 28, 29, 30, 31, 32, 33, 34,",
    "    $max = 0;\n    $count = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $count = Find_Max_Length($lst[$i]);\n        } else {\n            $count = 1;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n$lst = array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array",
    "    $max_length = 0;\n    $length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $length = Find_Max_Length($item);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3], [4, [5, 6, [7, 8, 9]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, 6, [7, 8, 9, [10, 11, 12, [13, 14, 15, [16, 17, 18, [19, 20, 21, [22, 23, 24, [25, 26, 27, [28, 29, 30, [31, 32, 33, [34, 35, 36, [37, 38, 39, [40, 41, 42, [43, 44, 45, [46, 47, 48, [49, 50, 51, [52, 53, 54, [55, 56, 57, [58, 59, 60, [61, 62, 63, [64, 65, 66, [67, 68, 69, [70, 71, 72, [73, 74, 75, [76, 77, 78, [79, 80, 81, [82, 83, 84, [85, 86, 87, [88, 89, 90, [91, 92, 93, [94, 95, 96, [97, 98, 99, [100, 101, 102, [103, 104, 105, [106, 107, 108, [109, 110, 111, [112, 113, 114, [115, 116, 117, [118, 119, 120, [121, 122, 123, [124, 125, 126, [127, 128, 129, [130, 131, 132, [133, 134, 135, [136, 137, 138, [139, 140, 141, [142, 143, 144, [145, 146, 147, [148, 149, 150, [151, 152, 153, [154, 155, 156, [157, 158, 159, [160, 161, 162, [",
    "    $max_len = 0;\n    $len = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $len = Find_Max_Length($lst[$i]);\n            if ($len > $max_len) {\n                $max_len = $len;\n            }\n        }\n    }\n    return $max_len + 1;\n}\n\n$lst = [1, [2, 3, [4, 5, 6, [7, 8, 9]]]];\necho Find_Max_Length($lst);",
    "\t$max_len = 0;\n\t$len = 0;\n\tfor ($i = 0; $i < count($lst); $i++) {\n\t\tif (is_array($lst[$i])) {\n\t\t\t$len = Find_Max_Length($lst[$i]);\n\t\t} else {\n\t\t\t$len = 1;\n\t\t}\n\t\tif ($len > $max_len) {\n\t\t\t$max_len = $len;\n\t\t}\n\t}\n\treturn $max_len;\n}\n\n$lst = [1, [2, 3, [4, 5, 6, [7, 8, 9, 10, [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]]]]];\n\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $length = Find_Max_Length($item);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, [3, 4, [5, 6, 7, [8, 9, 10]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $cur_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $cur_length = Find_Max_Length($lst[$i]);\n        } else {\n            $cur_length = 1;\n        }\n        if ($cur_length > $max_length) {\n            $max_length = $cur_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3], [4, [5, 6, [7, 8, 9]]]];\necho Find_Max_Length($lst);",
    "\t$max_len = 0;\n\t$cur_len = 0;\n\t$lst_len = count($lst);\n\tfor ($i = 0; $i < $lst_len; $i++) {\n\t\tif (is_array($lst[$i])) {\n\t\t\t$cur_len = Find_Max_Length($lst[$i]);\n\t\t} else {\n\t\t\t$cur_len = 1;\n\t\t}\n\t\tif ($cur_len > $max_len) {\n\t\t\t$max_len = $cur_len;\n\t\t}\n\t}\n\treturn $max_len;\n}\n\n$lst = array(1, 2, 3, array(4, 5, array(6, 7, 8, array(9, 10))));\necho Find_Max_Length($lst);",
    "    $max_len = 0;\n    $curr_len = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $curr_len = Find_Max_Length($lst[$i]);\n        } else {\n            $curr_len = 1;\n        }\n        if ($curr_len > $max_len) {\n            $max_len = $curr_len;\n        }\n    }\n    return $max_len;\n}\n\n$lst = [1, [2, [3, [4, [5, [6, [7, [8, [9, [10]]]]]]]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $max_length_lst = [];\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $length = Find_Max_Length($item);\n            if ($length > $max_length) {\n                $max_length = $length;\n                $max_length_lst = $item;\n            }\n        }\n    }\n    return $max_length + 1;\n}\n\n$lst = [1, [2, 3], [4, [5, 6, [7, 8]]], 9];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, 3, [4, 5, 6, [7, 8, 9, [10, 11, 12, [13, 14, 15, [16, 17, 18, [19, 20, 21, [22, 23, 24, [25, 26, 27, [28, 29, 30]]]]]]]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $current_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $current_length = Find_Max_Length($lst[$i]);\n        } else {\n            $current_length = 1;\n        }\n        if ($current_length > $max_length) {\n            $max_length = $current_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3], [4, [5, 6, [7, 8]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $max_sublist = [];\n    $sublist = [];\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $sublist = $item;\n            $length = count($sublist);\n            if ($length > $max_length) {\n                $max_length = $length;\n                $max_sublist = $sublist;\n            }\n        }\n    }\n    return $max_sublist;\n}\n\n$lst = [1, 2, [3, 4, 5], [6, 7, 8, 9, 10], 11, 12, 13, [14, 15, 16, 17, 18, 19, 20]];\n$max_sublist = Find_Max_Length($lst);\nprint_r($max_sublist);",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, 6, [7, 8, 9, [10, 11, 12, [13, 14, 15, [16, 17, 18, [19, 20, 21, [22, 23, 24, [25, 26, 27, [28, 29, 30, [31, 32, 33, [34, 35, 36, [37, 38, 39, [40, 41, 42, [43, 44, 45, [46, 47, 48, [49, 50, 51, [52, 53, 54, [55, 56, 57, [58, 59, 60, [61, 62, 63, [64, 65, 66, [67, 68, 69, [70, 71, 72, [73, 74, 75, [76, 77, 78, [79, 80, 81, [82, 83, 84, [85, 86, 87, [88, 89, 90, [91, 92, 93, [94, 95, 96, [97, 98, 99, [100, 101, 102, [103, 104, 105, [106, 107, 108, [109, 110, 111, [112, 113, 114, [115, 116, 117, [118, 119, 120, [121, 122, 123, [124, 125, 126, [127, 128, 129, [130, 131, 132, [133, 134, 135, [136, 137, 138, [139, 140, 141, [142, 143, 144, [145, 146, 147, [148, 149, 150, [151, 152, 153, [154, 155, 156, [157, 158, 159, [160, 161, 162, [163, 164,",
    "    $max_length = 0;\n    $temp_length = 0;\n    for($i = 0; $i < count($lst); $i++) {\n        if(is_array($lst[$i])) {\n            $temp_length = Find_Max_Length($lst[$i]);\n        }\n        else {\n            $temp_length = 1;\n        }\n        if($temp_length > $max_length) {\n            $max_length = $temp_length;\n        }\n    }\n    return $max_length;\n}\n$lst = [1,2,3,[4,5,6,[7,8,9]]];\necho Find_Max_Length($lst);",
    "    $max = 0;\n    $count = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $count = Find_Max_Length($lst[$i]);\n        } else {\n            $count = 1;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $current_length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $current_length = Find_Max_Length($item);\n        } else {\n            $current_length = 1;\n        }\n        if ($current_length > $max_length) {\n            $max_length = $current_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, 6, [7, 8, 9, [10, 11, 12, [13, 14, 15, [16, 17, 18, [19, 20, 21, [22, 23, 24, [25, 26, 27, [28, 29, 30, [31, 32, 33, [34, 35, 36, [37, 38, 39, [40, 41, 42, [43, 44, 45, [46, 47, 48, [49, 50, 51, [52, 53, 54, [55, 56, 57, [58, 59, 60, [61, 62, 63, [64, 65, 66, [67, 68, 69, [70, 71, 72, [73, 74, 75, [76, 77, 78, [79, 80, 81, [82, 83, 84, [85, 86, 87, [88, 89, 90, [91, 92, 93, [94, 95, 96, [97, 98, 99, [100, 101, 102, [103, 104, 105, [106, 107, 108, [109, 110, 111, [112, 113, 114, [115, 116, 117, [118, 119, 120, [121, 122, 123, [124, 125, 126, [127, 128, 129, [130, 131, 132, [133, 134, 135, [136, 137, 138, [139, 140, 141, [142, 143, 144, [145, 146, 147, [148, 149, 150, [151, 152, 153, [154, 155, 156, [157, 158, 159, [160, 161, 162, [163, 164, 165, [166, 167,",
    "\t$max_length = 0;\n\t$current_length = 0;\n\t$current_element = \"\";\n\tforeach ($lst as $element) {\n\t\tif ($current_element == $element) {\n\t\t\t$current_length++;\n\t\t} else {\n\t\t\t$current_length = 1;\n\t\t\t$current_element = $element;\n\t\t}\n\t\tif ($current_length > $max_length) {\n\t\t\t$max_length = $current_length;\n\t\t}\n\t}\n\treturn $max_length;\n}\n\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, [6, 7, [8, 9, 10]]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == '0') {\n            $length = 0;\n        } else {\n            $length++;\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = array
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, [6, 7, 8], 9, 10], 11, 12], 13, 14, 15];\necho Find_Max_Length($lst);",
    "    $max = 0;\n    $count = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $count = Find_Max_Length($lst[$i]);\n        } else {\n            $count = 1;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$lst = [1, 2, 3, [4, 5, 6, [7, 8, 9, [10, 11, 12, [13, 14, 15]]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $current_length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $current_length = Find_Max_Length($item);\n        } else {\n            $current_length = 1;\n        }\n        if ($current_length > $max_length) {\n            $max_length = $current_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, 3, [4, 5, 6, [7, 8, 9, [10, 11, 12, [13, 14, 15]]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $current_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $current_length = Find_Max_Length($lst[$i]);\n        } else {\n            $current_length = 1;\n        }\n        if ($current_length > $max_length) {\n            $max_length = $current_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, 6, [7, 8, 9]]], 10, 11, [12, 13, [14, 15, 16, [17, 18, 19]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $length = Find_Max_Length($item);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $current_length = 0;\n    $current_element = null;\n    $previous_element = null;\n    foreach ($lst as $element) {\n        if ($current_element == null) {\n            $current_element = $element;\n            $current_length = 1;\n        } else {\n            if ($element == $current_element) {\n                $current_length++;\n            } else {\n                if ($current_length > $max_length) {\n                    $max_length = $current_length;\n                }\n                $current_element = $element;\n                $current_length = 1;\n            }\n        }\n    }\n    if ($current_length > $max_length) {\n        $max_length = $current_length;\n    }\n    return $max_length;\n}\n",
    "    $max = 0;\n    $count = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $count = count($lst[$i]);\n        } else {\n            $count = 1;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n$lst = [1, [2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12, 13]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $current_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $current_length = Find_Max_Length($lst[$i]);\n        } else {\n            $current_length = 1;\n        }\n        if ($current_length > $max_length) {\n            $max_length = $current_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, [3, [4, [5, [6, [7, [8, [9, [10]]]]]]]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $sub_list = [];\n    $sub_list_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $sub_list = $lst[$i];\n            $sub_list_length = count($sub_list);\n            if ($sub_list_length > $max_length) {\n                $max_length = $sub_list_length;\n            }\n        }\n    }\n    return $max_length;\n}\n$lst = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $curr_length = 0;\n    $prev_item = null;\n    foreach ($lst as $item) {\n        if ($item != $prev_item) {\n            $curr_length = 1;\n        } else {\n            $curr_length += 1;\n        }\n        $prev_item = $item;\n        if ($curr_length > $max_length) {\n            $max_length = $curr_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, 3, 3, 3, 3, 4, 3, 3];\necho Find_Max_Length($lst);",
    "    $max = 0;\n    $count = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $count = count($lst[$i]);\n        } else {\n            $count = 1;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n$lst = [1, 2, 3, [4, 5, 6], 7, 8, 9, [10, 11, 12, 13, 14], 15, 16, 17, 18, 19, 20];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho Find_Max_Length($lst);",
    "    $max_len = 0;\n    $cur_len = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $cur_len = Find_Max_Length($lst[$i]);\n        } else {\n            $cur_len = 1;\n        }\n        if ($cur_len > $max_len) {\n            $max_len = $cur_len;\n        }\n    }\n    return $max_len;\n}\n\n$lst = [1, [2, 3, [4, 5, 6, [7, 8, 9, 10]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, [3, 4, [5, 6, 7, 8, [9, 10, 11, 12]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $length = Find_Max_Length($item);\n        } else {\n            $length++;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho Find_Max_Length($lst);",
    "    $max_len = 0;\n    $curr_len = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $curr_len = Find_Max_Length($lst[$i]);\n        } else {\n            $curr_len = 1;\n        }\n        if ($curr_len > $max_len) {\n            $max_len = $curr_len;\n        }\n    }\n    return $max_len;\n}\n\n$lst = [1, [2, 3, [4, 5, [6, 7, 8]]], 9, 10];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        }\n        else {\n            $length += 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, [3, [4, [5, [6, [7, [8, [9, [10]]]]]]]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, [6, 7, 8]]], [9, 10, [11, 12, [13, 14, 15]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    foreach ($lst as $sublist) {\n        $max_length = max($max_length, count($sublist));\n    }\n    return $max_length;\n}\n",
    "    $max = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        $count = 0;\n        for ($j = 0; $j < count($lst[$i]); $j++) {\n            $count++;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$lst = [[1, 2, 3, 4], [1, 2, 3], [1, 2, 3, 4, 5, 6, 7]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $current_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $current_length = Find_Max_Length($lst[$i]);\n        } else {\n            $current_length = 1;\n        }\n        if ($current_length > $max_length) {\n            $max_length = $current_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, 3, [4, 5, 6, [7, 8, 9, [10, 11, 12, [13, 14, 15]]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $current_length = 0;\n    $current_list = [];\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $current_list[] = $item;\n            $current_length++;\n        } else {\n            if ($current_length > $max_length) {\n                $max_length = $current_length;\n            }\n            $current_length = 0;\n            $current_list = [];\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, 3, [4, 5, 6, [7, 8, 9, [10, 11, 12, [13, 14, 15]]]]];\necho Find_Max_Length($lst);\n",
    "\t$max_length = 0;\n\t$length = 0;\n\tfor ($i = 0; $i < count($lst); $i++) {\n\t\tif (is_array($lst[$i])) {\n\t\t\t$length = Find_Max_Length($lst[$i]);\n\t\t\tif ($length > $max_length) {\n\t\t\t\t$max_length = $length;\n\t\t\t}\n\t\t}\n\t}\n\treturn $max_length + 1;\n}\n\n$lst = [1, 2, 3, [4, 5, 6, [7, 8, 9, [10, 11, 12]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $current_length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $current_length = Find_Max_Length($item);\n        } else {\n            $current_length = 1;\n        }\n        if ($current_length > $max_length) {\n            $max_length = $current_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1,2,[3,4,[5,6,7,[8,9,10]]]];\necho Find_Max_Length($lst);\n",
    "    $max_len = 0;\n    $len = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $len = Find_Max_Length($lst[$i]);\n        } else {\n            $len = 1;\n        }\n        if ($len > $max_len) {\n            $max_len = $len;\n        }\n    }\n    return $max_len;\n}\n\n$lst = [1, [2, 3], [4, [5, 6, [7, 8, 9]]]];\necho \"The length of the longest sublist is: \" . Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $length = Find_Max_Length($item);\n        } else {\n            $length += 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, 3, [4, 5, [6, 7, 8, [9, 10]]]];\necho Find_Max_Length($lst);",
    "    $max = 0;\n    $count = 0;\n    foreach($lst as $item) {\n        if(is_array($item)) {\n            $count += 1;\n        } else {\n            $count = 0;\n        }\n        $max = max($max, $count);\n    }\n    return $max;\n}\n\n$lst = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $cur_length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $cur_length = Find_Max_Length($item);\n        } else {\n            $cur_length = 1;\n        }\n        if ($cur_length > $max_length) {\n            $max_length = $cur_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, [3, [4, [5, [6, [7, [8, [9, [10]]]]]]]]]];\necho Find_Max_Length($lst);",
    "    $max_len = 0;\n    $curr_len = 0;\n    $prev_item = null;\n    foreach($lst as $item) {\n        if ($item != $prev_item) {\n            $curr_len = 0;\n        }\n        $curr_len++;\n        $max_len = max($max_len, $curr_len);\n        $prev_item = $item;\n    }\n    return $max_len;\n}\n\n$lst = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20);\n$lst = array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array(1, 2, 3, array",
    "    $max_length = 0;\n    $current_length = 0;\n    $previous_element = null;\n    foreach ($lst as $element) {\n        if ($element == $previous_element) {\n            $current_length++;\n        } else {\n            $current_length = 1;\n        }\n        $previous_element = $element;\n        if ($current_length > $max_length) {\n            $max_length = $current_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188",
    "    $max_len = 0;\n    $curr_len = 0;\n    $lst_len = count($lst);\n    for($i = 0; $i < $lst_len; $i++) {\n        if(is_array($lst[$i])) {\n            $curr_len = Find_Max_Length($lst[$i]);\n        } else {\n            $curr_len = 1;\n        }\n        if($curr_len > $max_len) {\n            $max_len = $curr_len;\n        }\n    }\n    return $max_len;\n}\n\n$lst = [1,2,[3,4,[5,6]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, 6], 7, 8], 9, 10];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $sublist = [];\n    $sublist_length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $sublist_length = Find_Max_Length($item);\n        } else {\n            $sublist_length = 1;\n        }\n        if ($sublist_length > $max_length) {\n            $max_length = $sublist_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, [3, 4, [5, 6, 7], 8], 9], 10];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $current_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $current_length = Find_Max_Length($lst[$i]);\n        } else {\n            $current_length = 1;\n        }\n        if ($current_length > $max_length) {\n            $max_length = $current_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, 3, [4, 5, 6, [7, 8, 9]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    $prev_item = null;\n    foreach ($lst as $item) {\n        if ($prev_item !== null && $item > $prev_item) {\n            $length++;\n        } else {\n            $length = 1;\n        }\n        $max_length = max($max_length, $length);\n        $prev_item = $item;\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\necho Find_Max_Length($lst);\n",
    "    $max_length = 0;\n    $length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $length = Find_Max_Length($item);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, [6, 7, 8, [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198,",
    "    $max = 0;\n    $count = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $count = count($lst[$i]);\n        } else {\n            $count = 1;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$lst = [1, [2, 3, 4], 5, [6, 7, 8, 9, 10], 11];\necho Find_Max_Length($lst);",
    "    $max_len = 0;\n    $curr_len = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $curr_len = Find_Max_Length($lst[$i]);\n        } else {\n            $curr_len = 1;\n        }\n        if ($curr_len > $max_len) {\n            $max_len = $curr_len;\n        }\n    }\n    return $max_len;\n}\n\n$lst = [[1, 2, 3], [4, 5], [6, 7, 8, 9]];\necho Find_Max_Length($lst);",
    "\t$max = 0;\n\t$count = 0;\n\tfor ($i = 0; $i < count($lst); $i++) {\n\t\tif (is_array($lst[$i])) {\n\t\t\t$count = Find_Max_Length($lst[$i]);\n\t\t} else {\n\t\t\t$count = 1;\n\t\t}\n\t\tif ($count > $max) {\n\t\t\t$max = $count;\n\t\t}\n\t}\n\treturn $max;\n}\n\n$lst = [1, [2, 3, [4, 5, [6, 7, 8]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $current_length = 0;\n    $previous_element = null;\n    foreach ($lst as $element) {\n        if ($element == $previous_element) {\n            $current_length++;\n        } else {\n            $current_length = 1;\n        }\n        if ($current_length > $max_length) {\n            $max_length = $current_length;\n        }\n        $previous_element = $element;\n    }\n    return $max_length;\n}\n\n$lst = [1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        }\n        else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3], [4, [5, 6, [7, 8, 9]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191,",
    "    $max_length = 0;\n    $count = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $count = Find_Max_Length($lst[$i]);\n        } else {\n            $count = 1;\n        }\n        if ($count > $max_length) {\n            $max_length = $count;\n        }\n    }\n    return $max_length;\n}\n$lst = array(1, 2, 3, array(4, 5, 6, array(7, 8, 9, array(10, 11, 12))));\necho Find_Max_Length($lst);",
    "    $max_len = 0;\n    $curr_len = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if (is_array($lst[$i])) {\n            $curr_len = Find_Max_Length($lst[$i]);\n        }\n        else {\n            $curr_len = 1;\n        }\n        if ($curr_len > $max_len) {\n            $max_len = $curr_len;\n        }\n        $i++;\n    }\n    return $max_len;\n}\n\n$lst = [1, 2, 3, 4, [5, 6, 7, 8, [9, 10, 11, 12, [13, 14, 15, 16, [17, 18, 19, 20, [21, 22, 23, 24, [25, 26, 27, 28, [29, 30, 31, 32, [33, 34, 35, 36, [37, 38, 39, 40, [41, 42, 43, 44, [45, 46, 47, 48, [49, 50, 51, 52, [53, 54, 55, 56, [57, 58, 59, 60, [61, 62, 63, 64, [65, 66, 67, 68, [69, 70, 71, 72, [73, 74, 75, 76, [77, 78, 79, 80, [81, 82, 83, 84, [85, 86, 87, 88, [89, 90, 91, 92, [93, 94, 95, 96, [97, 98, 99, 100, [101, 102, 103, 104, [105, 106, 107, 108, [109, 110, 111, 112, [113, 114, 115, 116, [117, 118, 119, 120, [121, 122, 123, 124, [125, 126, 127, 128, [129, 130, 131, 132, [133, 134, 135, 136, [137, 138, 139, 140, [141, 142, 143, 144, [145, 146, 147, 148, [149, 150, 151, 152, [153, 154, 155, 156, [157, 158, 159, 160, [161,",
    "    $max_length = 0;\n    $current_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $current_length = Find_Max_Length($lst[$i]);\n        } else {\n            $current_length = 1;\n        }\n        if ($current_length > $max_length) {\n            $max_length = $current_length;\n        }\n    }\n    return $max_length;\n}\n$lst
    "    $max_length = 0;\n    $current_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $current_length = Find_Max_Length($lst[$i]);\n        } else {\n            $current_length = 1;\n        }\n        if ($current_length > $max_length) {\n            $max_length = $current_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, [6, 7, 8]]], 9];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    $lst_length = count($lst);\n    for ($i = 0; $i < $lst_length; $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, 3, [4, 5, [6, 7, 8]], 9, 10];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $length = Find_Max_Length($item);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, [3, [4, [5, [6, [7, [8, [9, [10]]]]]]]]]];\necho Find_Max_Length($lst);\n",
    "    $max_length = 0;\n    $curr_length = 0;\n    $prev_item = null;\n    foreach ($lst as $item) {\n        if ($item == $prev_item) {\n            $curr_length++;\n        } else {\n            $curr_length = 1;\n        }\n        if ($curr_length > $max_length) {\n            $max_length = $curr_length;\n        }\n        $prev_item = $item;\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, 3, 3, 3, 3, 4, 4, 5, 5, 5];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $curr_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $curr_length = Find_Max_Length($lst[$i]);\n        } else {\n            $curr_length = 1;\n        }\n        if ($curr_length > $max_length) {\n            $max_length = $curr_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, [3, [4, [5, [6, [7, [8, [9, [10]]]]]]]]]];\necho Find_Max_Length($lst);",
    "    $max = 0;\n    $count = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $count += 1;\n            $count += Find_Max_Length($item);\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n        $count = 0;\n    }\n    return $max;\n}\n\n$lst = [1, [2, 3, [4, 5, [6, 7, 8, 9, 10]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $length = Find_Max_Length($item);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 2, 3, array(4, 5, array(6, 7, 8, array(9, 10))));\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $curr_length = 0;\n    $prev_element = null;\n    foreach ($lst as $element) {\n        if ($element != $prev_element) {\n            $curr_length = 1;\n        } else {\n            $curr_length += 1;\n        }\n        $max_length = max($max_length, $curr_length);\n        $prev_element = $element;\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, 3, 3, 3, 3, 4, 3, 3];\n$result = Find_Max_Length($lst);\necho $result;",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, [3, 4, [5, 6, 7, [8, 9, 10]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n        }\n    }\n    return $max_length + 1;\n}\n\n$lst = [1, [2, 3, [4, 5, [6, 7, [8, 9, [10, 11, [12, 13, [14, 15, [16, 17, [18, 19, [20, 21, [22, 23, [24, 25, [26, 27, [28, 29, [30, 31, [32, 33, [34, 35, [36, 37, [38, 39, [40, 41, [42, 43, [44, 45, [46, 47, [48, 49, [50, 51, [52, 53, [54, 55, [56, 57, [58, 59, [60, 61, [62, 63, [64, 65, [66, 67, [68, 69, [70, 71, [72, 73, [74, 75, [76, 77, [78, 79, [80, 81, [82, 83, [84, 85, [86, 87, [88, 89, [90, 91, [92, 93, [94, 95, [96, 97, [98, 99, [100, 101, [102, 103, [104, 105, [106, 107, [108, 109, [110, 111, [112, 113, [114, 115, [116, 117, [118, 119, [120, 121, [122, 123, [124, 125, [126, 127, [128, 129, [130, 131, [132, 133, [134, 135, [136, 137, [138, 139, [140, 141, [142, 143, [144, 145, [146, 147, [148, 149, [150, 151, [152, 153, [154, 155, [156, 157, [",
    "    $max_len = 0;\n    $curr_len = 0;\n    $prev_item = null;\n    foreach ($lst as $item) {\n        if ($prev_item === null) {\n            $curr_len = 1;\n        } else if ($item > $prev_item) {\n            $curr_len++;\n        } else {\n            $curr_len = 1;\n        }\n        $max_len = max($max_len, $curr_len);\n        $prev_item = $item;\n    }\n    return $max_len;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181,",
    "    $max_length = 0;\n    $current_length = 0;\n    $current_element = $lst[0];\n    $previous_element = $lst[0];\n    for ($i = 0; $i < count($lst); $i++) {\n        $current_element = $lst[$i];\n        if ($current_element == $previous_element) {\n            $current_length++;\n        } else {\n            if ($current_length > $max_length) {\n                $max_length = $current_length;\n            }\n            $current_length = 1;\n        }\n        $previous_element = $current_element;\n    }\n    if ($current_length > $max_length) {\n        $max_length = $current_length;\n    }\n    return $max_length;\n}\n\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151,",
    "\t$max_len = 0;\n\t$len = 0;\n\tforeach ($lst as $item) {\n\t\tif (is_array($item)) {\n\t\t\t$len = Find_Max_Length($item);\n\t\t\tif ($len > $max_len) {\n\t\t\t\t$max_len = $len;\n\t\t\t}\n\t\t} else {\n\t\t\t$len += 1;\n\t\t}\n\t}\n\treturn $max_len;\n}\n\n$lst = array(1,2,3,4,5,6,7,8,9,10);\n$lst2 = array(1,2,3,4,5,6,7,8,9,10,array(1,2,3,4,5,6,7,8,9,10));\n$lst3 = array(1,2,3,4,5,6,7,8,9,10,array(1,2,3,4,5,6,7,8,9,10,array(1,2,3,4,5,6,7,8,9,10)));\n$lst4 = array(1,2,3,4,5,6,7,8,9,10,array(1,2,3,4,5,6,7,8,9,10,array(1,2,3,4,5,6,7,8,9,10,array(1,2,3,4,5,6,7,8,9,10))));\n\necho Find_Max_Length($lst) . \"\\n\";\necho Find_Max_Length($lst2) . \"\\n\";\necho Find_Max_Length($lst3) . \"\\n\";\necho Find_Max_Length($lst4) . \"\\n\";",
    "    $max_length = 0;\n    $cur_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $cur_length = Find_Max_Length($lst[$i]);\n        } else {\n            $cur_length = 1;\n        }\n        if ($cur_length > $max_length) {\n            $max_length = $cur_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, [3, [4, [5, [6, [7, [8, [9, [10]]]]]]]]]];\necho Find_Max_Length($lst);",
    "    $max_len = 0;\n    $curr_len = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $curr_len = Find_Max_Length($lst[$i]);\n        } else {\n            $curr_len = 1;\n        }\n        if ($curr_len > $max_len) {\n            $max_len = $curr_len;\n        }\n    }\n    return $max_len;\n}\n\n$lst = [1,2,3,[4,5,6,[7,8,9,[10,11,12]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, 3, [4, 5, 6, [7, 8, 9, [10, 11, 12, [13, 14, 15]]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, 3, [4, 5, 6, [7, 8, 9, [10, 11, 12, [13, 14, 15]]]]];\necho Find_Max_Length($lst);",
    "    $max_len = 0;\n    $cur_len = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $cur_len = Find_Max_Length($lst[$i]);\n        } else {\n            $cur_len = 1;\n        }\n        if ($cur_len > $max_len) {\n            $max_len = $cur_len;\n        }\n    }\n    return $max_len;\n}\n\n$lst = array(1,2,3,4,5,6,7,8,9,10);\n$lst = array(array(1,2,3,4,5,6,7,8,9,10),array(1,2,3,4,5,6,7,8,9,10),array(1,2,3,4,5,6,7,8,9,10));\n$lst = array(array(1,2,3,4,5,6,7,8,9,10),array(1,2,3,4,5,6,7,8,9,10),array(1,2,3,4,5,6,7,8,9,10),array(1,2,3,4,5,6,7,8,9,10),array(1,2,3,4,5,6,7,8,9,10),array(1,2,3,4,5,6,7,8,9,10),array(1,2,3,4,5,6,7,8,9,10),array(1,2,3,4,5,6,7,8,9,10),array(1,2,3,4,5,6,7,8,9,10),array(1,2,3,4,5,6,7,8,9,10));\n$lst = array(array(array(1,2,3,4,5,6,7,8,9,10),array(1,2,3,4,5,6,7,8,9,10",
    "    $max_length = 0;\n    $length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $length = Find_Max_Length($item);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, 4], [5, 6], [7, 8, 9, 10]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length++;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n$lst = [1, [2, 3, [4, 5, 6, [7, 8, 9, 10]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\necho Find_Max_Length($lst);",
    "    $max_len = 0;\n    $cur_len = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $cur_len = Find_Max_Length($lst[$i]);\n        } else {\n            $cur_len = 1;\n        }\n        if ($cur_len > $max_len) {\n            $max_len = $cur_len;\n        }\n    }\n    return $max_len;\n}\n\n$lst = array(1, 2, 3, array(4, 5, array(6, 7, 8, array(9, 10))));\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $length = Find_Max_Length($item);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, [6, 7, [8, 9, [10, 11]]]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] != \"\") {\n            $length++;\n        } else {\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n            $length = 0;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = array
    "    $max = 0;\n    $len = count($lst);\n    for ($i = 0; $i < $len; $i++) {\n        $count = 0;\n        for ($j = $i; $j < $len; $j++) {\n            if (is_array($lst[$j])) {\n                $count++;\n            } else {\n                break;\n            }\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$lst = [1, 2, 3, [4, 5, 6, [7, 8, 9]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    foreach($lst as $item) {\n        if(is_array($item)) {\n            $length = Find_Max_Length($item);\n            if($length > $max_length) {\n                $max_length = $length;\n            }\n        }\n        else {\n            $length++;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1,2,3,4,5,6,7,8,9,10];\n$lst = [1,2,3,4,5,6,7,8,9,10,[1,2,3,4,5,6,7,8,9,10]];\n$lst = [1,2,3,4,5,6,7,8,9,10,[1,2,3,4,5,6,7,8,9,10,[1,2,3,4,5,6,7,8,9,10]]];\n$lst = [1,2,3,4,5,6,7,8,9,10,[1,2,3,4,5,6,7,8,9,10,[1,2,3,4,5,6,7,8,9,10,[1,2,3,4,5,6,7,8,9,10]]]];\n$lst = [1,2,3,4,5,6,7,8,9,10,[1,2,3,4,5,6,7,8,9,10,[1,2,3,4,5,6,7,8,9,10,[1,2,3,4,5,6,7,8,9,10,[1,2,3,4,5,6,7,8,9,10,[1,2,3,4,5,6,7,8,9,10,[1,2,3,4,5,6,7,8,9,10,[1,2,3,4,5,6,7,8,9,10,[1,2,3,4,5,6,",
    "    $max_length = 0;\n    $curr_length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $curr_length = Find_Max_Length($item);\n        } else {\n            $curr_length = 1;\n        }\n        if ($curr_length > $max_length) {\n            $max_length = $curr_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, 6, [7, 8, 9, [10, 11, 12, [13, 14, 15]]]]]];\necho Find_Max_Length($lst);",
    "  $max_length = 0;\n  $current_length = 0;\n  foreach ($lst as $item) {\n    if (is_array($item)) {\n      $current_length = Find_Max_Length($item);\n    } else {\n      $current_length = 1;\n    }\n    if ($current_length > $max_length) {\n      $max_length = $current_length;\n    }\n  }\n  return $max_length;\n}\n\n$lst = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $current_length = 0;\n    for ($i=0; $i < count($lst); $i++) { \n        if (is_array($lst[$i])) {\n            $current_length = Find_Max_Length($lst[$i]);\n        }\n        else {\n            $current_length = 1;\n        }\n        if ($current_length > $max_length) {\n            $max_length = $current_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1,2,3,4,5,6,7,8,9,10];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $length = Find_Max_Length($item);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, [3, [4, [5, [6, [7, [8, [9, [10]]]]]]]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $temp_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $temp_length = Find_Max_Length($lst[$i]);\n        }\n        else {\n            $temp_length = 1;\n        }\n        if ($temp_length > $max_length) {\n            $max_length = $temp_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, [6, 7, 8, 9, 10]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $length = Find_Max_Length($item);\n        } else {\n            $length += 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, 3, [4, 5, 6, [7, 8, 9, [10, 11, 12, [13, 14, 15, [16, 17, 18, [19, 20, 21, [22, 23, 24, [25, 26, 27, [28, 29, 30, [31, 32, 33, [34, 35, 36, [37, 38, 39, [40, 41, 42, [43, 44, 45, [46, 47, 48, [49, 50, 51, [52, 53, 54, [55, 56, 57, [58, 59, 60, [61, 62, 63, [64, 65, 66, [67, 68, 69, [70, 71, 72, [73, 74, 75, [76, 77, 78, [79, 80, 81, [82, 83, 84, [85, 86, 87, [88, 89, 90, [91, 92, 93, [94, 95, 96, [97, 98, 99, [100, 101, 102, [103, 104, 105, [106, 107, 108, [109, 110, 111, [112, 113, 114, [115, 116, 117, [118, 119, 120, [121, 122, 123, [124, 125, 126, [127, 128, 129, [130, 131, 132, [133, 134, 135, [136, 137, 138, [139, 140, 141, [142, 143, 144, [145, 146, 147, [148, 149, 150, [151, 152, 153, [154, 155, 156, [157, 158, 159, [160, 161, 162, [163, 164, 165, [166, 167, 168, [169, 170, 171, [172",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, 6, [7, 8, 9, 10, [11, 12, 13, 14, [15, 16, 17, 18, 19, 20]]]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        $max_length = max($max_length, count($lst[$i]));\n    }\n    return $max_length;\n}\n\n$lst = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst
    "    $max_length = 0;\n    $length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $length = Find_Max_Length($item);\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n        } else {\n            $length += 1;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5]], 6, [7, [8, 9]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $current_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $current_length = Find_Max_Length($lst[$i]);\n        } else {\n            $current_length = 1;\n        }\n        if ($current_length > $max_length) {\n            $max_length = $current_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, 6, [7, 8, 9]]]];\necho Find_Max_Length($lst);",
    "    $max_len = 0;\n    $len = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $len = Find_Max_Length($lst[$i]);\n        } else {\n            $len = 1;\n        }\n        if ($len > $max_len) {\n            $max_len = $len;\n        }\n    }\n    return $max_len;\n}\n\n$lst = [1, [2, 3, [4, 5, [6, 7, [8, 9, [10, 11, [12, 13, [14, 15, [16, 17, [18, 19, [20, 21, [22, 23, [24, 25, [26, 27, [28, 29, [30, 31, [32, 33, [34, 35, [36, 37, [38, 39, [40, 41, [42, 43, [44, 45, [46, 47, [48, 49, [50, 51, [52, 53, [54, 55, [56, 57, [58, 59, [60, 61, [62, 63, [64, 65, [66, 67, [68, 69, [70, 71, [72, 73, [74, 75, [76, 77, [78, 79, [80, 81, [82, 83, [84, 85, [86, 87, [88, 89, [90, 91, [92, 93, [94, 95, [96, 97, [98, 99, [100]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]",
    "    $max = 0;\n    $count = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $count = Find_Max_Length($lst[$i]);\n        } else {\n            $count = $count + 1;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $current_length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $current_length = Find_Max_Length($item);\n        } else {\n            $current_length += 1;\n        }\n        if ($current_length > $max_length) {\n            $max_length = $current_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, [6, 7, 8], 9], 10], 11, 12];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $current_length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $current_length = Find_Max_Length($item);\n        } else {\n            $current_length = 1;\n        }\n        if ($current_length > $max_length) {\n            $max_length = $current_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10, [11, 12, [13, 14, [15, 16, [17, 18, [19, 20, [21, 22, [23, 24, [25, 26, [27, 28, [29, 30, [31, 32, [33, 34, [35, 36, [37, 38, [39, 40, [41, 42, [43, 44, [45, 46, [47, 48, [49, 50, [51, 52, [53, 54, [55, 56, [57, 58, [59, 60, [61, 62, [63, 64, [65, 66, [67, 68, [69, 70, [71, 72, [73, 74, [75, 76, [77, 78, [79, 80, [81, 82, [83, 84, [85, 86, [87, 88, [89, 90, [91, 92, [93, 94, [95, 96, [97, 98, [99, 100, [101, 102, [103, 104, [105, 106, [107, 108, [109, 110, [111, 112, [113, 114, [115, 116, [117, 118, [119, 120, [121, 122, [123, 124, [125, 126, [127, 128, [129, 130, [131, 132, [133, 134, [135, 136, [137, 138, [139, 140, [141, 142, [143, 144, [145, 146, [147, 148, [149, 150, [151, 152, [153, 154, [155, 156, [",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, 6, [7, 8, 9, [10, 11, 12, [13, 14, 15, [16, 17, 18, [19, 20, 21, [22, 23, 24, [25, 26, 27, [28, 29, 30, [31, 32, 33, [34, 35, 36, [37, 38, 39, [40, 41, 42, [43, 44, 45, [46, 47, 48, [49, 50, 51, [52, 53, 54, [55, 56, 57, [58, 59, 60, [61, 62, 63, [64, 65, 66, [67, 68, 69, [70, 71, 72, [73, 74, 75, [76, 77, 78, [79, 80, 81, [82, 83, 84, [85, 86, 87, [88, 89, 90, [91, 92, 93, [94, 95, 96, [97, 98, 99, [100, 101, 102, [103, 104, 105, [106, 107, 108, [109, 110, 111, [112, 113, 114, [115, 116, 117, [118, 119, 120, [121, 122, 123, [124, 125, 126, [127, 128, 129, [130, 131, 132, [133, 134, 135, [136, 137, 138, [139, 140, 141, [142, 143, 144, [145, 146, 147, [148, 149, 150, [151, 152, 153, [154, 155, 156, [157, 158, 159, [160, 161, 162, [163, 164,",
    "    $max_length = 0;\n    $max_length_index = 0;\n    $length = 0;\n    $index = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n            if ($length > $max_length) {\n                $max_length = $length;\n                $max_length_index = $i;\n            }\n        }\n    }\n    return $max_length + 1;\n}\n\n$lst = [1, [2, 3], [4, [5, 6, [7, 8]]]];\necho Find_Max_Length($lst);",
    "  $max_length = 0;\n  $curr_length = 0;\n  foreach ($lst as $item) {\n    if (is_array($item)) {\n      $curr_length = Find_Max_Length($item);\n    } else {\n      $curr_length = 1;\n    }\n    if ($curr_length > $max_length) {\n      $max_length = $curr_length;\n    }\n  }\n  return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, 6, [7, 8, 9, 10]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $current_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $current_length = Find_Max_Length($lst[$i]);\n        } else {\n            $current_length = 1;\n        }\n        if ($current_length > $max_length) {\n            $max_length = $current_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $curr_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $curr_length = Find_Max_Length($lst[$i]);\n        } else {\n            $curr_length = 1;\n        }\n        if ($curr_length > $max_length) {\n            $max_length = $curr_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, 6, [7, 8, 9]]], 10];\necho Find_Max_Length($lst);",
    "\t$max_length = 0;\n\t$current_length = 0;\n\t$last_element = null;\n\tforeach ($lst as $element) {\n\t\tif ($last_element == null || $last_element < $element) {\n\t\t\t$current_length++;\n\t\t} else {\n\t\t\tif ($current_length > $max_length) {\n\t\t\t\t$max_length = $current_length;\n\t\t\t}\n\t\t\t$current_length = 1;\n\t\t}\n\t\t$last_element = $element;\n\t}\n\tif ($current_length > $max_length) {\n\t\t$max_length = $current_length;\n\t}\n\treturn $max_length;\n}\n\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho Find_Max_Length($lst);\n\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1);\necho Find_Max_Length($lst);\n\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho Find_Max_Length($lst);\n\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1);\necho Find_Max_Length($lst);\n\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7",
    "    $max_length = 0;\n    $current_length = 0;\n    $previous_element = null;\n    foreach ($lst as $element) {\n        if ($previous_element === null || $previous_element < $element) {\n            $current_length++;\n        } else {\n            $current_length = 1;\n        }\n        $max_length = max($max_length, $current_length);\n        $previous_element = $element;\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189,",
    "    $max_length = 0;\n    $length = 0;\n    for($i = 0; $i < count($lst); $i++) {\n        if(is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1,2,3,[4,5,[6,7,8,[9,10]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $length = Find_Max_Length($item);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, [3, 4, [5, 6, [7, 8, 9]]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    foreach ($lst as $element) {\n        if (is_array($element)) {\n            $length = Find_Max_Length($element);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, 6], 7, 8], 9, 10];\necho Find_Max_Length($lst);\n",
    "    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, 3, [4, 5, 6, [7, 8, 9, [10, 11, 12, [13, 14, 15]]]]];\necho Find_Max_Length($lst);",
    "\t$max_length = 0;\n\t$length = 0;\n\tforeach ($lst as $item) {\n\t\tif (is_array($item)) {\n\t\t\t$length = Find_Max_Length($item);\n\t\t}\n\t\telse {\n\t\t\t$length = 1;\n\t\t}\n\t\tif ($length > $max_length) {\n\t\t\t$max_length = $length;\n\t\t}\n\t}\n\treturn $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, 6, [7, 8, 9]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($max_length < $length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191,",
    "    $max_length = 0;\n    $cur_length = 0;\n    $prev_item = null;\n    foreach ($lst as $item) {\n        if ($item == $prev_item) {\n            $cur_length++;\n        } else {\n            $cur_length = 1;\n        }\n        $prev_item = $item;\n        $max_length = max($max_length, $cur_length);\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n$lst = array(1,2,3,4,5,6,7,8,9,10);\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $cur_length = 0;\n    $prev_item = null;\n    foreach ($lst as $item) {\n        if ($item == $prev_item) {\n            $cur_length++;\n        } else {\n            $cur_length = 1;\n        }\n        $prev_item = $item;\n        $max_length = max($max_length, $cur_length);\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho Find_Max_Length($lst);\necho \"\\n\";\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho Find_Max_Length($lst);\necho \"\\n\";\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho Find_Max_Length($lst);\necho \"\\n\";\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho Find_Max_Length($lst);\necho \"\\n\";\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9",
    "    $max_length = 0;\n    $length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $length = Find_Max_Length($item);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, 6, [7, 8, 9]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $current_length = 0;\n    $last_element = 0;\n    $first_element = 0;\n    $current_element = 0;\n    $current_index = 0;\n    $last_index = 0;\n    $first_index = 0;\n    $current_length = 0;\n    $max_length = 0;\n    $last_element = $lst[0];\n    $first_element = $lst[0];\n    $current_element = $lst[0];\n    $current_index = 0;\n    $last_index = 0;\n    $first_index = 0;\n    $current_length = 0;\n    $max_length = 0;\n    $last_element = $lst[0];\n    $first_element = $lst[0];\n    $current_element = $lst[0];\n    $current_index = 0;\n    $last_index = 0;\n    $first_index = 0;\n    $current_length = 0;\n    $max_length = 0;\n    $last_element = $lst[0];\n    $first_element = $lst[0];\n    $current_element = $lst[0];\n    $current_index = 0;\n    $last_index = 0;\n    $first_index = 0;\n    $current_length = 0;\n    $max_length = 0;\n    $last_element = $lst[0];\n    $first_element = $lst[0];\n    $current_element = $lst[0];\n    $current_index = 0;\n    $last_index = 0;\n    $first_index = 0;\n    $current_length = 0;\n    $max_length = 0;\n    $last_element = $lst[0];\n    $first_element = $lst[0];\n    $current_element = $lst[0];\n    $current_index = 0;\n    $last_index = 0;\n    $first_index = 0;\n    $current_length = 0;\n    $max_length = 0;\n   ",
    "    $max = 0;\n    $len = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $len = Find_Max_Length($lst[$i]);\n            if ($len > $max) {\n                $max = $len;\n            }\n        }\n    }\n    return $max + 1;\n}\n$lst = [1, [2, 3, [4, 5, 6, [7, 8, 9]]], 10];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $cur_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $cur_length = Find_Max_Length($lst[$i]);\n        } else {\n            $cur_length = 1;\n        }\n        if ($cur_length > $max_length) {\n            $max_length = $cur_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, 6, [7, 8, 9]]], 10];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $current_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $current_length = Find_Max_Length($lst[$i]);\n        } else {\n            $current_length = 1;\n        }\n        if ($current_length > $max_length) {\n            $max_length = $current_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst
    "    $max_len = 0;\n    $curr_len = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $curr_len = Find_Max_Length($item);\n        } else {\n            $curr_len = 1;\n        }\n        if ($curr_len > $max_len) {\n            $max_len = $curr_len;\n        }\n    }\n    return $max_len;\n}\n\n$lst = array(1, 2, 3, array(4, 5, array(6, 7, 8, array(9, 10))));\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $current_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $current_length = Find_Max_Length($lst[$i]);\n        } else {\n            $current_length = 1;\n        }\n        if ($current_length > $max_length) {\n            $max_length = $current_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, [6, 7, 8, 9]]], [10, 11, 12, 13, 14, 15]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $curr_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $curr_length = Find_Max_Length($lst[$i]);\n        } else {\n            $curr_length = 1;\n        }\n        if ($curr_length > $max_length) {\n            $max_length = $curr_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, [3, [4, [5, [6, [7, [8, [9, [10, [11, [12, [13, [14, [15, [16, [17, [18, [19, [20, [21, [22, [23, [24, [25, [26, [27, [28, [29, [30, [31, [32, [33, [34, [35, [36, [37, [38, [39, [40, [41, [42, [43, [44, [45, [46, [47, [48, [49, [50, [51, [52, [53, [54, [55, [56, [57, [58, [59, [60, [61, [62, [63, [64, [65, [66, [67, [68, [69, [70, [71, [72, [73, [74, [75, [76, [77, [78, [79, [80, [81, [82, [83, [84, [85, [86, [87, [88, [89, [90, [91, [92, [93, [94, [95, [96, [97, [98, [99, [100, [101, [102, [103, [104, [105, [106, [107, [108, [109, [110, [111, [112, [113, [114, [115, [116, [117, [118, [119, [120, [121, [122, [123,",
    "    $max_length = 0;\n    $length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $length = Find_Max_Length($item);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $current_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $current_length = Find_Max_Length($lst[$i]);\n        } else {\n            $current_length = 1;\n        }\n        if ($current_length > $max_length) {\n            $max_length = $current_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, 6], 7], 8, 9];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1,2,3,4,[5,6,7,8,[9,10,11,12,[13,14,15,16,[17,18,19,20]]]]];\necho Find_Max_Length($lst);",
    "    $max = 0;\n    $count = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $count = count($lst[$i]);\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$lst1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10));\n$lst2 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)));\n$lst3 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))));\n\necho Find_Max_Length($lst);\necho \"<br>\";\necho Find_Max_Length($lst1);\necho \"<br>\";\necho Find_Max_Length($lst2);\necho \"<br>\";\necho Find_Max_Length($lst3);",
    "    $max_length = 0;\n    $curr_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $curr_length = Find_Max_Length($lst[$i]);\n        } else {\n            $curr_length = 1;\n        }\n        if ($curr_length > $max_length) {\n            $max_length = $curr_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3], [4, [5, 6, [7, 8]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $current_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $current_length = Find_Max_Length($lst[$i]);\n        } else {\n            $current_length = 1;\n        }\n        if ($current_length > $max_length) {\n            $max_length = $current_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, 6, [7, 8, 9, 10]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $curr_length = 0;\n    $prev_item = null;\n    foreach ($lst as $item) {\n        if ($item == $prev_item) {\n            $curr_length += 1;\n        } else {\n            $curr_length = 1;\n        }\n        $prev_item = $item;\n        if ($curr_length > $max_length) {\n            $max_length = $curr_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1",
    "    $max_length = 0;\n    $current_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $current_length = Find_Max_Length($lst[$i]);\n        } else {\n            $current_length = 1;\n        }\n        if ($current_length > $max_length) {\n            $max_length = $current_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, [6, 7, 8]]], 9, 10];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $cur_length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $cur_length = Find_Max_Length($item);\n        } else {\n            $cur_length = 1;\n        }\n        if ($cur_length > $max_length) {\n            $max_length = $cur_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, 3, [4, 5, 6, [7, 8, 9, [10, 11, 12]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $count = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $count += 1;\n            $max_length = max($max_length, Find_Max_Length($item));\n        }\n    }\n    return $max_length + $count;\n}\n\n$lst = [1, 2, 3, [4, 5, [6, 7, [8, 9, 10]]]];\necho Find_Max_Length($lst);",
    "    $max_len = 0;\n    $len = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $len = Find_Max_Length($lst[$i]);\n        } else {\n            $len = 1;\n        }\n        if ($len > $max_len) {\n            $max_len = $len;\n        }\n    }\n    return $max_len;\n}\n\n$lst = [1, [2, 3, [4, 5, [6, 7, 8]]]];\necho Find_Max_Length($lst);",
    "    $max_len = 0;\n    $len = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $len = Find_Max_Length($item);\n        } else {\n            $len = 1;\n        }\n        if ($len > $max_len) {\n            $max_len = $len;\n        }\n    }\n    return $max_len;\n}\n\n$lst = [1, 2, [3, 4, [5, 6]], [7, 8, [9, 10, [11, 12]]]];\necho Find_Max_Length($lst);",
    "    $max_len = 0;\n    $curr_len = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if (is_array($lst[$i])) {\n            $curr_len = Find_Max_Length($lst[$i]);\n        } else {\n            $curr_len = 1;\n        }\n        if ($curr_len > $max_len) {\n            $max_len = $curr_len;\n        }\n        $i++;\n    }\n    return $max_len;\n}\n\n$lst = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 2, array(3, 4, array(5, 6, 7), 8), 9, 10);\necho \"The length of the longest sublist is: \" . Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == '(') {\n            $length++;\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n        } else {\n            $length--;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = array
    "    $max_len = 0;\n    $len = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $len = Find_Max_Length($lst[$i]);\n        }\n        else {\n            $len = 1;\n        }\n        if ($len > $max_len) {\n            $max_len = $len;\n        }\n    }\n    return $max_len;\n}\n$lst = [1, [2, 3, [4, 5, [6, 7, [8, 9, [10]]]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $current_length = 0;\n    $prev_element = null;\n    $current_element = null;\n    foreach ($lst as $element) {\n        if ($prev_element == null) {\n            $current_length = 1;\n            $prev_element = $element;\n        } else {\n            $current_element = $element;\n            if ($prev_element < $current_element) {\n                $current_length += 1;\n            } else {\n                if ($current_length > $max_length) {\n                    $max_length = $current_length;\n                }\n                $current_length = 1;\n            }\n            $prev_element = $current_element;\n        }\n    }\n    if ($current_length > $max_length) {\n        $max_length = $current_length;\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        }\n        else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n$lst = [1, [2, 3, [4, 5, 6, [7, 8, 9]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $length = Find_Max_Length($item);\n        } else {\n            $length++;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, [6, 7, 8]]], [9, 10]];\necho Find_Max_Length($lst);",
    "    $max_len = 0;\n    $len = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $len = Find_Max_Length($lst[$i]);\n        } else {\n            $len = 1;\n        }\n        if ($len > $max_len) {\n            $max_len = $len;\n        }\n    }\n    return $max_len;\n}\n$lst = [1, [2, 3, [4, 5]], [6, 7, [8, 9, [10, 11]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $curr_length = 0;\n    $prev_item = null;\n    foreach ($lst as $item) {\n        if ($item == $prev_item) {\n            $curr_length += 1;\n        } else {\n            $curr_length = 1;\n        }\n        if ($curr_length > $max_length) {\n            $max_length = $curr_length;\n        }\n        $prev_item = $item;\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186",
    "    $max_length = 0;\n    $length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $length = Find_Max_Length($item);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3], [4, [5, 6, [7, 8]]]];\necho Find_Max_Length($lst);",
    "    $max_len = 0;\n    $cur_len = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $cur_len = Find_Max_Length($lst[$i]);\n        } else {\n            $cur_len = 1;\n        }\n        if ($cur_len > $max_len) {\n            $max_len = $cur_len;\n        }\n    }\n    return $max_len;\n}\n\n$lst = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $current_length = 0;\n    $current_element = $lst[0];\n    $previous_element = $lst[0];\n    for($i = 0; $i < count($lst); $i++) {\n        $current_element = $lst[$i];\n        if($current_element == $previous_element) {\n            $current_length++;\n        } else {\n            if($current_length > $max_length) {\n                $max_length = $current_length;\n            }\n            $current_length = 1;\n        }\n        $previous_element = $current_element;\n    }\n    return $max_length;\n}\n\n$lst = array(1,2,3,4,5,6,7,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9",
    "    $max = 0;\n    $count = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $count = Find_Max_Length($lst[$i]);\n        } else {\n            $count = 1;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$lst = [1, 2, 3, 4, 5];\n$lst1 = [[1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]];\n$lst2 = [[1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]];\n$lst3 = [[1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]];\n$lst4 = [[1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]];\n$lst5 = [[1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]];\n$lst6 = [[1, 2, 3, 4, 5], [1, 2, 3, 4, 5",
    "    $max_length = 0;\n    $length = 0;\n    $lst_length = count($lst);\n    for ($i = 0; $i < $lst_length; $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho Find_Max_Length($lst);",
    "    $max_len = 0;\n    $curr_len = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $curr_len = Find_Max_Length($lst[$i]);\n        } else {\n            $curr_len = 1;\n        }\n        if ($curr_len > $max_len) {\n            $max_len = $curr_len;\n        }\n    }\n    return $max_len;\n}\n\n$lst
    "    $max_length = 0;\n    $current_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $current_length = Find_Max_Length($lst[$i]);\n        } else {\n            $current_length = 1;\n        }\n        if ($current_length > $max_length) {\n            $max_length = $current_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 2, 3, array(4, 5, array(6, 7, 8, array(9, 10))));\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $length = Find_Max_Length($item);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3], [4, [5, 6, [7, 8, 9]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $length = Find_Max_Length($item);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, 6, [7, 8, 9]]], 10];\necho Find_Max_Length($lst);",
    "\t$max_length = 0;\n\t$current_length = 0;\n\tforeach ($lst as $item) {\n\t\tif (is_array($item)) {\n\t\t\t$current_length = Find_Max_Length($item);\n\t\t} else {\n\t\t\t$current_length = 1;\n\t\t}\n\t\tif ($current_length > $max_length) {\n\t\t\t$max_length = $current_length;\n\t\t}\n\t}\n\treturn $max_length;\n}\n\n$lst = array(1, 2, 3, array(4, 5, 6, array(7, 8, 9, array(10, 11, 12, array(13, 14, 15, array(16, 17, 18, array(19, 20, 21, array(22, 23, 24, array(25, 26, 27, array(28, 29, 30, array(31, 32, 33, array(34, 35, 36, array(37, 38, 39, array(40, 41, 42, array(43, 44, 45, array(46, 47, 48, array(49, 50, 51, array(52, 53, 54, array(55, 56, 57, array(58, 59, 60, array(61, 62, 63, array(64, 65, 66, array(67, 68, 69, array(70, 71, 72, array(73, 74, 75, array(76, 77, 78, array(79, 80, 81, array(82, 83, 84, array(85, 86, 87, array(88, 89, 90, array(91, 92, 93, array(94, 95, 96, array(97, 98, 99, array(100, 101, 102, array(103, 104, 105, array(106, 107, 108, array(109, 110, 111, array(112, 113, 114, array(115, 116, 117, array(118, 119, 120, array(121, 122, 123, array(124, 125, 126, array(127, 128, 129, array(130, 131, 132, array(133, 134, 135, array(136, 137, 138, array(139, 140, 141, array(142,",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        }\n        else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, [6, 7, 8, 9, 10]]]];\necho Find_Max_Length($lst);",
    "    $max = 0;\n    $count = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $count += 1;\n            $count += Find_Max_Length($item);\n        } else {\n            $count += 1;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n        $count = 0;\n    }\n    return $max;\n}\n\n$lst = [1, 2, 3, [4, 5, 6, [7, 8, 9, [10, 11, 12, [13, 14, 15]]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    foreach ($lst as $item) {\n        if (is_array($item)) {\n            $length = Find_Max_Length($item);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, [6, 7, 8]]]];\necho Find_Max_Length($lst);",
    "    $max_len = 0;\n    $curr_len = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $curr_len = Find_Max_Length($lst[$i]);\n        } else {\n            $curr_len = 1;\n        }\n        if ($curr_len > $max_len) {\n            $max_len = $curr_len;\n        }\n    }\n    return $max_len;\n}\n\n$lst = [1, [2, 3, [4, 5, [6, 7, [8, 9, [10]]]]]];\necho Find_Max_Length($lst);",
    "    $max_len = 0;\n    $curr_len = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $curr_len = Find_Max_Length($lst[$i]);\n        } else {\n            $curr_len = 1;\n        }\n        if ($curr_len > $max_len) {\n            $max_len = $curr_len;\n        }\n    }\n    return $max_len;\n}\n\n$lst = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho Find_Max_Length($lst);",
    "    $max = 0;\n    foreach ($lst as $sublst) {\n        $len = count($sublst);\n        if ($len > $max) {\n            $max = $len;\n        }\n    }\n    return $max;\n}\n\n$lst = [[1, 2, 3, 4], [1, 2, 3, 4, 5, 6, 7], [1, 2, 3, 4, 5, 6, 7, 8, 9]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        }\n        else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3], [4, [5, 6, [7, 8, 9]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == '(') {\n            $length++;\n        } else {\n            $length--;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = array
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        }\n        else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, [6, 7, 8]]], 9, 10];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $current_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $current_length = Find_Max_Length($lst[$i]);\n        } else {\n            $current_length = 1;\n        }\n        if ($current_length > $max_length) {\n            $max_length = $current_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 2, 3, array(4, 5, 6, array(7, 8, 9, array(10, 11, 12, array(13, 14, 15, array(16, 17, 18, array(19, 20, 21, array(22, 23, 24, array(25, 26, 27, array(28, 29, 30, array(31, 32, 33, array(34, 35, 36, array(37, 38, 39, array(40, 41, 42, array(43, 44, 45, array(46, 47, 48, array(49, 50, 51, array(52, 53, 54, array(55, 56, 57, array(58, 59, 60, array(61, 62, 63, array(64, 65, 66, array(67, 68, 69, array(70, 71, 72, array(73, 74, 75, array(76, 77, 78, array(79, 80, 81, array(82, 83, 84, array(85, 86, 87, array(88, 89, 90, array(91, 92, 93, array(94, 95, 96, array(97, 98, 99, array(100, 101, 102, array(103, 104, 105, array(106, 107, 108, array(109, 110, 111, array(112, 113, 114, array(115, 116, 117, array(118, 119, 120, array(121, 122, 123, array(124, 125, 126, array(127, 128, 129, array(130, 131, 132, array(133, 134, 135, array(136, 137, 138, array(139, 140,",
    "    $max_length = 0;\n    $cur_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $cur_length = Find_Max_Length($lst[$i]);\n        } else {\n            $cur_length = 1;\n        }\n        if ($cur_length > $max_length) {\n            $max_length = $cur_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, [2, 3, [4, 5, 6, [7, 8, 9, 10]]]];\necho Find_Max_Length($lst);",
    "    $max = 0;\n    foreach ($lst as $sub) {\n        $max = max($max, count($sub));\n    }\n    return $max;\n}\n\n$lst = [[1, 2, 3], [4, 5], [6, 7, 8, 9]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 2, 3, array(4, 5, 6, array(7, 8, 9, 10, array(11, 12, 13, 14, 15))));\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, 3, [4, 5, 6, [7, 8, 9, [10, 11, 12, [13, 14, 15]]]]];\necho Find_Max_Length($lst);",
    "    $max_length = 0;\n    $sub_list = array();\n    $sub_list_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_array($lst[$i])) {\n            $sub_list = $lst[$i];\n            $sub_list_length = count($sub_list);\n            if ($sub_list_length > $max_length) {\n                $max_length = $sub_list_length;\n            }\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181",
    "    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if (is_array($lst[$i])) {\n            $length = Find_Max_Length($lst[$i]);\n        } else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = [1,2,3,4,5,6,7,8,9,10];\necho Find_Max_Length($lst);\n\n$lst = [[1,2,3,4,5],6,7,8,9,10];\necho Find_Max_Length($lst);\n\n$lst = [[1,2,3,4,5],6,7,8,9,10,[11,12,13,14,15]];\necho Find_Max_Length($lst);\n\n$lst = [[1,2,3,4,5],6,7,8,9,10,[11,12,13,14,15,[16,17,18,19,20]]];\necho Find_Max_Length($lst);"
  ]
}
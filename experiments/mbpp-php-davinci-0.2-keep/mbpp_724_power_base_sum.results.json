{
  "name": "mbpp_724_power_base_sum",
  "language": "php",
  "prompt": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_724_power_base_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = $base ** $power;\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "7\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpb1hvd91p.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb1hvd91p.php:19\nStack trace:\n#0 /tmp/tmpb1hvd91p.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpb1hvd91p.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp0zfsglf2.php:8\nStack trace:\n#0 /tmp/tmp0zfsglf2.php(12): power_base_sum(2, 100)\n#1 {main}\n  thrown in /tmp/tmp0zfsglf2.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $digit) {\n        $sum += $digit;\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpv17010na.php:8\nStack trace:\n#0 /tmp/tmpv17010na.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpv17010na.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = $base ** $power;\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $digit) {\n        $sum += $digit;\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpq7q0dnil.php:8\nStack trace:\n#0 /tmp/tmpq7q0dnil.php(13): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpq7q0dnil.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 2);\necho \"<br>\";\necho power_base_sum(2, 3);\necho \"<br>\";\necho power_base_sum(2, 4);\necho \"<br>\";\necho power_base_sum(2, 5);\necho \"<br>\";\necho power_base_sum(2, 6);\necho \"<br>\";\necho power_base_sum(2, 7);\necho \"<br>\";\necho power_base_sum(2, 8);\necho \"<br>\";\necho power_base_sum(2, 9);\necho \"<br>\";\necho power_base_sum(2, 10);\necho \"<br>\";\necho power_base_sum(2, 11);\necho \"<br>\";\necho power_base_sum(2, 12);\necho \"<br>\";\necho power_base_sum(2, 13);\necho \"<br>\";\necho power_base_sum(2, 14);\necho \"<br>\";\necho power_base_sum(2, 15);\necho \"<br>\";\necho power_base_sum(2, 16);\necho \"<br>\";\necho power_base_sum(2, 17);\necho \"<br>\";\necho power_base_sum(2, 18);\necho \"<br>\";\necho power_base_sum(2, 19);\necho \"<br>\";\necho power_base_sum(2, 20);\necho \"<br>\";\necho power_base_sum(2, 21);\necho \"<br>\";\necho power_base_sum(2, 22);\necho \"<br>\";\necho power_base_sum(2, 23);\necho \"<br>\";\necho power_base_sum(2, 24);\necho \"<br>\";\necho power_base_sum(2, 25);\necho \"<br>\";\necho power_base_sum(2, 26);\necho \"<br>\";\n\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "4<br>8<br>7<br>5<br>10<br>11<br>13<br>8<br>7<br>14<br>19<br>20<br>22<br>26<br>25<br>14<br>19<br>29<br>31<br>26<br>25<br>41<br>37<br>29<br>40<br>\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmp04cvmnxh.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmp04cvmnxh.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmp04cvmnxh.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmp04cvmnxh.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmp04cvmnxh.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmp04cvmnxh.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmp04cvmnxh.php on line 7\n\nDeprecated:",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = (string)$result;\n    for ($i = 0; $i < strlen($result); $i++) {\n        $sum += $result[$i];\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp9mgeb7wr.php:8\nStack trace:\n#0 /tmp/tmp9mgeb7wr.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmp9mgeb7wr.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n\t$sum = 0;\n\t$base_power = pow($base, $power);\n\t$base_power_str = strval($base_power);\n\tfor ($i = 0; $i < strlen($base_power_str); $i++) {\n\t\t$sum += intval($base_power_str[$i]);\n\t}\n\treturn $sum;\n}\n\necho power_base_sum(2, 1000);\n\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "57\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk2bzz9p_.php:20\nStack trace:\n#0 /tmp/tmpk2bzz9p_.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpk2bzz9p_.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "7\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversio",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result = str_split($result);\n    $result = array_sum($result);\n    return $result;\n}\necho power_base_sum(2, 4);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "7\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpucdslqmg.php:15\nStack trace:\n#0 /tmp/tmpucdslqmg.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpucdslqmg.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpkw6eh_kb.php:8\nStack trace:\n#0 /tmp/tmpkw6eh_kb.php(13): power_base_sum(2, 100)\n#1 {main}\n  thrown in /tmp/tmpkw6eh_kb.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n\t$result = pow($base, $power);\n\t$sum = 0;\n\twhile ($result > 0) {\n\t\t$sum += $result % 10;\n\t\t$result = floor($result / 10);\n\t}\n\treturn $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = $base ** $power;\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpmthz12us.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpmthz12us.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpmthz12us.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpmthz12us.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpmthz12us.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpmthz12us.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpmthz12us.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpmthz12us.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n\t$sum = 0;\n\t$base_to_power = pow($base, $power);\n\t$base_to_power_str = strval($base_to_power);\n\tfor ($i = 0; $i < strlen($base_to_power_str); $i++) {\n\t\t$sum += intval($base_to_power_str[$i]);\n\t}\n\treturn $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "57\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1mmrwolx.php:19\nStack trace:\n#0 /tmp/tmp1mmrwolx.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp1mmrwolx.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 4);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "7\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmp0ogrl1g4.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmp0ogrl1g4.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmp0ogrl1g4.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmp0ogrl1g4.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmp0ogrl1g4.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmp0ogrl1g4.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmp0ogrl1g4.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmp0ogrl1g4.php on line 7\n\nDeprecated: Implicit conversio",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpyhiwibpo.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpyhiwibpo.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyhiwibpo.php:19\nStack trace:\n#0 /tmp/tmpyhiwibpo.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpyhiwibpo.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n\t$sum = 0;\n\t$base_power = pow($base, $power);\n\t$base_power_string = (string) $base_power;\n\tfor ($i = 0; $i < strlen($base_power_string); $i++) {\n\t\t$sum += (int) $base_power_string[$i];\n\t}\n\treturn $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "57\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprrlg92cz.php:19\nStack trace:\n#0 /tmp/tmprrlg92cz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmprrlg92cz.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = $base ** $power;\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmp2u3f713w.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmp2u3f713w.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2u3f713w.php:19\nStack trace:\n#0 /tmp/tmp2u3f713w.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp2u3f713w.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpgrkjnw8z.php:8\nStack trace:\n#0 /tmp/tmpgrkjnw8z.php(13): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpgrkjnw8z.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n\t$sum = 0;\n\t$result = pow($base, $power);\n\t$result = str_split($result);\n\tforeach ($result as $value) {\n\t\t$sum += $value;\n\t}\n\treturn $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpj0hc14kc.php:8\nStack trace:\n#0 /tmp/tmpj0hc14kc.php(13): power_base_sum(2, 100)\n#1 {main}\n  thrown in /tmp/tmpj0hc14kc.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "7\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp8uchf5ql.php:8\nStack trace:\n#0 /tmp/tmp8uchf5ql.php(14): power_base_sum(2, 100)\n#1 /tmp/tmp8uchf5ql.php(18): candidate(2, 100)\n#2 /tmp/tmp8uchf5ql.php(24): test()\n#3 {main}\n  thrown in /tmp/tmp8uchf5ql.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n  $sum = 0;\n  $result = pow($base, $power);\n  $result = str_split($result);\n  foreach ($result as $value) {\n    $sum += $value;\n  }\n  return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpk76479f8.php:8\nStack trace:\n#0 /tmp/tmpk76479f8.php(13): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpk76479f8.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = 1;\n    for ($i = 0; $i < $power; $i++) {\n        $result *= $base;\n    }\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmperr8086s.php on line 10\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmperr8086s.php on line 10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmperr8086s.php:22\nStack trace:\n#0 /tmp/tmperr8086s.php(28): test()\n#1 {main}\n  thrown in /tmp/tmperr8086s.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = $base ** $power;\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "7\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmp8bokv76_.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmp8bokv76_.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmp8bokv76_.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmp8bokv76_.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmp8bokv76_.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmp8bokv76_.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmp8bokv76_.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmp8bokv76_.php on line 7\n\nDeprecated: Implicit conversio",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n  $sum = 0;\n  $result = pow($base, $power);\n  $result = str_split($result);\n  foreach ($result as $value) {\n    $sum += $value;\n  }\n  return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpk76479f8.php:8\nStack trace:\n#0 /tmp/tmpk76479f8.php(13): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpk76479f8.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 4);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "7\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmp817rlok4.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp817rlok4.php:19\nStack trace:\n#0 /tmp/tmp817rlok4.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp817rlok4.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n  $result = pow($base, $power);\n  $result = str_split($result);\n  $result = array_sum($result);\n  return $result;\n}\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6mdxtv9f.php:15\nStack trace:\n#0 /tmp/tmp6mdxtv9f.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6mdxtv9f.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = (string)$result;\n    for ($i = 0; $i < strlen($result); $i++) {\n        $sum += $result[$i];\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp9mgeb7wr.php:8\nStack trace:\n#0 /tmp/tmp9mgeb7wr.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmp9mgeb7wr.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp9anl0yc_.php:8\nStack trace:\n#0 /tmp/tmp9anl0yc_.php(13): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmp9anl0yc_.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpw7ke93d6.php:8\nStack trace:\n#0 /tmp/tmpw7ke93d6.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpw7ke93d6.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpyhiwibpo.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpyhiwibpo.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyhiwibpo.php:19\nStack trace:\n#0 /tmp/tmpyhiwibpo.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpyhiwibpo.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpw7ke93d6.php:8\nStack trace:\n#0 /tmp/tmpw7ke93d6.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpw7ke93d6.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result = str_split($result);\n    $result = array_sum($result);\n    return $result;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "7\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ubxm161.php:16\nStack trace:\n#0 /tmp/tmp7ubxm161.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp7ubxm161.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result = str_split($result);\n    $result = array_sum($result);\n    return $result;\n}\n\necho power_base_sum(2, 3);\necho \"<br>\";\necho power_base_sum(5, 5);\necho \"<br>\";\necho power_base_sum(4, 4);\necho \"<br>\";\necho power_base_sum(9, 2);\necho \"<br>\";\necho power_base_sum(3, 3);\necho \"<br>\";\necho power_base_sum(2, 2);\necho \"<br>\";\necho power_base_sum(5, 2);\necho \"<br>\";\necho power_base_sum(3, 2);\necho \"<br>\";\necho power_base_sum(2, 4);\necho \"<br>\";\necho power_base_sum(5, 4);\necho \"<br>\";\necho power_base_sum(3, 4);\necho \"<br>\";\necho power_base_sum(2, 5);\necho \"<br>\";\necho power_base_sum(5, 5);\necho \"<br>\";\necho power_base_sum(3, 5);\necho \"<br>\";\necho power_base_sum(2, 6);\necho \"<br>\";\necho power_base_sum(5, 6);\necho \"<br>\";\necho power_base_sum(3, 6);\necho \"<br>\";\necho power_base_sum(2, 7);\necho \"<br>\";\necho power_base_sum(5, 7);\necho \"<br>\";\necho power_base_sum(3, 7);\necho \"<br>\";\necho power_base_sum(2, 8);\necho \"<br>\";\necho power_base_sum(5, 8);\necho \"<br>\";\necho power_base_sum(3, 8);\necho \"<br>\";\necho power_base_sum(2, 9);\necho \"<br>\";\necho power_base_sum(5, 9);\necho \"<br>\";\necho power_base_sum(3, 9);\necho \"<br>\";\n\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "8<br>11<br>13<br>9<br>9<br>4<br>7<br>9<br>7<br>13<br>9<br>5<br>11<br>9<br>10<br>19<br>18<br>11<br>23<br>18<br>13<br>25<br>18<br>8<br>26<br>27<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb7fi1_3p.php:68\nStack trace:\n#0 /tmp/tmpb7fi1_3p.php(74): test()\n#1 {main}\n  thrown in /tmp/tmpb7fi1_3p.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result = str_split($result);\n    $result = array_sum($result);\n    return $result;\n}\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "7\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnirbav7d.php:15\nStack trace:\n#0 /tmp/tmpnirbav7d.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpnirbav7d.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpyhiwibpo.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpyhiwibpo.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyhiwibpo.php:19\nStack trace:\n#0 /tmp/tmpyhiwibpo.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpyhiwibpo.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "7\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpdr7_h9g2.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpdr7_h9g2.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpdr7_h9g2.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpdr7_h9g2.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpdr7_h9g2.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpdr7_h9g2.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpdr7_h9g2.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpdr7_h9g2.php on line 7\n\nDeprecated: Implicit conversio",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n  $result = pow($base, $power);\n  $sum = 0;\n  while ($result > 0) {\n    $sum += $result % 10;\n    $result = floor($result / 10);\n  }\n  return $sum;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "7\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpntkyvbyj.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpntkyvbyj.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpntkyvbyj.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpntkyvbyj.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpntkyvbyj.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpntkyvbyj.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpntkyvbyj.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpntkyvbyj.php on line 7\n\nDeprecated: Implicit conversio",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $base_power = pow($base, $power);\n    $base_power_str = strval($base_power);\n    for ($i = 0; $i < strlen($base_power_str); $i++) {\n        $sum += intval($base_power_str[$i]);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "57\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwdiwp3nd.php:19\nStack trace:\n#0 /tmp/tmpwdiwp3nd.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpwdiwp3nd.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpgrkjnw8z.php:8\nStack trace:\n#0 /tmp/tmpgrkjnw8z.php(13): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpgrkjnw8z.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = 1;\n    for ($i = 0; $i < $power; $i++) {\n        $result *= $base;\n    }\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmperr8086s.php on line 10\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmperr8086s.php on line 10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmperr8086s.php:22\nStack trace:\n#0 /tmp/tmperr8086s.php(28): test()\n#1 {main}\n  thrown in /tmp/tmperr8086s.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = $base ** $power;\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpy97uv75s.php:8\nStack trace:\n#0 /tmp/tmpy97uv75s.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpy97uv75s.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpyhiwibpo.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpyhiwibpo.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyhiwibpo.php:19\nStack trace:\n#0 /tmp/tmpyhiwibpo.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpyhiwibpo.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $base_to_power = pow($base, $power);\n    $base_to_power_str = strval($base_to_power);\n    for ($i = 0; $i < strlen($base_to_power_str); $i++) {\n        $sum += intval($base_to_power_str[$i]);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "57\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjaqb4q5f.php:19\nStack trace:\n#0 /tmp/tmpjaqb4q5f.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpjaqb4q5f.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "7\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversio",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n  $power_base = pow($base, $power);\n  $sum = 0;\n  for ($i=0; $i < strlen($power_base); $i++) {\n    $sum += $power_base[$i];\n  }\n  return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nWarning: Trying to access array offset on value of type float in /tmp/tmpzz49gbw2.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmpzz49gbw2.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmpzz49gbw2.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmpzz49gbw2.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmpzz49gbw2.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmpzz49gbw2.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmpzz49gbw2.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmpzz49gbw2.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmpzz49gbw2.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmpzz49gbw2.php on line 7\n\nWarning: Trying to access array offset on value of ty",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = $base ** $power;\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpie9wzrmw.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpie9wzrmw.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpie9wzrmw.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpie9wzrmw.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpie9wzrmw.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpie9wzrmw.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpie9wzrmw.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpie9wzrmw.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = 1;\n    for ($i = 0; $i < $power; $i++) {\n        $result *= $base;\n    }\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Imp",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "7\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversio",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpgrkjnw8z.php:8\nStack trace:\n#0 /tmp/tmpgrkjnw8z.php(13): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpgrkjnw8z.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result != 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpgis6bntq.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpgis6bntq.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgis6bntq.php:19\nStack trace:\n#0 /tmp/tmpgis6bntq.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpgis6bntq.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpypubtjvx.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpypubtjvx.php:18\nStack trace:\n#0 /tmp/tmpypubtjvx.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpypubtjvx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = (string)$result;\n    for ($i = 0; $i < strlen($result); $i++) {\n        $sum += $result[$i];\n    }\n    return $sum;\n}\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpeq022tjm.php:8\nStack trace:\n#0 /tmp/tmpeq022tjm.php(12): power_base_sum(2, 100)\n#1 {main}\n  thrown in /tmp/tmpeq022tjm.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = $base ** $power;\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int) ($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpwcug87pz.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpwcug87pz.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwcug87pz.php:19\nStack trace:\n#0 /tmp/tmpwcug87pz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpwcug87pz.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "7\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp8uchf5ql.php:8\nStack trace:\n#0 /tmp/tmp8uchf5ql.php(14): power_base_sum(2, 100)\n#1 /tmp/tmp8uchf5ql.php(18): candidate(2, 100)\n#2 /tmp/tmp8uchf5ql.php(24): test()\n#3 {main}\n  thrown in /tmp/tmp8uchf5ql.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n\t$sum = 0;\n\t$base_to_power = pow($base, $power);\n\t$base_to_power_string = strval($base_to_power);\n\tfor ($i = 0; $i < strlen($base_to_power_string); $i++) {\n\t\t$sum += intval($base_to_power_string[$i]);\n\t}\n\treturn $sum;\n}\n\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ipxm_p_.php:18\nStack trace:\n#0 /tmp/tmp7ipxm_p_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp7ipxm_p_.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpyhiwibpo.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpyhiwibpo.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyhiwibpo.php:19\nStack trace:\n#0 /tmp/tmpyhiwibpo.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpyhiwibpo.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = $base ** $power;\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpy97uv75s.php:8\nStack trace:\n#0 /tmp/tmpy97uv75s.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpy97uv75s.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpw7ke93d6.php:8\nStack trace:\n#0 /tmp/tmpw7ke93d6.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpw7ke93d6.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = bcpow($base, $power);\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $digit) {\n        $sum += $digit;\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function bcpow() in /tmp/tmp9ur17col.php:4\nStack trace:\n#0 /tmp/tmp9ur17col.php(13): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmp9ur17col.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n\t$sum = 0;\n\t$result = pow($base, $power);\n\t$result = str_split($result);\n\tforeach ($result as $value) {\n\t\t$sum += $value;\n\t}\n\treturn $sum;\n}\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "7\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpw6fd6qil.php:8\nStack trace:\n#0 /tmp/tmpw6fd6qil.php(14): power_base_sum(2, 100)\n#1 /tmp/tmpw6fd6qil.php(18): candidate(2, 100)\n#2 /tmp/tmpw6fd6qil.php(24): test()\n#3 {main}\n  thrown in /tmp/tmpw6fd6qil.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmphhpdkn1b.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmphhpdkn1b.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphhpdkn1b.php:19\nStack trace:\n#0 /tmp/tmphhpdkn1b.php(25): test()\n#1 {main}\n  thrown in /tmp/tmphhpdkn1b.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmphbf6o2b9.php:8\nStack trace:\n#0 /tmp/tmphbf6o2b9.php(12): power_base_sum(2, 100)\n#1 {main}\n  thrown in /tmp/tmphbf6o2b9.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = (string)$result;\n    for ($i = 0; $i < strlen($result); $i++) {\n        $sum += $result[$i];\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpzdcn_yws.php:8\nStack trace:\n#0 /tmp/tmpzdcn_yws.php(13): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpzdcn_yws.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmphhpdkn1b.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmphhpdkn1b.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphhpdkn1b.php:19\nStack trace:\n#0 /tmp/tmphhpdkn1b.php(25): test()\n#1 {main}\n  thrown in /tmp/tmphhpdkn1b.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpw7ke93d6.php:8\nStack trace:\n#0 /tmp/tmpw7ke93d6.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpw7ke93d6.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "7\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp4g0fnr4y.php:8\nStack trace:\n#0 /tmp/tmp4g0fnr4y.php(14): power_base_sum(2, 100)\n#1 /tmp/tmp4g0fnr4y.php(18): candidate(2, 100)\n#2 /tmp/tmp4g0fnr4y.php(24): test()\n#3 {main}\n  thrown in /tmp/tmp4g0fnr4y.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $number) {\n        $sum += $number;\n    }\n    return $sum;\n}\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "7\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpp_b8wlmv.php:8\nStack trace:\n#0 /tmp/tmpp_b8wlmv.php(14): power_base_sum(2, 100)\n#1 /tmp/tmpp_b8wlmv.php(18): candidate(2, 100)\n#2 /tmp/tmpp_b8wlmv.php(24): test()\n#3 {main}\n  thrown in /tmp/tmpp_b8wlmv.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result != 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpziy5sfcf.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpziy5sfcf.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpziy5sfcf.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpziy5sfcf.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpziy5sfcf.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpziy5sfcf.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpziy5sfcf.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpziy5sfcf.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000) . \"\\n\";\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmp96a3n9lw.php on line 7\n0\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmp96a3n9lw.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp96a3n9lw.php:19\nStack trace:\n#0 /tmp/tmp96a3n9lw.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp96a3n9lw.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = $base ** $power;\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpie9wzrmw.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpie9wzrmw.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpie9wzrmw.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpie9wzrmw.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpie9wzrmw.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpie9wzrmw.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpie9wzrmw.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpie9wzrmw.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = 1;\n    for ($i = 0; $i < $power; $i++) {\n        $result *= $base;\n    }\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "7\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpvqim1z6x.php:11\nStack trace:\n#0 /tmp/tmpvqim1z6x.php(17): power_base_sum(2, 100)\n#1 /tmp/tmpvqim1z6x.php(21): candidate(2, 100)\n#2 /tmp/tmpvqim1z6x.php(27): test()\n#3 {main}\n  thrown in /tmp/tmpvqim1z6x.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpgrkjnw8z.php:8\nStack trace:\n#0 /tmp/tmpgrkjnw8z.php(13): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpgrkjnw8z.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = $base ** $power;\n    $sum = 0;\n    for ($i = 0; $i < strlen($result); $i++) {\n        $sum += $result[$i];\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nWarning: Trying to access array offset on value of type float in /tmp/tmp3lcbdssh.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmp3lcbdssh.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmp3lcbdssh.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmp3lcbdssh.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmp3lcbdssh.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmp3lcbdssh.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmp3lcbdssh.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmp3lcbdssh.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmp3lcbdssh.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmp3lcbdssh.php on line 7\n\nWarning: Trying to access array offset on value of ty",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = (string)$result;\n    for ($i = 0; $i < strlen($result); $i++) {\n        $sum += $result[$i];\n    }\n    return $sum;\n}\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "7\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpwsfaq6w4.php:8\nStack trace:\n#0 /tmp/tmpwsfaq6w4.php(14): power_base_sum(2, 100)\n#1 /tmp/tmpwsfaq6w4.php(18): candidate(2, 100)\n#2 /tmp/tmpwsfaq6w4.php(24): test()\n#3 {main}\n  thrown in /tmp/tmpwsfaq6w4.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = $base ** $power;\n    $result = str_split($result);\n    $result = array_sum($result);\n    return $result;\n}\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp59c18uxn.php:15\nStack trace:\n#0 /tmp/tmp59c18uxn.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp59c18uxn.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "7\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversio",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmp8j07_zpq.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmp8j07_zpq.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8j07_zpq.php:18\nStack trace:\n#0 /tmp/tmp8j07_zpq.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp8j07_zpq.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n\t$result = pow($base, $power);\n\t$result = str_split($result);\n\t$sum = 0;\n\tforeach ($result as $value) {\n\t\t$sum += $value;\n\t}\n\treturn $sum;\n}\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpid5bgz98.php:8\nStack trace:\n#0 /tmp/tmpid5bgz98.php(12): power_base_sum(2, 100)\n#1 {main}\n  thrown in /tmp/tmpid5bgz98.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 10);\necho \"<br>\";\necho power_base_sum(2, 100);\necho \"<br>\";\necho power_base_sum(2, 1000);\necho \"<br>\";\necho power_base_sum(2, 10000);\necho \"<br>\";\necho power_base_sum(2, 100000);\necho \"<br>\";\necho power_base_sum(2, 1000000);\necho \"<br>\";\necho power_base_sum(2, 10000000);\necho \"<br>\";\necho power_base_sum(2, 100000000);\necho \"<br>\";\necho power_base_sum(2, 1000000000);\necho \"<br>\";\necho power_base_sum(2, 10000000000);\necho \"<br>\";\necho power_base_sum(2, 100000000000);\necho \"<br>\";\necho power_base_sum(2, 1000000000000);\necho \"<br>\";\necho power_base_sum(2, 10000000000000);\necho \"<br>\";\necho power_base_sum(2, 100000000000000);\necho \"<br>\";\necho power_base_sum(2, 1000000000000000);\necho \"<br>\";\necho power_base_sum(2, 10000000000000000);\necho \"<br>\";\necho power_base_sum(2, 100000000000000000);\necho \"<br>\";\necho power_base_sum(2, 1000000000000000000);\necho \"<br>\";\necho power_base_sum(2, 10000000000000000000);\necho \"<br>\";\necho power_base_sum(2, 100000000000000000000);\necho \"<br>\";\necho power_base_sum(2, 1000000000000000000000);\necho \"<br>\";\necho power_base_sum(2, 10000000000000000000000);\necho \"<br>\";\necho power_base_sum(2, 100000000000000000000000);\necho \"<br>\";\necho power_base\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmpwfk6z5k2.php on line 60\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n\t$sum = 0;\n\t$result = pow($base, $power);\n\t$result = str_split($result);\n\tforeach ($result as $value) {\n\t\t$sum += $value;\n\t}\n\treturn $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpr8ck_pyv.php:8\nStack trace:\n#0 /tmp/tmpr8ck_pyv.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpr8ck_pyv.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp9anl0yc_.php:8\nStack trace:\n#0 /tmp/tmp9anl0yc_.php(13): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmp9anl0yc_.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n  $sum = 0;\n  $result = pow($base, $power);\n  $result = str_split($result);\n  foreach ($result as $value) {\n    $sum += $value;\n  }\n  return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmptczfofc7.php:8\nStack trace:\n#0 /tmp/tmptczfofc7.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmptczfofc7.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = 1;\n    for ($i = 0; $i < $power; $i++) {\n        $result *= $base;\n    }\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmperr8086s.php on line 10\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmperr8086s.php on line 10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmperr8086s.php:22\nStack trace:\n#0 /tmp/tmperr8086s.php(28): test()\n#1 {main}\n  thrown in /tmp/tmperr8086s.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "7\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversio",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "7\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversio",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = 1;\n    for ($i = 0; $i < $power; $i++) {\n        $result *= $base;\n    }\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Imp",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n  $result = pow($base, $power);\n  $sum = 0;\n  while ($result > 0) {\n    $sum += $result % 10;\n    $result = floor($result / 10);\n  }\n  return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpw7ke93d6.php:8\nStack trace:\n#0 /tmp/tmpw7ke93d6.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpw7ke93d6.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $power_base = pow($base, $power);\n    while ($power_base > 0) {\n        $sum += $power_base % 10;\n        $power_base = floor($power_base / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpct8h0hpf.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpct8h0hpf.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpct8h0hpf.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpct8h0hpf.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpct8h0hpf.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpct8h0hpf.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpct8h0hpf.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpct8h0hpf.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpyhiwibpo.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpyhiwibpo.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyhiwibpo.php:19\nStack trace:\n#0 /tmp/tmpyhiwibpo.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpyhiwibpo.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result = str_split($result);\n    $sum = array_sum($result);\n    return $sum;\n}\n\necho power_base_sum(2, 5);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdrx9j_ea.php:16\nStack trace:\n#0 /tmp/tmpdrx9j_ea.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpdrx9j_ea.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp_h47w7ry.php:8\nStack trace:\n#0 /tmp/tmp_h47w7ry.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmp_h47w7ry.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = 1;\n    for ($i = 0; $i < $power; $i++) {\n        $result *= $base;\n    }\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result /= 10;\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124168,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+293 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+292 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+291 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+290 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+289 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+288 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+287 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+286 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpyhiwibpo.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpyhiwibpo.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyhiwibpo.php:19\nStack trace:\n#0 /tmp/tmpyhiwibpo.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpyhiwibpo.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "7\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversio",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = $base ** $power;\n    $result = str_split($result);\n    $result = array_sum($result);\n    return $result;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "7\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfbamb_2r.php:16\nStack trace:\n#0 /tmp/tmpfbamb_2r.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpfbamb_2r.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmphbf6o2b9.php:8\nStack trace:\n#0 /tmp/tmphbf6o2b9.php(12): power_base_sum(2, 100)\n#1 {main}\n  thrown in /tmp/tmphbf6o2b9.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n  $result = 1;\n  for ($i = 0; $i < $power; $i++) {\n    $result *= $base;\n  }\n  $result = (string)$result;\n  $sum = 0;\n  for ($i = 0; $i < strlen($result); $i++) {\n    $sum += $result[$i];\n  }\n  return $sum;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "7\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmprwx50rsg.php:11\nStack trace:\n#0 /tmp/tmprwx50rsg.php(18): power_base_sum(2, 100)\n#1 /tmp/tmprwx50rsg.php(22): candidate(2, 100)\n#2 /tmp/tmprwx50rsg.php(28): test()\n#3 {main}\n  thrown in /tmp/tmprwx50rsg.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n  $result = pow($base, $power);\n  $sum = 0;\n  while ($result > 0) {\n    $sum += $result % 10;\n    $result = floor($result / 10);\n  }\n  return $sum;\n}\n\necho power_base_sum(2, 100) . \"\\n\";\necho power_base_sum(2, 1000) . \"\\n\";\necho power_base_sum(2, 10000) . \"\\n\";\necho power_base_sum(2, 100000) . \"\\n\";\necho power_base_sum(2, 1000000) . \"\\n\";\necho power_base_sum(2, 10000000) . \"\\n\";\necho power_base_sum(2, 100000000) . \"\\n\";\necho power_base_sum(2, 1000000000) . \"\\n\";\necho power_base_sum(2, 10000000000) . \"\\n\";\necho power_base_sum(2, 100000000000) . \"\\n\";\necho power_base_sum(2, 1000000000000) . \"\\n\";\necho power_base_sum(2, 10000000000000) . \"\\n\";\necho power_base_sum(2, 100000000000000) . \"\\n\";\necho power_base_sum(2, 1000000000000000) . \"\\n\";\necho power_base_sum(2, 10000000000000000) . \"\\n\";\necho power_base_sum(2, 100000000000000000) . \"\\n\";\necho power_base_sum(2, 1000000000000000000) . \"\\n\";\necho power_base_sum(2, 10000000000000000000) . \"\\n\";\necho power_base_sum(2, 100000000000000000000) . \"\\n\";\necho power_base_sum(2, 1000000000000000000000) . \"\\n\";\necho power_base_sum(2, 10000000000000000000000) . \"\\n\";\necho power_base_sum(2, 100000000000000000000000) . \"\\n\";\necho power_base_sum(2, 1000000000000000000000000) . \"\\n\";\necho power_base_sum(2, 10000000000000000000000000) . \"\\n\";\necho power_base_sum(2, 100000000000000000000000000) . \"\\n\";\necho power_base_sum(2, 1000000000000000000000000\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpqlnxseae.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = (string)$result;\n    for ($i = 0; $i < strlen($result); $i++) {\n        $sum += $result[$i];\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp9mgeb7wr.php:8\nStack trace:\n#0 /tmp/tmp9mgeb7wr.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmp9mgeb7wr.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n\t$result = 1;\n\tfor ($i = 0; $i < $power; $i++) {\n\t\t$result *= $base;\n\t}\n\t$result = str_split($result);\n\t$sum = 0;\n\tforeach ($result as $value) {\n\t\t$sum += $value;\n\t}\n\treturn $sum;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "7\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmph_on12uu.php:11\nStack trace:\n#0 /tmp/tmph_on12uu.php(18): power_base_sum(2, 100)\n#1 /tmp/tmph_on12uu.php(22): candidate(2, 100)\n#2 /tmp/tmph_on12uu.php(28): test()\n#3 {main}\n  thrown in /tmp/tmph_on12uu.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = $base ** $power;\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 5);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "5\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmphc4tww9_.php:8\nStack trace:\n#0 /tmp/tmphc4tww9_.php(14): power_base_sum(2, 100)\n#1 /tmp/tmphc4tww9_.php(18): candidate(2, 100)\n#2 /tmp/tmphc4tww9_.php(24): test()\n#3 {main}\n  thrown in /tmp/tmphc4tww9_.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "7\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp8uchf5ql.php:8\nStack trace:\n#0 /tmp/tmp8uchf5ql.php(14): power_base_sum(2, 100)\n#1 /tmp/tmp8uchf5ql.php(18): candidate(2, 100)\n#2 /tmp/tmp8uchf5ql.php(24): test()\n#3 {main}\n  thrown in /tmp/tmp8uchf5ql.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = (string)$result;\n    for ($i = 0; $i < strlen($result); $i++) {\n        $sum += $result[$i];\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp9mgeb7wr.php:8\nStack trace:\n#0 /tmp/tmp9mgeb7wr.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmp9mgeb7wr.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "7\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversio",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n  $result = pow($base, $power);\n  $result = str_split($result);\n  $result = array_sum($result);\n  return $result;\n}\n\necho power_base_sum(2, 4);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "7\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_1p261r3.php:16\nStack trace:\n#0 /tmp/tmp_1p261r3.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp_1p261r3.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp_h47w7ry.php:8\nStack trace:\n#0 /tmp/tmp_h47w7ry.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmp_h47w7ry.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n  $result = pow($base, $power);\n  $sum = 0;\n  while ($result > 0) {\n    $sum += $result % 10;\n    $result = floor($result / 10);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmp5t015shn.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmp5t015shn.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmp5t015shn.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmp5t015shn.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmp5t015shn.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmp5t015shn.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmp5t015shn.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmp5t015shn.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 3);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "8\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpi0zq757k.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpi0zq757k.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpi0zq757k.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpi0zq757k.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpi0zq757k.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpi0zq757k.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpi0zq757k.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpi0zq757k.php on line 7\n\nDeprecated: Implicit conversio",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmphhpdkn1b.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmphhpdkn1b.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphhpdkn1b.php:19\nStack trace:\n#0 /tmp/tmphhpdkn1b.php(25): test()\n#1 {main}\n  thrown in /tmp/tmphhpdkn1b.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = (string)$result;\n    for ($i = 0; $i < strlen($result); $i++) {\n        $sum += $result[$i];\n    }\n    return $sum;\n}\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpeq022tjm.php:8\nStack trace:\n#0 /tmp/tmpeq022tjm.php(12): power_base_sum(2, 100)\n#1 {main}\n  thrown in /tmp/tmpeq022tjm.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n  $result = pow($base, $power);\n  $sum = 0;\n  while ($result > 0) {\n    $sum += $result % 10;\n    $result = floor($result / 10);\n  }\n  return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpnkylm9od.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpnkylm9od.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpnkylm9od.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpnkylm9od.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpnkylm9od.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpnkylm9od.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpnkylm9od.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpnkylm9od.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = $base ** $power;\n    $result = str_split($result);\n    $sum = 0;\n    foreach($result as $digit) {\n        $sum += $digit;\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp26zmoz5i.php:8\nStack trace:\n#0 /tmp/tmp26zmoz5i.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmp26zmoz5i.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = $base ** $power;\n    $result_string = strval($result);\n    $result_array = str_split($result_string);\n    $sum = 0;\n    foreach ($result_array as $digit) {\n        $sum += $digit;\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp4e0h8udt.php:9\nStack trace:\n#0 /tmp/tmp4e0h8udt.php(14): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmp4e0h8udt.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "7\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpyzc9uu4r.php:8\nStack trace:\n#0 /tmp/tmpyzc9uu4r.php(15): power_base_sum(2, 100)\n#1 /tmp/tmpyzc9uu4r.php(19): candidate(2, 100)\n#2 /tmp/tmpyzc9uu4r.php(25): test()\n#3 {main}\n  thrown in /tmp/tmpyzc9uu4r.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp_h47w7ry.php:8\nStack trace:\n#0 /tmp/tmp_h47w7ry.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmp_h47w7ry.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpw7ke93d6.php:8\nStack trace:\n#0 /tmp/tmpw7ke93d6.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpw7ke93d6.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = $base ** $power;\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $digit) {\n        $sum += $digit;\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpq7q0dnil.php:8\nStack trace:\n#0 /tmp/tmpq7q0dnil.php(13): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpq7q0dnil.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 10);\necho \"\\n\";\necho power_base_sum(2, 100);\necho \"\\n\";\necho power_base_sum(2, 1000);\necho \"\\n\";\necho power_base_sum(2, 10000);\necho \"\\n\";\necho power_base_sum(2, 100000);\necho \"\\n\";\necho power_base_sum(2, 1000000);\necho \"\\n\";\necho power_base_sum(2, 10000000);\necho \"\\n\";\necho power_base_sum(2, 100000000);\necho \"\\n\";\necho power_base_sum(2, 1000000000);\necho \"\\n\";\necho power_base_sum(2, 10000000000);\necho \"\\n\";\necho power_base_sum(2, 100000000000);\necho \"\\n\";\necho power_base_sum(2, 1000000000000);\necho \"\\n\";\necho power_base_sum(2, 10000000000000);\necho \"\\n\";\necho power_base_sum(2, 100000000000000);\necho \"\\n\";\necho power_base_sum(2, 1000000000000000);\necho \"\\n\";\necho power_base_sum(2, 10000000000000000);\necho \"\\n\";\necho power_base_sum(2, 100000000000000000);\necho \"\\n\";\necho power_base_sum(2, 1000000000000000000);\necho \"\\n\";\necho power_base_sum(2, 10000000000000000000);\necho \"\\n\";\necho power_base_sum(2, 100000000000000000000);\necho \"\\n\";\necho power_base_sum(2, 1000000000000000000000);\necho \"\\n\";\necho power_base_sum(2, 10000000000000000000000);\necho \"\\n\";\necho power_base_sum(2, 100000000000000000000000);\necho \"\\n\";\necho power_base_sum(2, 1000000000000000000000000);\necho \"\\n\";\necho power_base_sum(2\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpx_t_t4wd.php on line 62\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = $base ** $power;\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmp2u3f713w.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmp2u3f713w.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2u3f713w.php:19\nStack trace:\n#0 /tmp/tmp2u3f713w.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp2u3f713w.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "7\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp8uchf5ql.php:8\nStack trace:\n#0 /tmp/tmp8uchf5ql.php(14): power_base_sum(2, 100)\n#1 /tmp/tmp8uchf5ql.php(18): candidate(2, 100)\n#2 /tmp/tmp8uchf5ql.php(24): test()\n#3 {main}\n  thrown in /tmp/tmp8uchf5ql.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = $base ** $power;\n    $result = str_split($result);\n    $result = array_sum($result);\n    return $result;\n}\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "7\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1pa58kmq.php:15\nStack trace:\n#0 /tmp/tmp1pa58kmq.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp1pa58kmq.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $digit) {\n        $sum += $digit;\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp4nuc64pw.php:8\nStack trace:\n#0 /tmp/tmp4nuc64pw.php(13): power_base_sum(2, 100)\n#1 {main}\n  thrown in /tmp/tmp4nuc64pw.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp_h47w7ry.php:8\nStack trace:\n#0 /tmp/tmp_h47w7ry.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmp_h47w7ry.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = (string) $result;\n    for ($i = 0; $i < strlen($result); $i++) {\n        $sum += (int) $result[$i];\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "57\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbo4fh5xx.php:19\nStack trace:\n#0 /tmp/tmpbo4fh5xx.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpbo4fh5xx.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpgrkjnw8z.php:8\nStack trace:\n#0 /tmp/tmpgrkjnw8z.php(13): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpgrkjnw8z.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n\t$result = 1;\n\tfor ($i = 0; $i < $power; $i++) {\n\t\t$result *= $base;\n\t}\n\t$sum = 0;\n\twhile ($result > 0) {\n\t\t$sum += $result % 10;\n\t\t$result = floor($result / 10);\n\t}\n\treturn $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmp9kn13zo_.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmp9kn13zo_.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmp9kn13zo_.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmp9kn13zo_.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmp9kn13zo_.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmp9kn13zo_.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmp9kn13zo_.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmp9kn13zo_.php on line 10\n\nDeprecated: Imp",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "7\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpyj_rpoox.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpyj_rpoox.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpyj_rpoox.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpyj_rpoox.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpyj_rpoox.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpyj_rpoox.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpyj_rpoox.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpyj_rpoox.php on line 7\n\nDeprecated: Implicit conversio",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = (string)$result;\n    for ($i = 0; $i < strlen($result); $i++) {\n        $sum += $result[$i];\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpzdcn_yws.php:8\nStack trace:\n#0 /tmp/tmpzdcn_yws.php(13): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpzdcn_yws.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = (string)$result;\n    for ($i = 0; $i < strlen($result); $i++) {\n        $sum += $result[$i];\n    }\n    return $sum;\n}\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpeq022tjm.php:8\nStack trace:\n#0 /tmp/tmpeq022tjm.php(12): power_base_sum(2, 100)\n#1 {main}\n  thrown in /tmp/tmpeq022tjm.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp_h47w7ry.php:8\nStack trace:\n#0 /tmp/tmp_h47w7ry.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmp_h47w7ry.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmp4f9bby9c.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "7\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpe3p1cvw0.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe3p1cvw0.php:19\nStack trace:\n#0 /tmp/tmpe3p1cvw0.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpe3p1cvw0.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n  $result = pow($base, $power);\n  $sum = 0;\n  while ($result > 0) {\n    $sum += $result % 10;\n    $result = floor($result / 10);\n  }\n  return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpw7ke93d6.php:8\nStack trace:\n#0 /tmp/tmpw7ke93d6.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpw7ke93d6.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "7\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp4g0fnr4y.php:8\nStack trace:\n#0 /tmp/tmp4g0fnr4y.php(14): power_base_sum(2, 100)\n#1 /tmp/tmp4g0fnr4y.php(18): candidate(2, 100)\n#2 /tmp/tmp4g0fnr4y.php(24): test()\n#3 {main}\n  thrown in /tmp/tmp4g0fnr4y.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    for ($i = 0; $i <= $power; $i++) {\n        $sum += $base;\n    }\n    return $sum;\n}\necho power_base_sum(2, 3);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "8\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsqkw17o_.php:16\nStack trace:\n#0 /tmp/tmpsqkw17o_.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpsqkw17o_.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmphbf6o2b9.php:8\nStack trace:\n#0 /tmp/tmphbf6o2b9.php(12): power_base_sum(2, 100)\n#1 {main}\n  thrown in /tmp/tmphbf6o2b9.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = intval($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124169,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmprrdov8r1.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmprrdov8r1.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprrdov8r1.php:19\nStack trace:\n#0 /tmp/tmprrdov8r1.php(25): test()\n#1 {main}\n  thrown in /tmp/tmprrdov8r1.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
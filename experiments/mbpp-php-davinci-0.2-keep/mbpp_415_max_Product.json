{
  "name": "mbpp_415_max_Product",
  "language": "php",
  "prompt": "<?php\n// Write a python function to find a pair with highest product from a given array of integers.\nfunction max_Product($arr) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_415_max_Product.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return max_Product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 7, 0, 8, 4)) !== array(7, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, -1, -2, -4, 5, 0, -6)) !== array(-4, -6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $max1 = $max2 = 0;\n    for ($i = 0; $i < sizeof($arr); $i++) {\n        if ($arr[$i] > $max1) {\n            $max2 = $max1;\n            $max1 = $arr[$i];\n        } else if ($arr[$i] > $max2) {\n            $max2 = $arr[$i];\n        }\n    }\n    return $max1 * $max2;\n}\n\n$arr = array(1, 4, 3, 6, 7, 0);\necho \"Maximum product is \" . max_Product($arr);",
    "    $max_product = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            if ($arr[$i] * $arr[$j] > $max_product) {\n                $max_product = $arr[$i] * $arr[$j];\n            }\n        }\n    }\n    return $max_product;\n}\n$arr = array(1, 4, 3, 6, 7, 0);\necho \"Maximum product is \" . max_Product($arr);",
    "    $max1 = $max2 = $max3 = $max4 = $max5 = $max6 = $max7 = $max8 = $max9 = $max10 = $max11 = $max12 = $max13 = $max14 = $max15 = $max16 = $max17 = $max18 = $max19 = $max20 = $max21 = $max22 = $max23 = $max24 = $max25 = $max26 = $max27 = $max28 = $max29 = $max30 = $max31 = $max32 = $max33 = $max34 = $max35 = $max36 = $max37 = $max38 = $max39 = $max40 = $max41 = $max42 = $max43 = $max44 = $max45 = $max46 = $max47 = $max48 = $max49 = $max50 = $max51 = $max52 = $max53 = $max54 = $max55 = $max56 = $max57 = $max58 = $max59 = $max60 = $max61 = $max62 = $max63 = $max64 = $max65 = $max66 = $max67 = $max68 = $max69 = $max70 = $max71 = $max72 = $max73 = $max74 = $max75 = $max76 = $max77 = $max78 = $max79 = $max80 = $max81 = $max82 = $max83 = $max84 = $max85 = $max86 = $max87 = $max88 = $max89 = $max90 = $max91 = $max92 = $max93 = $max94 = $max95 = $max96 = $max97 = $max98 = $max99 = $max100 = $max101 = $max102 = $max103 = $max104 = $max105 = $max106 = $max107 = $max108 = $max109 = $max110 = $max111 = $max112 = $max113 = $max114 = $max115 = $max116 = $max117 = $max118 = $max119 = $max120 = $max121 = $max122 = $max123 = $max124 = $max125 = $max126 = $max127 = $max",
    "    $n = count($arr);\n    if ($n < 2) {\n        echo \"No pairs exists\";\n        return;\n    }\n    if ($n == 2) {\n        echo $arr[0] * $arr[1];\n        return;\n    }\n    sort($arr);\n    $a = $arr[$n - 1] * $arr[$n - 2];\n    $b = $arr[0] * $arr[1];\n    echo ($a > $b) ? $a : $b;\n}\n\n$arr = array(1, 4, 3, 6, 7, 0);\nmax_Product($arr);",
    "    $max1 = $arr[0];\n    $max2 = $arr[1];\n    $min1 = $arr[0];\n    $min2 = $arr[1];\n    for ($i = 2; $i < count($arr); $i++) {\n        if ($arr[$i] > $max1) {\n            $max2 = $max1;\n            $max1 = $arr[$i];\n        } else if ($arr[$i] > $max2) {\n            $max2 = $arr[$i];\n        }\n        if ($arr[$i] < $min1) {\n            $min2 = $min1;\n            $min1 = $arr[$i];\n        } else if ($arr[$i] < $min2) {\n            $min2 = $arr[$i];\n        }\n    }\n    return max($max1 * $max2, $min1 * $min2);\n}\n$arr = array(1, 4, 3, 6, 7, 0);\necho max_Product($arr);",
    "    $max1 = $max2 = $max3 = $min1 = $min2 = PHP_INT_MIN;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > $max1) {\n            $max3 = $max2;\n            $max2 = $max1;\n            $max1 = $arr[$i];\n        } else if ($arr[$i] > $max2) {\n            $max3 = $max2;\n            $max2 = $arr[$i];\n        } else if ($arr[$i] > $max3) {\n            $max3 = $arr[$i];\n        }\n        if ($arr[$i] < $min1) {\n            $min2 = $min1;\n            $min1 = $arr[$i];\n        } else if ($arr[$i] < $min2) {\n            $min2 = $arr[$i];\n        }\n    }\n    return max($max1 * $max2 * $max3, $max1 * $min1 * $min2);\n}\n\n$arr = array(1, -4, 3, -6, 7, 0);\necho max_Product($arr);",
    "    $max1 = $max2 = 0;\n    for ($i=0; $i < count($arr); $i++) { \n        if ($arr[$i] > $max1) {\n            $max2 = $max1;\n            $max1 = $arr[$i];\n        } else if ($arr[$i] > $max2) {\n            $max2 = $arr[$i];\n        }\n    }\n    return $max1 * $max2;\n}\n\n$arr = [1, 2, 3, 4, 5];\necho max_Product($arr);",
    "    $max1 = -1;\n    $max2 = -1;\n    $max3 = -1;\n    $min1 = 1;\n    $min2 = 1;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > $max1) {\n            $max3 = $max2;\n            $max2 = $max1;\n            $max1 = $arr[$i];\n        } else if ($arr[$i] > $max2) {\n            $max3 = $max2;\n            $max2 = $arr[$i];\n        } else if ($arr[$i] > $max3) {\n            $max3 = $arr[$i];\n        }\n        if ($arr[$i] < $min1) {\n            $min2 = $min1;\n            $min1 = $arr[$i];\n        } else if ($arr[$i] < $min2) {\n            $min2 = $arr[$i];\n        }\n    }\n    return max($max1 * $max2 * $max3, $max1 * $min1 * $min2);\n}\n\n$arr = array(1, -4, 3, -6, 7, 0);\necho max_Product($arr);",
    "    $max1 = $max2 = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > $max1) {\n            $max2 = $max1;\n            $max1 = $arr[$i];\n        } else if ($arr[$i] > $max2) {\n            $max2 = $arr[$i];\n        }\n    }\n    return $max1 * $max2;\n}\n\n$arr = array(1, 4, 3, 6, 7, 0);\necho max_Product($arr);",
    "    $max1 = $max2 = $max3 = $min1 = $min2 = $min3 = -1;\n    $n = count($arr);\n    for($i = 0; $i < $n; $i++) {\n        if($arr[$i] > $max1) {\n            $max3 = $max2;\n            $max2 = $max1;\n            $max1 = $arr[$i];\n        } else if($arr[$i] > $max2) {\n            $max3 = $max2;\n            $max2 = $arr[$i];\n        } else if($arr[$i] > $max3) {\n            $max3 = $arr[$i];\n        }\n        if($arr[$i] < $min1) {\n            $min2 = $min1;\n            $min1 = $arr[$i];\n        } else if($arr[$i] < $min2) {\n            $min2 = $arr[$i];\n        }\n    }\n    return max($max1 * $max2 * $max3, $max1 * $min1 * $min2);\n}\n\n$arr = array(1, -4, 3, -6, 7, 0);\necho max_Product($arr);",
    "    $max1 = $max2 = $max3 = $min1 = $min2 = -INF;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > $max1) {\n            $max3 = $max2;\n            $max2 = $max1;\n            $max1 = $arr[$i];\n        } else if ($arr[$i] > $max2) {\n            $max3 = $max2;\n            $max2 = $arr[$i];\n        } else if ($arr[$i] > $max3) {\n            $max3 = $arr[$i];\n        }\n        if ($arr[$i] < $min1) {\n            $min2 = $min1;\n            $min1 = $arr[$i];\n        } else if ($arr[$i] < $min2) {\n            $min2 = $arr[$i];\n        }\n    }\n    return max($max1 * $max2 * $max3, $max1 * $min1 * $min2);\n}\n$arr = array(1, -4, 3, -6, 7, 0);\necho max_Product($arr);",
    "    $max1 = $max2 = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > $max1) {\n            $max2 = $max1;\n            $max1 = $arr[$i];\n        } else if ($arr[$i] > $max2) {\n            $max2 = $arr[$i];\n        }\n    }\n    return $max1 * $max2;\n}\n\n$arr = array(1, 4, 3, 6, 7, 0);\necho max_Product($arr);",
    "\t$max = 0;\n\t$max_product = 0;\n\t$min = 0;\n\t$min_product = 0;\n\tfor ($i = 0; $i < count($arr); $i++) {\n\t\tif ($arr[$i] > $max) {\n\t\t\t$max = $arr[$i];\n\t\t}\n\t\tif ($arr[$i] < $min) {\n\t\t\t$min = $arr[$i];\n\t\t}\n\t}\n\t$max_product = $max * $min;\n\treturn $max_product;\n}\n$arr = array(1, 2, 3, 4, 5);\necho max_Product($arr);",
    "    $max1 = $max2 = $max3 = $min1 = $min2 = -1;\n    for($i=0;$i<count($arr);$i++) {\n        if($arr[$i] > $max1) {\n            $max3 = $max2;\n            $max2 = $max1;\n            $max1 = $arr[$i];\n        } else if($arr[$i] > $max2) {\n            $max3 = $max2;\n            $max2 = $arr[$i];\n        } else if($arr[$i] > $max3) {\n            $max3 = $arr[$i];\n        }\n        if($arr[$i] < $min1) {\n            $min2 = $min1;\n            $min1 = $arr[$i];\n        } else if($arr[$i] < $min2) {\n            $min2 = $arr[$i];\n        }\n    }\n    return max($max1*$max2*$max3, $max1*$min1*$min2);\n}\n\n$arr = array(1, -4, 3, -6, 7, 0);\necho max_Product($arr);",
    "    $max = max($arr);\n    $max2 = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] != $max) {\n            if ($arr[$i] > $max2) {\n                $max2 = $arr[$i];\n            }\n        }\n    }\n    return $max * $max2;\n}\n\n$arr = array(1, 2, 3, 4, 5);\necho max_Product($arr);",
    "    $max1 = $max2 = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > $max1) {\n            $max2 = $max1;\n            $max1 = $arr[$i];\n        } else if ($arr[$i] > $max2) {\n            $max2 = $arr[$i];\n        }\n    }\n    return $max1 * $max2;\n}\n\n$arr = array(1, 4, 3, 6, 7, 0);\necho max_Product($arr);\n",
    "    $max = 0;\n    $n = sizeof($arr);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            if ($arr[$i] * $arr[$j] > $max) {\n                $max = $arr[$i] * $arr[$j];\n            }\n        }\n    }\n    return $max;\n}\n\n$arr = [1, 4, 3, 6, 7, 0];\necho max_Product($arr);",
    "    $max1 = $max2 = $max3 = $min1 = $min2 = $min3 = -1;\n    $n = sizeof($arr);\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] > $max1) {\n            $max3 = $max2;\n            $max2 = $max1;\n            $max1 = $arr[$i];\n        } else if ($arr[$i] > $max2) {\n            $max3 = $max2;\n            $max2 = $arr[$i];\n        } else if ($arr[$i] > $max3) {\n            $max3 = $arr[$i];\n        }\n        if ($arr[$i] < $min1) {\n            $min2 = $min1;\n            $min1 = $arr[$i];\n        } else if ($arr[$i] < $min2) {\n            $min2 = $arr[$i];\n        }\n    }\n    return max($max1 * $max2 * $max3, $max1 * $min1 * $min2);\n}\n$arr = array(10, 3, 5, 6, 20);\necho max_Product($arr);",
    "    $max1 = 0;\n    $max2 = 0;\n    $max3 = 0;\n    $min1 = 0;\n    $min2 = 0;\n    $len = count($arr);\n    for ($i = 0; $i < $len; $i++) {\n        if ($arr[$i] > $max1) {\n            $max3 = $max2;\n            $max2 = $max1;\n            $max1 = $arr[$i];\n        } else if ($arr[$i] > $max2) {\n            $max3 = $max2;\n            $max2 = $arr[$i];\n        } else if ($arr[$i] > $max3) {\n            $max3 = $arr[$i];\n        }\n        if ($arr[$i] < $min1) {\n            $min2 = $min1;\n            $min1 = $arr[$i];\n        } else if ($arr[$i] < $min2) {\n            $min2 = $arr[$i];\n        }\n    }\n    return max($max1 * $max2 * $max3, $max1 * $min1 * $min2);\n}\n\n$arr = array(1, -4, 3, -6, 7, 0);\necho max_Product($arr);",
    "    $max_product = $arr[0] * $arr[1];\n    $size = sizeof($arr);\n    for ($i = 0; $i < $size; $i++) {\n        for ($j = $i + 1; $j < $size; $j++) {\n            if ($max_product < $arr[$i] * $arr[$j])\n                $max_product = $arr[$i] * $arr[$j];\n        }\n    }\n    return $max_product;\n}\n$arr = array(1, 4, 3, 6, 7, 0);\necho \"Maximum product is \" . max_Product($arr);"
  ]
}
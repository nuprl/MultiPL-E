{
  "name": "mbpp_91_find_substring",
  "language": "php",
  "prompt": "<?php\n// Write a function to check if a string is present as a substring in a given list of string values.\nfunction find_substring($str1, $sub_str) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_91_find_substring.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return find_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"red\", \"black\", \"white\", \"green\", \"orange\"), \"ack\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"red\", \"black\", \"white\", \"green\", \"orange\"), \"abc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"red\", \"black\", \"white\", \"green\", \"orange\"), \"ange\") !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $str1 = strtolower($str1);\n    $sub_str = strtolower($sub_str);\n    $str1_len = strlen($str1);\n    $sub_str_len = strlen($sub_str);\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    while($i < $str1_len) {\n        if($str1[$i] == $sub_str[$j]) {\n            $i++;\n            $j++;\n            $count++;\n        } else {\n            $i++;\n            $j = 0;\n            $count = 0;\n        }\n        if($count == $sub_str_len) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$str1 = \"This is a test string\";\n$sub_str = \"is\";\n$result = find_substring($str1, $sub_str);\nif($result) {\n    echo \"Substring found\";\n} else {\n    echo \"Substring not found\";\n}",
    "\tif (strpos($str1, $sub_str) !== false) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n$str1 = \"This is a test string\";\n$sub_str = \"test\";\n\nif (find_substring($str1, $sub_str)) {\n\techo \"Substring found\";\n} else {\n\techo \"Substring not found\";\n}",
    "\t$str_arr = explode(\" \", $str1);\n\tforeach ($str_arr as $str) {\n\t\tif ($str == $sub_str) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n$str1 = \"I am a boy\";\n$sub_str = \"boy\";\n\nif (find_substring($str1, $sub_str)) {\n\techo \"Substring found\";\n} else {\n\techo \"Substring not found\";\n}",
    "    $str1 = strtolower($str1);\n    $sub_str = strtolower($sub_str);\n    if (strpos($str1, $sub_str) !== false) {\n        return true;\n    }\n    return false;\n}\n\n$str1 = \"This is a test string\";\n$sub_str = \"test\";\n\nif (find_substring($str1, $sub_str)) {\n    echo \"Substring found\";\n} else {\n    echo \"Substring not found\";\n}",
    "    $result = false;\n    if (strpos($str1, $sub_str) !== false) {\n        $result = true;\n    }\n    return $result;\n}\n\n$str1 = \"This is a test string\";\n$sub_str = \"test\";\necho find_substring($str1, $sub_str);",
    "    $str1 = strtolower($str1);\n    $sub_str = strtolower($sub_str);\n    $str1_len = strlen($str1);\n    $sub_str_len = strlen($sub_str);\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    while($i < $str1_len) {\n        if($str1[$i] == $sub_str[$j]) {\n            $i++;\n            $j++;\n            $count++;\n        } else {\n            $i++;\n            $j = 0;\n            $count = 0;\n        }\n        if($count == $sub_str_len) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$str1 = \"I am a good boy\";\n$sub_str = \"good\";\n\nif(find_substring($str1, $sub_str)) {\n    echo \"Substring found\";\n} else {\n    echo \"Substring not found\";\n}",
    "\tif (strpos($str1, $sub_str) !== false) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\n\n$str1 = \"Hello World\";\n$sub_str = \"World\";\n\necho find_substring($str1, $sub_str);\n",
    "\t$str1 = strtolower($str1);\n\t$sub_str = strtolower($sub_str);\n\t$str1_len = strlen($str1);\n\t$sub_str_len = strlen($sub_str);\n\t$i = 0;\n\t$j = 0;\n\t$count = 0;\n\twhile($i < $str1_len) {\n\t\tif($str1[$i] == $sub_str[$j]) {\n\t\t\t$i++;\n\t\t\t$j++;\n\t\t\t$count++;\n\t\t} else {\n\t\t\t$i++;\n\t\t\t$j = 0;\n\t\t\t$count = 0;\n\t\t}\n\t\tif($count == $sub_str_len) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n$str1 = \"I am a good boy\";\n$sub_str = \"good\";\nif(find_substring($str1, $sub_str)) {\n\techo \"Substring found\";\n} else {\n\techo \"Substring not found\";\n}",
    "    $str1 = strtolower($str1);\n    $sub_str = strtolower($sub_str);\n    if (strpos($str1, $sub_str) !== false) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$str1 = \"This is a string\";\n$sub_str = \"is\";\n$result = find_substring($str1, $sub_str);\nif ($result) {\n    echo \"Substring is present in the given string\";\n} else {\n    echo \"Substring is not present in the given string\";\n}",
    "    $str1 = strtolower($str1);\n    $sub_str = strtolower($sub_str);\n    if (strpos($str1, $sub_str) !== false) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$str1 = \"Hello World\";\n$sub_str = \"world\";\n\nif (find_substring($str1, $sub_str)) {\n    echo \"Substring found\";\n} else {\n    echo \"Substring not found\";\n}",
    "    $str_arr = explode(\" \", $str1);\n    $sub_str_arr = explode(\" \", $sub_str);\n    $count = 0;\n    for ($i = 0; $i < count($str_arr); $i++) {\n        for ($j = 0; $j < count($sub_str_arr); $j++) {\n            if ($str_arr[$i] == $sub_str_arr[$j]) {\n                $count++;\n            }\n        }\n    }\n    if ($count == count($sub_str_arr)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$str1 = \"This is a test string\";\n$sub_str = \"is a\";\n\nif (find_substring($str1, $sub_str)) {\n    echo \"Substring is present in the string\";\n} else {\n    echo \"Substring is not present in the string\";\n}",
    "    $str1 = strtolower($str1);\n    $sub_str = strtolower($sub_str);\n    if (strpos($str1, $sub_str) !== false) {\n        return true;\n    }\n    return false;\n}\n\n$str1 = \"I am a string\";\n$str2 = \"I am a string\";\n$str3 = \"I am a string\";\n$str4 = \"I am a string\";\n$str5 = \"I am a string\";\n$str6 = \"I am a string\";\n$str7 = \"I am a string\";\n$str8 = \"I am a string\";\n$str9 = \"I am a string\";\n$str10 = \"I am a string\";\n$str11 = \"I am a string\";\n$str12 = \"I am a string\";\n$str13 = \"I am a string\";\n$str14 = \"I am a string\";\n$str15 = \"I am a string\";\n$str16 = \"I am a string\";\n$str17 = \"I am a string\";\n$str18 = \"I am a string\";\n$str19 = \"I am a string\";\n$str20 = \"I am a string\";\n$str21 = \"I am a string\";\n$str22 = \"I am a string\";\n$str23 = \"I am a string\";\n$str24 = \"I am a string\";\n$str25 = \"I am a string\";\n$str26 = \"I am a string\";\n$str27 = \"I am a string\";\n$str28 = \"I am a string\";\n$str29 = \"I am a string\";\n$str30 = \"I am a string\";\n$str31 = \"I am a string\";\n$str32 = \"I am a string\";\n$str33 = \"I am a string\";\n$str34 = \"I am a string\";\n$str35 = \"I am a string\";\n$str36 = \"I am a string\";\n$str37 = \"I am a string\";\n$str38 = \"I am a string\";\n$str39 = \"I am a string\";\n$str40 = \"I am a string\";\n$str41 = \"",
    "\t$str1 = strtolower($str1);\n\t$sub_str = strtolower($sub_str);\n\t$str_array = explode(\" \", $str1);\n\t$sub_str_array = explode(\" \", $sub_str);\n\t$result = array_intersect($str_array, $sub_str_array);\n\tif(count($result) > 0) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n$str1 = \"This is a test string\";\n$sub_str = \"is\";\n$result = find_substring($str1, $sub_str);\nif($result) {\n\techo \"Yes, '$sub_str' is present in '$str1'\";\n} else {\n\techo \"No, '$sub_str' is not present in '$str1'\";\n}",
    "    $str1 = strtolower($str1);\n    $sub_str = strtolower($sub_str);\n    $str_arr = explode(\" \", $str1);\n    $sub_str_arr = explode(\" \", $sub_str);\n    $result = array_intersect($str_arr, $sub_str_arr);\n    if(count($result) > 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$str1 = \"The quick brown fox jumps over the lazy dog\";\n$sub_str = \"fox\";\n\nif(find_substring($str1, $sub_str)) {\n    echo \"Substring is present in the string\";\n} else {\n    echo \"Substring is not present in the string\";\n}",
    "    if(strpos($str1, $sub_str) !== false) {\n        return true;\n    }\n    return false;\n}\n\n$str1 = \"This is a test string\";\n$sub_str = \"test\";\n$result = find_substring($str1, $sub_str);\nif($result) {\n    echo \"Substring found\";\n} else {\n    echo \"Substring not found\";\n}",
    "    $str1 = strtolower($str1);\n    $sub_str = strtolower($sub_str);\n    $str1_len = strlen($str1);\n    $sub_str_len = strlen($sub_str);\n    $count = 0;\n    for ($i = 0; $i < $str1_len; $i++) {\n        if ($str1[$i] == $sub_str[$count]) {\n            $count++;\n        } else {\n            $count = 0;\n        }\n        if ($count == $sub_str_len) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$str1 = \"Hello World\";\n$sub_str = \"world\";\nif (find_substring($str1, $sub_str)) {\n    echo \"Substring found\";\n} else {\n    echo \"Substring not found\";\n}",
    "    if (strpos($str1, $sub_str) !== false) {\n        return true;\n    }\n    return false;\n}\n\n$str1 = \"I am a PHP developer\";\n$sub_str = \"PHP\";\n\nif (find_substring($str1, $sub_str)) {\n    echo \"Substring found\";\n} else {\n    echo \"Substring not found\";\n}",
    "    $count = 0;\n    $len = strlen($str1);\n    $sub_len = strlen($sub_str);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] == $sub_str[0]) {\n            $count = 0;\n            for ($j = 0; $j < $sub_len; $j++) {\n                if ($str1[$i + $j] == $sub_str[$j]) {\n                    $count++;\n                }\n            }\n            if ($count == $sub_len) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n$str1 = \"This is a test string\";\n$str2 = \"test\";\n$str3 = \"test string\";\n$str4 = \"string\";\n$str5 = \"is\";\n$str6 = \"is a\";\n$str7 = \"is a test\";\n$str8 = \"is a test string\";\n$str9 = \"is a test string.\";\n$str10 = \"is a test string. This\";\n$str11 = \"is a test string. This is\";\n$str12 = \"is a test string. This is a\";\n$str13 = \"is a test string. This is a test\";\n$str14 = \"is a test string. This is a test string\";\n$str15 = \"is a test string. This is a test string.\";\n$str16 = \"is a test string. This is a test string. This\";\n$str17 = \"is a test string. This is a test string. This is\";\n$str18 = \"is a test string. This is a test string. This is a\";\n$str19 = \"is a test string. This is a test string. This is a test\";\n$str20 = \"is a test string. This is a test string. This is a test string\";\n$str21 = \"is a test string. This is a test string. This is a test string.\";\n$str22 = \"is a test string. This is a test string. This is a test string. This\";\n$str23 = \"is a test string. This is a",
    "    if (strpos($str1, $sub_str) !== false) {\n        return true;\n    }\n    return false;\n}\n\n$str1 = \"Hello World\";\n$sub_str = \"World\";\n\nif (find_substring($str1, $sub_str)) {\n    echo \"Substring found\";\n} else {\n    echo \"Substring not found\";\n}",
    "    $found = false;\n    foreach ($str1 as $str) {\n        if (strpos($str, $sub_str) !== false) {\n            $found = true;\n            break;\n        }\n    }\n    return $found;\n}\n\n$str1 = array('hello', 'world', 'hi', 'how are you');\n$sub_str = 'how';\n\nif (find_substring($str1, $sub_str)) {\n    echo \"Substring found\";\n} else {\n    echo \"Substring not found\";\n}"
  ]
}
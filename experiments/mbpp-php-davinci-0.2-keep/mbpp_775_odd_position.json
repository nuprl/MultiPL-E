{
  "name": "mbpp_775_odd_position",
  "language": "php",
  "prompt": "<?php\n// Write a python function to check whether every odd index contains odd numbers of a given list.\nfunction odd_position($nums) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_775_odd_position.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return odd_position(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 1, 4, 3, 6, 7, 6, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 2)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $odd_nums = [];\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 != 0) {\n            $odd_nums[] = $nums[$i];\n        }\n    }\n    return $odd_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(odd_position($nums));",
    "    $odd_nums = array();\n    foreach ($nums as $key => $num) {\n        if ($key % 2 != 0) {\n            $odd_nums[] = $num;\n        }\n    }\n    foreach ($odd_nums as $num) {\n        if ($num % 2 == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho odd_position($nums);",
    "    $odd_position = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 != 0) {\n            $odd_position[] = $nums[$i];\n        }\n    }\n    return $odd_position;\n}\n\n$nums = array(10, 20, 30, 40, 50, 60, 70, 80, 90, 100);\n$odd_position = odd_position($nums);\nprint_r($odd_position);",
    "    $odd_position = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 != 0) {\n            $odd_position[] = $nums[$i];\n        }\n    }\n    return $odd_position;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$odd_position = odd_position($nums);\nprint_r($odd_position);",
    "    $odd_nums = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 != 0 && $nums[$i] % 2 != 0) {\n            array_push($odd_nums, $nums[$i]);\n        }\n    }\n    return $odd_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(odd_position($nums));\n",
    "    $odd_position = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 != 0) {\n            array_push($odd_position, $nums[$i]);\n        }\n    }\n    return $odd_position;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$odd_position = odd_position($nums);\nprint_r($odd_position);",
    "    $odd_position = [];\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 != 0) {\n            array_push($odd_position, $nums[$i]);\n        }\n    }\n    return $odd_position;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(odd_position($nums));",
    "    $odd_nums = array();\n    foreach ($nums as $key => $num) {\n        if ($key % 2 != 0) {\n            array_push($odd_nums, $num);\n        }\n    }\n    $odd_nums = array_filter($odd_nums, function($num) {\n        return $num % 2 != 0;\n    });\n    return count($odd_nums) == count($nums) / 2;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho odd_position($nums);",
    "    $odd_nums = array();\n    foreach ($nums as $key => $num) {\n        if ($key % 2 != 0) {\n            $odd_nums[] = $num;\n        }\n    }\n    return $odd_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(odd_position($nums));",
    "    $odd_nums = [];\n    for($i = 0; $i < count($nums); $i++) {\n        if($i % 2 == 1) {\n            array_push($odd_nums, $nums[$i]);\n        }\n    }\n    return $odd_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(odd_position($nums));",
    "    $odd_nums = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 != 0) {\n            array_push($odd_nums, $nums[$i]);\n        }\n    }\n    return $odd_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$odd_nums = odd_position($nums);\nprint_r($odd_nums);",
    "    $odd_position = true;\n    for ($i = 1; $i < count($nums); $i += 2) {\n        if ($nums[$i] % 2 == 0) {\n            $odd_position = false;\n        }\n    }\n    return $odd_position;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho odd_position($nums);",
    "    $odd_nums = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 != 0) {\n            if ($nums[$i] % 2 != 0) {\n                array_push($odd_nums, $nums[$i]);\n            }\n        }\n    }\n    return $odd_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$odd_nums = odd_position($nums);\nprint_r($odd_nums);",
    "    $odd_position = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 != 0) {\n            array_push($odd_position, $nums[$i]);\n        }\n    }\n    return $odd_position;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(odd_position($nums));",
    "    $odd_count = 0;\n    for($i = 0; $i < count($nums); $i++) {\n        if($i % 2 != 0 && $nums[$i] % 2 != 0) {\n            $odd_count++;\n        }\n    }\n    if($odd_count == count($nums) / 2) {\n        return \"True\";\n    }\n    else {\n        return \"False\";\n    }\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho odd_position($nums);",
    "    $odd_nums = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 1) {\n            array_push($odd_nums, $nums[$i]);\n        }\n    }\n    return $odd_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(odd_position($nums));",
    "    $odd_nums = [];\n    foreach ($nums as $key => $value) {\n        if ($key % 2 != 0 && $value % 2 != 0) {\n            $odd_nums[] = $value;\n        }\n    }\n    return $odd_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(odd_position($nums));\n",
    "    $odd_nums = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 != 0) {\n            array_push($odd_nums, $nums[$i]);\n        }\n    }\n    return $odd_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(odd_position($nums));",
    "    $odd = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 != 0) {\n            $odd[] = $nums[$i];\n        }\n    }\n    return $odd;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(odd_position($nums));",
    "    $odd_nums = array();\n    foreach ($nums as $key => $num) {\n        if ($key % 2 != 0) {\n            if ($num % 2 != 0) {\n                $odd_nums[] = $num;\n            }\n        }\n    }\n    return $odd_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(odd_position($nums));"
  ]
}
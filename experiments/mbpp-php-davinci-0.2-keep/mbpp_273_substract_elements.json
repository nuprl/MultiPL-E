{
  "name": "mbpp_273_substract_elements",
  "language": "php",
  "prompt": "<?php\n// Write a function that takes in two tuples and subtracts the elements of the first tuple by the elements of the second tuple with the same index.\nfunction substract_elements($test_tup1, $test_tup2) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_273_substract_elements.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return substract_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 4, 5), array(2, 5, 18)) !== array(8, -1, -13)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11, 2, 3), array(24, 45, 16)) !== array(-13, -43, -13)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 18, 9), array(10, 11, 12)) !== array(-3, 7, -3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "\t$result = array();\n\tfor ($i = 0; $i < count($test_tup1); $i++) {\n\t\t$result[] = $test_tup1[$i] - $test_tup2[$i];\n\t}\n\treturn $result;\n}\n\n$test_tup1 = array(1, 2, 3);\n$test_tup2 = array(1, 2, 3);\nprint_r(substract_elements($test_tup1, $test_tup2));\n",
    "\t$result = array();\n\tfor ($i=0; $i < count($test_tup1); $i++) { \n\t\t$result[$i] = $test_tup1[$i] - $test_tup2[$i];\n\t}\n\treturn $result;\n}\n\n$test_tup1 = array(1,2,3);\n$test_tup2 = array(1,2,3);\n\nprint_r(substract_elements($test_tup1, $test_tup2));\n",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = $test_tup1[$i] - $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3);\n$test_tup2 = array(1, 2, 3);\n\nprint_r(substract_elements($test_tup1, $test_tup2));\n",
    "    $result = [];\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[] = $test_tup1[$i] - $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = [1, 2, 3];\n$test_tup2 = [1, 2, 3];\n\nprint_r(substract_elements($test_tup1, $test_tup2));\n",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = $test_tup1[$i] - $test_tup2[$i];\n    }\n    return $result;\n}\n$test_tup1 = array(1, 2, 3, 4);\n$test_tup2 = array(1, 2, 3, 4);\n$result = substract_elements($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = $test_tup1[$i] - $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3);\n$test_tup2 = array(1, 2, 3);\n\nprint_r(substract_elements($test_tup1, $test_tup2));\n",
    "\t$result = array();\n\tfor ($i = 0; $i < count($test_tup1); $i++) {\n\t\t$result[$i] = $test_tup1[$i] - $test_tup2[$i];\n\t}\n\treturn $result;\n}\n\n$test_tup1 = array(1, 2, 3);\n$test_tup2 = array(2, 3, 4);\n\n$result = substract_elements($test_tup1, $test_tup2);\nprint_r($result);\n",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = $test_tup1[$i] - $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3, 4);\n$test_tup2 = array(1, 2, 3, 4);\n\n$result = substract_elements($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = [];\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[] = $test_tup1[$i] - $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = [1, 2, 3, 4];\n$test_tup2 = [5, 6, 7, 8];\n\nprint_r(substract_elements($test_tup1, $test_tup2));\n",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[] = $test_tup1[$i] - $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3, 4);\n$test_tup2 = array(2, 3, 4, 5);\n\nprint_r(substract_elements($test_tup1, $test_tup2));",
    "    $result = [];\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[] = $test_tup1[$i] - $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = [1, 2, 3];\n$test_tup2 = [4, 5, 6];\n\nprint_r(substract_elements($test_tup1, $test_tup2));\n",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[] = $test_tup1[$i] - $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3);\n$test_tup2 = array(4, 5, 6);\n\nprint_r(substract_elements($test_tup1, $test_tup2));\n",
    "    $result = [];\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[] = $test_tup1[$i] - $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = [1, 2, 3, 4, 5];\n$test_tup2 = [5, 4, 3, 2, 1];\n\nprint_r(substract_elements($test_tup1, $test_tup2));\n",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        array_push($result, $test_tup1[$i] - $test_tup2[$i]);\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3);\n$test_tup2 = array(4, 5, 6);\nprint_r(substract_elements($test_tup1, $test_tup2));\n",
    "    $result = [];\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[] = $test_tup1[$i] - $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = [1, 2, 3];\n$test_tup2 = [4, 5, 6];\nprint_r(substract_elements($test_tup1, $test_tup2));",
    "    $result = [];\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[] = $test_tup1[$i] - $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = [1, 2, 3, 4];\n$test_tup2 = [5, 6, 7, 8];\n\nprint_r(substract_elements($test_tup1, $test_tup2));",
    "    $result = [];\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[] = $test_tup1[$i] - $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = [1, 2, 3];\n$test_tup2 = [4, 5, 6];\n\nprint_r(substract_elements($test_tup1, $test_tup2));\n",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[] = $test_tup1[$i] - $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3);\n$test_tup2 = array(4, 5, 6);\nprint_r(substract_elements($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[] = $test_tup1[$i] - $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3);\n$test_tup2 = array(4, 5, 6);\n\n$result = substract_elements($test_tup1, $test_tup2);\n\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = $test_tup1[$i] - $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3, 4);\n$test_tup2 = array(5, 6, 7, 8);\n\nprint_r(substract_elements($test_tup1, $test_tup2));\n"
  ]
}
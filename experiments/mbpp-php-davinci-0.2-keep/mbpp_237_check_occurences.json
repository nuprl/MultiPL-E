{
  "name": "mbpp_237_check_occurences",
  "language": "php",
  "prompt": "<?php\n// Write a function that takes in a list of tuples and returns a dictionary mapping each unique tuple to the number of times it occurs in the list.\nfunction check_occurences($test_list) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_237_check_occurences.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return check_occurences(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(3, 1), array(1, 3), array(2, 5), array(5, 2), array(6, 3))) !== array(array(1, 3) => 2, array(2, 5) => 2, array(3, 6) => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(4, 2), array(2, 4), array(3, 6), array(6, 3), array(7, 4))) !== array(array(2, 4) => 2, array(3, 6) => 2, array(4, 7) => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(13, 2), array(11, 23), array(12, 25), array(25, 12), array(16, 23))) !== array(array(2, 13) => 1, array(11, 23) => 1, array(12, 25) => 2, array(16, 23) => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $occurences = array();\n    foreach ($test_list as $tuple) {\n        $tuple_key = implode(',', $tuple);\n        if (array_key_exists($tuple_key, $occurences)) {\n            $occurences[$tuple_key] += 1;\n        } else {\n            $occurences[$tuple_key] = 1;\n        }\n    }\n    return $occurences;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(5, 6),\n    array(7, 8),\n    array(1, 2),\n    array(3, 4),\n    array(3, 4),\n    array(7, 8),\n    array(9, 10)\n);\n\nprint_r(check_occurences($test_list));",
    "    $occurences = array();\n    foreach ($test_list as $item) {\n        if (array_key_exists($item, $occurences)) {\n            $occurences[$item] += 1;\n        } else {\n            $occurences[$item] = 1;\n        }\n    }\n    return $occurences;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(5, 6),\n    array(7, 8),\n    array(1, 2),\n    array(3, 4),\n    array(3, 4),\n    array(7, 8),\n    array(9, 10)\n);\n\nprint_r(check_occurences($test_list));\n",
    "    $occurences = array();\n    foreach ($test_list as $key => $value) {\n        if (array_key_exists($value, $occurences)) {\n            $occurences[$value]++;\n        } else {\n            $occurences[$value] = 1;\n        }\n    }\n    return $occurences;\n}\n\n$test_list = [\n    [1, 2],\n    [3, 4],\n    [1, 2],\n    [5, 6],\n    [7, 8],\n    [1, 2],\n    [3, 4],\n    [3, 4],\n    [7, 8],\n    [9, 10]\n];\n\n$result = check_occurences($test_list);\nprint_r($result);",
    "    $occurences = array();\n    foreach ($test_list as $tuple) {\n        $key = implode(',', $tuple);\n        if (array_key_exists($key, $occurences)) {\n            $occurences[$key]++;\n        } else {\n            $occurences[$key] = 1;\n        }\n    }\n    return $occurences;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n   ",
    "    $result = [];\n    foreach ($test_list as $item) {\n        if (isset($result[$item])) {\n            $result[$item]++;\n        } else {\n            $result[$item] = 1;\n        }\n    }\n    return $result;\n}\n\n$test_list = [\n    [1, 2],\n    [3, 4],\n    [1, 2],\n    [5, 6],\n    [7, 8],\n    [1, 2],\n    [3, 4],\n    [3, 4],\n    [7, 8],\n    [9, 10]\n];\n\nprint_r(check_occurences($test_list));",
    "    $result = array();\n    foreach ($test_list as $item) {\n        if (!isset($result[$item])) {\n            $result[$item] = 1;\n        } else {\n            $result[$item]++;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"b\"),\n    array(\"a\", \"",
    "    $occurences = array();\n    foreach ($test_list as $tuple) {\n        $tuple_string = implode(\",\", $tuple);\n        if (array_key_exists($tuple_string, $occurences)) {\n            $occurences[$tuple_string] += 1;\n        } else {\n            $occurences[$tuple_string] = 1;\n        }\n    }\n    return $occurences;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(",
    "    $result = array();\n    foreach ($test_list as $item) {\n        if (!isset($result[$item])) {\n            $result[$item] = 0;\n        }\n        $result[$item]++;\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(2, 3),\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array(3, 4),\n    array",
    "    $occurences = array();\n    foreach ($test_list as $tuple) {\n        $key = implode(',', $tuple);\n        if (array_key_exists($key, $occurences)) {\n            $occurences[$key] += 1;\n        } else {\n            $occurences[$key] = 1;\n        }\n    }\n    return $occurences;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),",
    "    $occurences = array();\n    foreach ($test_list as $key => $value) {\n        if (array_key_exists($value, $occurences)) {\n            $occurences[$value]++;\n        } else {\n            $occurences[$value] = 1;\n        }\n    }\n    return $occurences;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1, 2),\n    array(1,",
    "    $occurences = array();\n    foreach ($test_list as $tuple) {\n        $tuple_key = implode(',', $tuple);\n        if (array_key_exists($tuple_key, $occurences)) {\n            $occurences[$tuple_key] += 1;\n        } else {\n            $occurences[$tuple_key] = 1;\n        }\n    }\n    return $occurences;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(5, 6),\n    array(7, 8),\n    array(1, 2),\n    array(3, 4),\n    array(3, 4),\n    array(7, 8),\n    array(9, 10)\n);\n\n$occurences = check_occurences($test_list);\n\nforeach ($occurences as $tuple => $count) {\n    echo \"Tuple $tuple occurs $count times.\\n\";\n}",
    "    $occurences = [];\n    foreach ($test_list as $tuple) {\n        $tuple_key = implode(',', $tuple);\n        if (array_key_exists($tuple_key, $occurences)) {\n            $occurences[$tuple_key] += 1;\n        } else {\n            $occurences[$tuple_key] = 1;\n        }\n    }\n    return $occurences;\n}\n\n$test_list = [\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    [",
    "    $result = array();\n    foreach ($test_list as $key => $value) {\n        if (array_key_exists($value, $result)) {\n            $result[$value] += 1;\n        } else {\n            $result[$value] = 1;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(5, 6),\n    array(7, 8),\n    array(1, 2),\n    array(3, 4),\n    array(3, 4),\n    array(7, 8),\n    array(9, 10)\n);\n\nprint_r(check_occurences($test_list));",
    "    $occurences = array();\n    foreach ($test_list as $item) {\n        if (array_key_exists($item, $occurences)) {\n            $occurences[$item] += 1;\n        } else {\n            $occurences[$item] = 1;\n        }\n    }\n    return $occurences;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(5, 6),\n    array(7, 8),\n    array(1, 2),\n    array(3, 4),\n    array(3, 4),\n    array(7, 8),\n    array(9, 10)\n);\n\nprint_r(check_occurences($test_list));\n",
    "    $occurences = array();\n    foreach ($test_list as $value) {\n        if (array_key_exists($value, $occurences)) {\n            $occurences[$value] += 1;\n        } else {\n            $occurences[$value] = 1;\n        }\n    }\n    return $occurences;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(check_occurences($test_list));",
    "    $result = [];\n    foreach ($test_list as $item) {\n        if (array_key_exists($item, $result)) {\n            $result[$item] += 1;\n        } else {\n            $result[$item] = 1;\n        }\n    }\n    return $result;\n}\n\n$test_list = [\n    [1, 2],\n    [3, 4],\n    [1, 2],\n    [5, 6],\n    [7, 8],\n    [1, 2],\n    [3, 4],\n    [3, 4],\n    [7, 8],\n    [9, 10]\n];\n\nprint_r(check_occurences($test_list));",
    "    $occurences = array();\n    foreach ($test_list as $tuple) {\n        if (array_key_exists($tuple, $occurences)) {\n            $occurences[$tuple] += 1;\n        } else {\n            $occurences[$tuple] = 1;\n        }\n    }\n    return $occurences;\n}\n\n$test_list = array(\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n",
    "    $occurences = array();\n    foreach($test_list as $tuple) {\n        $tuple_string = implode(',', $tuple);\n        if(array_key_exists($tuple_string, $occurences)) {\n            $occurences[$tuple_string]++;\n        } else {\n            $occurences[$tuple_string] = 1;\n        }\n    }\n    return $occurences;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(5, 6),\n    array(7, 8),\n    array(1, 2),\n    array(3, 4),\n    array(3, 4),\n    array(7, 8),\n    array(9, 10)\n);\n\nprint_r(check_occurences($test_list));",
    "    $occurences = array();\n    foreach ($test_list as $tuple) {\n        if (array_key_exists($tuple, $occurences)) {\n            $occurences[$tuple] += 1;\n        } else {\n            $occurences[$tuple] = 1;\n        }\n    }\n    return $occurences;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(2, 3),\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array",
    "    $occurences = array();\n    foreach ($test_list as $tuple) {\n        $tuple_string = implode(',', $tuple);\n        if (array_key_exists($tuple_string, $occurences)) {\n            $occurences[$tuple_string]++;\n        } else {\n            $occurences[$tuple_string] = 1;\n        }\n    }\n    return $occurences;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(5, 6),\n    array(7, 8),\n    array(1, 2),\n    array(3, 4),\n    array(3, 4),\n    array(7, 8),\n    array(9, 10)\n);\n\n$occurences = check_occurences($test_list);\n\nforeach ($occurences as $tuple => $count) {\n    echo \"Tuple $tuple occurs $count times\\n\";\n}\n"
  ]
}
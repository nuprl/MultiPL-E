{
  "name": "mbpp_447_cube_nums",
  "language": "php",
  "prompt": "<?php\n// Write a function to find cubes of individual elements in a list.\nfunction cube_nums($nums) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_447_cube_nums.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return cube_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 8, 27, 64, 125, 216, 343, 512, 729, 1000)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(1000, 8000, 27000)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(1728, 3375)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $result = [];\n    foreach ($nums as $num) {\n        $result[] = $num * $num * $num;\n    }\n    return $result;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cubes = cube_nums($nums);\nprint_r($cubes);\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cubes = cube_nums($nums);\nprint_r($cubes);\n",
    "    $cube_nums = [];\n    foreach ($nums as $num) {\n        $cube_nums[] = $num * $num * $num;\n    }\n    return $cube_nums;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cubes = cube_nums($nums);\nprint_r($cubes);",
    "  $cubes = array();\n  foreach ($nums as $num) {\n    $cubes[] = pow($num, 3);\n  }\n  return $cubes;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(cube_nums($nums));",
    "    $cubes = array();\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(cube_nums($nums));",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = pow($num, 3);\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cubes = cube_nums($nums);\nprint_r($cubes);\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = array();\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(cube_nums($nums));",
    "    $cubes = array();\n    foreach ($nums as $num) {\n        $cubes[] = pow($num, 3);\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cube_nums = [];\n    foreach ($nums as $num) {\n        $cube_nums[] = $num * $num * $num;\n    }\n    return $cube_nums;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cube_nums = cube_nums($nums);\nprint_r($cube_nums);\n",
    "\t$cubes = [];\n\tforeach ($nums as $num) {\n\t\t$cubes[] = $num * $num * $num;\n\t}\n\treturn $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cubes = cube_nums($nums);\nprint_r($cubes);\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "\t$cubes = [];\n\tforeach ($nums as $num) {\n\t\t$cubes[] = pow($num, 3);\n\t}\n\treturn $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "  $cubes = [];\n  foreach ($nums as $num) {\n    $cubes[] = $num ** 3;\n  }\n  return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        array_push($cubes, $num ** 3);\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));",
    "    $cubes = array();\n    foreach ($nums as $num) {\n        $cubes[] = pow($num, 3);\n    }\n    return $cubes;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$cubes = cube_nums($nums);\nprint_r($cubes);",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = pow($num, 3);\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "  $cubes = [];\n  foreach ($nums as $num) {\n    $cubes[] = pow($num, 3);\n  }\n  return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));",
    "\t$cubes = array();\n\tforeach ($nums as $num) {\n\t\t$cubes[] = $num * $num * $num;\n\t}\n\treturn $cubes;\n}\n\n$nums = array(1,2,3,4,5);\n$cubes = cube_nums($nums);\nprint_r($cubes);\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cubes = cube_nums($nums);\nprint_r($cubes);",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "  $cubes = array();\n  foreach ($nums as $num) {\n    $cubes[] = pow($num, 3);\n  }\n  return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));",
    "    $cubes = array();\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(cube_nums($nums));",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n",
    "  $cubes = [];\n  foreach ($nums as $num) {\n    $cubes[] = $num * $num * $num;\n  }\n  return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cubes = cube_nums($nums);\nprint_r($cubes);",
    "    $cubes = array();\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$cubes = cube_nums($nums);\nprint_r($cubes);",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cubes = cube_nums($nums);\nprint_r($cubes);\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = pow($num, 3);\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach($nums as $num) {\n        $cubes[] = pow($num, 3);\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = array();\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n",
    "    $cubes = array();\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(cube_nums($nums));",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$cubes = cube_nums($nums);\nprint_r($cubes);\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = array();\n    foreach ($nums as $num) {\n        $cubes[] = pow($num, 3);\n    }\n    return $cubes;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(cube_nums($nums));",
    "    $cubes = array();\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(cube_nums($nums));",
    "\t$cubes = array();\n\tforeach ($nums as $num) {\n\t\t$cubes[] = $num * $num * $num;\n\t}\n\treturn $cubes;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$cubes = cube_nums($nums);\nprint_r($cubes);",
    "    $cubes = array();\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = array();\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(cube_nums($nums));",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));",
    "\t$cubes = array();\n\tforeach ($nums as $num) {\n\t\t$cubes[] = $num * $num * $num;\n\t}\n\treturn $cubes;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(cube_nums($nums));",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cubes = cube_nums($nums);\nprint_r($cubes);",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cubes = cube_nums($nums);\nprint_r($cubes);\n",
    "\t$cubes = [];\n\tforeach ($nums as $num) {\n\t\t$cubes[] = $num * $num * $num;\n\t}\n\treturn $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = array();\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(cube_nums($nums));",
    "    $cubes = array();\n    foreach ($nums as $num) {\n        array_push($cubes, $num * $num * $num);\n    }\n    return $cubes;\n}\n\n$nums = [1, 5, 10, -2];\nprint_r(cube_nums($nums));\n",
    "\t$new_nums = array();\n\tforeach ($nums as $num) {\n\t\t$new_nums[] = $num * $num * $num;\n\t}\n\treturn $new_nums;\n}\n\n$nums = array(1,2,3,4,5,6,7,8,9);\n$new_nums = cube_nums($nums);\nprint_r($new_nums);",
    "    $cubes = array();\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(cube_nums($nums));",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\nprint_r(cube_nums([1, 2, 3, 4, 5]));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = pow($num, 3);\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));",
    "    $cubes = array();\n    foreach ($nums as $num) {\n        $cubes[] = pow($num, 3);\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cubes = cube_nums($nums);\nprint_r($cubes);\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $new_nums = [];\n    foreach ($nums as $num) {\n        $new_nums[] = $num ** 3;\n    }\n    return $new_nums;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cubes = cube_nums($nums);\nprint_r($cubes);\n",
    "    $new_nums = [];\n    foreach ($nums as $num) {\n        $new_nums[] = $num * $num * $num;\n    }\n    return $new_nums;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cubes = cube_nums($nums);\nprint_r($cubes);",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = pow($num, 3);\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = array();\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "\t$cubes = [];\n\tforeach ($nums as $num) {\n\t\t$cubes[] = $num * $num * $num;\n\t}\n\treturn $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "\t$cubes = [];\n\tforeach ($nums as $num) {\n\t\t$cubes[] = $num ** 3;\n\t}\n\treturn $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "\t$cubes = [];\n\tforeach ($nums as $num) {\n\t\tarray_push($cubes, $num ** 3);\n\t}\n\treturn $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(cube_nums($nums));\n",
    "\t$cubes = [];\n\tforeach ($nums as $num) {\n\t\t$cubes[] = $num * $num * $num;\n\t}\n\treturn $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(cube_nums($nums));\n",
    "  $cubes = [];\n  foreach ($nums as $num) {\n    $cubes[] = pow($num, 3);\n  }\n  return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "  $cubes = array();\n  foreach ($nums as $num) {\n    $cubes[] = pow($num, 3);\n  }\n  return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $new_nums = [];\n    foreach ($nums as $num) {\n        $new_nums[] = $num * $num * $num;\n    }\n    return $new_nums;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\necho \"Cube of numbers: \" . implode(\", \", cube_nums([1, 2, 3, 4, 5])) . \"\\n\";\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cubes = cube_nums($nums);\nprint_r($cubes);\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = pow($num, 3);\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = array();\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(cube_nums($nums));",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [2, 3, 4, 5, 6];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\necho implode(', ', cube_nums($nums));",
    "    $cubes = array();\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(cube_nums($nums));",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cubes = cube_nums($nums);\nprint_r($cubes);\n",
    "\t$cubes = array();\n\tforeach ($nums as $num) {\n\t\t$cubes[] = pow($num, 3);\n\t}\n\treturn $cubes;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(cube_nums($nums));",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cubes = cube_nums($nums);\nprint_r($cubes);\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = array();\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$cubes = cube_nums($nums);\nprint_r($cubes);\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "  $cubes = [];\n  foreach ($nums as $num) {\n    $cubes[] = $num * $num * $num;\n  }\n  return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cubes = cube_nums($nums);\nprint_r($cubes);\n",
    "    $cubes = array();\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(cube_nums($nums));\n",
    "    $result = [];\n    foreach ($nums as $num) {\n        $result[] = $num * $num * $num;\n    }\n    return $result;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));",
    "\t$cubes = array();\n\tforeach ($nums as $num) {\n\t\t$cubes[] = pow($num, 3);\n\t}\n\treturn $cubes;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(cube_nums($nums));",
    "\t$cubes = array();\n\tforeach ($nums as $num) {\n\t\tarray_push($cubes, $num * $num * $num);\n\t}\n\treturn $cubes;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(cube_nums($nums));",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = pow($num, 3);\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = array();\n    foreach ($nums as $num) {\n        $cubes[] = pow($num, 3);\n    }\n    return $cubes;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(cube_nums($nums));",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "\t$cubes = array();\n\tforeach($nums as $num) {\n\t\t$cubes[] = $num * $num * $num;\n\t}\n\treturn $cubes;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$cubes = cube_nums($nums);\nprint implode(\", \", $cubes);",
    "\t$cubes = array();\n\tforeach ($nums as $num) {\n\t\t$cubes[] = $num * $num * $num;\n\t}\n\treturn $cubes;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$cubes = cube_nums($nums);\nprint_r($cubes);\n",
    "\t$cubes = array();\n\tforeach ($nums as $num) {\n\t\t$cubes[] = $num ** 3;\n\t}\n\treturn $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cubes = cube_nums($nums);\nprint_r($cubes);\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cubes = cube_nums($nums);\nprint_r($cubes);\n",
    "  $cubes = [];\n  foreach ($nums as $num) {\n    $cubes[] = $num * $num * $num;\n  }\n  return $cubes;\n}\n\n$nums = [2, 3, 4, 5, 6];\n$cubes = cube_nums($nums);\nprint_r($cubes);\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cubes = cube_nums($nums);\nprint_r($cubes);\necho \"\\n\";\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = array();\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $new_nums = [];\n    foreach ($nums as $num) {\n        $new_nums[] = $num * $num * $num;\n    }\n    return $new_nums;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = array();\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\nprint_r(cube_nums([1, 2, 3, 4, 5]));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = pow($num, 3);\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));",
    "    $cubes = array();\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(cube_nums($nums));",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = pow($num, 3);\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cubes = cube_nums($nums);\nprint_r($cubes);\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));",
    "    $cubes = array();\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));",
    "    $cubes = [];\n    foreach($nums as $num) {\n        $cubes[] = pow($num, 3);\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cubes = cube_nums($nums);\nprint_r($cubes);\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cubes = cube_nums($nums);\nprint_r($cubes);\n\necho \"\\n\";\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));",
    "    $cubes = [];\n    foreach($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cubes = cube_nums($nums);\nprint_r($cubes);",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = array();\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cubes = cube_nums($nums);\nprint_r($cubes);\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cubes = cube_nums($nums);\nprint_r($cubes);\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = pow($num, 3);\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $new_nums = [];\n    foreach ($nums as $num) {\n        $new_nums[] = $num ** 3;\n    }\n    return $new_nums;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cube_nums = [];\n    foreach ($nums as $num) {\n        $cube_nums[] = $num * $num * $num;\n    }\n    return $cube_nums;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cube_nums = cube_nums($nums);\nprint_r($cube_nums);\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = array();\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(cube_nums($nums));",
    "    $cubes = array();\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cubes = cube_nums($nums);\nprint_r($cubes);\n",
    "  $cubes = [];\n  foreach ($nums as $num) {\n    $cubes[] = $num * $num * $num;\n  }\n  return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = array();\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n$nums = array(1, 2, 3, 4, 5);\nprint_r(cube_nums($nums));",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = pow($num, 3);\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "  $cubes = [];\n  foreach ($nums as $num) {\n    $cubes[] = $num * $num * $num;\n  }\n  return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cubes = cube_nums($nums);\nprint_r($cubes);\n",
    "\t$cubes = array();\n\tforeach ($nums as $num) {\n\t\t$cubes[] = $num * $num * $num;\n\t}\n\treturn $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "  $cubes = [];\n  foreach ($nums as $num) {\n    $cubes[] = $num * $num * $num;\n  }\n  return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cubes = cube_nums($nums);\nprint_r($cubes);",
    "\t$cubes = [];\n\tforeach ($nums as $num) {\n\t\t$cubes[] = $num * $num * $num;\n\t}\n\treturn $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$cubes = cube_nums($nums);\nprint_r($cubes);\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$cubes = cube_nums($nums);\nprint_r($cubes);\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = pow($num, 3);\n    }\n    return $cubes;\n}\n\n$numbers = [1, 2, 3, 4, 5];\n$cubes = cube_nums($numbers);\nprint_r($cubes);\n",
    "    $new_nums = [];\n    foreach ($nums as $num) {\n        $new_nums[] = $num * $num * $num;\n    }\n    return $new_nums;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num * $num * $num;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = pow($num, 3);\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "  $cubes = [];\n  foreach ($nums as $num) {\n    $cubes[] = pow($num, 3);\n  }\n  return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n",
    "    $cubes = [];\n    foreach ($nums as $num) {\n        $cubes[] = $num ** 3;\n    }\n    return $cubes;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(cube_nums($nums));\n"
  ]
}
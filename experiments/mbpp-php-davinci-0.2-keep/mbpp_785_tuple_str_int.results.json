{
  "name": "mbpp_785_tuple_str_int",
  "language": "php",
  "prompt": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_785_tuple_str_int.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $result = array();\n    foreach ($test_str as $value) {\n        $result[] = (int) $value;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xzuez90.php:14\nStack trace:\n#0 /tmp/tmp2xzuez90.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp2xzuez90.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(',', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = str_replace('\\'', '', $test_str);\n    $test_str = str_replace('\"', '', $test_str);\n    $test_str = str_replace('[', '', $test_str);\n    $test_str = str_replace(']', '', $test_str);\n    $test_str = str_replace('{', '', $test_str);\n    $test_str = str_replace('}', '', $test_str);\n    $test_str = str_replace(';', '', $test_str);\n    $test_str = str_replace('\\n', '', $test_str);\n    $test_str = str_replace('\\r', '', $test_str);\n    $test_str = str_replace('\\t', '', $test_str);\n    $test_str = str_replace('\\f', '', $test_str);\n    $test_str = str_replace('\\v', '', $test_str);\n    $test_str = str_replace('\\b', '', $test_str);\n    $test_str = str_replace('\\0', '', $test_str);\n    $test_str = str_replace('\\x0B', '', $test_str);\n    $test_str = str_replace('\\x0C', '', $test_str);\n    $test_str = str_replace('\\x0D', '', $test_str);\n    $test_str = str_replace('\\x0E', '', $test_str);\n    $test_str = str_replace('\\x0F', '', $test_str);\n    $test_str = str_replace('\\x10', '', $test_str);\n    $test_str = str_\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp1vq0n5c3.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_arr = explode(\",\", $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfrf4xd95.php:14\nStack trace:\n#0 /tmp/tmpfrf4xd95.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpfrf4xd95.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(\"(\", \"\", $test_str);\n    $test_str = str_replace(\")\", \"\", $test_str);\n    $test_str = str_replace(\" \", \"\", $test_str);\n    $test_str = explode(\",\", $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    foreach ($test_str as $key => $value) {\n        $test_str[$key] = intval($value);\n    }\n    return $test_str;\n}\n\n$test_str = \"(1,2,3,4)\";\nprint_r(tuple_str_int($test_str));\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_arr = explode(\",\", $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfrf4xd95.php:14\nStack trace:\n#0 /tmp/tmpfrf4xd95.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpfrf4xd95.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    foreach ($test_str as $key => $value) {\n        $test_str[$key] = (int)$value;\n    }\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_arr = array();\n    foreach ($test_str as $value) {\n        $test_arr[] = intval($value);\n    }\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_arr = explode(\",\", $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfrf4xd95.php:14\nStack trace:\n#0 /tmp/tmpfrf4xd95.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpfrf4xd95.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = str_replace(',', ' ', $test_str);\n    $test_str = explode(' ', $test_str);\n    foreach ($test_str as $key => $value) {\n        $test_str[$key] = intval($value);\n    }\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_arr = explode(\",\", $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfrf4xd95.php:14\nStack trace:\n#0 /tmp/tmpfrf4xd95.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpfrf4xd95.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    foreach ($test_str as $key => $value) {\n        $test_str[$key] = (int)$value;\n    }\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_arr = explode(\",\", $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfrf4xd95.php:14\nStack trace:\n#0 /tmp/tmpfrf4xd95.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpfrf4xd95.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_arr = explode(\",\", $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfrf4xd95.php:14\nStack trace:\n#0 /tmp/tmpfrf4xd95.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpfrf4xd95.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $result = array();\n    foreach ($test_arr as $value) {\n        $result[] = (int)$value;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    return $test_str;\n}\n\n$test_str = '(1, 2, 3)';\nprint_r(tuple_str_int($test_str));\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp258iu6sh.php:18\nStack trace:\n#0 /tmp/tmp258iu6sh.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp258iu6sh.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $result = array();\n    foreach ($test_arr as $value) {\n        $result[] = intval($value);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $tuple_str = explode(',', $test_str);\n    $tuple_int = array();\n    foreach ($tuple_str as $value) {\n        $tuple_int[] = intval($value);\n    }\n    return $tuple_int;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbukfsp7.php:17\nStack trace:\n#0 /tmp/tmpqbukfsp7.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpqbukfsp7.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_arr = explode(\",\", $test_str);\n    $result = array();\n    foreach ($test_arr as $item) {\n        $result[] = intval($item);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8dku1u91.php:17\nStack trace:\n#0 /tmp/tmp8dku1u91.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp8dku1u91.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    foreach ($test_str as $key => $value) {\n        $test_str[$key] = (int)$value;\n    }\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(',', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = str_split($test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpznvh4aj5.php:21\nStack trace:\n#0 /tmp/tmpznvh4aj5.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpznvh4aj5.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_arr = explode(\",\", $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfrf4xd95.php:14\nStack trace:\n#0 /tmp/tmpfrf4xd95.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpfrf4xd95.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(\"(\", \"\", $test_str);\n    $test_str = str_replace(\")\", \"\", $test_str);\n    $test_str = str_replace(\" \", \"\", $test_str);\n    $test_str = explode(\",\", $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xzuez90.php:14\nStack trace:\n#0 /tmp/tmp2xzuez90.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp2xzuez90.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n\t$test_str = str_replace(array('(', ')'), '', $test_str);\n\t$test_arr = explode(',', $test_str);\n\t$test_arr = array_map('intval', $test_arr);\n\treturn $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xzuez90.php:14\nStack trace:\n#0 /tmp/tmp2xzuez90.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp2xzuez90.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array(\"(\", \")\"), \"\", $test_str);\n    $test_str = explode(\",\", $test_str);\n    $test_str = array_map(\"intval\", $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xzuez90.php:14\nStack trace:\n#0 /tmp/tmp2xzuez90.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp2xzuez90.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(['(', ')', ' '], '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $result = [];\n    foreach ($test_arr as $value) {\n        $result[] = (int)$value;\n    }\n    return $result;\n}\n\n$test_str = '(1, 2, 3)';\n$result = tuple_str_int($test_str);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(\"(\", \"\", $test_str);\n    $test_str = str_replace(\")\", \"\", $test_str);\n    $test_arr = explode(\",\", $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xzuez90.php:14\nStack trace:\n#0 /tmp/tmp2xzuez90.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp2xzuez90.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_arr = explode(\",\", $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfrf4xd95.php:14\nStack trace:\n#0 /tmp/tmpfrf4xd95.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpfrf4xd95.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')', ' '), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xzuez90.php:14\nStack trace:\n#0 /tmp/tmp2xzuez90.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp2xzuez90.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\n$test_str = \"(1, 2, 3)\";\necho \"Test string: $test_str\\n\";\n$test_str = tuple_str_int($test_str);\necho \"Test string: $test_str\\n\";\nprint_r($test_str);\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "Test string: (1, 2, 3)\n\nWarning: Array to string conversion in /tmp/tmpac_h2r4e.php on line 15\nTest string: Array\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')', ' '), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')', ' '), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')', ' '), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    foreach ($test_str as $key => $value) {\n        $test_str[$key] = (int)$value;\n    }\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(',', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = str_replace('\\'', '', $test_str);\n    $test_str = str_replace('\\\"', '', $test_str);\n    $test_str = str_replace('[', '', $test_str);\n    $test_str = str_replace(']', '', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplhyk2t3l.php:20\nStack trace:\n#0 /tmp/tmplhyk2t3l.php(26): test()\n#1 {main}\n  thrown in /tmp/tmplhyk2t3l.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_arr = explode(\",\", $test_str);\n    $result = array();\n    foreach ($test_arr as $value) {\n        $result[] = intval($value);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb6eg5hyd.php:17\nStack trace:\n#0 /tmp/tmpb6eg5hyd.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpb6eg5hyd.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(\"(\", \"\", $test_str);\n    $test_str = str_replace(\")\", \"\", $test_str);\n    $test_str = str_replace(\" \", \"\", $test_str);\n    $test_str = explode(\",\", $test_str);\n    $test_str = array_map(\"intval\", $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(['(', ')', ' '], '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = trim($test_str);\n    $test_str = substr($test_str, 1, strlen($test_str) - 2);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(\"(\", \"\", $test_str);\n    $test_str = str_replace(\")\", \"\", $test_str);\n    $test_str = str_replace(\" \", \"\", $test_str);\n    $test_str = explode(\",\", $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xzuez90.php:14\nStack trace:\n#0 /tmp/tmp2xzuez90.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp2xzuez90.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(\"(\", \"\", $test_str);\n    $test_str = str_replace(\")\", \"\", $test_str);\n    $test_str = str_replace(\" \", \"\", $test_str);\n    $test_str = explode(\",\", $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\n$test_str = '(1,2,3,4)';\n$test_arr = tuple_str_int($test_str);\nprint_r($test_arr);\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_arr = explode(\",\", $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfrf4xd95.php:14\nStack trace:\n#0 /tmp/tmpfrf4xd95.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpfrf4xd95.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(\"(\", \"\", $test_str);\n    $test_str = str_replace(\")\", \"\", $test_str);\n    $test_str = str_replace(\" \", \"\", $test_str);\n    $test_str = explode(\",\", $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xzuez90.php:14\nStack trace:\n#0 /tmp/tmp2xzuez90.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp2xzuez90.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xzuez90.php:14\nStack trace:\n#0 /tmp/tmp2xzuez90.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp2xzuez90.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = trim($test_str, '()');\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_arr = explode(\",\", $test_str);\n    $result = array();\n    foreach ($test_arr as $value) {\n        $result[] = (int)$value;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgfmol0_g.php:17\nStack trace:\n#0 /tmp/tmpgfmol0_g.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpgfmol0_g.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_arr = explode(\",\", $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfrf4xd95.php:14\nStack trace:\n#0 /tmp/tmpfrf4xd95.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpfrf4xd95.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xzuez90.php:14\nStack trace:\n#0 /tmp/tmp2xzuez90.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp2xzuez90.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xzuez90.php:14\nStack trace:\n#0 /tmp/tmp2xzuez90.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp2xzuez90.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    foreach ($test_arr as $key => $value) {\n        $test_arr[$key] = (int)$value;\n    }\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(\"(\", \"\", $test_str);\n    $test_str = str_replace(\")\", \"\", $test_str);\n    $test_str = str_replace(\" \", \"\", $test_str);\n    $test_str = explode(\",\", $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xzuez90.php:14\nStack trace:\n#0 /tmp/tmp2xzuez90.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp2xzuez90.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')', ' '), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xzuez90.php:14\nStack trace:\n#0 /tmp/tmp2xzuez90.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp2xzuez90.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(\"(\", \"\", $test_str);\n    $test_str = str_replace(\")\", \"\", $test_str);\n    $test_str = str_replace(\" \", \"\", $test_str);\n    $test_str = explode(\",\", $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\n$test_str = \"1,2,3,4,5,6,7,8,9,10\";\n$test_arr = tuple_str_int($test_str);\nprint_r($test_arr);\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2m0a1pxt.php:17\nStack trace:\n#0 /tmp/tmp2m0a1pxt.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp2m0a1pxt.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n\t$test_str = str_replace(array('(', ')'), '', $test_str);\n\t$test_arr = explode(',', $test_str);\n\t$test_arr = array_map('intval', $test_arr);\n\treturn $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(\"(\", \"\", $test_str);\n    $test_str = str_replace(\")\", \"\", $test_str);\n    $test_str = str_replace(\" \", \"\", $test_str);\n    $test_str = explode(\",\", $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace(array('(', ')'), '', $test_str);\n    $test_arr = explode(',', $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_str = str_replace('(', '', $test_str);\n    $test_str = str_replace(')', '', $test_str);\n    $test_str = str_replace(' ', '', $test_str);\n    $test_str = explode(',', $test_str);\n    $test_str = array_map('intval', $test_str);\n    return $test_str;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert tuple string to integer tuple.\nfunction tuple_str_int($test_str) {\n    $test_arr = explode(\",\", $test_str);\n    $test_arr = array_map('intval', $test_arr);\n    return $test_arr;\n}\n\nfunction candidate(...$args) {\n    return tuple_str_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"(7, 8, 9)\") !== array(7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(1, 2, 3)\") !== array(1, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(4, 5, 6)\") !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(7, 81, 19)\") !== array(7, 81, 19)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510312,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfrf4xd95.php:14\nStack trace:\n#0 /tmp/tmpfrf4xd95.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpfrf4xd95.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
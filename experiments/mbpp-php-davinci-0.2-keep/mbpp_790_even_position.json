{
  "name": "mbpp_790_even_position",
  "language": "php",
  "prompt": "<?php\n// Write a python function to check whether every even index contains even numbers of a given list.\nfunction even_position($nums) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_790_even_position.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return even_position(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $even_nums = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            array_push($even_nums, $nums[$i]);\n        }\n    }\n    return $even_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(even_position($nums));",
    "    $even_nums = [];\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0 && $nums[$i] % 2 == 0) {\n            array_push($even_nums, $nums[$i]);\n        }\n    }\n    return $even_nums;\n}\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(even_position($nums));",
    "    $even_nums = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            $even_nums[] = $nums[$i];\n        }\n    }\n    return $even_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\nprint_r(even_position($nums));\n",
    "    $even_pos = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            array_push($even_pos, $nums[$i]);\n        }\n    }\n    return $even_pos;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(even_position($nums));",
    "    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            if ($nums[$i] % 2 != 0) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\n$nums = array(1, 2, 3, 4, 5);\necho even_position($nums);",
    "    $even_nums = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            if ($nums[$i] % 2 == 0) {\n                array_push($even_nums, $nums[$i]);\n            }\n        }\n    }\n    return $even_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$result = even_position($nums);\nprint_r($result);",
    "    $even_nums = [];\n    $odd_nums = [];\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            $even_nums[] = $nums[$i];\n        } else {\n            $odd_nums[] = $nums[$i];\n        }\n    }\n    $even_count = 0;\n    $odd_count = 0;\n    for ($i = 0; $i < count($even_nums); $i++) {\n        if ($even_nums[$i] % 2 == 0) {\n            $even_count++;\n        }\n    }\n    for ($i = 0; $i < count($odd_nums); $i++) {\n        if ($odd_nums[$i] % 2 != 0) {\n            $odd_count++;\n        }\n    }\n    if ($even_count == count($even_nums) && $odd_count == count($odd_nums)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$nums = [2, 4, 6, 8, 10, 12, 14, 16, 18, 20];\necho even_position($nums);",
    "    $result = true;\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0 && $nums[$i] % 2 != 0) {\n            $result = false;\n            break;\n        }\n    }\n    return $result;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho even_position($nums);",
    "    $result = [];\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0 && $nums[$i] % 2 == 0) {\n            array_push($result, $nums[$i]);\n        }\n    }\n    return $result;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(even_position($nums));\n",
    "    $result = [];\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            array_push($result, $nums[$i]);\n        }\n    }\n    return $result;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(even_position($nums));\n",
    "    $even_nums = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            array_push($even_nums, $nums[$i]);\n        }\n    }\n    return $even_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(even_position($nums));",
    "    $even_nums = [];\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            $even_nums[] = $nums[$i];\n        }\n    }\n    for ($i = 0; $i < count($even_nums); $i++) {\n        if ($even_nums[$i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho even_position($nums);",
    "    $even_nums = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            array_push($even_nums, $nums[$i]);\n        }\n    }\n    return $even_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(even_position($nums));",
    "    $even_nums = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            array_push($even_nums, $nums[$i]);\n        }\n    }\n    return $even_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$even_nums = even_position($nums);\nprint_r($even_nums);",
    "    $even_nums = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            array_push($even_nums, $nums[$i]);\n        }\n    }\n    return $even_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho \"Original list: \";\nprint_r($nums);\necho \"<br>\";\necho \"Even position list: \";\nprint_r(even_position($nums));",
    "    $even_nums = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            if ($nums[$i] % 2 == 0) {\n                array_push($even_nums, $nums[$i]);\n            }\n        }\n    }\n    return $even_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(even_position($nums));",
    "    $even_nums = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            if ($nums[$i] % 2 == 0) {\n                $even_nums[] = $nums[$i];\n            }\n        }\n    }\n    return $even_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$result = even_position($nums);\nprint_r($result);",
    "\t$even_nums = array();\n\tforeach ($nums as $key => $value) {\n\t\tif ($key % 2 == 0) {\n\t\t\tarray_push($even_nums, $value);\n\t\t}\n\t}\n\treturn $even_nums;\n}\n\n$nums = array(1,2,3,4,5,6,7,8,9,10);\nprint_r(even_position($nums));\n",
    "    $even_nums = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            $even_nums[] = $nums[$i];\n        }\n    }\n    return $even_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$even_nums = even_position($nums);\nprint_r($even_nums);",
    "    $even_nums = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            if ($nums[$i] % 2 == 0) {\n                $even_nums[] = $nums[$i];\n            }\n        }\n    }\n    return $even_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(even_position($nums));\n"
  ]
}
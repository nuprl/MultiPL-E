{
  "name": "mbpp_643_text_match_wordz_middle",
  "language": "php",
  "prompt": "<?php\n// Write a function that checks if a strings contains 'z', except at the start and end of the word.\nfunction text_match_wordz_middle($text) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_643_text_match_wordz_middle.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return text_match_wordz_middle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"pythonzabc.\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zxyabc.\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"  lang  .\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $text_array = str_split($text);\n    $text_array_length = count($text_array);\n    $text_array_length_minus_one = $text_array_length - 1;\n    $text_array_length_minus_two = $text_array_length - 2;\n    $text_array_length_minus_three = $text_array_length - 3;\n    $text_array_length_minus_four = $text_array_length - 4;\n    $text_array_length_minus_five = $text_array_length - 5;\n    $text_array_length_minus_six = $text_array_length - 6;\n    $text_array_length_minus_seven = $text_array_length - 7;\n    $text_array_length_minus_eight = $text_array_length - 8;\n    $text_array_length_minus_nine = $text_array_length - 9;\n    $text_array_length_minus_ten = $text_array_length - 10;\n    $text_array_length_minus_eleven = $text_array_length - 11;\n    $text_array_length_minus_twelve = $text_array_length - 12;\n    $text_array_length_minus_thirteen = $text_array_length - 13;\n    $text_array_length_minus_fourteen = $text_array_length - 14;\n    $text_array_length_minus_fifteen = $text_array_length - 15;\n    $text_array_length_minus_sixteen = $text_array_length - 16;\n    $text_array_length_minus_seventeen = $text_array_length - 17;\n    $text_array_length_minus_eighteen = $text_array_length - 18;\n    $text_array_length_minus_nineteen = $text_array_length - 19;\n    $text_array_length_minus_twenty = $text_array_length - 20;\n    $text_array_length_minus_twenty_one = $text_array_length - 21;\n    $text_array_length",
    "    $text = str_split($text);\n    $z_count = 0;\n    $z_pos = [];\n    foreach ($text as $key => $value) {\n        if ($value == 'z') {\n            $z_count++;\n            $z_pos[] = $key;\n        }\n    }\n    if ($z_count > 1) {\n        if ($z_pos[0] != 0 && $z_pos[$z_count - 1] != count($text) - 1) {\n            return true;\n        }\n    }\n    return false;\n}\n",
    "  $text = strtolower($text);\n  $text = preg_replace('/\\s+/', '', $text);\n  $text = preg_replace('/^z|z$/', '', $text);\n  return preg_match('/z/', $text);\n}\n",
    "    $text = strtolower($text);\n    $text = str_replace('z', '', $text);\n    $text = str_replace(' ', '', $text);\n    $text_length = strlen($text);\n    $text_length_z = strlen($text) + 1;\n    if ($text_length == $text_length_z) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $text = strtolower($text);\n    $text = preg_replace('/\\s+/', '', $text);\n    $text = preg_replace('/^z/', '', $text);\n    $text = preg_replace('/z$/', '', $text);\n    if (strpos($text, 'z') !== false) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    return preg_match('/\\Bz\\B/', $text);\n}\n",
    "\t$text = strtolower($text);\n\t$text = str_replace('z', '', $text);\n\t$text = str_replace(' ', '', $text);\n\tif (strlen($text) == 0) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n",
    "    $text = strtolower($text);\n    $text_array = str_split($text);\n    $text_array_length = count($text_array);\n    $z_count = 0;\n    for ($i = 0; $i < $text_array_length; $i++) {\n        if ($text_array[$i] == 'z') {\n            $z_count++;\n        }\n    }\n    if ($z_count > 1) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    return preg_match('/\\Bz\\B/', $text);\n}\n",
    "  $text = strtolower($text);\n  $text_arr = str_split($text);\n  $z_count = 0;\n  $z_index = 0;\n  $z_index_arr = [];\n  $z_index_arr_count = 0;\n  foreach ($text_arr as $key => $value) {\n    if ($value == 'z') {\n      $z_count++;\n      $z_index = $key;\n      $z_index_arr[$z_index_arr_count] = $z_index;\n      $z_index_arr_count++;\n    }\n  }\n  if ($z_count > 0) {\n    foreach ($z_index_arr as $key => $value) {\n      if ($value == 0 || $value == count($text_arr) - 1) {\n        unset($z_index_arr[$key]);\n      }\n    }\n    if (count($z_index_arr) > 0) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n  else {\n    return false;\n  }\n}\n",
    "  return preg_match('/\\Bz\\B/', $text);\n}\n",
    "    $pattern = '/\\bz\\w*z\\b/';\n    $result = preg_match($pattern, $text);\n    return $result;\n}\n",
    "    $text = strtolower($text);\n    $text = trim($text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text = explode(' ', $text);\n    foreach ($text as $word) {\n        if (strlen($word) > 2 && $word[0] != 'z' && $word[strlen($word) - 1] != 'z' && strpos($word, 'z') !== false) {\n            return true;\n        }\n    }\n    return false;\n}\n",
    "  $text = strtolower($text);\n  $text_array = str_split($text);\n  $z_count = 0;\n  foreach ($text_array as $key => $value) {\n    if ($value == 'z') {\n      $z_count++;\n    }\n  }\n  if ($z_count > 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n",
    "    $text_array = str_split($text);\n    $text_array_count = count($text_array);\n    $text_array_count_minus_one = $text_array_count - 1;\n    $text_array_count_minus_two = $text_array_count - 2;\n    $text_array_count_minus_three = $text_array_count - 3;\n    $text_array_count_minus_four = $text_array_count - 4;\n    $text_array_count_minus_five = $text_array_count - 5;\n    $text_array_count_minus_six = $text_array_count - 6;\n    $text_array_count_minus_seven = $text_array_count - 7;\n    $text_array_count_minus_eight = $text_array_count - 8;\n    $text_array_count_minus_nine = $text_array_count - 9;\n    $text_array_count_minus_ten = $text_array_count - 10;\n    $text_array_count_minus_eleven = $text_array_count - 11;\n    $text_array_count_minus_twelve = $text_array_count - 12;\n    $text_array_count_minus_thirteen = $text_array_count - 13;\n    $text_array_count_minus_fourteen = $text_array_count - 14;\n    $text_array_count_minus_fifteen = $text_array_count - 15;\n    $text_array_count_minus_sixteen = $text_array_count - 16;\n    $text_array_count_minus_seventeen = $text_array_count - 17;\n    $text_array_count_minus_eighteen = $text_array_count - 18;\n    $text_array_count_minus_nineteen = $text_array_count - 19;\n    $text_array_count_minus_twenty = $text_array_count - 20;\n    $text_array_count_minus_twentyone = $text_array_count - 21;\n    $text_array_count_",
    "    $text_array = str_split($text);\n    $text_length = count($text_array);\n    $z_count = 0;\n    for ($i = 1; $i < $text_length - 1; $i++) {\n        if ($text_array[$i] == 'z') {\n            $z_count++;\n        }\n    }\n    if ($z_count > 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "  return preg_match('/\\b[^z]*z[^z]*\\b/', $text);\n}\n",
    "    $pattern = '/\\b[^z]*z[^z]*\\b/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\t$text = strtolower($text);\n\t$text = str_replace(' ', '', $text);\n\t$text_length = strlen($text);\n\t$first_letter = substr($text, 0, 1);\n\t$last_letter = substr($text, -1);\n\t$middle_letters = substr($text, 1, -1);\n\tif ($first_letter == 'z' || $last_letter == 'z') {\n\t\treturn false;\n\t} elseif (strpos($middle_letters, 'z') !== false) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    return preg_match('/\\Bz\\B/', $text);\n}\n"
  ]
}
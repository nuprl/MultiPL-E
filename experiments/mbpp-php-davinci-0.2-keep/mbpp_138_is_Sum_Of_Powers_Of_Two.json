{
  "name": "mbpp_138_is_Sum_Of_Powers_Of_Two",
  "language": "php",
  "prompt": "<?php\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nfunction is_Sum_Of_Powers_Of_Two($n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_138_is_Sum_Of_Powers_Of_Two.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return is_Sum_Of_Powers_Of_Two(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $sum = 0;\n    $i = 0;\n    while ($sum < $n) {\n        $sum += pow(2, $i);\n        $i++;\n    }\n    if ($sum == $n) {\n        return true;\n    }\n    return false;\n}\n\n$n = intval(fgets(STDIN));\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}",
    "    $sum = 0;\n    $i = 0;\n    while ($sum < $n) {\n        $sum += pow(2, $i);\n        $i++;\n    }\n    if ($sum == $n) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 10;\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}",
    "    $sum = 0;\n    $i = 0;\n    while ($sum < $n) {\n        $sum += pow(2, $i);\n        $i++;\n    }\n    if ($sum == $n) {\n        return True;\n    } else {\n        return False;\n    }\n}\n\n$n = intval(fgets(STDIN));\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}",
    "    $sum = 0;\n    $i = 0;\n    while ($sum < $n) {\n        $sum += pow(2, $i);\n        $i++;\n    }\n    if ($sum == $n) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(readline());\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $sum = 0;\n    $i = 0;\n    while ($sum < $n) {\n        $sum += pow(2, $i);\n        $i++;\n    }\n    return $sum == $n;\n}\n\necho is_Sum_Of_Powers_Of_Two(10);",
    "    $sum = 0;\n    $i = 0;\n    while ($sum < $n) {\n        $sum += pow(2, $i);\n        $i++;\n    }\n    if ($sum == $n) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n\n$n = intval(fgets(STDIN));\necho is_Sum_Of_Powers_Of_Two($n);",
    "    $sum = 0;\n    $i = 0;\n    while ($sum < $n) {\n        $sum += pow(2, $i);\n        $i++;\n    }\n    if ($sum == $n) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n\n$n = intval(fgets(STDIN));\necho is_Sum_Of_Powers_Of_Two($n);",
    "    $sum = 0;\n    $i = 0;\n    while ($sum < $n) {\n        $sum += pow(2, $i);\n        $i++;\n    }\n    if ($sum == $n) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 8;\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $sum = 0;\n    $i = 0;\n    while ($sum < $n) {\n        $sum += pow(2, $i);\n        if ($sum == $n) {\n            return true;\n        }\n        $i++;\n    }\n    return false;\n}\n\n$n = 10;\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $sum = 0;\n    $i = 0;\n    while ($sum < $n) {\n        $sum += pow(2, $i);\n        $i++;\n    }\n    if ($sum == $n) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(fgets(STDIN));\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}",
    "    $sum = 0;\n    $i = 0;\n    while ($sum < $n) {\n        $sum += pow(2, $i);\n        $i++;\n    }\n    if ($sum == $n) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Sum_Of_Powers_Of_Two(10);",
    "    $sum = 0;\n    $i = 0;\n    while ($sum < $n) {\n        $sum += pow(2, $i);\n        $i++;\n    }\n    if ($sum == $n) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(fgets(STDIN));\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}",
    "    $sum = 0;\n    $i = 0;\n    while ($sum < $n) {\n        $sum += pow(2, $i);\n        $i++;\n    }\n    if ($sum == $n) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Sum_Of_Powers_Of_Two(10);",
    "    $sum = 0;\n    $i = 0;\n    while ($sum < $n) {\n        $sum = $sum + pow(2, $i);\n        $i++;\n    }\n    if ($sum == $n) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(fgets(STDIN));\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}",
    "    if ($n == 0) {\n        return true;\n    }\n    $i = 0;\n    while ($n > 0) {\n        if ($n % 2 == 1) {\n            $n -= pow(2, $i);\n            if ($n < 0) {\n                return false;\n            }\n        }\n        $i++;\n    }\n    return true;\n}\n\n$n = intval(readline());\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}",
    "    if ($n == 0) {\n        return false;\n    }\n    while ($n != 1) {\n        if ($n % 2 != 0) {\n            return false;\n        }\n        $n = $n / 2;\n    }\n    return true;\n}\n\n$n = intval(readline());\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}",
    "    $sum = 0;\n    $i = 0;\n    while ($sum < $n) {\n        $sum = $sum + pow(2, $i);\n        if ($sum == $n) {\n            return true;\n        }\n        $i++;\n    }\n    return false;\n}\n\n$n = intval(fgets(STDIN));\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"true\";\n} else {\n    echo \"false\";\n}",
    "    $sum = 0;\n    $i = 0;\n    while ($sum < $n) {\n        $sum += pow(2, $i);\n        $i++;\n    }\n    if ($sum == $n) {\n        return true;\n    }\n    return false;\n}\n\n$n = 8;\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $p = 0;\n    while ($n > 0) {\n        $p += $n & 1;\n        $n >>= 1;\n    }\n    return $p == 1;\n}\n\n$n = 8;\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $sum = 0;\n    $i = 0;\n    while ($sum < $n) {\n        $sum += pow(2, $i);\n        $i++;\n    }\n    if ($sum == $n) {\n        return true;\n    }\n    return false;\n}\n"
  ]
}
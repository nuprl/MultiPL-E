{
  "name": "mbpp_143_find_lists",
  "language": "php",
  "prompt": "<?php\n// Write a function to find number of lists present in the given tuple.\nfunction find_lists($Input) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_143_find_lists.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return find_lists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1, 2, 3, 4), array(5, 6, 7, 8))) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4), array(5, 6))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5, 4, 3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $count = 0;\n    foreach ($Input as $item) {\n        if (is_array($item)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
    "    $count = 0;\n    foreach ($Input as $value) {\n        if (is_array($value)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
    "    $count = 0;\n    foreach ($Input as $item) {\n        if (is_array($item)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
    "    $count = 0;\n    foreach ($Input as $item) {\n        if (is_array($item)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
    "    $count = 0;\n    foreach ($Input as $item) {\n        if (is_array($item)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$Input = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9),\n    array(10, 11, 12),\n    array(13, 14, 15)\n);\necho find_lists($Input);",
    "    $count = 0;\n    foreach ($Input as $value) {\n        if (is_array($value)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
    "    $count = 0;\n    foreach ($Input as $value) {\n        if (is_array($value)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
    "    $count = 0;\n    foreach ($Input as $value) {\n        if (is_array($value)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
    "    $count = 0;\n    foreach ($Input as $value) {\n        if (is_array($value)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$Input = array(1, 2, 3, 4, 5, array(1, 2, 3, 4, 5), 6, 7, 8, 9, 10);\necho find_lists($Input);",
    "    $count = 0;\n    foreach ($Input as $value) {\n        if (is_array($value)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$Input = array(1, 2, 3, 4, 5, array(1, 2, 3, 4, 5), 6, 7, 8, 9, 10);\necho find_lists($Input);",
    "    $count = 0;\n    foreach ($Input as $item) {\n        if (is_array($item)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n$Input = array(1, 2, 3, array(4, 5, 6), array(7, 8, 9), array(10, 11, 12));\necho find_lists($Input);",
    "    $count = 0;\n    foreach ($Input as $value) {\n        if (is_array($value)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
    "    $count = 0;\n    foreach ($Input as $value) {\n        if (is_array($value)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$Input = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9),\n    array(10, 11, 12),\n    array(13, 14, 15),\n    array(16, 17, 18),\n    array(19, 20, 21),\n    array(22, 23, 24),\n    array(25, 26, 27),\n    array(28, 29, 30),\n    array(31, 32, 33),\n    array(34, 35, 36),\n    array(37, 38, 39),\n    array(40, 41, 42),\n    array(43, 44, 45),\n    array(46, 47, 48),\n    array(49, 50, 51),\n    array(52, 53, 54),\n    array(55, 56, 57),\n    array(58, 59, 60),\n    array(61, 62, 63),\n    array(64, 65, 66),\n    array(67, 68, 69),\n    array(70, 71, 72),\n    array(73, 74, 75),\n    array(76, 77, 78),\n    array(79, 80, 81),\n    array(82, 83, 84),\n    array(85, 86, 87),\n    array(88, 89, 90),\n    array(91, 92, 93),\n    array(94, 95, 96),\n    array(97, 98, 99),\n    array(100, 101, 102),\n    array(103, 104, 105),\n    array(106, 107, 108),\n    array(109, 110, 111),\n    array(112, 113, 114),\n    array(115, 116, 117),\n    array(118, 119, 120),\n    array(121, 122, 123),\n    array(124, 125, 126),\n    array(127, 128, 129),\n    array(130, 131, 132),\n    array(133, 134, 135),\n    array(136, 137",
    "    $count = 0;\n    foreach ($Input as $value) {\n        if (is_array($value)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
    "    $count = 0;\n    foreach ($Input as $value) {\n        if (is_array($value)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$Input = array(\n    array(\n        array(1, 2, 3),\n        array(1, 2, 3),\n        array(1, 2, 3),\n    ),\n    array(\n        array(1, 2, 3),\n        array(1, 2, 3),\n        array(1, 2, 3),\n    ),\n    array(\n        array(1, 2, 3),\n        array(1, 2, 3),\n        array(1, 2, 3),\n    ),\n);\necho find_lists($Input);",
    "    $count = 0;\n    foreach($Input as $value) {\n        if(is_array($value)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$Input = array(1, 2, 3, 4, 5, 6, array(1, 2, 3, 4, 5, 6), 7, 8, 9, 10);\necho \"Number of lists present in the given tuple: \" . find_lists($Input);",
    "    $count = 0;\n    foreach($Input as $item) {\n        if(is_array($item)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$Input = array(\n    array(\n        array(1, 2, 3),\n        array(1, 2, 3),\n        array(1, 2, 3)\n    ),\n    array(\n        array(1, 2, 3),\n        array(1, 2, 3),\n        array(1, 2, 3)\n    ),\n    array(\n        array(1, 2, 3),\n        array(1, 2, 3),\n        array(1, 2, 3)\n    ),\n);\n\necho find_lists($Input);",
    "    $count = 0;\n    foreach ($Input as $item) {\n        if (is_array($item)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
    "    $count = 0;\n    foreach ($Input as $value) {\n        if (is_array($value)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
    "    $count = 0;\n    foreach ($Input as $element) {\n        if (is_array($element)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n"
  ]
}
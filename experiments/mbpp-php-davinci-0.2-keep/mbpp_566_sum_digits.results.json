{
  "name": "mbpp_566_sum_digits",
  "language": "php",
  "prompt": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_566_sum_digits.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n /= 10;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510637,
      "stdout": "\nDeprecated: Implicit conversion from float 34.5 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.45 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 0.34500000000000003 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 0.0345 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 0.0034500000000000004 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 0.00034500000000000004 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000005E-5 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000004E-6 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000003E-7 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000005E-8 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000003E-9 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000005E-10 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000004E-11 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000004E-12 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000004E-13 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000004E-14 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000004E-15 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = floor($n / 10);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n /= 10;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510637,
      "stdout": "\nDeprecated: Implicit conversion from float 34.5 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.45 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 0.34500000000000003 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 0.0345 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 0.0034500000000000004 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 0.00034500000000000004 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000005E-5 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000004E-6 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000003E-7 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000005E-8 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000003E-9 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000005E-10 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000004E-11 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000004E-12 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000004E-13 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000004E-14 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000004E-15 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(12345) . \"\\n\";\necho sum_digits(0) . \"\\n\";\necho sum_digits(123456789) . \"\\n\";\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510632,
      "stdout": "15\n0\n45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    if ($n < 10) {\n        return $n;\n    }\n    return ($n % 10) + sum_digits(floor($n / 10));\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510632,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4rut05sc.php:15\nStack trace:\n#0 /tmp/tmp4rut05sc.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp4rut05sc.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    if ($n < 10) {\n        return $n;\n    }\n    return $n % 10 + sum_digits(floor($n / 10));\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510632,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd3wr_sry.php:15\nStack trace:\n#0 /tmp/tmpd3wr_sry.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpd3wr_sry.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = intval($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(123);\necho \"\\n\";\necho sum_digits(12345);\necho \"\\n\";\necho sum_digits(123456789);\necho \"\\n\";\necho sum_digits(0);\necho \"\\n\";\necho sum_digits(10);\necho \"\\n\";\necho sum_digits(11);\necho \"\\n\";\necho sum_digits(1);\necho \"\\n\";\necho sum_digitsnfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510632,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmph6vjj4fs.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = floor($n / 10);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(12345);\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510632,
      "stdout": "15",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = (int)($n / 10);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = (int)($n / 10);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  if ($n < 10) {\n    return $n;\n  } else {\n    return $n % 10 + sum_digits(floor($n / 10));\n  }\n}\n\necho sum_digits(123);\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0mwyfmmj.php:17\nStack trace:\n#0 /tmp/tmp0mwyfmmj.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp0mwyfmmj.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n\t$sum = 0;\n\twhile ($n > 0) {\n\t\t$sum += $n % 10;\n\t\t$n = (int)($n / 10);\n\t}\n\treturn $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(123) . \"\\n\";\necho sum_digits(123456789) . \"\\n\";\necho sum_digits(0) . \"\\n\";\necho sum_digits(1) . \"\\n\";\necho sum_digits(10) . \"\\n\";\necho sum_digits(100) . \"\\n\";\necho sum_digits(1000) . \"\\n\";\necho sum_digits(10000) . \"\\n\";\necho sum_digits(100000) . \"\\n\";\necho sum_digits(1000000) . \"\\n\";\necho sum_digits(10000000) . \"\\n\";\necho sum_digits(100000000) . \"\\n\";\necho sum_digits(1000000000) . \"\\n\";\necho sum_digits(10000000000) . \"\\n\";\necho sum_digits(100000000000) . \"\\n\";\necho sum_digits(1000000000000) . \"\\n\";\necho sum_digits(10000000000000) . \"\\n\";\necho sum_digits(100000000000000) . \"\\n\";\necho sum_digits(1000000000000000) . \"\\n\";\necho sum_digits(10000000000000000) . \"\\n\";\necho sum_digits(100000000000000000) . \"\\n\";\necho sum_digits(1000000000000000000) . \"\\n\";\necho sum_digits(10000000000000000000) . \"\\n\";\necho sum_digits(100000000000000000000) . \"\\n\";\necho sum_digits(1000000000000000000000) . \"\\n\";\necho sum_digits(10000000000000000000000) . \"\\n\";\necho sum_digits(100000000000000000000000) . \"\\n\";\necho sum_digits(1000000000000000000000000) . \"\\n\";\necho sum_digits(10000000000000000000000000) . \"\\n\";\necho sum_digits(100000000000000000000000000) . \"\\n\";\necho sum_digits(1000000000000000000000000000) . \"\\n\";\necho sum_digits(10000000000000000000000000000)\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmp1a6w8is4.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(123); // 6\necho sum_digits(456); // 15\necho sum_digits(789); // 24\necho sum_digits(1000); // 1\necho sum_digits(9999); // 45\necho sum_digits(123456789); // 81\necho sum_digits(1234567890123456789); // 81\necho sum_digits(12345678901234567890123456789); // 81\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "615241364583\nDeprecated: Implicit conversion from float 1.2345678901234568E+28 to int loses precision in /tmp/tmpe6x090ye.php on line 6\n\nDeprecated: Implicit conversion from float 1.2345678901234569E+27 to int loses precision in /tmp/tmpe6x090ye.php on line 6\n\nDeprecated: Implicit conversion from float 1.2345678901234568E+26 to int loses precision in /tmp/tmpe6x090ye.php on line 6\n\nDeprecated: Implicit conversion from float 1.2345678901234568E+25 to int loses precision in /tmp/tmpe6x090ye.php on line 6\n\nDeprecated: Implicit conversion from float 1.2345678901234568E+24 to int loses precision in /tmp/tmpe6x090ye.php on line 6\n\nDeprecated: Implicit conversion from float 1.2345678901234569E+23 to int loses precision in /tmp/tmpe6x090ye.php on line 6\n\nDeprecated: Implicit conversion from float 1.2345678901234568E+22 to int loses precision in /tmp/tmpe6x090ye.php on line 6\n\nDeprecated: Implicit conversion from float 1.2345678901234568E+21 to int loses precision in /tmp/tmpe6x090ye.php on line 6\n\nDeprecated: Implici",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(12345);\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "15",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(123);\necho \"\\n\";\necho sum_digits(12345);\necho \"\\n\";\necho sum_digits(123456789);\necho \"\\n\";\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123860,
      "stdout": "6\n15\n45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(12345);\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "15",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  if ($n < 10) {\n    return $n;\n  } else {\n    return $n % 10 + sum_digits(floor($n / 10));\n  }\n}\n\necho sum_digits(12345) . \"\\n\";\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprma6t9e7.php:18\nStack trace:\n#0 /tmp/tmprma6t9e7.php(23): test()\n#1 {main}\n  thrown in /tmp/tmprma6t9e7.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = floor($n / 10);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(12345);\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510632,
      "stdout": "15",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = floor($n / 10);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = floor($n / 10);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    if ($n < 10) {\n        return $n;\n    }\n    return ($n % 10) + sum_digits(floor($n / 10));\n}\n\necho sum_digits(12345);\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_x91bhs.php:16\nStack trace:\n#0 /tmp/tmpj_x91bhs.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpj_x91bhs.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(12345) . \"\\n\";\necho sum_digits(123456789) . \"\\n\";\necho sum_digits(0) . \"\\n\";\necho sum_digits(1) . \"\\n\";\necho sum_digits(10) . \"\\n\";\necho sum_digits(11) . \"\\n\";\necho sum_digits(100) . \"\\n\";\necho sum_digits(101) . \"\\n\";\necho sum_digits(12345678901234567890) . \"\\n\";\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "15\n45\n0\n1\n1\n2\n1\n2\n\nDeprecated: Implicit conversion from float 1.2345678901234567E+19 to int loses precision in /tmp/tmpb9wubl4c.php on line 6\n74\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = floor($n / 10);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(12345) . \"\\n\";\necho sum_digits(123456789) . \"\\n\";\necho sum_digits(1234567890123456789) . \"\\n\";\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "15\n45\n83\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    if ($n < 10) {\n        return $n;\n    }\n    return ($n % 10) + sum_digits(floor($n / 10));\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510632,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4rut05sc.php:15\nStack trace:\n#0 /tmp/tmp4rut05sc.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp4rut05sc.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    if ($n < 10) {\n        return $n;\n    } else {\n        return ($n % 10) + sum_digits($n / 10);\n    }\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "\nDeprecated: Implicit conversion from float 34.5 to int loses precision in /tmp/tmpx3xezz39.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx3xezz39.php:16\nStack trace:\n#0 /tmp/tmpx3xezz39.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpx3xezz39.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = (int)($n / 10);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = floor($n / 10);\n  }\n  return $sum;\n}\n\necho sum_digits(12345) . \"\\n\";\necho sum_digits(123456789) . \"\\n\";\necho sum_digits(12345678901234567890) . \"\\n\";\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "15\n45\n\nDeprecated: Implicit conversion from float 1.2345678901234567E+19 to int loses precision in /tmp/tmpii8gxxti.php on line 6\n74\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    if ($n < 10) {\n        return $n;\n    }\n    return ($n % 10) + sum_digits(floor($n / 10));\n}\n\necho sum_digits(12345);\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_x91bhs.php:16\nStack trace:\n#0 /tmp/tmpj_x91bhs.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpj_x91bhs.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = intval($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    if ($n < 10) {\n        return $n;\n    }\n    return $n % 10 + sum_digits(floor($n / 10));\n}\n\necho sum_digits(12345);\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppcxpjnpd.php:17\nStack trace:\n#0 /tmp/tmppcxpjnpd.php(22): test()\n#1 {main}\n  thrown in /tmp/tmppcxpjnpd.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = (int)($n / 10);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(123);\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(12345);\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "15",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    if ($n < 10) {\n        return $n;\n    }\n    return ($n % 10) + sum_digits(floor($n / 10));\n}\n\necho sum_digits(12345);\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_x91bhs.php:16\nStack trace:\n#0 /tmp/tmpj_x91bhs.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpj_x91bhs.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(12345);\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "15",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\n$n = 123;\necho sum_digits($n);\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = (int)($n / 10);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(123);\necho \"\\n\";\necho sum_digits(12345);\necho \"\\n\";\necho sum_digits(123456789);\necho \"\\n\";\necho sum_digits(0);\necho \"\\n\";\necho sum_digits(1);\necho \"\\n\";\necho sum_digits(2);\necho \"\\n\";\necho sum_digits(3);\necho \"\\n\";\necho sum_digits(4);\necho \"\\n\";\necho sum_digits(5);\necho \"\\n\";\necho sum_digits(6);\necho \"\\n\";\necho sum_digits(7);\necho \"\\n\";\necho sum_digits(8);\necho \"\\n\";\necho sum_digits(9);\necho \"\\n\";\necho sum_digits(10);\necho \"\\n\";\necho sum_digits(11);\necho \"\\n\";\necho sum_digits(12);\necho \"\\n\";\necho sum_digits(13);\necho \"\\n\";\necho sum_digits(14);\necho \"\\n\";\necho sum_digits(15);\necho \"\\n\";\necho sum_digits(16);\necho \"\\n\";\necho sum_digits(17);\necho \"\\n\";\necho sum_digits(18);\necho \"\\n\";\necho sum_digits(19);\necho \"\\n\";\necho sum_digits(20);\necho \"\\n\";\necho sum_digits(21);\necho \"\\n\";\necho sum_digits(22);\necho \"\\n\";\necho sum_digits(23);\necho \"\\n\";\necho sum_digits(24);\necho \"\\n\";\necho sum_digits(25);\necho \"\\n\";\necho sum_digits(26);\necho \"\\n\";\necho sum_digits(27);\necho \"\\n\";\necho sum_digits(28);\necho \"\\n\";\necho sum_digits(29);\necho\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp19_xa27r.php on line 78\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = intval($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    $n = (string) $n;\n    for ($i = 0; $i < strlen($n); $i++) {\n        $sum += $n[$i];\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n /= 10;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510637,
      "stdout": "\nDeprecated: Implicit conversion from float 34.5 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.45 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 0.34500000000000003 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 0.0345 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 0.0034500000000000004 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 0.00034500000000000004 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000005E-5 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000004E-6 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000003E-7 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000005E-8 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000003E-9 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000005E-10 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000004E-11 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000004E-12 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000004E-13 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000004E-14 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000004E-15 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    if ($n < 10) {\n        return $n;\n    }\n    return $n % 10 + sum_digits(floor($n / 10));\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510632,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd3wr_sry.php:15\nStack trace:\n#0 /tmp/tmpd3wr_sry.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpd3wr_sry.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n /= 10;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510637,
      "stdout": "\nDeprecated: Implicit conversion from float 34.5 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.45 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 0.34500000000000003 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 0.0345 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 0.0034500000000000004 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 0.00034500000000000004 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000005E-5 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000004E-6 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000003E-7 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000005E-8 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000003E-9 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000005E-10 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000004E-11 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000004E-12 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000004E-13 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000004E-14 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\nDeprecated: Implicit conversion from float 3.4500000000000004E-15 to int loses precision in /tmp/tmpkbzyfnrv.php on line 6\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  if ($n < 0) {\n    return -1;\n  }\n  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = (int)($n / 10);\n  }\n  return $sum;\n}\n\necho sum_digits(123) . \"\\n\";\necho sum_digits(1234) . \"\\n\";\necho sum_digits(12345) . \"\\n\";\necho sum_digits(123456) . \"\\n\";\necho sum_digits(1234567) . \"\\n\";\necho sum_digits(12345678) . \"\\n\";\necho sum_digits(123456789) . \"\\n\";\necho sum_digits(1234567890) . \"\\n\";\necho sum_digits(12345678901) . \"\\n\";\necho sum_digits(123456789012) . \"\\n\";\necho sum_digits(1234567890123) . \"\\n\";\necho sum_digits(12345678901234) . \"\\n\";\necho sum_digits(123456789012345) . \"\\n\";\necho sum_digits(1234567890123456) . \"\\n\";\necho sum_digits(12345678901234567) . \"\\n\";\necho sum_digits(123456789012345678) . \"\\n\";\necho sum_digits(1234567890123456789) . \"\\n\";\necho sum_digits(12345678901234567890) . \"\\n\";\necho sum_digits(123456789012345678901) . \"\\n\";\necho sum_digits(1234567890123456789012) . \"\\n\";\necho sum_digits(12345678901234567890123) . \"\\n\";\necho sum_digits(123456789012345678901234) . \"\\n\";\necho sum_digits(1234567890123456789012345) . \"\\n\";\necho sum_digits(12345678901234567890123456) . \"\\\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\", expecting \",\" or \";\" in /tmp/tmpm8tgkrm4.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    if ($n < 10) {\n        return $n;\n    }\n    return $n % 10 + sum_digits(floor($n / 10));\n}\n\necho sum_digits(123);\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk36b0qsg.php:16\nStack trace:\n#0 /tmp/tmpk36b0qsg.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpk36b0qsg.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  if ($n < 10) {\n    return $n;\n  } else {\n    return ($n % 10) + sum_digits(floor($n / 10));\n  }\n}\n\necho sum_digits(12345) . \"\\n\";\necho sum_digits(123456789) . \"\\n\";\necho sum_digits(12345678901234567890) . \"\\n\";\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "15\n45\n\nDeprecated: Implicit conversion from float 1.2345678901234567E+19 to int loses precision in /tmp/tmpupmh716p.php on line 7\n74\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpupmh716p.php:19\nStack trace:\n#0 /tmp/tmpupmh716p.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpupmh716p.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = floor($n / 10);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    if ($n < 10) {\n        return $n;\n    }\n    return $n % 10 + sum_digits(floor($n / 10));\n}\n\n$n = 12345;\necho sum_digits($n);\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpggdlf14v.php:18\nStack trace:\n#0 /tmp/tmpggdlf14v.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpggdlf14v.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(12345) . \"\\n\";\necho sum_digits(123456789) . \"\\n\";\necho sum_digits(0) . \"\\n\";\necho sum_digits(1) . \"\\n\";\necho sum_digits(10) . \"\\n\";\necho sum_digits(100) . \"\\n\";\necho sum_digits(1000) . \"\\n\";\necho sum_digits(10000) . \"\\n\";\necho sum_digits(100000) . \"\\n\";\necho sum_digits(1000000) . \"\\n\";\necho sum_digits(10000000) . \"\\n\";\necho sum_digits(100000000) . \"\\n\";\necho sum_digits(1000000000) . \"\\n\";\necho sum_digits(10000000000) . \"\\n\";\necho sum_digits(100000000000) . \"\\n\";\necho sum_digits(1000000000000) . \"\\n\";\necho sum_digits(10000000000000) . \"\\n\";\necho sum_digits(100000000000000) . \"\\n\";\necho sum_digits(1000000000000000) . \"\\n\";\necho sum_digits(10000000000000000) . \"\\n\";\necho sum_digits(100000000000000000) . \"\\n\";\necho sum_digits(1000000000000000000) . \"\\n\";\necho sum_digits(10000000000000000000) . \"\\n\";\necho sum_digits(100000000000000000000) . \"\\n\";\necho sum_digits(1000000000000000000000) . \"\\n\";\necho sum_digits(10000000000000000000000) . \"\\n\";\necho sum_digits(100000000000000000000000) . \"\\n\";\necho sum_digits(1000000000000000000000000) . \"\\n\";\necho sum_digits(10000000000000000000000000) . \"\\n\";\necho sum_digits(100000000000000000000000000) . \"\\n\";\necho sum_digits(1000000000000000000000000000) . \"\\n\";\necho sum_digits(10000000000000000\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpyza36nnn.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(12345);\necho \"\\n\";\necho sum_digits(123456789);\necho \"\\n\";\necho sum_digits(0);\necho \"\\n\";\necho sum_digits(1);\necho \"\\n\";\necho sum_digits(10);\necho \"\\n\";\necho sum_digits(11);\necho \"\\n\";\necho sum_digits(100);\necho \"\\n\";\necho sum_digits(101);\necho \"\\n\";\necho sum_digits(110);\necho \"\\n\";\necho sum_digits(111);\necho \"\\n\";\necho sum_digits(1000);\necho \"\\n\";\necho sum_digits(1001);\necho \"\\n\";\necho sum_digits(1010);\necho \"\\n\";\necho sum_digits(1011);\necho \"\\n\";\necho sum_digits(1100);\necho \"\\n\";\necho sum_digits(1101);\necho \"\\n\";\necho sum_digits(1110);\necho \"\\n\";\necho sum_digits(1111);\necho \"\\n\";\necho sum_digits(10000);\necho \"\\n\";\necho sum_digits(10001);\necho \"\\n\";\necho sum_digits(10010);\necho \"\\n\";\necho sum_digits(10011);\necho \"\\n\";\necho sum_digits(10100);\necho \"\\n\";\necho sum_digits(10101);\necho \"\\n\";\necho sum_digits(10110);\necho \"\\n\";\necho sum_digits(10111);\necho \"\\n\";\necho sum_digits(11000);\necho \"\\n\";\necho sum_digits(11001);\necho \"\\n\";\necho sum_digits(11010);\necho \"\\n\";\necho sum_digits(11011);\necho \"\\n\";\necho sum_digits(11100);\necho \"\\n\";\necho sum_digits(11101\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp709xgw0u.php on line 75\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = intval($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(123) . \"\\n\";\necho sum_digits(12345) . \"\\n\";\necho sum_digits(123456789) . \"\\n\";\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "6\n15\n45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    if ($n < 10) {\n        return $n;\n    }\n    return ($n % 10) + sum_digits(floor($n / 10));\n}\n\necho sum_digits(12345);\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_x91bhs.php:16\nStack trace:\n#0 /tmp/tmpj_x91bhs.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpj_x91bhs.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = (int)($n / 10);\n  }\n  return $sum;\n}\n\necho sum_digits(123) . \"\\n\";\necho sum_digits(12345) . \"\\n\";\necho sum_digits(123456789) . \"\\n\";\necho sum_digits(0) . \"\\n\";\necho sum_digits(1) . \"\\n\";\necho sum_digits(10) . \"\\n\";\necho sum_digits(11) . \"\\n\";\necho sum_digits(100) . \"\\n\";\necho sum_digits(101) . \"\\n\";\necho sum_digits(110) . \"\\n\";\necho sum_digits(111) . \"\\n\";\necho sum_digits(1000) . \"\\n\";\necho sum_digits(1001) . \"\\n\";\necho sum_digits(1010) . \"\\n\";\necho sum_digits(1011) . \"\\n\";\necho sum_digits(1100) . \"\\n\";\necho sum_digits(1101) . \"\\n\";\necho sum_digits(1110) . \"\\n\";\necho sum_digits(1111) . \"\\n\";\necho sum_digits(10000) . \"\\n\";\necho sum_digits(10001) . \"\\n\";\necho sum_digits(10010) . \"\\n\";\necho sum_digits(10011) . \"\\n\";\necho sum_digits(10100) . \"\\n\";\necho sum_digits(10101) . \"\\n\";\necho sum_digits(10110) . \"\\n\";\necho sum_digits(10111) . \"\\n\";\necho sum_digits(11000) . \"\\n\";\necho sum_digits(11001) . \"\\n\";\necho sum_digits(11010) . \"\\n\";\necho sum_digits(11011) . \"\\n\";\necho sum_digits(11100) . \"\\n\";\necho sum_digits(11101) . \"\\n\";\necho sum_digits(11110) .\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpv4u_c0if.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\n$n = 12345;\necho sum_digits($n);\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "15",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(123);\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(123);\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(123) . \"\\n\";\necho sum_digits(12345) . \"\\n\";\necho sum_digits(123456789) . \"\\n\";\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "6\n15\n45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = floor($n / 10);\n  }\n  return $sum;\n}\n\necho sum_digits(123) . \"\\n\";\necho sum_digits(12345) . \"\\n\";\necho sum_digits(123456789) . \"\\n\";\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "6\n15\n45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(123);\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(123) . \"\\n\";\necho sum_digits(4567) . \"\\n\";\necho sum_digits(123456789) . \"\\n\";\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "6\n22\n45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n\t$sum = 0;\n\twhile ($n > 0) {\n\t\t$sum += $n % 10;\n\t\t$n = floor($n / 10);\n\t}\n\treturn $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = floor($n / 10);\n  }\n  return $sum;\n}\n\necho sum_digits(12345);\necho \"\\n\";\necho sum_digits(0);\necho \"\\n\";\necho sum_digits(123456789);\necho \"\\n\";\necho sum_digitsnfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp8s2mzd4g.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = (int)($n / 10);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    if ($n < 0) {\n        return -1;\n    }\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = floor($n / 10);\n  }\n  return $sum;\n}\n\necho sum_digits(123);\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = (int)($n / 10);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(12345) . \"\\n\";\necho sum_digits(0) . \"\\n\";\necho sum_digits(1) . \"\\n\";\necho sum_digits(10) . \"\\n\";\necho sum_digits(11) . \"\\n\";\necho sum_digits(123456789) . \"\\n\";\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "15\n0\n1\n1\n2\n45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  if ($n < 0) {\n    return 0;\n  }\n  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = (int)($n / 10);\n  }\n  return $sum;\n}\n\necho sum_digits(123) . \"\\n\";\necho sum_digits(12345) . \"\\n\";\necho sum_digits(123456789) . \"\\n\";\necho sum_digits(0) . \"\\n\";\necho sum_digits(-123) . \"\\n\";\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "6\n15\n45\n0\n0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(123) . \"\\n\";\necho sum_digits(12345) . \"\\n\";\necho sum_digits(123456789) . \"\\n\";\necho sum_digits(0) . \"\\n\";\necho sum_digits(1) . \"\\n\";\necho sum_digits(10) . \"\\n\";\necho sum_digits(100) . \"\\n\";\necho sum_digits(1000) . \"\\n\";\necho sum_digits(10000) . \"\\n\";\necho sum_digits(100000) . \"\\n\";\necho sum_digits(1000000) . \"\\n\";\necho sum_digits(10000000) . \"\\n\";\necho sum_digits(100000000) . \"\\n\";\necho sum_digits(1000000000) . \"\\n\";\necho sum_digits(10000000000) . \"\\n\";\necho sum_digits(100000000000) . \"\\n\";\necho sum_digits(1000000000000) . \"\\n\";\necho sum_digits(10000000000000) . \"\\n\";\necho sum_digits(100000000000000) . \"\\n\";\necho sum_digits(1000000000000000) . \"\\n\";\necho sum_digits(10000000000000000) . \"\\n\";\necho sum_digits(100000000000000000) . \"\\n\";\necho sum_digits(1000000000000000000) . \"\\n\";\necho sum_digits(10000000000000000000) . \"\\n\";\necho sum_digits(100000000000000000000) . \"\\n\";\necho sum_digits(1000000000000000000000) . \"\\n\";\necho sum_digits(10000000000000000000000) . \"\\n\";\necho sum_digits(100000000000000000000000) . \"\\n\";\necho sum_digits(1000000000000000000000000) . \"\\n\";\necho sum_digits(10000000000000000000000000) . \"\\n\";\necho sum_digits(100000000000000000000000000) . \"\\n\";\necho sum_digits(1000000000000000000000000000)\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmplr2eqrtk.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = floor($n / 10);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(12345);\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "15",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n\t$sum = 0;\n\twhile ($n > 0) {\n\t\t$sum += $n % 10;\n\t\t$n /= 10;\n\t}\n\treturn $sum;\n}\n\necho sum_digits(12345);\necho \"\\n\";\necho sum_digits(123456789);\necho \"\\n\";\necho sum_digits(1234567890123456789);\necho \"\\n\";\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123885,
      "stdout": "\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmp_4llop2c.php on line 6\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmp_4llop2c.php on line 6\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmp_4llop2c.php on line 6\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmp_4llop2c.php on line 6\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmp_4llop2c.php on line 6\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmp_4llop2c.php on line 6\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmp_4llop2c.php on line 6\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmp_4llop2c.php on line 6\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmp_4llop2c.php on line 6\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmp_4llop2c.php on line 6\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmp_4llop2c.php on line 6\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmp_4llop2c.php on line 6\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmp_4llop2c.php on line 6\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmp_4llop2c.php on line 6\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmp_4llop2c.php on line 6\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmp_4llop2c.php on line 6\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmp_4llop2c.php on line 6\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precision in /tmp/t",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(123);\necho \"\\n\";\necho sum_digits(12345);\necho \"\\n\";\necho sum_digits(123456789);\necho \"\\n\";\necho sum_digits(0);\necho \"\\n\";\necho sum_digits(1);\necho \"\\n\";\necho sum_digits(10);\necho \"\\n\";\necho sum_digits(100);\necho \"\\n\";\necho sum_digits(1000);\necho \"\\n\";\necho sum_digits(10000);\necho \"\\n\";\necho sum_digits(100000);\necho \"\\n\";\necho sum_digits(1000000);\necho \"\\n\";\necho sum_digits(10000000);\necho \"\\n\";\necho sum_digits(100000000);\necho \"\\n\";\necho sum_digits(1000000000);\necho \"\\n\";\necho sum_digits(10000000000);\necho \"\\n\";\necho sum_digits(100000000000);\necho \"\\n\";\necho sum_digits(1000000000000);\necho \"\\n\";\necho sum_digits(10000000000000);\necho \"\\n\";\necho sum_digits(100000000000000);\necho \"\\n\";\necho sum_digits(1000000000000000);\necho \"\\n\";\necho sum_digits(10000000000000000);\necho \"\\n\";\necho sum_digits(100000000000000000);\necho \"\\n\";\necho sum_digits(1000000000000000000);\necho \"\\n\";\necho sum_digits(10000000000000000000);\necho \"\\n\";\necho sum_digits(100000000000000000000);\necho \"\\n\";\necho sum_digits(1000000000000000000000);\necho \"\\n\";\necho sum_digits(10000000000000000000000);\necho \"\\n\";\necho sum_digits(100000000000000000000000);\necho \"\\n\";\necho sum_digits(1000000000000000000000000);\necho \"\\n\";\necho sum_digits(10000000000000000000000000);\necho \"\\n\";\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "6\n15\n45\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n\nDeprecated: Implicit conversion from float 1.0E+19 to int loses precision in /tmp/tmpevuo00wf.php on line 6\n-5\n\nDeprecated: Implicit conversion from float 1.0E+20 to int loses precision in /tmp/tmpevuo00wf.php on line 6\n\nDeprecated: Implicit conversion from float 1.0E+19 to int loses precision in /tmp/tmpevuo00wf.php on line 6\n-5\n\nDeprecated: Implicit conversion from float 1.0E+21 to int loses precision in /tmp/tmpevuo00wf.php on line 6\n\nDeprecated: Implicit conversion from float 1.0E+20 to int loses precision in /tmp/tmpevuo00wf.php on line 6\n\nDeprecated: Implicit conversion from float 1.0E+19 to int loses precision in /tmp/tmpevuo00wf.php on line 6\n1\n\nDeprecated: Implicit conversion from float 1.0E+22 to int loses precision in /tmp/tmpevuo00wf.php on line 6\n\nDeprecated: Implicit conversion from float 1.0E+21 to int loses precision in /tmp/tmpevuo00wf.php on line 6\n\nDeprecated: Implicit conversion from float 1.0E+20 to int loses precision in /tmp/tmpevuo00wf.p",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    if ($n < 10) {\n        return $n;\n    }\n    return ($n % 10) + sum_digits(floor($n / 10));\n}\n\necho sum_digits(12345) . \"\\n\";\necho sum_digits(123456789) . \"\\n\";\necho sum_digits(12345678901234567890) . \"\\n\";\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "15\n45\n\nDeprecated: Implicit conversion from float 1.2345678901234567E+19 to int loses precision in /tmp/tmpemtehna_.php on line 7\n74\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpemtehna_.php:19\nStack trace:\n#0 /tmp/tmpemtehna_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpemtehna_.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = (int)($n / 10);\n  }\n  return $sum;\n}\n\necho sum_digits(123) . \"\\n\";\necho sum_digits(1234) . \"\\n\";\necho sum_digits(12345) . \"\\n\";\necho sum_digits(123456) . \"\\n\";\necho sum_digits(1234567) . \"\\n\";\necho sum_digits(12345678) . \"\\n\";\necho sum_digits(123456789) . \"\\n\";\necho sum_digits(1234567890) . \"\\n\";\necho sum_digits(12345678901) . \"\\n\";\necho sum_digits(123456789012) . \"\\n\";\necho sum_digits(1234567890123) . \"\\n\";\necho sum_digits(12345678901234) . \"\\n\";\necho sum_digits(123456789012345) . \"\\n\";\necho sum_digits(1234567890123456) . \"\\n\";\necho sum_digits(12345678901234567) . \"\\n\";\necho sum_digits(123456789012345678) . \"\\n\";\necho sum_digits(1234567890123456789) . \"\\n\";\necho sum_digits(12345678901234567890) . \"\\n\";\necho sum_digits(123456789012345678901) . \"\\n\";\necho sum_digits(1234567890123456789012) . \"\\n\";\necho sum_digits(12345678901234567890123) . \"\\n\";\necho sum_digits(123456789012345678901234) . \"\\n\";\necho sum_digits(1234567890123456789012345) . \"\\n\";\necho sum_digits(12345678901234567890123456) . \"\\n\";\necho sum_digits(1234567890123456789\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxi1lc3m0.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(12345);\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "15",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = floor($n / 10);\n  }\n  return $sum;\n}\n\necho sum_digits(12345) . \"\\n\";\necho sum_digits(123456789) . \"\\n\";\necho sum_digits(0) . \"\\n\";\necho sum_digits(1) . \"\\n\";\necho sum_digits(10) . \"\\n\";\necho sum_digits(11) . \"\\n\";\necho sum_digits(100) . \"\\n\";\necho sum_digits(101) . \"\\n\";\necho sum_digits(110) . \"\\n\";\necho sum_digits(111) . \"\\n\";\necho sum_digits(1000) . \"\\n\";\necho sum_digits(1001) . \"\\n\";\necho sum_digits(1010) . \"\\n\";\necho sum_digits(1011) . \"\\n\";\necho sum_digits(1100) . \"\\n\";\necho sum_digits(1101) . \"\\n\";\necho sum_digits(1110) . \"\\n\";\necho sum_digits(1111) . \"\\n\";\necho sum_digits(10000) . \"\\n\";\necho sum_digits(10001) . \"\\n\";\necho sum_digits(10010) . \"\\n\";\necho sum_digits(10011) . \"\\n\";\necho sum_digits(10100) . \"\\n\";\necho sum_digits(10101) . \"\\n\";\necho sum_digits(10110) . \"\\n\";\necho sum_digits(10111) . \"\\n\";\necho sum_digits(11000) . \"\\n\";\necho sum_digits(11001) . \"\\n\";\necho sum_digits(11010) . \"\\n\";\necho sum_digits(11011) . \"\\n\";\necho sum_digits(11100) . \"\\n\";\necho sum_digits(11101) . \"\\n\";\necho sum_digits(11110) . \"\\n\";\necho sum_digits(11111) . \"\\\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\", expecting \",\" or \";\" in /tmp/tmp94dxr7iu.php on line 51\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(123);\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    if ($n < 10) {\n        return $n;\n    }\n    return ($n % 10) + sum_digits(floor($n / 10));\n}\n\necho sum_digits(12345);\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_x91bhs.php:16\nStack trace:\n#0 /tmp/tmpj_x91bhs.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpj_x91bhs.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  if ($n < 0) {\n    return -1;\n  }\n  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = (int)($n / 10);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(123) . \"\\n\";\necho sum_digits(12345) . \"\\n\";\necho sum_digits(123456789) . \"\\n\";\necho sum_digits(0) . \"\\n\";\necho sum_digits(1) . \"\\n\";\necho sum_digits(10) . \"\\n\";\necho sum_digits(100) . \"\\n\";\necho sum_digits(1000) . \"\\n\";\necho sum_digits(10000) . \"\\n\";\necho sum_digits(100000) . \"\\n\";\necho sum_digits(1000000) . \"\\n\";\necho sum_digits(10000000) . \"\\n\";\necho sum_digits(100000000) . \"\\n\";\necho sum_digits(1000000000) . \"\\n\";\necho sum_digits(10000000000) . \"\\n\";\necho sum_digits(100000000000) . \"\\n\";\necho sum_digits(1000000000000) . \"\\n\";\necho sum_digits(10000000000000) . \"\\n\";\necho sum_digits(100000000000000) . \"\\n\";\necho sum_digits(1000000000000000) . \"\\n\";\necho sum_digits(10000000000000000) . \"\\n\";\necho sum_digits(100000000000000000) . \"\\n\";\necho sum_digits(1000000000000000000) . \"\\n\";\necho sum_digits(10000000000000000000) . \"\\n\";\necho sum_digits(100000000000000000000) . \"\\n\";\necho sum_digits(1000000000000000000000) . \"\\n\";\necho sum_digits(10000000000000000000000) . \"\\n\";\necho sum_digits(100000000000000000000000) . \"\\n\";\necho sum_digits(1000000000000000000000000) . \"\\n\";\necho sum_digits(10000000000000000000000000) . \"\\n\";\necho sum_digits(100000000000000000000000000) . \"\\n\";\necho sum_digits(1000000000000000000000000000) . \"\\\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\", expecting \",\" or \";\" in /tmp/tmpe9na4f73.php on line 49\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  if ($n < 10) {\n    return $n;\n  }\n  return $n % 10 + sum_digits(floor($n / 10));\n}\n\necho sum_digits(123); // 6\necho sum_digits(1234); // 10\necho sum_digits(12345); // 15\necho sum_digits(123456); // 21\necho sum_digits(1234567); // 28\necho sum_digits(12345678); // 36\necho sum_digits(123456789); // 45\necho sum_digits(1234567890); // 45\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "610152128364545\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbvx3zo74.php:23\nStack trace:\n#0 /tmp/tmpbvx3zo74.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpbvx3zo74.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(12345);\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510632,
      "stdout": "15",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = floor($n / 10);\n  }\n  return $sum;\n}\n\necho sum_digits(123);\necho \"\\n\";\necho sum_digits(456);\necho \"\\n\";\necho sum_digits(789);\necho \"\\n\";\necho sum_digits(101112);\necho \"\\n\";\necho sum_digits(131415);\necho \"\\n\";\necho sum_digits(161718);\necho \"\\n\";\necho sum_digits(192021);\necho \"\\n\";\necho sum_digits(222324);\necho \"\\n\";\necho sum_digits(252627);\necho \"\\n\";\necho sum_digits(282930);\necho \"\\n\";\necho sum_digits(313233);\necho \"\\n\";\necho sum_digits(343536);\necho \"\\n\";\necho sum_digits(373839);\necho \"\\n\";\necho sum_digits(404142);\necho \"\\n\";\necho sum_digits(434445);\necho \"\\n\";\necho sum_digits(464748);\necho \"\\n\";\necho sum_digits(495051);\necho \"\\n\";\necho sum_digits(525354);\necho \"\\n\";\necho sum_digits(555657);\necho \"\\n\";\necho sum_digits(585960);\necho \"\\n\";\necho sum_digits(616263);\necho \"\\n\";\necho sum_digits(646566);\necho \"\\n\";\necho sum_digits(676869);\necho \"\\n\";\necho sum_digits(707172);\necho \"\\n\";\necho sum_digits(737475);\necho \"\\n\";\necho sum_digits(767778);\necho \"\\n\";\necho sum_digits(798081);\necho \"\\n\";\necho sum_digits(828384);\necho \"\\n\";\necho sum_digits(858687);\necho \"\\n\";\necho sum_digits(888990);\necho \"\\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\", expecting \",\" or \";\" in /tmp/tmp5rdf88_3.php on line 77\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(123) . \"\\n\";\necho sum_digits(12345) . \"\\n\";\necho sum_digits(123456789) . \"\\n\";\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "6\n15\n45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(12345);\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510632,
      "stdout": "15",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  if ($n < 10) {\n    return $n;\n  }\n  return $n % 10 + sum_digits(floor($n / 10));\n}\n\necho sum_digits(123);\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2798ijxp.php:16\nStack trace:\n#0 /tmp/tmp2798ijxp.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp2798ijxp.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(12345);\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510632,
      "stdout": "15",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    if ($n < 0) {\n        return -1;\n    }\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(123) . \"\\n\";\necho sum_digits(12345) . \"\\n\";\necho sum_digits(123456789) . \"\\n\";\necho sum_digits(-123) . \"\\n\";\necho sum_digits(0) . \"\\n\";\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "6\n15\n45\n-1\n0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(123) . \"\\n\";\necho sum_digits(12345) . \"\\n\";\necho sum_digits(123456789) . \"\\n\";\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "6\n15\n45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = floor($n / 10);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n\t$sum = 0;\n\twhile ($n > 0) {\n\t\t$sum += $n % 10;\n\t\t$n = intval($n / 10);\n\t}\n\treturn $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(123);\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = floor($n / 10);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = (int)($n / 10);\n  }\n  return $sum;\n}\n\necho sum_digits(12345);\necho \"\\n\";\necho sum_digits(0);\necho \"\\n\";\necho sum_digits(123456789);\necho \"\\n\";\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "15\n0\n45\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = floor($n / 10);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n    if ($n < 10) {\n        return $n;\n    }\n    return $n % 10 + sum_digits(floor($n / 10));\n}\n\necho sum_digits(123);\necho \"\\n\";\necho sum_digits(12345);\necho \"\\n\";\necho sum_digits(123456789);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123870,
      "stdout": "6\n15\n45\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnhfftdd_.php:22\nStack trace:\n#0 /tmp/tmpnhfftdd_.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpnhfftdd_.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
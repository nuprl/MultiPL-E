{
  "name": "mbpp_118_string_to_list",
  "language": "php",
  "prompt": "<?php\n// Write a function to convert a string to a list of strings split on the space character.\nfunction string_to_list($string) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_118_string_to_list.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return string_to_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"python programming\") !== array(\"python\", \"programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lists tuples strings\") !== array(\"lists\", \"tuples\", \"strings\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"write a program\") !== array(\"write\", \"a\", \"program\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $string_array = explode(\" \", $string);\n    return $string_array;\n}\n",
    "    $string_array = explode(\" \", $string);\n    return $string_array;\n}\n",
    "    return explode(\" \", $string);\n}\n",
    "    $string_array = explode(\" \", $string);\n    return $string_array;\n}\n",
    "  $list = explode(\" \", $string);\n  return $list;\n}\n",
    "    $string = explode(\" \", $string);\n    return $string;\n}\n",
    "\t$string_array = explode(\" \", $string);\n\treturn $string_array;\n}\n",
    "  return explode(' ', $string);\n}\n",
    "    $string_array = explode(\" \", $string);\n    return $string_array;\n}\n",
    "\t$string_array = explode(\" \", $string);\n\treturn $string_array;\n}\n",
    "    $string_array = explode(\" \", $string);\n    return $string_array;\n}\n",
    "    return explode(\" \", $string);\n}\n",
    "    $list = explode(\" \", $string);\n    return $list;\n}\n",
    "    $string_array = explode(\" \", $string);\n    return $string_array;\n}\n\n$string = \"This is a string\";\n$string_array = string_to_list($string);\nprint_r($string_array);\n",
    "    $string_array = explode(\" \", $string);\n    return $string_array;\n}\n",
    "    return explode(\" \", $string);\n}\n",
    "  return explode(\" \", $string);\n}\n",
    "\t$string = explode(\" \", $string);\n\treturn $string;\n}\n",
    "\t$string_array = explode(\" \", $string);\n\treturn $string_array;\n}\n",
    "    $list = explode(\" \", $string);\n    return $list;\n}\n"
  ]
}
{
  "name": "mbpp_474_replace_char",
  "language": "php",
  "prompt": "<?php\n// Write a function to replace characters in a string.\nfunction replace_char($str1, $ch, $newch) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_474_replace_char.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return replace_char(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"polygon\", \"y\", \"l\") !== \"pollgon\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"character\", \"c\", \"a\") !== \"aharaater\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"python\", \"l\", \"a\") !== \"python\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $str2 = \"\";\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] == $ch) {\n            $str2 .= $newch;\n        } else {\n            $str2 .= $str1[$i];\n        }\n    }\n    return $str2;\n}\n\n$str1 = \"Hello World!\";\n$ch = \"l\";\n$newch = \"*\";\necho replace_char($str1, $ch, $newch);",
    "\t$str2 = \"\";\n\tfor ($i = 0; $i < strlen($str1); $i++) {\n\t\tif ($str1[$i] == $ch) {\n\t\t\t$str2 .= $newch;\n\t\t} else {\n\t\t\t$str2 .= $str1[$i];\n\t\t}\n\t}\n\treturn $str2;\n}\n",
    "\t$str2 = \"\";\n\tfor ($i = 0; $i < strlen($str1); $i++) {\n\t\tif ($str1[$i] == $ch) {\n\t\t\t$str2 .= $newch;\n\t\t} else {\n\t\t\t$str2 .= $str1[$i];\n\t\t}\n\t}\n\treturn $str2;\n}\n",
    "    $str2 = \"\";\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] == $ch) {\n            $str2 .= $newch;\n        } else {\n            $str2 .= $str1[$i];\n        }\n    }\n    return $str2;\n}\n\n$str1 = \"Hello World\";\n$ch = \"l\";\n$newch = \"a\";\necho replace_char($str1, $ch, $newch);",
    "\t$str2 = str_replace($ch, $newch, $str1);\n\treturn $str2;\n}\n\n$str1 = \"Hello World\";\n$ch = \"l\";\n$newch = \"x\";\necho replace_char($str1, $ch, $newch);",
    "\t$str2 = \"\";\n\tfor ($i = 0; $i < strlen($str1); $i++) {\n\t\tif ($str1[$i] == $ch) {\n\t\t\t$str2 .= $newch;\n\t\t} else {\n\t\t\t$str2 .= $str1[$i];\n\t\t}\n\t}\n\treturn $str2;\n}\n\necho replace_char(\"Hello World\", \"o\", \"a\");",
    "    $str2 = str_split($str1);\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str2[$i] == $ch) {\n            $str2[$i] = $newch;\n        }\n    }\n    return implode(\"\", $str2);\n}\n\necho replace_char(\"Hello World\", \"o\", \"a\");",
    "    $str2 = \"\";\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] == $ch) {\n            $str2 .= $newch;\n        } else {\n            $str2 .= $str1[$i];\n        }\n    }\n    return $str2;\n}\n\necho replace_char(\"Hello World\", \"o\", \"*\");",
    "    $new_str = \"\";\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] == $ch) {\n            $new_str .= $newch;\n        } else {\n            $new_str .= $str1[$i];\n        }\n    }\n    return $new_str;\n}\n\necho replace_char(\"Hello World\", \"o\", \"*\");",
    "\t$str2 = \"\";\n\tfor ($i = 0; $i < strlen($str1); $i++) {\n\t\tif ($str1[$i] == $ch) {\n\t\t\t$str2 .= $newch;\n\t\t} else {\n\t\t\t$str2 .= $str1[$i];\n\t\t}\n\t}\n\treturn $str2;\n}\n\n$str1 = \"The quick brown fox jumps over the lazy dog.\";\n$str2 = replace_char($str1, \"o\", \"*\");\necho $str2;",
    "    $str2 = '';\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] == $ch) {\n            $str2 .= $newch;\n        } else {\n            $str2 .= $str1[$i];\n        }\n    }\n    return $str2;\n}\n\n$str1 = 'Hello World';\n$ch = 'l';\n$newch = 'x';\necho replace_char($str1, $ch, $newch);\n",
    "    $str1 = str_split($str1);\n    for ($i = 0; $i < count($str1); $i++) {\n        if ($str1[$i] == $ch) {\n            $str1[$i] = $newch;\n        }\n    }\n    return implode(\"\", $str1);\n}\n\n$str1 = \"Hello World\";\n$ch = \"l\";\n$newch = \"a\";\necho replace_char($str1, $ch, $newch);",
    "\t$str2 = str_split($str1);\n\t$str3 = '';\n\tfor ($i = 0; $i < strlen($str1); $i++) {\n\t\tif ($str2[$i] == $ch) {\n\t\t\t$str3 .= $newch;\n\t\t} else {\n\t\t\t$str3 .= $str2[$i];\n\t\t}\n\t}\n\treturn $str3;\n}\n\necho replace_char('Hello World', 'o', '*');",
    "    $newstr = \"\";\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] == $ch) {\n            $newstr .= $newch;\n        } else {\n            $newstr .= $str1[$i];\n        }\n    }\n    return $newstr;\n}\n\n$str1 = \"Hello World\";\n$ch = \"o\";\n$newch = \"*\";\necho replace_char($str1, $ch, $newch);",
    "    $str2 = str_split($str1);\n    $str3 = \"\";\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str2[$i] == $ch) {\n            $str3 .= $newch;\n        } else {\n            $str3 .= $str2[$i];\n        }\n    }\n    return $str3;\n}\n\necho replace_char(\"Hello World\", \"o\", \"a\");",
    "    $str2 = \"\";\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] == $ch) {\n            $str2 .= $newch;\n        } else {\n            $str2 .= $str1[$i];\n        }\n    }\n    return $str2;\n}\n\necho replace_char(\"Hello World\", \"o\", \"*\");",
    "    $str2 = \"\";\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] == $ch) {\n            $str2 .= $newch;\n        } else {\n            $str2 .= $str1[$i];\n        }\n    }\n    return $str2;\n}\n\n$str1 = \"Hello World\";\n$ch = \"l\";\n$newch = \"*\";\necho replace_char($str1, $ch, $newch);",
    "    $str2 = str_replace($ch, $newch, $str1);\n    return $str2;\n}\n\n$str1 = \"Hello World\";\n$ch = \"l\";\n$newch = \"p\";\necho replace_char($str1, $ch, $newch);",
    "    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] == $ch) {\n            $str1[$i] = $newch;\n        }\n    }\n    return $str1;\n}\n",
    "    $str2 = \"\";\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] == $ch) {\n            $str2 .= $newch;\n        } else {\n            $str2 .= $str1[$i];\n        }\n    }\n    return $str2;\n}\n\n$str1 = \"Hello World\";\n$str2 = replace_char($str1, \"o\", \"*\");\necho $str2;"
  ]
}
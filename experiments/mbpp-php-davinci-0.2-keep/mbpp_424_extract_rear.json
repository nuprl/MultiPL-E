{
  "name": "mbpp_424_extract_rear",
  "language": "php",
  "prompt": "<?php\n// Write a function to extract only the rear index element of each string in the given tuple.\nfunction extract_rear($test_tuple) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_424_extract_rear.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return extract_rear(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Mers\", \"for\", \"Vers\")) !== array(\"s\", \"r\", \"s\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Avenge\", \"for\", \"People\")) !== array(\"e\", \"r\", \"e\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Gotta\", \"get\", \"go\")) !== array(\"a\", \"t\", \"o\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $result = array();\n    foreach($test_tuple as $tuple) {\n        $result[] = $tuple[strlen($tuple) - 1];\n    }\n    return $result;\n}\n\n$test_tuple = array(\"Python\", \"PHP\", \"Java\", \"C#\", \"C Programming\", \"C++\");\nprint_r(extract_rear($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $string) {\n        $result[] = $string[strlen($string) - 1];\n    }\n    return $result;\n}\n\n$test_tuple = array(\"Python\", \"PHP\", \"Java\", \"C#\", \"C Programming\", \"C++\");\nprint_r(extract_rear($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        $result[] = substr($value, -1);\n    }\n    return $result;\n}\n$test_tuple = array(\"Python\", \"PHP\", \"JavaScript\", \"HTML\", \"C++\");\nprint_r(extract_rear($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        $result[] = $value[strlen($value) - 1];\n    }\n    return $result;\n}\n$test_tuple = array(\"Python\", \"PHP\", \"Java\", \"C#\", \"C Programming\", \"C++\");\nprint_r(extract_rear($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        $result[] = $element[strlen($element) - 1];\n    }\n    return $result;\n}\n\n$test_tuple = array(\"Python\", \"PHP\", \"JavaScript\", \"HTML\", \"C++\");\nprint_r(extract_rear($test_tuple));\n",
    "    $result = array();\n    foreach($test_tuple as $tuple) {\n        $result[] = $tuple[strlen($tuple) - 1];\n    }\n    return $result;\n}\n\n$test_tuple = array(\"Python\", \"PHP\", \"Java\", \"C#\", \"C Programming\", \"C++\");\n$result = extract_rear($test_tuple);\nprint_r($result);",
    "    $result = array();\n    foreach ($test_tuple as $tuple) {\n        $result[] = $tuple[strlen($tuple) - 1];\n    }\n    return $result;\n}\n\n$test_tuple = array(\"Python\", \"PHP\", \"JavaScript\", \"Ruby\");\nprint_r(extract_rear($test_tuple));",
    "    $result = array();\n    foreach($test_tuple as $item) {\n        $result[] = $item[strlen($item) - 1];\n    }\n    return $result;\n}\n\n$test_tuple = array(\"Python\", \"PHP\", \"JavaScript\", \"HTML\", \"C++\");\nprint_r(extract_rear($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $string) {\n        $result[] = $string[strlen($string) - 1];\n    }\n    return $result;\n}\n\n$test_tuple = array(\"Python\", \"PHP\", \"Java\", \"C#\", \"C Programming\", \"C++\");\nprint_r(extract_rear($test_tuple));",
    "    $result = array();\n    foreach($test_tuple as $tuple) {\n        $result[] = $tuple[strlen($tuple) - 1];\n    }\n    return $result;\n}\n\n$test_tuple = array(\"Python\", \"PHP\", \"Java\", \"C#\", \"C Programming\", \"C++\");\nprint_r(extract_rear($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        $result[] = $item[strlen($item) - 1];\n    }\n    return $result;\n}\n\n$test_tuple = array(\"Python\", \"PHP\", \"JavaScript\", \"HTML\", \"CSS\");\nprint_r(extract_rear($test_tuple));",
    "    $result = array();\n    foreach($test_tuple as $item) {\n        $result[] = $item[strlen($item) - 1];\n    }\n    return $result;\n}\n\n$test_tuple = array(\"Python\", \"PHP\", \"JavaScript\", \"HTML\", \"CSS\");\nprint_r(extract_rear($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        $result[] = $value[strlen($value) - 1];\n    }\n    return $result;\n}\n\n$test_tuple = array(\"Python\", \"PHP\", \"JavaScript\", \"C#\", \"C++\");\nprint_r(extract_rear($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        $result[] = $value[strlen($value) - 1];\n    }\n    return $result;\n}\n$test_tuple = array(\"Python\", \"PHP\", \"JavaScript\", \"HTML\", \"CSS\");\nprint_r(extract_rear($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $string) {\n        $result[] = $string[strlen($string) - 1];\n    }\n    return $result;\n}\n\n$test_tuple = array(\"Python\", \"PHP\", \"JavaScript\");\nprint_r(extract_rear($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        $result[] = $item[strlen($item) - 1];\n    }\n    return $result;\n}\n\n$test_tuple = array(\"Python\", \"PHP\", \"Java\", \"C#\", \"C Programming\", \"C++\");\n$result = extract_rear($test_tuple);\nprint_r($result);",
    "    $result = array();\n    foreach ($test_tuple as $tuple) {\n        $result[] = $tuple[strlen($tuple) - 1];\n    }\n    return $result;\n}\n\n$test_tuple = array(\"Python\", \"PHP\", \"Java\", \"C#\", \"C Programming\", \"C++\");\nprint_r(extract_rear($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $tuple) {\n        $result[] = substr($tuple, -1);\n    }\n    return $result;\n}\n",
    "    $result = array();\n    foreach ($test_tuple as $string) {\n        $result[] = $string[strlen($string) - 1];\n    }\n    return $result;\n}\n\n$test_tuple = array(\"PHP\", \"JS\", \"Python\", \"Java\");\nprint_r(extract_rear($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $tuple) {\n        $result[] = $tuple[strlen($tuple) - 1];\n    }\n    return $result;\n}\n\n$test_tuple = array(\"Python\", \"PHP\", \"Java\", \"C#\", \"C Programming\", \"C++\");\nprint_r(extract_rear($test_tuple));"
  ]
}
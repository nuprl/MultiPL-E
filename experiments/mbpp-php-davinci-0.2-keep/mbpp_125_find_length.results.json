{
  "name": "mbpp_125_find_length",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_125_find_length.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '1') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = '10011010001';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9jexax6.php:29\nStack trace:\n#0 /tmp/tmpm9jexax6.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpm9jexax6.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpi_0ikdt3.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for($i = 0; $i < $len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = '10001010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpv5gfnkqx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max = 0;\n    $count = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length(\"10011010001\");\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $string = str_split($string);\n    $count = 0;\n    $max_count = 0;\n    $zero_count = 0;\n    $one_count = 0;\n    for ($i = 0; $i < count($string); $i++) {\n        if ($string[$i] == 0) {\n            $zero_count++;\n        } else {\n            $one_count++;\n        }\n        $count = abs($zero_count - $one_count);\n        if ($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\necho find_length('10010001');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpge3hqbs1.php:29\nStack trace:\n#0 /tmp/tmpge3hqbs1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpge3hqbs1.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for($i = 0; $i < $len; $i++) {\n        if($string[$i] == '0') {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = '10001010101';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzn6__0l2.php:30\nStack trace:\n#0 /tmp/tmpzn6__0l2.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpzn6__0l2.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i=0; $i<strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmpup0xy7ha.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i=0; $i<strlen($string); $i++) {\n        if($string[$i] == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmpimgf5aci.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max_count = 0;\n    $length = strlen($string);\n    for ($i = 0; $i < $length; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\n$string = '1000101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpdc9bqj7t.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i=0; $i<strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = '10001010101';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count_0 = 0;\n    $count_1 = 0;\n    $max_diff = 0;\n    for($i=0; $i<strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        $max_diff = max($max_diff, abs($count_0 - $count_1));\n    }\n    return $max_diff;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmpvphp0xpy.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = \"100010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmpxvn4qfnm.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        $max = max($max, $count);\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmpietpclzl.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $arr = str_split($string);\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmpau1ezn7v.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count_0 = 0;\n    $count_1 = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        if ($count_0 == $count_1) {\n            $max_length = max($max_length, $count_0);\n        }\n    }\n    return $max_length;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpomgvrezh.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_diff = 0;\n    $count_0 = 0;\n    $count_1 = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == 0) {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        $max_diff = max($max_diff, abs($count_0 - $count_1));\n    }\n    return $max_diff;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected string content \"100101010101010101010101010101...\" in /tmp/tmpaiz43tnr.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count_0 = 0;\n    $count_1 = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count_0++;\n        }\n        else {\n            $count_1++;\n        }\n        if($count_0 == $count_1) {\n            $max_length = max($max_length, $count_0 + $count_1);\n        }\n    }\n    return $max_length;\n}\n$string = '10010001';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzgbrku1b.php:27\nStack trace:\n#0 /tmp/tmpzgbrku1b.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpzgbrku1b.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $length = strlen($string);\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < $length; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmp2m59gxks.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for($i = 0; $i < $len; $i++) {\n        if($string[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('0111000100010');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = '10010101';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $len = strlen($string);\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmp8rvz2_cq.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    $length = strlen($string);\n    for($i=0; $i<$length; $i++) {\n        if($string[$i] == '1') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max_length) {\n            $max_length = $count;\n        }\n    }\n    return $max_length;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmposn8vrul.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmpc37rmb6i.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $len = strlen($string);\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < $len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpw2prnpsq.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmp8w7s0cfg.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = \"10010001\";\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for($i=0; $i<$len; $i++) {\n        if($string[$i] == '1') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmpmakbcv_y.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmp2thiqa16.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\", expecting \")\" in /tmp/tmpio5qugsf.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $arr = str_split($string);\n    $len = count($arr);\n    $max = 0;\n    $count = 0;\n    for ($i = 0; $i < $len; $i++) {\n        if ($arr[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmp1g1ykcf1.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_diff = 0;\n    $count_0 = 0;\n    $count_1 = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        $max_diff = max($max_diff, abs($count_0 - $count_1));\n    }\n    return $max_diff;\n}\necho find_length('1000101');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp60coi5m.php:23\nStack trace:\n#0 /tmp/tmpp60coi5m.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpp60coi5m.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    $zero = 0;\n    $one = 0;\n    for($i=0; $i<strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $zero++;\n        } else {\n            $one++;\n        }\n        $count = $zero - $one;\n        if($count < 0) {\n            $count = -$count;\n        }\n        if($count > $max_length) {\n            $max_length = $count;\n        }\n    }\n    return $max_length;\n}\n\n$string = '10011010001';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprbwtaogr.php:32\nStack trace:\n#0 /tmp/tmprbwtaogr.php(37): test()\n#1 {main}\n  thrown in /tmp/tmprbwtaogr.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmpxvn4qfnm.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max_count = 0;\n    $length = strlen($string);\n    for ($i = 0; $i < $length; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmppndq_ef4.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $len = strlen($string);\n    $count = 0;\n    $max = 0;\n    for($i=0; $i<$len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmp4q9ffkc4.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i=0; $i<strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\necho find_length('1101010001');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('1000101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpzae1fi5h.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $arr = str_split($string);\n    $count = 0;\n    $max = 0;\n    for($i=0; $i<count($arr); $i++) {\n        if($arr[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\", expecting \")\" in /tmp/tmpkj_3i74_.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        $max = max($max, $count);\n    }\n    return $max;\n}\n\necho find_length('00010111');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmpqbguem3b.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmpfx3idaw5.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_len = 0;\n    $count_0 = 0;\n    $count_1 = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        if ($count_0 == $count_1) {\n            $max_len = max($max_len, $count_0 + $count_1);\n        }\n    }\n    return $max_len;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmpicq9xwd2.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    $count_zero = 0;\n    $count_one = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        $count = $count_zero - $count_one;\n        if($count == 0) {\n            $max_length = max($max_length, $count_zero + $count_one);\n        }\n        if($count < 0) {\n            $count_zero = 0;\n            $count_one = 0;\n        }\n    }\n    return $max_length;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmp6uu8rnk4.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count--;\n        } else {\n            $count++;\n        }\n        if ($count == 0) {\n            $max = max($max, $i + 1);\n        }\n        if (array_key_exists($count, $hash)) {\n            $max = max($max, $i - $hash[$count]);\n        } else {\n            $hash[$count] = $i;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmp7r0f7xt6.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $arr = str_split($string);\n    $count = 0;\n    $max = 0;\n    for($i=0; $i<count($arr); $i++) {\n        if($arr[$i] == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmpw9qkrpjj.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_diff = 0;\n    $count_1 = 0;\n    $count_0 = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '1') {\n            $count_1++;\n        } else {\n            $count_0++;\n        }\n        if ($count_1 - $count_0 > $max_diff) {\n            $max_diff = $count_1 - $count_0;\n        }\n    }\n    return $max_diff;\n}\n\necho find_length('0111000100010');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ywdshbv.php:26\nStack trace:\n#0 /tmp/tmp2ywdshbv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp2ywdshbv.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for($i = 0; $i < $len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = \"10010001\";\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $len = strlen($string);\n    $count = 0;\n    $max_count = 0;\n    for($i = 0; $i < $len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\n$string = '1101010001';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    $zero_count = 0;\n    $one_count = 0;\n    for($i=0;$i<strlen($string);$i++) {\n        if($string[$i] == '0') {\n            $zero_count++;\n        } else {\n            $one_count++;\n        }\n        if($zero_count == $one_count) {\n            $max_length = max($max_length, $zero_count+$one_count);\n        }\n    }\n    return $max_length;\n}\n\n$string = '1101010001';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_sutsvb.php:28\nStack trace:\n#0 /tmp/tmpu_sutsvb.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpu_sutsvb.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmp2xms83zw.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpqjuq6lps.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for($i = 0; $i < $len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmp6cmjz5lw.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i=0; $i<strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\", expecting \")\" in /tmp/tmpl5dvxs0s.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max_count = 0;\n    $length = strlen($string);\n    for($i=0; $i<$length; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmp6qjp4iat.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('1101010001');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for($i = 0; $i < $len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = \"10010101\";\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count--;\n        } else {\n            $count++;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpvluv9x2r.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpqjuq6lps.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $str_arr = str_split($string);\n    $count_zero = 0;\n    $count_one = 0;\n    $max_diff = 0;\n    for ($i = 0; $i < count($str_arr); $i++) {\n        if ($str_arr[$i] == 0) {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if ($count_zero == $count_one) {\n            $max_diff = max($max_diff, $count_zero + $count_one);\n        }\n    }\n    return $max_diff;\n}\n\n$string = '0111000100010';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "8\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph18rnaw6.php:28\nStack trace:\n#0 /tmp/tmph18rnaw6.php(33): test()\n#1 {main}\n  thrown in /tmp/tmph18rnaw6.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmp8w7s0cfg.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max = 0;\n    $count = 0;\n    $arr = str_split($string);\n    for($i = 0; $i < count($arr); $i++) {\n        if($arr[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\", expecting \")\" in /tmp/tmppdgsnl46.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    $zero_count = 0;\n    $one_count = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $zero_count++;\n        } else {\n            $one_count++;\n        }\n        if($zero_count == $one_count) {\n            $count = $zero_count + $one_count;\n            $max_length = max($max_length, $count);\n        }\n    }\n    return $max_length;\n}\n\n$string = '1101010001';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpewkdwyil.php:29\nStack trace:\n#0 /tmp/tmpewkdwyil.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpewkdwyil.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($max < $count) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length(\"1101010001\");\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp01rt9ms3.php:28\nStack trace:\n#0 /tmp/tmp01rt9ms3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp01rt9ms3.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('10001010001');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max_count = 0;\n    $length = strlen($string);\n    for ($i = 0; $i < $length; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmphazpp4_t.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmp8w7s0cfg.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100101010101010101010101010101...\" in /tmp/tmpp_279cht.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count_zero = 0;\n    $count_one = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if ($count_zero == $count_one) {\n            $max_length = max($max_length, $count_zero * 2);\n        }\n    }\n    $count_zero = 0;\n    $count_one = 0;\n    for ($i = strlen($string) - 1; $i >= 0; $i--) {\n        if ($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if ($count_zero == $count_one) {\n            $max_length = max($max_length, $count_zero * 2);\n        }\n    }\n    return $max_length;\n}\n\n$string = '0111000100010';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "8\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe307z94o.php:39\nStack trace:\n#0 /tmp/tmpe307z94o.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpe307z94o.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length(\"1000101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\", expecting \")\" in /tmp/tmpcmw13rfy.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for($i=0; $i<$len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmpdgnipeua.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i=0;$i<strlen($string);$i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        $max = max($max, $count);\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmp3yb6e_dd.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        $max = max($max, $count);\n    }\n    return $max;\n}\n\necho find_length('10001010101') . \"\\n\";\necho find_length('0111000100010') . \"\\n\";\necho find_length('011111111111') . \"\\n\";\necho find_length('111111111111') . \"\\n\";\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "3\n5\n1\n0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $str_arr = str_split($string);\n    $count = 0;\n    $max_count = 0;\n    $zero_count = 0;\n    $one_count = 0;\n    for($i = 0; $i < count($str_arr); $i++) {\n        if($str_arr[$i] == 0) {\n            $zero_count++;\n        } else {\n            $one_count++;\n        }\n        $count = $zero_count - $one_count;\n        if($count < 0) {\n            $count = -$count;\n        }\n        if($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\n$string = \"10010001\";\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpih252f3c.php:33\nStack trace:\n#0 /tmp/tmpih252f3c.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpih252f3c.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $string = str_split($string);\n    $count = 0;\n    $max = 0;\n    $zero = 0;\n    $one = 0;\n    foreach ($string as $key => $value) {\n        if($value == 0) {\n            $zero++;\n        } else {\n            $one++;\n        }\n        if($zero == $one) {\n            $count = $zero + $one;\n            if($count > $max) {\n                $max = $count;\n            }\n        }\n    }\n    return $max;\n}\n\necho find_length('1000101');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptpht0euo.php:31\nStack trace:\n#0 /tmp/tmptpht0euo.php(36): test()\n#1 {main}\n  thrown in /tmp/tmptpht0euo.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $arr = str_split($string);\n    for ($i=0; $i < count($arr); $i++) { \n        if ($arr[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmpc5ob4zqo.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmpfx3idaw5.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for($i = 0; $i < $len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        }\n        else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($max < $count) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmp2gk8_aft.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $length = strlen($string);\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < $length; $i++) {\n        if($string[$i] == '0') {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('10010101');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpskhwz0bi.php:29\nStack trace:\n#0 /tmp/tmpskhwz0bi.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpskhwz0bi.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\", expecting \")\" in /tmp/tmpjovoy8bf.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('100010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmp2wyv98go.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count_0 = 0;\n    $count_1 = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        if($count_0 == $count_1) {\n            $max_length = max($max_length, $count_0 + $count_1);\n        }\n    }\n    return $max_length;\n}\n\n$string = '10010001';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdni0jghw.php:27\nStack trace:\n#0 /tmp/tmpdni0jghw.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpdni0jghw.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    $count_zero = 0;\n    $count_one = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        $count = $count_zero - $count_one;\n        if($count == 0) {\n            $max_length = max($max_length, $i + 1);\n        }\n    }\n    return $max_length;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"100110101010101010101010101010...\" in /tmp/tmpd_h13xzf.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max_count = 0;\n    $zero_count = 0;\n    $one_count = 0;\n    $length = strlen($string);\n    for ($i = 0; $i < $length; $i++) {\n        if ($string[$i] == '0') {\n            $zero_count++;\n        } else {\n            $one_count++;\n        }\n        if ($zero_count == $one_count) {\n            $count = $zero_count + $one_count;\n            if ($count > $max_count) {\n                $max_count = $count;\n            }\n        }\n    }\n    return $max_count;\n}\necho find_length('10011010001');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "8\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkgb73dex.php:30\nStack trace:\n#0 /tmp/tmpkgb73dex.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpkgb73dex.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_diff = 0;\n    $count_0 = 0;\n    $count_1 = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        $max_diff = max($max_diff, abs($count_0 - $count_1));\n    }\n    return $max_diff;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmpc535wvno.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmpej36o6w7.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        $max = max($max, $count);\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpwaor3493.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $length = strlen($string);\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < $length; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = '100101010101';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n    }\n    return $max;\n}\n\necho find_length('0111000100010');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzsl8z1pp.php:28\nStack trace:\n#0 /tmp/tmpzsl8z1pp.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzsl8z1pp.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count--;\n        } else {\n            $count++;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmpyn32cwel.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($max < $count) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = '100010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpx18x7jf5.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($max < $count) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = \"10010001\";\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $len = strlen($string);\n    $count = 0;\n    $max = 0;\n    for($i=0; $i<$len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmptz07lhjv.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max_length) {\n            $max_length = $count;\n        }\n    }\n    return $max_length;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmp44a0elkd.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count_0 = 0;\n    $count_1 = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        if($count_0 == $count_1) {\n            $max_length = max($max_length, $count_0 + $count_1);\n        }\n    }\n    return $max_length;\n}\n\n$string = '10010001';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdni0jghw.php:27\nStack trace:\n#0 /tmp/tmpdni0jghw.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpdni0jghw.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmplvr6l_gk.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($max < $count) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('1101010101');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i=0; $i<strlen($string); $i++) {\n        if($string[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = \"1000101\";\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmp16gcctvk.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        $max = max($max, $count);\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmpi4lyxlhy.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $arr = str_split($string);\n    for($i = 0; $i < count($arr); $i++) {\n        if($arr[$i] == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count == 0) {\n            $max = max($max, $i+1);\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n    }\n    $count = 0;\n    for($i = count($arr)-1; $i >= 0; $i--) {\n        if($arr[$i] == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count == 0) {\n            $max = max($max, count($arr)-$i);\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n    }\n    return $max;\n}\n\n$string = '1001101';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_tm6myra.php:44\nStack trace:\n#0 /tmp/tmp_tm6myra.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp_tm6myra.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmpw01vr293.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count_0 = 0;\n    $count_1 = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        if ($count_0 == $count_1) {\n            $max_length = max($max_length, $count_0 + $count_1);\n        }\n    }\n    return $max_length;\n}\n\necho find_length('1101010001');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn3lp1u84.php:26\nStack trace:\n#0 /tmp/tmpn3lp1u84.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpn3lp1u84.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $string = str_split($string);\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < count($string); $i++) {\n        if($string[$i] == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('0111000100010');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmd1598_j.php:29\nStack trace:\n#0 /tmp/tmpmd1598_j.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpmd1598_j.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpqjuq6lps.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i=0; $i<strlen($string); $i++) {\n        if($string[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        $max = max($max, $count);\n    }\n    return $max;\n}\n\n$string = \"011111\";\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $len = strlen($string);\n    $count = 0;\n    $max_count = 0;\n    for($i=0; $i<$len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\n$string = \"1000101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmpea1_v0gb.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count_0 = 0;\n    $count_1 = 0;\n    $max_diff = 0;\n    for($i=0; $i<strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        if($count_0 == $count_1) {\n            $max_diff = max($max_diff, $count_0);\n        }\n    }\n    return $max_diff;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpm4e3a875.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '1') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmpgihu2llg.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for($i=0; $i<$len; $i++) {\n        if($string[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = \"10001010101\";\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\", expecting \")\" in /tmp/tmpkzg54tga.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i=0; $i<strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        }\n        else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('100010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpoop_bqkv.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length(\"1101010001\");\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"110110101010101010101010101010...\" in /tmp/tmpipwjvmr6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    $arr = str_split($string);\n    for($i=0; $i<count($arr); $i++) {\n        if($arr[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count == 0) {\n            $max_length = max($max_length, $i+1);\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n    }\n    return $max_length;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmp5n0sic8a.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count_zero = 0;\n    $count_one = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if ($count_zero == $count_one) {\n            $max_length = max($max_length, $count_zero + $count_one);\n        }\n    }\n    return $max_length;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\", expecting \")\" in /tmp/tmpd58fjdra.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n  $max = 0;\n  $count = 0;\n  $length = strlen($string);\n  for($i = 0; $i < $length; $i++) {\n    if($string[$i] == '0') {\n      $count++;\n    } else {\n      $count--;\n    }\n    if($count < 0) {\n      $count = 0;\n    }\n    if($count > $max) {\n      $max = $count;\n    }\n  }\n  return $max;\n}\n\n$string = '10001010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpirmnr9rs.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($max < $count) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmpyz5otsmx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i=0; $i<strlen($string); $i++) {\n        if($string[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('1000101');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $len = strlen($string);\n    $count = 0;\n    $max_count = 0;\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\n$string = \"100010101\";\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $str_arr = str_split($string);\n    $count = 0;\n    $max_count = 0;\n    $zero_count = 0;\n    $one_count = 0;\n    for($i=0; $i<count($str_arr); $i++) {\n        if($str_arr[$i] == 0) {\n            $zero_count++;\n        } else {\n            $one_count++;\n        }\n        $count = $zero_count - $one_count;\n        if($count < 0) {\n            $count = -$count;\n        }\n        if($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmpcf3l4sov.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\", expecting \")\" in /tmp/tmpkzg54tga.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $length = strlen($string);\n    $max_length = 0;\n    $count_0 = 0;\n    $count_1 = 0;\n    for ($i = 0; $i < $length; $i++) {\n        if ($string[$i] == '0') {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        if ($count_0 == $count_1) {\n            $max_length = max($max_length, $count_0 + $count_1);\n        }\n    }\n    return $max_length;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmphty0n3u5.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max_count = 0;\n    $len = strlen($string);\n    for($i=0;$i<$len;$i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpue137n0m.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $len = strlen($string);\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < $len; $i++) {\n        if($string[$i] == '0') {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count == 0) {\n            $max = max($max, $i+1);\n        } else if($count < 0) {\n            $count = 0;\n        }\n    }\n    $count = 0;\n    for($i = $len-1; $i >= 0; $i--) {\n        if($string[$i] == '0') {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count == 0) {\n            $max = max($max, $len-$i);\n        } else if($count > 0) {\n            $count = 0;\n        }\n    }\n    return $max;\n}\n\n$string = \"110101\";\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp450q6txy.php:42\nStack trace:\n#0 /tmp/tmp450q6txy.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp450q6txy.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for($i = 0; $i < $len; $i++) {\n        if($string[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = \"100010101\";\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count_0 = 0;\n    $count_1 = 0;\n    $max_diff = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == 0) {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        if ($count_0 == $count_1) {\n            $max_diff = max($max_diff, $count_0);\n        }\n    }\n    return $max_diff;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmp5ql212xi.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $arr = str_split($string);\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('10001010001');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $arr = str_split($string);\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < count($arr); $i++) {\n        if($arr[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmp8zt6qevc.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $string = str_split($string);\n    $count = 0;\n    $max = 0;\n    $arr = [];\n    for ($i = 0; $i < count($string); $i++) {\n        if ($string[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count == 0) {\n            $max = $i + 1;\n        }\n        if (array_key_exists($count, $arr)) {\n            $max = max($max, $i - $arr[$count]);\n        } else {\n            $arr[$count] = $i;\n        }\n    }\n    return $max;\n}\n\n$string = \"10010001\";\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpes1wo72y.php:33\nStack trace:\n#0 /tmp/tmpes1wo72y.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpes1wo72y.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpho96onl7.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmpff0g7o3l.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i=0;$i<strlen($string);$i++) {\n        if($string[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = \"10010001\";\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count_zero = 0;\n    $count_one = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if ($count_zero == $count_one) {\n            $max_length = max($max_length, $count_zero + $count_one);\n        }\n    }\n    return $max_length;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpu2bchs4f.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $string = str_split($string);\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < count($string); $i++) {\n        if($string[$i] == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmpwlc22dox.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $string = str_split($string);\n    for($i = 0; $i < count($string); $i++) {\n        if($string[$i] == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = '0111000100010';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsifu98ed.php:30\nStack trace:\n#0 /tmp/tmpsifu98ed.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpsifu98ed.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == \"0\") {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmp6kyn3pb1.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmpw01vr293.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    $count_zero = 0;\n    $count_one = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if ($count_zero == $count_one) {\n            $count = $count_zero + $count_one;\n            $max_length = max($max_length, $count);\n        }\n    }\n    return $max_length;\n}\n\necho find_length('10010001');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppkgogw0c.php:28\nStack trace:\n#0 /tmp/tmppkgogw0c.php(33): test()\n#1 {main}\n  thrown in /tmp/tmppkgogw0c.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    $count_zero = 0;\n    $count_one = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if($count_zero == $count_one) {\n            $count = $count_zero + $count_one;\n            $max_length = max($max_length, $count);\n        }\n    }\n    return $max_length;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmpuanera_3.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count_zero = 0;\n    $count_one = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if($count_zero == $count_one) {\n            $max_length = max($max_length, $count_zero + $count_one);\n        }\n    }\n    return $max_length;\n}\n\n$string = '1101010001';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpijmhld6p.php:27\nStack trace:\n#0 /tmp/tmpijmhld6p.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpijmhld6p.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('1000101');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max_count = 0;\n    $length = strlen($string);\n    for ($i = 0; $i < $length; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmppndq_ef4.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    $count_0 = 0;\n    $count_1 = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        if ($count_0 == $count_1) {\n            $count = $count_0 + $count_1;\n            if ($count > $max_length) {\n                $max_length = $count;\n            }\n        }\n    }\n    return $max_length;\n}\n\n$string = '1101010101';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6asnpexd.php:31\nStack trace:\n#0 /tmp/tmp6asnpexd.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp6asnpexd.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    $count_zero = 0;\n    $count_one = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if($count_zero == $count_one) {\n            $count = $count_zero + $count_one;\n            if($count > $max_length) {\n                $max_length = $count;\n            }\n        }\n    }\n    return $max_length;\n}\n\n$string = '1101010001';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkwlh0dvf.php:31\nStack trace:\n#0 /tmp/tmpkwlh0dvf.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpkwlh0dvf.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        $max = max($max, $count);\n    }\n    return $max;\n}\n\necho find_length('100010001');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count_0 = 0;\n    $count_1 = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        if($count_0 == $count_1) {\n            $max_length = max($max_length, $count_0 + $count_1);\n        }\n    }\n    return $max_length;\n}\n\n$string = \"11010101\";\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdtggaohm.php:27\nStack trace:\n#0 /tmp/tmpdtggaohm.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpdtggaohm.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmptnvujl_g.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $string = str_split($string);\n    $count = 0;\n    $max = 0;\n    $i = 0;\n    $j = 0;\n    while ($i < count($string)) {\n        if ($string[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n            $j = $i + 1;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n        $i++;\n    }\n    return $max;\n}\n\n$string = '0111000100010';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $arr = str_split($string);\n    $count = 0;\n    $max = 0;\n    for ($i=0; $i < count($arr); $i++) { \n        if ($arr[$i] == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if ($count == 0) {\n            $max = max($max, $i+1);\n        }\n        if (isset($hash[$count])) {\n            $max = max($max, $i - $hash[$count]);\n        } else {\n            $hash[$count] = $i;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\", expecting \")\" in /tmp/tmpx795dj0w.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmp5z8valjo.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpqjuq6lps.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $len = strlen($string);\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < $len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmp47tena71.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpiqqwolzw.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    $count_0 = 0;\n    $count_1 = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        $count = $count_0 - $count_1;\n        if ($count < 0) {\n            $count = 0;\n            $count_0 = 0;\n            $count_1 = 0;\n        }\n        if ($count > $max_length) {\n            $max_length = $count;\n        }\n    }\n    return $max_length;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpk36tezyj.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    $length = strlen($string);\n    for($i = 0; $i < $length; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count == 0) {\n            $max_length = max($max_length, $i+1);\n        }\n    }\n    return $max_length;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmp9gsp5wxg.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $length = strlen($string);\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < $length; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmp2m59gxks.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmpgeuxgq1o.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmpqbguem3b.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max_count = 0;\n    $len = strlen($string);\n    for($i=0; $i<$len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpuqgmshw2.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpqjuq6lps.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('100010001');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length(\"100010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\", expecting \")\" in /tmp/tmpl1a2ji4x.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    $zero_count = 0;\n    $one_count = 0;\n    for($i=0;$i<strlen($string);$i++) {\n        if($string[$i] == '0') {\n            $zero_count++;\n        } else {\n            $one_count++;\n        }\n        if($zero_count == $one_count) {\n            $max_length = max($max_length, $zero_count*2);\n        }\n    }\n    $zero_count = 0;\n    $one_count = 0;\n    for($i=strlen($string)-1;$i>=0;$i--) {\n        if($string[$i] == '0') {\n            $zero_count++;\n        } else {\n            $one_count++;\n        }\n        if($zero_count == $one_count) {\n            $max_length = max($max_length, $zero_count*2);\n        }\n    }\n    return $max_length;\n}\n\necho find_length('01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmpe06e_g9w.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $len = strlen($string);\n    $count_zero = 0;\n    $count_one = 0;\n    $max_diff = 0;\n    for($i=0; $i<$len; $i++) {\n        if($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if($count_zero == $count_one) {\n            $max_diff = max($max_diff, $count_zero);\n        }\n    }\n    return $max_diff;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmp2so6k22r.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n  $count = 0;\n  $max = 0;\n  $len = strlen($string);\n  for($i=0; $i<$len; $i++) {\n    if($string[$i] == '0') {\n      $count--;\n    } else {\n      $count++;\n    }\n    if($count == 0) {\n      $max = max($max, $i+1);\n    }\n    if($count < 0) {\n      $count = 0;\n    }\n  }\n  $count = 0;\n  for($i=$len-1; $i>=0; $i--) {\n    if($string[$i] == '1') {\n      $count--;\n    } else {\n      $count++;\n    }\n    if($count == 0) {\n      $max = max($max, $len-$i);\n    }\n    if($count < 0) {\n      $count = 0;\n    }\n  }\n  return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmp9eihhynq.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for($i=0;$i<$len;$i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        $max = max($max, $count);\n    }\n    return $max;\n}\n\n$string = '100010001';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count_zero = 0;\n    $count_one = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if ($count_zero == $count_one) {\n            $max_length = max($max_length, $count_zero + $count_one);\n        }\n    }\n    return $max_length;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmpysx8_guo.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    $zero_count = 0;\n    $one_count = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $zero_count++;\n        } else {\n            $one_count++;\n        }\n        if ($zero_count == $one_count) {\n            $max_length = max($max_length, $zero_count + $one_count);\n        }\n    }\n    return $max_length;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmp_994evsf.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = '10010001';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $length = strlen($string);\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < $length; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmptzfsi1a1.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $len = strlen($string);\n    $count = 0;\n    $max = 0;\n    for($i=0; $i<$len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmp4q9ffkc4.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max_count = 0;\n    $str_length = strlen($string);\n    for ($i = 0; $i < $str_length; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\necho find_length('10001010001');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmptv5n8k6r.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        }\n        else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('100010001');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count_zero = 0;\n    $count_one = 0;\n    for($i=0; $i<strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if($count_zero == $count_one) {\n            $max_length = max($max_length, $count_zero*2);\n        }\n    }\n    $count_zero = 0;\n    $count_one = 0;\n    for($i=strlen($string)-1; $i>=0; $i--) {\n        if($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if($count_zero == $count_one) {\n            $max_length = max($max_length, $count_zero*2);\n        }\n    }\n    return $max_length;\n}\n\n$string = '110101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmp7463bvkl.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        $max = max($max, $count);\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpip6umu2k.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count_0 = 0;\n    $count_1 = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        if($count_0 == $count_1) {\n            $max_length = max($max_length, $count_0 + $count_1);\n        }\n    }\n    return $max_length;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmps6f5omug.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('1000101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpi_0ikdt3.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmp8w7s0cfg.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\", expecting \")\" in /tmp/tmp37rwthdp.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == \"0\") {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length(\"1000101\");\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $arr = str_split($string);\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < count($arr); $i++) {\n        if($arr[$i] == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = '110101';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjsj3lry_.php:30\nStack trace:\n#0 /tmp/tmpjsj3lry_.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpjsj3lry_.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $arr = str_split($string);\n    foreach($arr as $char) {\n        if($char == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpmt_3k3vm.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        $max = max($max, $count);\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmptkhoxca5.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $length = strlen($string);\n    $count = 0;\n    $max_count = 0;\n    for($i = 0; $i < $length; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmparr9llvq.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count_zero = 0;\n    $count_one = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if($count_zero == $count_one) {\n            $max_length = max($max_length, $count_zero + $count_one);\n        }\n    }\n    return $max_length;\n}\n\n$string = '1101010001';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpijmhld6p.php:27\nStack trace:\n#0 /tmp/tmpijmhld6p.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpijmhld6p.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = '100010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpqjuq6lps.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max_count = 0;\n    $length = strlen($string);\n    for ($i = 0; $i < $length; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmppndq_ef4.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    $count_zero = 0;\n    $count_one = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if ($count_zero == $count_one) {\n            $count = $count_zero + $count_one;\n            if ($count > $max_length) {\n                $max_length = $count;\n            }\n        }\n    }\n    return $max_length;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmpydyfkyfz.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmp97bdjfkg.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count_zero = 0;\n    $count_one = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if($count_zero == $count_one) {\n            $max_length = max($max_length, $count_zero);\n        }\n    }\n    return $max_length;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmp_xl8op_1.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_len = 0;\n    $count = 0;\n    $count_zero = 0;\n    $count_one = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if($count_zero == $count_one) {\n            $count = $count_zero + $count_one;\n            $max_len = max($max_len, $count);\n        }\n    }\n    return $max_len;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpa5t9dmsb.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmpfloszy9_.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max_count = 0;\n    for ($i=0; $i < strlen($string); $i++) { \n        if ($string[$i] == '1') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmpmq_05e68.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count_0 = 0;\n    $count_1 = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        if ($count_0 == $count_1) {\n            $max_length = max($max_length, $count_0 + $count_1);\n        }\n    }\n    return $max_length;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmpt8jmanh9.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count_zero = 0;\n    $count_one = 0;\n    $count = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if ($count_zero == $count_one) {\n            $count = $count_zero + $count_one;\n            $max_length = max($max_length, $count);\n        }\n    }\n    return $max_length;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmp2evny0b7.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for($i=0; $i<$len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmp85jyfvjx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length(\"010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\", expecting \")\" in /tmp/tmpu0cassu6.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count_zero = 0;\n    $count_one = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if ($count_zero == $count_one) {\n            $max_length = max($max_length, $count_zero + $count_one);\n        }\n    }\n    return $max_length;\n}\n\n$string = \"10011010001\";\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "8\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwkdftw8w.php:27\nStack trace:\n#0 /tmp/tmpwkdftw8w.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpwkdftw8w.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n  $max_length = 0;\n  $count = 0;\n  $str_length = strlen($string);\n  for($i=0; $i<$str_length; $i++) {\n    if($string[$i] == '0') {\n      $count++;\n    } else {\n      $count--;\n    }\n    if($count == 0) {\n      $max_length = max($max_length, $i+1);\n    }\n  }\n  return $max_length;\n}\n\n$string = '10010001';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122964,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpybi40x19.php:27\nStack trace:\n#0 /tmp/tmpybi40x19.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpybi40x19.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
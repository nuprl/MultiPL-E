{
  "name": "mbpp_401_add_nested_tuples",
  "language": "php",
  "prompt": "<?php\n// Write a function to perform index wise addition of tuple elements in the given two nested tuples.\nfunction add_nested_tuples($test_tup1, $test_tup2) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_401_add_nested_tuples.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return add_nested_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1, 3), array(4, 5), array(2, 9), array(1, 10)), array(array(6, 7), array(3, 9), array(1, 1), array(7, 3))) !== array(array(7, 10), array(7, 14), array(3, 10), array(8, 13))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(2, 4), array(5, 6), array(3, 10), array(2, 11)), array(array(7, 8), array(4, 10), array(2, 2), array(8, 4))) !== array(array(9, 12), array(9, 16), array(5, 12), array(10, 15))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(3, 5), array(6, 7), array(4, 11), array(3, 12)), array(array(8, 9), array(5, 11), array(3, 3), array(9, 5))) !== array(array(11, 14), array(11, 18), array(7, 14), array(12, 17))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    $len1 = count($test_tup1);\n    $len2 = count($test_tup2);\n    $len = $len1 > $len2 ? $len1 : $len2;\n    for ($i = 0; $i < $len; $i++) {\n        $result[$i] = $test_tup1[$i] + $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3, 4);\n$test_tup2 = array(5, 6, 7, 8);\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2), array(3, 4));\n$test_tup2 = array(array(5, 6), array(7, 8));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[] = $test_tup1[$i] + $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3, 4);\n$test_tup2 = array(5, 6, 7, 8);\n\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\necho \"The original tuple 1 is :\\n\";\necho \"(\";\nfor ($i = 0; $i < count($test_tup1); $i++) {\n    echo \"(\";\n    for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n        echo $test_tup1[$i][$j];\n        if ($j != count($test_tup1[$i]) - 1) {\n            echo \", \";\n        }\n    }\n    echo \")\";\n    if ($i != count($test_tup1) - 1) {\n        echo \", \";\n    }\n}\necho \")\\n\";\necho \"The original tuple 2 is :\\n\";\necho \"(\";\nfor ($i = 0; $i < count($test_tup2); $i++) {\n    echo \"(\";\n    for ($j = 0; $j < count($test_tup2[$i]); $j++) {\n        echo $test_tup2[$i][$j];\n        if ($j != count($test_tup2[$i]) - 1) {\n            echo \", \";\n        }\n    }\n    echo \")\";\n    if ($i != count($test_tup",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\necho \"The original tuple1: \";\necho \"<br>\";\necho json_encode($test_tup1);\necho \"<br>\";\necho \"The original tuple2: \";\necho \"<br>\";\necho json_encode($test_tup2);\necho \"<br>\";\necho \"The new tuple after adding the two tuples: \";\necho \"<br>\";\necho json_encode($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2), array(3, 4));\n$test_tup2 = array(array(5, 6), array(7, 8));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(7, 8, 9), array(10, 11, 12));\n\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2), array(3, 4));\n$test_tup2 = array(array(5, 6), array(7, 8));\n\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(7, 8, 9), array(10, 11, 12));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $res = array();\n    for($i=0; $i<count($test_tup1); $i++) {\n        $res[$i] = array();\n        for($j=0; $j<count($test_tup1[$i]); $j++) {\n            $res[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $res;\n}\n\n$test_tup1 = array(array(1,2,3),array(4,5,6));\n$test_tup2 = array(array(1,2,3),array(4,5,6));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(7, 8, 9), array(10, 11, 12));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2), array(3, 4));\n$test_tup2 = array(array(5, 6), array(7, 8));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < sizeof($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < sizeof($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = [];\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = [];\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\n$test_tup2 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2), array(3, 4));\n$test_tup2 = array(array(5, 6), array(7, 8));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));\n",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n$test_tup2 = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    $len1 = count($test_tup1);\n    $len2 = count($test_tup2);\n    if ($len1 != $len2) {\n        echo \"Length of tuples are not equal\";\n    }\n    else {\n        for ($i = 0; $i < $len1; $i++) {\n            $len3 = count($test_tup1[$i]);\n            $len4 = count($test_tup2[$i]);\n            if ($len3 != $len4) {\n                echo \"Length of tuples are not equal\";\n            }\n            else {\n                $temp = array();\n                for ($j = 0; $j < $len3; $j++) {\n                    $temp[$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n                }\n                $result[$i] = $temp;\n            }\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(7, 8, 9), array(10, 11, 12));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    $len1 = count($test_tup1);\n    $len2 = count($test_tup2);\n    $len = min($len1, $len2);\n    for ($i = 0; $i < $len; $i++) {\n        $result[$i] = $test_tup1[$i] + $test_tup2[$i];\n    }\n    return $result;\n}\n$test_tup1 = array(1, 2, 3, 4, 5);\n$test_tup2 = array(1, 2, 3, 4, 5);\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n$test_tup2 = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n$test_tup2 = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\nprint_r(add_nested_tuples($test_tup1, $test_tup2));\n",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(\n    array(\n        1,\n        2,\n        3,\n    ),\n    array(\n        4,\n        5,\n        6,\n    ),\n    array(\n        7,\n        8,\n        9,\n    ),\n);\n$test_tup2 = array(\n    array(\n        1,\n        2,\n        3,\n    ),\n    array(\n        4,\n        5,\n        6,\n    ),\n    array(\n        7,\n        8,\n        9,\n    ),\n);\n\nprint_r(add_nested_tuples($test_tup1, $test_tup2));\n",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n$test_tup2 = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(7, 8, 9), array(10, 11, 12));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);\n",
    "    $res = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $res[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $res[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $res;\n}\n$test_tup1 = array(array(1, 2), array(3, 4));\n$test_tup2 = array(array(5, 6), array(7, 8));\n$res = add_nested_tuples($test_tup1, $test_tup2);\necho \"The original nested tuples are:<br>\";\necho \"(\";\nfor ($i = 0; $i < count($test_tup1); $i++) {\n    echo \"(\";\n    for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n        echo $test_tup1[$i][$j];\n        if ($j != count($test_tup1[$i]) - 1) {\n            echo \", \";\n        }\n    }\n    echo \")\";\n    if ($i != count($test_tup1) - 1) {\n        echo \", \";\n    }\n}\necho \")<br>\";\necho \"(\";\nfor ($i = 0; $i < count($test_tup2); $i++) {\n    echo \"(\";\n    for ($j = 0; $j < count($test_tup2[$i]); $j++) {\n        echo $test_tup2[$i][$j];\n        if ($j != count($test_tup2[$i]) - 1) {\n            echo \", \";\n        }\n    }\n    echo \")\";\n    if ($i != count($test_tup2) - 1) {\n        echo \", \";\n    }\n}\necho \")<br>\";\necho \"The resultant nested tuple",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2), array(3, 4));\n$test_tup2 = array(array(5, 6), array(7, 8));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n$test_tup2 = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = $test_tup1[$i] + $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3, 4);\n$test_tup2 = array(5, 6, 7, 8);\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for($i=0; $i<count($test_tup1); $i++) {\n        $result[$i] = array();\n        for($j=0; $j<count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1,2,3), array(4,5,6), array(7,8,9));\n$test_tup2 = array(array(1,2,3), array(4,5,6), array(7,8,9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);\n",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2), array(3, 4), array(5, 6));\n$test_tup2 = array(array(7, 8), array(9, 10), array(11, 12));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\necho \"The original nested tuples are:<br>\";\necho \"(\";\nfor ($i = 0; $i < count($test_tup1); $i++) {\n    echo \"(\";\n    for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n        echo $test_tup1[$i][$j];\n        if ($j != count($test_tup1[$i]) - 1) {\n            echo \", \";\n        }\n    }\n    echo \")\";\n    if ($i != count($test_tup1) - 1) {\n        echo \", \";\n    }\n}\necho \")<br>\";\necho \"(\";\nfor ($i = 0; $i < count($test_tup2); $i++) {\n    echo \"(\";\n    for ($j = 0; $j < count($test_tup2[$i]); $j++) {\n        echo $test_tup2[$i][$j];\n        if ($j != count($test_tup2[$i]) - 1) {\n            echo \", \";\n        }\n    }\n    echo \")\";\n    if ($i != count($test_tup2) - 1) {\n       ",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $res = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $res[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $res[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $res;\n}\n$test_tup1 = array(array(1, 2), array(3, 4));\n$test_tup2 = array(array(1, 2), array(3, 4));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2), array(3, 4));\n$test_tup2 = array(array(5, 6), array(7, 8));\n$result = add_nested_tuples($test_tup1, $test_tup2);\necho \"The original nested tuples are:<br>\";\necho \"(\";\nfor ($i = 0; $i < count($test_tup1); $i++) {\n    echo \"(\";\n    for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n        echo $test_tup1[$i][$j];\n        if ($j != count($test_tup1[$i]) - 1)\n            echo \", \";\n    }\n    echo \")\";\n    if ($i != count($test_tup1) - 1)\n        echo \", \";\n}\necho \")<br>\";\necho \"(\";\nfor ($i = 0; $i < count($test_tup2); $i++) {\n    echo \"(\";\n    for ($j = 0; $j < count($test_tup2[$i]); $j++) {\n        echo $test_tup2[$i][$j];\n        if ($j != count($test_tup2[$i]) - 1)\n            echo \", \";\n    }\n    echo \")\";\n    if ($i != count($test_tup2) - 1)\n        echo \", \";\n}\necho \")<br>\";\necho \"The resultant nested tuple is:<br>\";\necho \"(\";\nfor ($i =",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[] = $test_tup1[$i] + $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3, 4);\n$test_tup2 = array(5, 6, 7, 8);\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2), array(3, 4));\n$test_tup2 = array(array(5, 6), array(7, 8));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6));\n\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[] = $test_tup1[$i] + $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3, 4);\n$test_tup2 = array(5, 6, 7, 8);\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(7, 8, 9), array(10, 11, 12));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $res = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $res[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $res[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $res;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(7, 8, 9), array(10, 11, 12));\n$res = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($res);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2), array(3, 4));\n$test_tup2 = array(array(5, 6), array(7, 8));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2), array(3, 4));\n$test_tup2 = array(array(5, 6), array(7, 8));\n\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n$test_tup2 = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    $len1 = count($test_tup1);\n    $len2 = count($test_tup2);\n    if ($len1 != $len2) {\n        echo \"Tuples are not of same length\";\n        return;\n    }\n    for ($i = 0; $i < $len1; $i++) {\n        $len_nest1 = count($test_tup1[$i]);\n        $len_nest2 = count($test_tup2[$i]);\n        if ($len_nest1 != $len_nest2) {\n            echo \"Tuples are not of same length\";\n            return;\n        }\n        $temp = array();\n        for ($j = 0; $j < $len_nest1; $j++) {\n            $temp[$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n        $result[$i] = $temp;\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(7, 8, 9), array(10, 11, 12));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\necho \"The original tuple1: \";\necho \"<br>\";\necho \"(\";\nfor ($i = 0; $i < count($test_tup1); $i++) {\n    echo \"(\";\n    for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n        echo $test_tup1[$i][$j];\n        if ($j < count($test_tup1[$i]) - 1) {\n            echo \", \";\n        }\n    }\n    echo \")\";\n    if ($i < count($test_tup1) - 1) {\n        echo \", \";\n    }\n}\necho \")\";\necho \"<br>\";\necho \"The original tuple2: \";\necho \"<br>\";\necho \"(\";\nfor ($i = 0; $i < count($test_tup2); $i++) {\n    echo \"(\";\n    for ($j = 0; $j < count($test_tup2[$i]); $j++) {\n        echo $test_tup2[$i][$j];\n        if ($j < count($test_tup2[$i]) - 1) {\n            echo \", \";\n        }\n    }\n    echo \")",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6));\n$result = add_nested_tuples($test_tup1, $test_tup2);\necho \"The original tuple 1 is: \";\necho \"<br>\";\necho \"(\";\nfor ($i = 0; $i < count($test_tup1); $i++) {\n    echo \"(\";\n    for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n        echo $test_tup1[$i][$j];\n        if ($j != count($test_tup1[$i]) - 1) {\n            echo \",\";\n        }\n    }\n    echo \")\";\n    if ($i != count($test_tup1) - 1) {\n        echo \",\";\n    }\n}\necho \")\";\necho \"<br>\";\necho \"The original tuple 2 is: \";\necho \"<br>\";\necho \"(\";\nfor ($i = 0; $i < count($test_tup2); $i++) {\n    echo \"(\";\n    for ($j = 0; $j < count($test_tup2[$i]); $j++) {\n        echo $test_tup2[$i][$j];\n        if ($j != count($test_tup2[$i]) - 1) {\n            echo \",\";\n        }\n    }\n    echo \")\";\n    if ($i != count($test_tup2",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(7, 8, 9), array(10, 11, 12));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < sizeof($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < sizeof($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2), array(3, 4));\n$test_tup2 = array(array(5, 6), array(7, 8));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));\n",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2), array(3, 4));\n$test_tup2 = array(array(5, 6), array(7, 8));\n\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = [];\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = [];\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = [[1, 2], [3, 4], [5, 6]];\n$test_tup2 = [[1, 2], [3, 4], [5, 6]];\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\necho \"The original nested tuples are :\\n\";\necho \"( \";\nfor ($i = 0; $i < count($test_tup1); $i++) {\n    echo \"(\";\n    for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n        echo $test_tup1[$i][$j];\n        if ($j != count($test_tup1[$i]) - 1) {\n            echo \", \";\n        }\n    }\n    echo \")\";\n    if ($i != count($test_tup1) - 1) {\n        echo \", \";\n    }\n}\necho \" )\\n\";\necho \"The original nested tuples are :\\n\";\necho \"( \";\nfor ($i = 0; $i < count($test_tup2); $i++) {\n    echo \"(\";\n    for ($j = 0; $j < count($test_tup2[$i]); $j++) {\n        echo $test_tup2[$i][$j];\n        if ($j != count($test_tup2[$i]) - 1) {\n            echo \", \";\n        }\n    }\n    echo \")\";\n    if ($i != count($test",
    "    $res = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $res[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $res[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $res;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$res = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($res);",
    "    $res_tup = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $res_tup[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $res_tup[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $res_tup;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6));\n$res_tup = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($res_tup);",
    "    $res_tup = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $res_tup[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $res_tup[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $res_tup;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(7, 8, 9), array(10, 11, 12));\n$res_tup = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($res_tup);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(7, 8, 9), array(10, 11, 12));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2), array(3, 4));\n$test_tup2 = array(array(5, 6), array(7, 8));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = $test_tup1[$i] + $test_tup2[$i];\n    }\n    return $result;\n}\n$test_tup1 = array(1, 2, 3, 4);\n$test_tup2 = array(5, 6, 7, 8);\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\necho \"The original tuple 1: \";\necho \"<br>\";\necho \"[\";\nfor ($i = 0; $i < count($test_tup1); $i++) {\n    echo \"[\";\n    for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n        echo $test_tup1[$i][$j];\n        if ($j != count($test_tup1[$i]) - 1) {\n            echo \", \";\n        }\n    }\n    echo \"]\";\n    if ($i != count($test_tup1) - 1) {\n        echo \", \";\n    }\n}\necho \"]\";\necho \"<br>\";\necho \"The original tuple 2: \";\necho \"<br>\";\necho \"[\";\nfor ($i = 0; $i < count($test_tup2); $i++) {\n    echo \"[\";\n    for ($j = 0; $j < count($test_tup2[$i]); $j++) {\n        echo $test_tup2[$i][$j];\n        if ($j != count($test_tup2[$i]) - 1) {\n            echo \", \";\n        }\n    }\n    echo \"]\";\n    if",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n\n$test_tup2 = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2), array(3, 4));\n$test_tup2 = array(array(5, 6), array(7, 8));\n$result = add_nested_tuples($test_tup1, $test_tup2);\necho \"The original nested tuples are :\\n\";\necho \"(\", $test_tup1[0][0], \", \", $test_tup1[0][1], \")\\n\";\necho \"(\", $test_tup1[1][0], \", \", $test_tup1[1][1], \")\\n\";\necho \"(\", $test_tup2[0][0], \", \", $test_tup2[0][1], \")\\n\";\necho \"(\", $test_tup2[1][0], \", \", $test_tup2[1][1], \")\\n\";\necho \"The new nested tuple after addition is :\\n\";\necho \"(\", $result[0][0], \", \", $result[0][1], \")\\n\";\necho \"(\", $result[1][0], \", \", $result[1][1], \")\\n\";",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\necho \"The original nested tuples are :\\n\";\necho \"( \";\nfor ($i = 0; $i < count($test_tup1); $i++) {\n    echo \"( \";\n    for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n        echo $test_tup1[$i][$j];\n        if ($j != count($test_tup1[$i]) - 1)\n            echo \", \";\n    }\n    echo \" )\";\n    if ($i != count($test_tup1) - 1)\n        echo \", \";\n}\necho \" )\\n\";\necho \"( \";\nfor ($i = 0; $i < count($test_tup2); $i++) {\n    echo \"( \";\n    for ($j = 0; $j < count($test_tup2[$i]); $j++) {\n        echo $test_tup2[$i][$j];\n        if ($j != count($test_tup2[$i]) - 1)\n            echo \", \";\n    }\n    echo \" )\";\n    if ($i != count($test_tup2) - 1)\n        echo \", \";\n}\necho \" )\\n\";\necho",
    "    $result = array();\n    for ($i = 0; $i < sizeof($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < sizeof($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(7, 8, 9), array(10, 11, 12));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\necho \"The original tuple 1 is: \";\necho \"<br>\";\necho json_encode($test_tup1);\necho \"<br>\";\necho \"The original tuple 2 is: \";\necho \"<br>\";\necho json_encode($test_tup2);\necho \"<br>\";\necho \"The added tuple is: \";\necho \"<br>\";\necho json_encode(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < sizeof($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < sizeof($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(7, 8, 9), array(10, 11, 12));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\necho \"The original tuple 1 is :\\n\";\necho json_encode($test_tup1);\necho \"\\nThe original tuple 2 is :\\n\";\necho json_encode($test_tup2);\necho \"\\nThe resultant tuple is :\\n\";\necho json_encode($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < sizeof($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < sizeof($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2), array(3, 4));\n$test_tup2 = array(array(5, 6), array(7, 8));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(7, 8, 9), array(10, 11, 12));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n$test_tup2 = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    $len1 = count($test_tup1);\n    $len2 = count($test_tup2);\n    $len = $len1 > $len2 ? $len1 : $len2;\n    for ($i = 0; $i < $len; $i++) {\n        $result[$i] = array();\n        $len3 = count($test_tup1[$i]);\n        $len4 = count($test_tup2[$i]);\n        $len5 = $len3 > $len4 ? $len3 : $len4;\n        for ($j = 0; $j < $len5; $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\necho \"The original tuple 1 is: \";\necho \"<br>\";\necho json_encode($test_tup1);\necho \"<br>\";\necho \"The original tuple 2 is: \";\necho \"<br>\";\necho json_encode($test_tup2);\necho \"<br>\";\necho \"The resultant tuple is: \";\necho \"<br>\";\necho json_encode($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n\nprint_r(add_nested_tuples($test_tup1, $test_tup2));\n",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(7, 8, 9), array(10, 11, 12));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2), array(3, 4));\n$test_tup2 = array(array(5, 6), array(7, 8));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2), array(3, 4));\n$test_tup2 = array(array(5, 6), array(7, 8));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n$test_tup2 = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(7, 8, 9), array(10, 11, 12));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));\n",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = $test_tup1[$i] + $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3, 4, 5);\n$test_tup2 = array(6, 7, 8, 9, 10);\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(7, 8, 9), array(10, 11, 12));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $res_tup = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $res_tup[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $res_tup[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $res_tup;\n}\n$test_tup1 = array(array(1, 2), array(3, 4));\n$test_tup2 = array(array(5, 6), array(7, 8));\n$res_tup = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($res_tup);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < sizeof($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < sizeof($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(7, 8, 9), array(10, 11, 12));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for($i=0; $i<count($test_tup1); $i++) {\n        $result[$i] = $test_tup1[$i] + $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3, 4, 5);\n$test_tup2 = array(6, 7, 8, 9, 10);\n\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\necho \"The original tuple 1 is :\\n\";\necho \"[\";\nfor ($i = 0; $i < count($test_tup1); $i++) {\n    echo \"[\";\n    for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n        echo $test_tup1[$i][$j];\n        if ($j != count($test_tup1[$i]) - 1) {\n            echo \", \";\n        }\n    }\n    echo \"]\";\n    if ($i != count($test_tup1) - 1) {\n        echo \", \";\n    }\n}\necho \"]\\n\";\necho \"The original tuple 2 is :\\n\";\necho \"[\";\nfor ($i = 0; $i < count($test_tup2); $i++) {\n    echo \"[\";\n    for ($j = 0; $j < count($test_tup2[$i]); $j++) {\n        echo $test_tup2[$i][$j];\n        if ($j != count($test_tup2[$i]) - 1) {\n            echo \", \";\n        }\n    }\n    echo \"]\";\n    if ($i != count($test_tup2)",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\necho \"The original nested tuples are:<br>\";\necho \"(1, 2, 3), (4, 5, 6), (7, 8, 9)<br>\";\necho \"(1, 2, 3), (4, 5, 6), (7, 8, 9)<br>\";\necho \"The result after adding the nested tuples is:<br>\";\nfor ($i = 0; $i < count($result); $i++) {\n    for ($j = 0; $j < count($result[$i]); $j++) {\n        echo $result[$i][$j] . \" \";\n    }\n    echo \"<br>\";\n}",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = $test_tup1[$i] + $test_tup2[$i];\n    }\n    return $result;\n}\n$test_tup1 = array(1, 2, 3, 4, 5);\n$test_tup2 = array(1, 2, 3, 4, 5);\necho \"The original tuple is : \";\necho \"(\";\nforeach ($test_tup1 as $key => $value) {\n    echo $value;\n    if ($key != count($test_tup1) - 1) {\n        echo \", \";\n    }\n}\necho \")\";\necho \"<br>\";\necho \"The original tuple is : \";\necho \"(\";\nforeach ($test_tup2 as $key => $value) {\n    echo $value;\n    if ($key != count($test_tup2) - 1) {\n        echo \", \";\n    }\n}\necho \")\";\necho \"<br>\";\n$result = add_nested_tuples($test_tup1, $test_tup2);\necho \"The new tuple is : \";\necho \"(\";\nforeach ($result as $key => $value) {\n    echo $value;\n    if ($key != count($result) - 1) {\n        echo \", \";\n    }\n}\necho \")\";",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\necho \"The original nested tuple 1 is: \";\necho \"<br>\";\necho json_encode($test_tup1);\necho \"<br>\";\necho \"The original nested tuple 2 is: \";\necho \"<br>\";\necho json_encode($test_tup2);\necho \"<br>\";\necho \"The added nested tuple is: \";\necho \"<br>\";\necho json_encode(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n$test_tup2 = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));\n",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    $tup1_len = count($test_tup1);\n    $tup2_len = count($test_tup2);\n    if ($tup1_len != $tup2_len) {\n        return \"Tuples are not of same length\";\n    }\n    for ($i = 0; $i < $tup1_len; $i++) {\n        $tup1_len1 = count($test_tup1[$i]);\n        $tup2_len2 = count($test_tup2[$i]);\n        if ($tup1_len1 != $tup2_len2) {\n            return \"Tuples are not of same length\";\n        }\n        $temp = array();\n        for ($j = 0; $j < $tup1_len1; $j++) {\n            $temp[$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n        $result[$i] = $temp;\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(7, 8, 9), array(10, 11, 12));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for($i = 0; $i < count($test_tup1); $i++) {\n        $result[] = $test_tup1[$i] + $test_tup2[$i];\n    }\n    return $result;\n}\n$test_tup1 = array(1, 2, 3, 4, 5);\n$test_tup2 = array(6, 7, 8, 9, 10);\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(7, 8, 9), array(10, 11, 12));\n\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2), array(3, 4));\n$test_tup2 = array(array(5, 6), array(7, 8));\n$result = add_nested_tuples($test_tup1, $test_tup2);\necho \"The original nested tuples are:<br>\";\necho \"(\";\nfor ($i = 0; $i < count($test_tup1); $i++) {\n    echo \"(\";\n    for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n        echo $test_tup1[$i][$j];\n        if ($j != count($test_tup1[$i]) - 1) {\n            echo \", \";\n        }\n    }\n    echo \")\";\n    if ($i != count($test_tup1) - 1) {\n        echo \", \";\n    }\n}\necho \")<br>\";\necho \"(\";\nfor ($i = 0; $i < count($test_tup2); $i++) {\n    echo \"(\";\n    for ($j = 0; $j < count($test_tup2[$i]); $j++) {\n        echo $test_tup2[$i][$j];\n        if ($j != count($test_tup2[$i]) - 1) {\n            echo \", \";\n        }\n    }\n    echo \")\";\n    if ($i != count($test_tup2) - 1) {\n        echo \", \";\n    }\n}\necho \")<br>\";\necho \"The resultant nested tuple",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(\n    array(\n        1,\n        2,\n        3,\n    ),\n    array(\n        4,\n        5,\n        6,\n    ),\n    array(\n        7,\n        8,\n        9,\n    ),\n);\n$test_tup2 = array(\n    array(\n        1,\n        2,\n        3,\n    ),\n    array(\n        4,\n        5,\n        6,\n    ),\n    array(\n        7,\n        8,\n        9,\n    ),\n);\n\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = $test_tup1[$i] + $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3, 4);\n$test_tup2 = array(5, 6, 7, 8);\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(7, 8, 9), array(10, 11, 12));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = $test_tup1[$i] + $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3, 4, 5);\n$test_tup2 = array(6, 7, 8, 9, 10);\n\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for($i = 0; $i < count($test_tup1); $i++) {\n        $result[] = $test_tup1[$i] + $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3, 4, 5);\n$test_tup2 = array(6, 7, 8, 9, 10);\n\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[] = $test_tup1[$i] + $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3);\n$test_tup2 = array(4, 5, 6);\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = [];\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = [];\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = [[1, 2], [3, 4], [5, 6]];\n$test_tup2 = [[7, 8], [9, 10], [11, 12]];\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[] = $test_tup1[$i] + $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3, 4, 5);\n$test_tup2 = array(6, 7, 8, 9, 10);\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2), array(3, 4));\n$test_tup2 = array(array(5, 6), array(7, 8));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2), array(3, 4));\n$test_tup2 = array(array(5, 6), array(7, 8));\n\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $res = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $res[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $res[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $res;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\necho \"The original nested tuples are :\\n\";\necho \"( \";\nfor ($i = 0; $i < count($test_tup1); $i++) {\n    echo \"(\";\n    for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n        echo $test_tup1[$i][$j];\n        if ($j != count($test_tup1[$i]) - 1)\n            echo \", \";\n    }\n    echo \")\";\n    if ($i != count($test_tup1) - 1)\n        echo \", \";\n}\necho \" )\\n\";\necho \"( \";\nfor ($i = 0; $i < count($test_tup2); $i++) {\n    echo \"(\";\n    for ($j = 0; $j < count($test_tup2[$i]); $j++) {\n        echo $test_tup2[$i][$j];\n        if ($j != count($test_tup2[$i]) - 1)\n            echo \", \";\n    }\n    echo \")\";\n    if ($i != count($test_tup2) - 1)\n        echo \", \";\n}\necho \" )\\n\";\necho",
    "    $result = array();\n    $len1 = count($test_tup1);\n    $len2 = count($test_tup2);\n    $len = $len1 > $len2 ? $len1 : $len2;\n    for ($i = 0; $i < $len; $i++) {\n        $result[$i] = $test_tup1[$i] + $test_tup2[$i];\n    }\n    return $result;\n}\n$test_tup1 = array(1, 2, 3, 4, 5);\n$test_tup2 = array(6, 7, 8, 9, 10);\n$result = add_nested_tuples($test_tup1, $test_tup2);\necho \"The original tuple 1 is :\\n\";\necho implode(\" \", $test_tup1);\necho \"\\nThe original tuple 2 is :\\n\";\necho implode(\" \", $test_tup2);\necho \"\\nThe resultant tuple is :\\n\";\necho implode(\" \", $result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2), array(3, 4));\n$test_tup2 = array(array(5, 6), array(7, 8));\n\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\necho \"The original nested tuples are :\\n\";\necho \"(\", implode(\", \", $test_tup1[0]), \")\\n\";\necho \"(\", implode(\", \", $test_tup1[1]), \")\\n\";\necho \"(\", implode(\", \", $test_tup1[2]), \")\\n\";\necho \"(\", implode(\", \", $test_tup2[0]), \")\\n\";\necho \"(\", implode(\", \", $test_tup2[1]), \")\\n\";\necho \"(\", implode(\", \", $test_tup2[2]), \")\\n\";\necho \"The addition of the nested tuples is :\\n\";\necho \"(\", implode(\", \", $result[0]), \")\\n\";\necho \"(\", implode(\", \", $result[1]), \")\\n\";\necho \"(\", implode(\", \", $result[2]), \")\\n\";",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(7, 8, 9), array(10, 11, 12));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2), array(3, 4));\n$test_tup2 = array(array(5, 6), array(7, 8));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n$test_tup2 = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[] = $test_tup1[$i] + $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3, 4);\n$test_tup2 = array(5, 6, 7, 8);\n\necho \"The original tuple 1 is: \";\necho \"<br>\";\nprint_r($test_tup1);\necho \"<br>\";\necho \"The original tuple 2 is: \";\necho \"<br>\";\nprint_r($test_tup2);\necho \"<br>\";\necho \"The new tuple is: \";\necho \"<br>\";\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2), array(3, 4));\n$test_tup2 = array(array(5, 6), array(7, 8));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\necho \"The original nested tuple is :\\n\";\necho \"(\";\nfor ($i = 0; $i < count($test_tup1); $i++) {\n    echo \"(\";\n    for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n        echo $test_tup1[$i][$j];\n        if ($j != count($test_tup1[$i]) - 1) {\n            echo \", \";\n        }\n    }\n    echo \")\";\n    if ($i != count($test_tup1) - 1) {\n        echo \", \";\n    }\n}\necho \")\\n\";\necho \"The original nested tuple is :\\n\";\necho \"(\";\nfor ($i = 0; $i < count($test_tup2); $i++) {\n    echo \"(\";\n    for ($j = 0; $j < count($test_tup2[$i]); $j++) {\n        echo $test_tup2[$i][$j];\n        if ($j != count($test_tup2[$i]) - 1) {\n            echo \", \";\n        }\n    }\n    echo \")\";\n    if ($i != count($test_tup2) - 1) {\n        echo \", \";\n    }\n}\necho \")\\n\";\n$",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n",
    "    $res_tup = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $res_tup[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $res_tup[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $res_tup;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6));\n$res_tup = add_nested_tuples($test_tup1, $test_tup2);\necho \"The original tuple is :\\n\";\necho \"(\";\nfor ($i = 0; $i < count($test_tup1); $i++) {\n    echo \"(\";\n    for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n        echo $test_tup1[$i][$j];\n        if ($j != count($test_tup1[$i]) - 1) {\n            echo \", \";\n        }\n    }\n    echo \")\";\n    if ($i != count($test_tup1) - 1) {\n        echo \", \";\n    }\n}\necho \")\\n\";\necho \"The original tuple is :\\n\";\necho \"(\";\nfor ($i = 0; $i < count($test_tup2); $i++) {\n    echo \"(\";\n    for ($j = 0; $j < count($test_tup2[$i]); $j++) {\n        echo $test_tup2[$i][$j];\n        if ($j != count($test_tup2[$i]) - 1) {\n            echo \", \";\n        }\n    }\n    echo \")\";\n    if ($i != count($test_tup2) -",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2), array(3, 4));\n$test_tup2 = array(array(5, 6), array(7, 8));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $res = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $res[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $res[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $res;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n\n$res = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($res);",
    "    $result = array();\n    for($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(7, 8, 9), array(10, 11, 12));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(7, 8, 9), array(10, 11, 12));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(7, 8, 9), array(10, 11, 12));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(9, 8, 7), array(6, 5, 4), array(3, 2, 1));\n$result = add_nested_tuples($test_tup1, $test_tup2);\necho \"The original nested tuples are:<br>\";\necho \"Tuple 1:<br>\";\necho \"( \";\nfor ($i = 0; $i < count($test_tup1); $i++) {\n    echo \"(\";\n    for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n        echo $test_tup1[$i][$j];\n        if ($j != count($test_tup1[$i]) - 1) {\n            echo \", \";\n        }\n    }\n    echo \")\";\n    if ($i != count($test_tup1) - 1) {\n        echo \", \";\n    }\n}\necho \" )<br>\";\necho \"Tuple 2:<br>\";\necho \"( \";\nfor ($i = 0; $i < count($test_tup2); $i++) {\n    echo \"(\";\n    for ($j = 0; $j < count($test_tup2[$i]); $j++) {\n        echo $test_tup2[$i][$j];\n        if ($j != count($test_tup2[$i]) - 1) {\n            echo \", \";\n        }\n    }\n    echo",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[] = $test_tup1[$i] + $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3);\n$test_tup2 = array(4, 5, 6);\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(7, 8, 9), array(10, 11, 12));\n$result = add_nested_tuples($test_tup1, $test_tup2);\necho \"The original tuple is: \";\necho \"<br>\";\necho \"(\";\nfor ($i = 0; $i < count($test_tup1); $i++) {\n    echo \"(\";\n    for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n        echo $test_tup1[$i][$j];\n        if ($j != count($test_tup1[$i]) - 1) {\n            echo \", \";\n        }\n    }\n    echo \")\";\n    if ($i != count($test_tup1) - 1) {\n        echo \", \";\n    }\n}\necho \")\";\necho \"<br>\";\necho \"The second tuple is: \";\necho \"<br>\";\necho \"(\";\nfor ($i = 0; $i < count($test_tup2); $i++) {\n    echo \"(\";\n    for ($j = 0; $j < count($test_tup2[$i]); $j++) {\n        echo $test_tup2[$i][$j];\n        if ($j != count($test_tup2[$i]) - 1) {\n            echo \", \";\n        }\n    }\n    echo \")\";\n    if ($i != count($test_tup2)",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2), array(3, 4));\n$test_tup2 = array(array(5, 6), array(7, 8));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2), array(3, 4));\n$test_tup2 = array(array(5, 6), array(7, 8));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\necho \"The original tuple 1 is: \";\necho \"<br>\";\necho \"<pre>\";\nprint_r($test_tup1);\necho \"</pre>\";\necho \"The original tuple 2 is: \";\necho \"<br>\";\necho \"<pre>\";\nprint_r($test_tup2);\necho \"</pre>\";\necho \"The resultant tuple is: \";\necho \"<br>\";\necho \"<pre>\";\nprint_r($result);\necho \"</pre>\";",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(7, 8, 9), array(10, 11, 12));\n$result = add_nested_tuples($test_tup1, $test_tup2);\necho \"The original nested tuples are :\\n\";\necho \"(\", $test_tup1[0][0], \", \", $test_tup1[0][1], \", \", $test_tup1[0][2], \")\\n\";\necho \"(\", $test_tup1[1][0], \", \", $test_tup1[1][1], \", \", $test_tup1[1][2], \")\\n\";\necho \"(\", $test_tup2[0][0], \", \", $test_tup2[0][1], \", \", $test_tup2[0][2], \")\\n\";\necho \"(\", $test_tup2[1][0], \", \", $test_tup2[1][1], \", \", $test_tup2[1][2], \")\\n\";\necho \"The new nested tuple after index wise addition is :\\n\";\necho \"(\", $result[0][0], \", \", $result[0][1], \", \", $result[0][2], \")\\n\";\necho \"(\", $result[1][0], \", \", $result[1][1], \", \", $result[1][2], \")\\n\";",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\necho \"The original tuple 1: \";\necho \"<br>\";\necho json_encode($test_tup1);\necho \"<br>\";\necho \"The original tuple 2: \";\necho \"<br>\";\necho json_encode($test_tup2);\necho \"<br>\";\necho \"The resultant tuple: \";\necho \"<br>\";\necho json_encode($result);",
    "    $res_tup = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $res_tup[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $res_tup[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $res_tup;\n}\n\n$test_tup1 = array(array(1, 2), array(3, 4));\n$test_tup2 = array(array(5, 6), array(7, 8));\n$res_tup = add_nested_tuples($test_tup1, $test_tup2);\necho \"The resultant nested tuple is :\\n\";\necho \"(\";\nfor ($i = 0; $i < count($res_tup); $i++) {\n    echo \"(\";\n    for ($j = 0; $j < count($res_tup[$i]); $j++) {\n        echo $res_tup[$i][$j];\n        if ($j != count($res_tup[$i]) - 1)\n            echo \", \";\n    }\n    echo \")\";\n    if ($i != count($res_tup) - 1)\n        echo \", \";\n}\necho \")\\n\";",
    "    $result = array();\n    for ($i = 0; $i < sizeof($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < sizeof($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$test_tup2 = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $tup_len = count($test_tup1);\n    $result = array();\n    for ($i = 0; $i < $tup_len; $i++) {\n        $result[$i] = $test_tup1[$i] + $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3, 4);\n$test_tup2 = array(5, 6, 7, 8);\n$result = add_nested_tuples($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = array();\n        for ($j = 0; $j < count($test_tup1[$i]); $j++) {\n            $result[$i][$j] = $test_tup1[$i][$j] + $test_tup2[$i][$j];\n        }\n    }\n    return $result;\n}\n$test_tup1 = array(array(1, 2, 3), array(4, 5, 6));\n$test_tup2 = array(array(7, 8, 9), array(10, 11, 12));\nprint_r(add_nested_tuples($test_tup1, $test_tup2));"
  ]
}
{
  "name": "mbpp_257_swap_numbers",
  "language": "php",
  "prompt": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_257_swap_numbers.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n\t$c = $a;\n\t$a = $b;\n\t$b = $c;\n\treturn [$a, $b];\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n  return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n\treturn array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n\treturn array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n\t$temp = $a;\n\t$a = $b;\n\t$b = $temp;\n\treturn array($a, $b);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    $tuple = array($b, $a);\n    return $tuple;\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n\treturn array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    $tuple = array($b, $a);\n    return $tuple;\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n\t$tuple = array($b, $a);\n\treturn $tuple;\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n\t$c = $a;\n\t$a = $b;\n\t$b = $c;\n\treturn array($a, $b);\n}\n\n$a = 1;\n$b = 2;\n$c = swap_numbers($a, $b);\necho $c[0] . \" \" . $c[1];\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "2 1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n\t$tuple = array($b, $a);\n\treturn $tuple;\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return [$b, $a];\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n\t$tuple = array($b, $a);\n\treturn $tuple;\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    $tuple = array($b, $a);\n    return $tuple;\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n  return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\n$a = 1;\n$b = 2;\n$result = swap_numbers($a, $b);\necho $result[0] . \" \" . $result[1];\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "2 1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n\treturn array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n  $tuple = array($b, $a);\n  return $tuple;\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n\treturn array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n\treturn array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n\treturn array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n\treturn array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    $temp = $a;\n    $a = $b;\n    $b = $temp;\n    return array($a, $b);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n\treturn array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n\treturn array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n\treturn array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    $c = $a;\n    $a = $b;\n    $b = $c;\n    return array($a, $b);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n\treturn array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n\t$a = $a + $b;\n\t$b = $a - $b;\n\t$a = $a - $b;\n\treturn array($a, $b);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n  return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n  return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n\treturn array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n\treturn array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n  return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n\treturn array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    $temp = $a;\n    $a = $b;\n    $b = $temp;\n    return array($a, $b);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n  return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n\treturn array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n  return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nfunction swap_numbers($a, $b) {\n    return array($b, $a);\n}\n\nfunction candidate(...$args) {\n    return swap_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10, 20) !== array(20, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 17) !== array(17, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== array(200, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
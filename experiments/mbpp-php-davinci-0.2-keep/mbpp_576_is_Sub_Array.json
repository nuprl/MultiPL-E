{
  "name": "mbpp_576_is_Sub_Array",
  "language": "php",
  "prompt": "<?php\n// Write a python function to check whether a list is sublist of another or not.\nfunction is_Sub_Array($A, $B) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_576_is_Sub_Array.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$B = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$C = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$D = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$E = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$F = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$G = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$H = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$I = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$J = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$K = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$L = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$M = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$N = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$O = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$P = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$Q = array(",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == $m)\n            return 0;\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($A, $B))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 3);\n\nif (is_Sub_Array($B, $A)) {\n    echo \"Array B is sub array of Array A\";\n} else {\n    echo \"Array B is not sub array of Array A\";\n}\n\necho \"<br>\";\n\nif (is_Sub_Array($C, $A)) {\n    echo \"Array C is sub array of Array A\";\n} else {\n    echo \"Array C is not sub array of Array A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 3);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array B is subarray of Array A\";\n} else {\n    echo \"Array B is not subarray of Array A\";\n}\necho \"\\n\";\nif (is_Sub_Array($C, $A)) {\n    echo \"Array C is subarray of Array A\";\n} else {\n    echo \"Array C is not subarray of Array A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return false;\n        }\n    }\n    return true;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n$C = array(2, 3, 4, 5);\n$D = array(2, 3, 4, 6);\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a sub array of A\";\n} else {\n    echo \"Array B is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"Array C is a sub array of A\";\n} else {\n    echo \"Array C is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $D)) {\n    echo \"Array D is a sub array of A\";\n} else {\n    echo \"Array D is not a sub array of A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 0);\nif (is_Sub_Array($B, $A))\n    echo \"Array B is subarray of Array A\";\nelse\n    echo \"Array B is not subarray of Array A\";\necho \"\\n\";\nif (is_Sub_Array($C, $A))\n    echo \"Array C is subarray of Array A\";\nelse\n    echo \"Array C is not subarray of Array A\";",
    "    $len_A = count($A);\n    $len_B = count($B);\n    if ($len_A > $len_B) {\n        return false;\n    }\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n        }\n        $j++;\n    }\n    if ($i == $len_A) {\n        return true;\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$C = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"A is subarray of B\\n\";\n} else {\n    echo \"A is not subarray of B\\n\";\n}\n\nif (is_Sub_Array($A, $C)) {\n    echo \"A is subarray of C\\n\";\n} else {\n    echo \"A is not subarray of C\\n\";\n}",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 3, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 3);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array B is sub array of Array A\";\n} else {\n    echo \"Array B is not sub array of Array A\";\n}\necho \"<br>\";\nif (is_Sub_Array($C, $A)) {\n    echo \"Array C is sub array of Array A\";\n} else {\n    echo \"Array C is not sub array of Array A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == $m)\n            return 0;\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\nif (is_Sub_Array($A, $B))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $j = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        if ($A[$i] == $B[$j]) {\n            $j++;\n        }\n        if ($j == count($B)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$B = array(1, 2, 3, 4, 5);\n$C = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$D = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$E = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$F = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$G = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$H = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$I = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$J = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$L = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$M = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$N = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$O = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$P = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$Q = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 6);\n$C = array(1, 2, 3, 4, 5, 6);\n$D = array(1, 2, 3, 4, 5, 6);\n$E = array(1, 2, 3, 4, 5, 6);\n$F = array(1, 2, 3, 4, 5, 6);\n$G = array(1, 2, 3, 4, 5, 6);\n$H = array(1, 2, 3, 4, 5, 6);\n$I = array(1, 2, 3, 4, 5, 6);\n$J = array(1, 2, 3, 4, 5, 6);\n$K = array(1, 2, 3, 4, 5, 6);\n$L = array(1, 2, 3, 4, 5, 6);\n$M = array(1, 2, 3, 4, 5, 6);\n$N = array(1, 2, 3, 4, 5, 6);\n$O = array(1, 2, 3, 4, 5, 6);\n$P = array(1, 2, 3, 4, 5, 6);\n$Q = array(1, 2, 3, 4, 5, 6);\n$R = array(1, 2, 3, 4, 5, 6);\n$S = array(1, 2, 3, 4, 5, 6);\n$T = array(1, 2, 3, 4, 5, 6);\n$U = array(1, 2, 3, 4, 5, 6);\n$V = array(1, 2, 3, 4, 5,",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5);\n$C = array(1, 2, 3, 4, 5);\n$D = array(1, 2, 3, 4, 5);\n$E = array(1, 2, 3, 4, 5);\n$F = array(1, 2, 3, 4, 5);\n$G = array(1, 2, 3, 4, 5);\n$H = array(1, 2, 3, 4, 5);\n$I = array(1, 2, 3, 4, 5);\n$J = array(1, 2, 3, 4, 5);\n$K = array(1, 2, 3, 4, 5);\n$L = array(1, 2, 3, 4, 5);\n$M = array(1, 2, 3, 4, 5);\n$N = array(1, 2, 3, 4, 5);\n$O = array(1, 2, 3, 4, 5);\n$P = array(1, 2, 3, 4, 5);\n$Q = array(1, 2, 3, 4, 5);\n$R = array(1, 2, 3, 4, 5);\n$S = array(1, 2, 3, 4, 5);\n$T = array(1, 2, 3, 4, 5);\n$U = array(1, 2, 3, 4, 5);\n$V = array(1, 2, 3, 4, 5);\n$W = array(1, 2, 3, 4, 5);\n$X = array(1, 2, 3, 4, 5);\n$Y = array",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 3);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\n\necho \"<br>\";\n\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a sub array of A\";\n} else {\n    echo \"C is not a sub array of A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $m = count($A);\n    $n = count($B);\n    for ($i = 0; $i < $m; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $n) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(3, 4, 5);\n$C = array(3, 4, 5, 6);\n$D = array(3, 4, 5, 7);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is sub array of A\";\n} else {\n    echo \"B is not sub array of A\";\n}\necho \"\\n\";\n\nif (is_Sub_Array($A, $C)) {\n    echo \"C is sub array of A\";\n} else {\n    echo \"C is not sub array of A\";\n}\necho \"\\n\";\n\nif (is_Sub_Array($A, $D)) {\n    echo \"D is sub array of A\";\n} else {\n    echo \"D is not sub array of A\";\n}\necho \"\\n\";",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3);\n$C = array(1, 2, 4);\n$D = array(1, 2, 3, 4, 5);\n$E = array(1, 2, 3, 4, 5, 6);\n$F = array(1, 2, 3, 4, 5, 6, 7);\n$G = array(1, 2, 3, 4, 5, 6, 7, 8);\n$H = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$I = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$J = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\n$K = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\n$L = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13);\n$M = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14);\n$N = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n$O = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);\n$P = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10",
    "    $i = 0;\n    $j = 0;\n    $k = 0;\n    $flag = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        for ($j = 0; $j < count($B); $j++) {\n            if ($A[$i] == $B[$j]) {\n                $k = $j;\n                $flag = 1;\n                break;\n            }\n        }\n        if ($flag == 1) {\n            for ($j = $k; $j < count($B); $j++) {\n                if ($A[$i] != $B[$j]) {\n                    $flag = 0;\n                    break;\n                }\n                $i++;\n            }\n        }\n    }\n    if ($flag == 1) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"A is a sub array of B\";\n} else {\n    echo \"A is not a sub array of B\";\n}",
    "    $j = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        if ($A[$i] == $B[$j]) {\n            $j++;\n            if ($j == count($B)) {\n                return true;\n            }\n        } else {\n            $j = 0;\n        }\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$B = array(2, 3, 4);\n$C = array(2, 4, 3);\n$D = array(2, 3, 4, 5);\n$E = array(2, 3, 4, 5, 6);\n$F = array(2, 3, 4, 5, 6, 7);\n$G = array(2, 3, 4, 5, 6, 7, 8);\n$H = array(2, 3, 4, 5, 6, 7, 8, 9);\n$I = array(2, 3, 4, 5, 6, 7, 8, 9, 10);\n\necho is_Sub_Array($A, $B) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Sub_Array($A, $C) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Sub_Array($A, $D) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Sub_Array($A, $E) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Sub_Array($A, $F) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Sub_Array($A, $G) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Sub_Array($A, $H) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Sub_Array($A, $I) ? \"Yes\" : \"No\";\necho \"\\n\";\n",
    "    $i = 0;\n    $j = 0;\n    $m = count($A);\n    $n = count($B);\n    while ($i < $m && $j < $n) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $n) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n$C = array(2, 3, 4, 5);\n$D = array(1, 2, 3, 4, 5);\n$E = array(1, 2, 3, 4, 5, 6);\n$F = array(1, 2, 3, 4, 5, 6, 7);\n$G = array(1, 2, 3, 4, 5, 6, 7, 8);\n$H = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$I = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$J = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\n$K = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\n$L = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13);\n$M = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14);\n$N = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n$O = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);\n$P = array(1, 2,",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $j = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        if ($A[$i] == $B[$j]) {\n            $j++;\n            if ($j == count($B)) {\n                return true;\n            }\n        } else {\n            $j = 0;\n        }\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5, 6, 7, 8);\n$B = array(3, 4, 5);\n$C = array(3, 4, 5, 6);\n$D = array(3, 4, 5, 6, 7, 8);\n$E = array(3, 4, 5, 6, 7, 8, 9);\n$F = array(3, 4, 5, 6, 7, 8, 9, 10);\n$G = array(3, 4, 5, 6, 7, 8, 9, 10, 11);\n$H = array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\n$I = array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13);\n$J = array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14);\n$K = array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n$L = array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);\n$M = array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17);\n$N = array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18);\n$O = array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19);\n$P = array(3, 4, 5, 6, 7, 8, 9, 10, 11",
    "    $i = 0;\n    $j = 0;\n    while ($i < sizeof($A) && $j < sizeof($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == sizeof($B)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 6);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $j = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        if ($A[$i] == $B[$j]) {\n            $j++;\n        }\n        if ($j == count($B)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 3, 4);\n$C = array(2, 4, 3);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\n\necho \"<br>\";\n\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a sub array of A\";\n} else {\n    echo \"C is not a sub array of A\";\n}",
    "    $j = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        if ($A[$i] == $B[$j]) {\n            $j++;\n            if ($j == count($B)) {\n                return true;\n            }\n        } else {\n            $j = 0;\n        }\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3);\n$C = array(6, 7, 8);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\n\necho \"<br>\";\n\nif (is_Sub_Array($A, $C)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $j = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        if ($A[$i] == $B[$j]) {\n            $j++;\n            if ($j == count($B)) {\n                return true;\n            }\n        } else {\n            $j = 0;\n        }\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$B = array(2, 3, 4);\n$C = array(2, 4, 3);\n$D = array(2, 3, 4, 5, 6, 7, 8, 9, 10);\n$E = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\n$F = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 1);\n$G = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 12);\n$H = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 12, 13);\n$I = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 12, 13, 14);\n$J = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 12, 13, 14, 15);\n$K = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 12, 13, 14, 15, 16);\n$L = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 12, 13, 14, 15, 16, 17);\n$M = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 12, 13, 14, 15, 16, 17, 18);\n$N = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 12, 13, 14, 15, 16, 17, 18, 19);\n$O = array(2, 3, 4, 5",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($B, $A)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\n$C = array(7, 8, 9);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\n\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a sub array of A\";\n} else {\n    echo \"C is not a sub array of A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        $j = 0;\n        $k = $i;\n        while ($j < $m && $k < $n && $A[$k] == $B[$j]) {\n            $j++;\n            $k++;\n        }\n        if ($j == $m) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 0);\nif (is_Sub_Array($B, $A)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\necho \"\\n\";\nif (is_Sub_Array($C, $A)) {\n    echo \"C is a sub array of A\";\n} else {\n    echo \"C is not a sub array of A\";\n}",
    "    $j = 0;\n    for ($i = 0; $i < sizeof($A); $i++) {\n        if ($A[$i] == $B[$j]) {\n            $j++;\n        }\n        if ($j == sizeof($B)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$B = array(1, 2, 3, 4, 5);\n$C = array(6, 7, 8, 9, 10);\n$D = array(11, 12, 13, 14, 15);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"A is sub array of B\";\n} else {\n    echo \"A is not sub array of B\";\n}\n\necho \"<br>\";\n\nif (is_Sub_Array($A, $C)) {\n    echo \"C is sub array of A\";\n} else {\n    echo \"C is not sub array of A\";\n}\n\necho \"<br>\";\n\nif (is_Sub_Array($A, $D)) {\n    echo \"D is sub array of A\";\n} else {\n    echo \"D is not sub array of A\";\n}",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return false;\n        }\n    }\n    return true;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"A is a sub array of B\";\n} else {\n    echo \"A is not a sub array of B\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = sizeof($A);\n    $m = sizeof($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array B is a sub array of Array A\";\n} else {\n    echo \"Array B is not a sub array of Array A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\n$C = array(2, 3, 4);\necho is_Sub_Array($A, $B) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Sub_Array($A, $C) ? \"Yes\" : \"No\";",
    "    $i = 0;\n    $j = 0;\n    $k = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        for ($j = 0, $k = $i; $j < count($B) && $k < count($A); $j++, $k++) {\n            if ($B[$j] != $A[$k]) {\n                break;\n            }\n        }\n        if ($j == count($B)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 3, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $k = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        for ($j = 0; $j < count($B); $j++) {\n            if ($A[$i] == $B[$j]) {\n                $k++;\n            }\n        }\n    }\n    if ($k == count($A)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$C = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nif (is_Sub_Array($A, $B)) {\n    echo \"A is a sublist of B\";\n} else {\n    echo \"A is not a sublist of B\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"A is a sublist of C\";\n} else {\n    echo \"A is not a sublist of C\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($B, $A)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\n$C = array(7, 8, 9);\nif (is_Sub_Array($B, $A)) {\n    echo \"B is a sublist of A\";\n} else {\n    echo \"B is not a sublist of A\";\n}\nif (is_Sub_Array($C, $A)) {\n    echo \"C is a sublist of A\";\n} else {\n    echo \"C is not a sublist of A\";\n}",
    "    $lenA = count($A);\n    $lenB = count($B);\n    if ($lenA > $lenB) {\n        return false;\n    }\n    for ($i = 0; $i < $lenA; $i++) {\n        if ($A[$i] != $B[$i]) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    $i = 0;\n    $j = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        for ($j = 0; $j < count($B); $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == count($B))\n            return 0;\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($B, $A))\n    echo \"Array2 is subarray of Array1\";\nelse\n    echo \"Array2 is not a subarray of Array1\";",
    "    $i = 0;\n    $j = 0;\n    $k = 0;\n    $flag = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $k;\n            $j = 0;\n            $k = 0;\n        }\n        if ($j == count($B)) {\n            $flag = 1;\n            break;\n        }\n    }\n    if ($flag == 1) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\necho is_Sub_Array($A, $B) ? \"Yes\" : \"No\";",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\necho is_Sub_Array($A, $B);",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\n$C = array(7, 8, 9);\nif (is_Sub_Array($B, $A)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($C, $A)) {\n    echo \"C is a subarray of A\";\n} else {\n    echo \"C is not a subarray of A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 4);\n$C = array(6, 7, 8);\n\nif (is_Sub_Array($B, $A)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\n\necho \"\\n\";\n\nif (is_Sub_Array($C, $A)) {\n    echo \"C is a sub array of A\";\n} else {\n    echo \"C is not a sub array of A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\n$C = array(2, 3, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\n\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a sub array of A\";\n} else {\n    echo \"C is not a sub array of A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $m = count($A);\n    $n = count($B);\n    for ($i = 0; $i < $m; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $n) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 3);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array B is subarray of Array A\";\n} else {\n    echo \"Array B is not subarray of Array A\";\n}\necho \"<br>\";\nif (is_Sub_Array($C, $A)) {\n    echo \"Array C is subarray of Array A\";\n} else {\n    echo \"Array C is not subarray of Array A\";\n}",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 3);\n$D = array(1, 2, 3, 4, 5, 6);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a subarray of Array A\";\n} else {\n    echo \"Array B is not a subarray of Array A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"Array C is a subarray of Array A\";\n} else {\n    echo \"Array C is not a subarray of Array A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $D)) {\n    echo \"Array D is a subarray of Array A\";\n} else {\n    echo \"Array D is not a subarray of Array A\";\n}",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n$C = array(2, 4, 3);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\n\necho \"<br>\";\n\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a sub array of A\";\n} else {\n    echo \"C is not a sub array of A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 3);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array B is a sub array of Array A\";\n} else {\n    echo \"Array B is not a sub array of Array A\";\n}\necho \"<br>\";\nif (is_Sub_Array($C, $A)) {\n    echo \"Array C is a sub array of Array A\";\n} else {\n    echo \"Array C is not a sub array of Array A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$B = array(2, 4, 6, 8);\n$C = array(2, 4, 6, 9);\n$D = array(2, 4, 6, 8, 9);\n$E = array(2, 4, 6, 8, 9, 10);\n$F = array(2, 4, 6, 8, 9, 10, 11);\n$G = array(2, 4, 6, 8, 9, 10, 11, 12);\n$H = array(2, 4, 6, 8, 9, 10, 11, 12, 13);\n$I = array(2, 4, 6, 8, 9, 10, 11, 12, 13, 14);\n$J = array(2, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15);\n$K = array(2, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16);\n$L = array(2, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17);\n$M = array(2, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18);\n$N = array(2, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19);\n$O = array(2, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20);",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 3);\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a sub array of Array A\";\n} else {\n    echo \"Array B is not a sub array of Array A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"Array C is a sub array of Array A\";\n} else {\n    echo \"Array C is not a sub array of Array A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return false;\n        }\n    }\n    return true;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 3, 4);\n$C = array(2, 4, 3);\n$D = array(2, 3, 4, 5);\n$E = array(2, 3, 4, 5, 6);\n$F = array(2, 3, 4, 6);\n\necho is_Sub_Array($A, $B) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Sub_Array($A, $C) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Sub_Array($A, $D) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Sub_Array($A, $E) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Sub_Array($A, $F) ? \"Yes\" : \"No\";\necho \"\\n\";",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n$C = array(2, 4, 3);\n$D = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a sub array of Array A\";\n} else {\n    echo \"Array B is not a sub array of Array A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"Array C is a sub array of Array A\";\n} else {\n    echo \"Array C is not a sub array of Array A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $D)) {\n    echo \"Array D is a sub array of Array A\";\n} else {\n    echo \"Array D is not a sub array of Array A\";\n}",
    "    $j = 0;\n    for ($i=0; $i < count($B); $i++) { \n        if($A[$j] == $B[$i]) {\n            $j++;\n        }\n        if($j == count($A)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4, 5);\n$C = array(1, 2, 3, 4, 5);\n\nif(is_Sub_Array($A, $B)) {\n    echo \"A is sub array of B\";\n} else {\n    echo \"A is not sub array of B\";\n}\n\necho \"<br>\";\n\nif(is_Sub_Array($A, $C)) {\n    echo \"A is sub array of C\";\n} else {\n    echo \"A is not sub array of C\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return false;\n        }\n    }\n    return true;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"A is a sublist of B\";\n} else {\n    echo \"A is not a sublist of B\";\n}",
    "    $j = 0;\n    for($i = 0; $i < count($A); $i++) {\n        if($A[$i] == $B[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        if($j == count($B)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 3);\n$C = array(1, 2, 4);\n\nif(is_Sub_Array($A, $B)) {\n    echo \"Array B is a sub array of A\";\n} else {\n    echo \"Array B is not a sub array of A\";\n}\n\necho \"<br>\";\n\nif(is_Sub_Array($A, $C)) {\n    echo \"Array C is a sub array of A\";\n} else {\n    echo \"Array C is not a sub array of A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 0);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array B is subarray of Array A\";\n} else {\n    echo \"Array B is not subarray of Array A\";\n}\necho \"\\n\";\nif (is_Sub_Array($C, $A)) {\n    echo \"Array C is subarray of Array A\";\n} else {\n    echo \"Array C is not subarray of Array A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $k = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        for ($j = 0; $j < count($B); $j++) {\n            if ($A[$i] == $B[$j]) {\n                $k++;\n                break;\n            }\n        }\n    }\n    if ($k == count($A)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5);\n$C = array(1, 2, 3, 4, 5);\n$D = array(1, 2, 3, 4, 5);\n$E = array(1, 2, 3, 4, 5);\n$F = array(1, 2, 3, 4, 5);\n$G = array(1, 2, 3, 4, 5);\n$H = array(1, 2, 3, 4, 5);\n$I = array(1, 2, 3, 4, 5);\n$J = array(1, 2, 3, 4, 5);\n$K = array(1, 2, 3, 4, 5);\n$L = array(1, 2, 3, 4, 5);\n$M = array(1, 2, 3, 4, 5);\n$N = array(1, 2, 3, 4, 5);\n$O = array(1, 2, 3, 4, 5);\n$P = array(1, 2, 3, 4, 5);\n$Q = array(1, 2, 3, 4, 5);\n$R = array(1, 2, 3, 4, 5);\n$S = array(1, 2, 3, 4, 5);\n$T = array(1, 2, 3, 4, 5);\n$U = array(1, 2, 3, 4, 5);\n$V = array(1, 2, 3, 4, 5);\n$W = array(1, 2, 3, 4, 5);\n$X = array(1, 2, 3, 4, 5);\n$Y = array",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return false;\n        }\n    }\n    return true;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 0);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array B is sub array of Array A\";\n} else {\n    echo \"Array B is not sub array of Array A\";\n}\necho \"<br>\";\nif (is_Sub_Array($C, $A)) {\n    echo \"Array C is sub array of Array A\";\n} else {\n    echo \"Array C is not sub array of Array A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 0);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array2 is a subarray of Array1\";\n} else {\n    echo \"Array2 is not a subarray of Array1\";\n}\necho \"<br>\";\nif (is_Sub_Array($C, $A)) {\n    echo \"Array3 is a subarray of Array1\";\n} else {\n    echo \"Array3 is not a subarray of Array1\";\n}",
    "    $len = count($A);\n    $i = 0;\n    while ($i < $len) {\n        if ($A[$i] == $B[0]) {\n            $j = 0;\n            while ($j < count($B)) {\n                if ($A[$i + $j] != $B[$j]) {\n                    break;\n                }\n                $j++;\n            }\n            if ($j == count($B)) {\n                return true;\n            }\n        }\n        $i++;\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n$C = array(2, 3, 4, 5);\n$D = array(1, 2, 3, 4, 5);\n$E = array(1, 2, 3, 4, 5, 6);\n\necho is_Sub_Array($A, $B) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Sub_Array($A, $C) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Sub_Array($A, $D) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Sub_Array($A, $E) ? \"Yes\" : \"No\";\necho \"\\n\";",
    "    $i = 0;\n    $j = 0;\n    $k = 0;\n    $flag = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        for ($j = 0; $j < count($B); $j++) {\n            if ($A[$i] == $B[$j]) {\n                $k = $j;\n                $flag = 1;\n                break;\n            }\n        }\n        if ($flag == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3);\n$C = array(1, 2, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"A is subarray of B\";\n} else {\n    echo \"A is not subarray of B\";\n}\n\nif (is_Sub_Array($A, $C)) {\n    echo \"A is subarray of C\";\n} else {\n    echo \"A is not subarray of C\";\n}",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n$C = array(1, 2, 3, 4, 5);\n$D = array(2, 3, 4, 5);\n$E = array(2, 3, 4, 5, 6);\n$F = array(2, 3, 4, 5, 6, 7);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a sub array of A\";\n} else {\n    echo \"C is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $D)) {\n    echo \"D is a sub array of A\";\n} else {\n    echo \"D is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $E)) {\n    echo \"E is a sub array of A\";\n} else {\n    echo \"E is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $F)) {\n    echo \"F is a sub array of A\";\n} else {\n    echo \"F is not a sub array of A\";\n}",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3);\n$C = array(6, 7, 8);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $lenA = count($A);\n    $lenB = count($B);\n    if ($lenA > $lenB) {\n        return false;\n    }\n    $i = 0;\n    $j = 0;\n    while ($i < $lenA && $j < $lenB) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $j++;\n        }\n    }\n    if ($i == $lenA) {\n        return true;\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$C = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$D = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\n$E = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\n$F = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13);\n$G = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14);\n$H = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n$I = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);\n$J = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17);\n$K = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18);\n$L = array(1, 2, 3, 4, 5, 6, 7, 8, 9,",
    "    $len_A = count($A);\n    $len_B = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $len_B) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n$C = array(2, 3, 4, 5);\n$D = array(2, 3, 4, 5, 6);\n$E = array(1, 2, 3, 4, 5);\n$F = array(1, 2, 3, 4, 5, 6);\n$G = array(1, 2, 3, 4, 5, 6, 7);\n$H = array(1, 2, 3, 4, 5, 6, 7, 8);\n$I = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$J = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\n$L = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\n$M = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13);\n$N = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14);\n$O = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n$P = array(1, 2, 3, 4, 5, 6, 7, 8",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 3);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array B is subarray of Array A\";\n} else {\n    echo \"Array B is not subarray of Array A\";\n}\necho \"\\n\";\nif (is_Sub_Array($C, $A)) {\n    echo \"Array C is subarray of Array A\";\n} else {\n    echo \"Array C is not subarray of Array A\";\n}",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6, 7);\n$B = array(2, 4, 5);\n$C = array(2, 3, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\necho \"\\n\";\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a sub array of A\";\n} else {\n    echo \"C is not a sub array of A\";\n}\necho \"\\n\";",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == $m)\n            return 0;\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 6);\nif (is_Sub_Array($A, $B))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array B is a subarray of Array A\";\n} else {\n    echo \"Array B is not a subarray of Array A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($B, $A)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $lenA = count($A);\n    $lenB = count($B);\n    if ($lenA > $lenB) {\n        return false;\n    }\n    $i = 0;\n    $j = 0;\n    while ($i < $lenA && $j < $lenB) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = 0;\n            $j++;\n        }\n    }\n    if ($i == $lenA) {\n        return true;\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$C = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"A is a sub array of B\";\n} else {\n    echo \"A is not a sub array of B\";\n}\n\necho \"\\n\";\n\nif (is_Sub_Array($A, $C)) {\n    echo \"A is a sub array of C\";\n} else {\n    echo \"A is not a sub array of C\";\n}\n\necho \"\\n\";\n\nif (is_Sub_Array($B, $C)) {\n    echo \"B is a sub array of C\";\n} else {\n    echo \"B is not a sub array of C\";\n}\n\necho \"\\n\";\n\nif (is_Sub_Array($C, $B)) {\n    echo \"C is a sub array of B\";\n} else {\n    echo \"C is not a sub array of B\";\n}\n\necho \"\\n\";\n\nif (is_Sub_Array($C, $A)) {\n    echo \"C is a sub array of A\";\n} else {\n    echo \"C is not a sub array of A\";\n}\n\necho \"\\n\";\n\nif (is_Sub_Array($",
    "  $i = 0;\n  $j = 0;\n  while ($i < count($A) && $j < count($B)) {\n    if ($A[$i] == $B[$j]) {\n      $i++;\n      $j++;\n    } else {\n      $i++;\n    }\n  }\n  if ($j == count($B)) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n\nif (is_Sub_Array($A, $B)) {\n  echo \"Yes\";\n} else {\n  echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 3);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a sub array of A\";\n} else {\n    echo \"Array B is not a sub array of A\";\n}\necho \"\\n\";\nif (is_Sub_Array($A, $C)) {\n    echo \"Array C is a sub array of A\";\n} else {\n    echo \"Array C is not a sub array of A\";\n}",
    "    $j = 0;\n    for ($i=0; $i < count($A); $i++) { \n        if($A[$i] == $B[$j]) {\n            $j++;\n        }\n        if($j == count($B)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$A = array(1,2,3,4,5,6,7,8,9);\n$B = array(2,3,4,5,6);\n\nif(is_Sub_Array($A, $B)) {\n    echo \"B is sub array of A\";\n} else {\n    echo \"B is not sub array of A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return false;\n        }\n    }\n    return true;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($B, $A)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\n$C = array(2, 3, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 0);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array B is a sub array of Array A\";\n} else {\n    echo \"Array B is not a sub array of Array A\";\n}\necho \"\\n\";\nif (is_Sub_Array($C, $A)) {\n    echo \"Array C is a sub array of Array A\";\n} else {\n    echo \"Array C is not a sub array of Array A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\necho is_Sub_Array($A, $B);",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(3, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3);\n$C = array(1, 2, 4);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array B is a sub array of Array A\";\n} else {\n    echo \"Array B is not a sub array of Array A\";\n}\necho \"\\n\";\nif (is_Sub_Array($C, $A)) {\n    echo \"Array C is a sub array of Array A\";\n} else {\n    echo \"Array C is not a sub array of Array A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == $m)\n            return 0;\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 3);\nif (is_Sub_Array($B, $A))\n    echo \"Array B is subarray of Array A\";\nelse\n    echo \"Array B is not a subarray of Array A\";\nif (is_Sub_Array($C, $A))\n    echo \"\\nArray C is subarray of Array A\";\nelse\n    echo \"\\nArray C is not a subarray of Array A\";",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5);\n$C = array(1, 2, 3, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"A is a sublist of B\";\n} else {\n    echo \"A is not a sublist of B\";\n}\n\necho \"\\n\";\n\nif (is_Sub_Array($A, $C)) {\n    echo \"A is a sublist of C\";\n} else {\n    echo \"A is not a sublist of C\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 3, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 0);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array B is subarray of A\";\n} else {\n    echo \"Array B is not subarray of A\";\n}\necho \"\\n\";\nif (is_Sub_Array($C, $A)) {\n    echo \"Array C is subarray of A\";\n} else {\n    echo \"Array C is not subarray of A\";\n}",
    "    $lenA = count($A);\n    $lenB = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $lenA && $j < $lenB) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $lenB) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 3, 4, 5);\n$C = array(2, 3, 4, 5, 6);\n$D = array(1, 2, 3, 4, 5, 6);\n$E = array(1, 2, 3, 4, 5, 6, 7);\n$F = array(1, 2, 3, 4, 5, 6, 7, 8);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a sub array of A\";\n} else {\n    echo \"C is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $D)) {\n    echo \"D is a sub array of A\";\n} else {\n    echo \"D is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $E)) {\n    echo \"E is a sub array of A\";\n} else {\n    echo \"E is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $F)) {\n    echo \"F is a sub array of A\";\n} else {\n    echo \"F is not a sub array of A\";\n}",
    "    $j = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        if ($A[$i] == $B[$j]) {\n            $j++;\n            if ($j == count($B)) {\n                return true;\n            }\n        } else {\n            $j = 0;\n        }\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5, 6, 7);\n$B = array(2, 3, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 3, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 3);\n$D = array(1, 2, 3, 4, 5, 6);\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a sub array of Array A\";\n} else {\n    echo \"Array B is not a sub array of Array A\";\n}\necho \"\\n\";\nif (is_Sub_Array($A, $C)) {\n    echo \"Array C is a sub array of Array A\";\n} else {\n    echo \"Array C is not a sub array of Array A\";\n}\necho \"\\n\";\nif (is_Sub_Array($A, $D)) {\n    echo \"Array D is a sub array of Array A\";\n} else {\n    echo \"Array D is not a sub array of Array A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $m = count($A);\n    $n = count($B);\n    for ($i = 0; $i < $m; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $n) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\n$C = array(7, 8, 9);\nif (is_Sub_Array($B, $A)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\necho \"\\n\";\nif (is_Sub_Array($C, $A)) {\n    echo \"C is a subarray of A\";\n} else {\n    echo \"C is not a subarray of A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5);\n$C = array(1, 2, 3, 4);\n$D = array(1, 2, 3, 4, 5, 6, 7, 8);\n$E = array(1, 2, 3, 4, 5, 6, 7, 8);\n$F = array(1, 2, 3, 4, 5, 6, 7, 8);\n$G = array(1, 2, 3, 4, 5, 6, 7, 8);\n$H = array(1, 2, 3, 4, 5, 6, 7, 8);\n$I = array(1, 2, 3, 4, 5, 6, 7, 8);\n$J = array(1, 2, 3, 4, 5, 6, 7, 8);\n$K = array(1, 2, 3, 4, 5, 6, 7, 8);\n$L = array(1, 2, 3, 4, 5, 6, 7, 8);\n$M = array(1, 2, 3, 4, 5, 6, 7, 8);\n$N = array(1, 2, 3, 4, 5, 6, 7, 8);\n$O = array(1, 2, 3, 4, 5, 6, 7, 8);\n$P = array(1, 2, 3, 4, 5, 6, 7, 8);\n$Q = array(1, 2, 3, 4, 5, 6, 7, 8);\n$R = array(1, 2, 3, 4, 5, 6, 7, 8);\n$S = array(1, 2, 3, 4",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\n$C = array(7, 8, 9);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array B is a sub array of Array A\";\n} else {\n    echo \"Array B is not a sub array of Array A\";\n}\necho \"<br>\";\nif (is_Sub_Array($C, $A)) {\n    echo \"Array C is a sub array of Array A\";\n} else {\n    echo \"Array C is not a sub array of Array A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $k = 0;\n    $flag = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        if ($A[$i] == $B[$j]) {\n            $j++;\n            if ($j == count($B)) {\n                $flag = 1;\n                break;\n            }\n        } else {\n            $j = 0;\n        }\n    }\n    if ($flag == 1) {\n        echo \"It is a sublist\";\n    } else {\n        echo \"It is not a sublist\";\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 3, 4);\nis_Sub_Array($A, $B);",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 3);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array B is a sub array of Array A\";\n} else {\n    echo \"Array B is not a sub array of Array A\";\n}\necho \"<br>\";\nif (is_Sub_Array($C, $A)) {\n    echo \"Array C is a sub array of Array A\";\n} else {\n    echo \"Array C is not a sub array of Array A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 0);\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is sub array of A\";\n} else {\n    echo \"Array B is not sub array of A\";\n}\necho \"\\n\";\nif (is_Sub_Array($A, $C)) {\n    echo \"Array C is sub array of A\";\n} else {\n    echo \"Array C is not sub array of A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 3);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a sub array of Array A\";\n} else {\n    echo \"Array B is not a sub array of Array A\";\n}\n\necho \"<br>\";\n\nif (is_Sub_Array($A, $C)) {\n    echo \"Array C is a sub array of Array A\";\n} else {\n    echo \"Array C is not a sub array of Array A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == $m)\n            return 0;\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($A, $B))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "\t$i = 0;\n\t$j = 0;\n\t$n = count($A);\n\t$m = count($B);\n\twhile ($i < $n && $j < $m) {\n\t\tif ($A[$i] == $B[$j]) {\n\t\t\t$i++;\n\t\t\t$j++;\n\t\t} else {\n\t\t\t$i = $i - $j + 1;\n\t\t\t$j = 0;\n\t\t}\n\t}\n\tif ($j == $m) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n$A = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$B = array(1, 2, 3, 4, 5, 6, 7);\n$C = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$D = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$E = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$F = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$G = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$H = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$I = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$J = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$L = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$M = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$N = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$O =",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\n$C = array(7, 8, 9);\nif (is_Sub_Array($B, $A)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\necho \"\\n\";\nif (is_Sub_Array($C, $A)) {\n    echo \"C is a sub array of A\";\n} else {\n    echo \"C is not a sub array of A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 6);\n$C = array(1, 2, 3, 4, 5, 6);\n$D = array(2, 4, 6, 8);\necho is_Sub_Array($A, $B) . \"\\n\";\necho is_Sub_Array($C, $D) . \"\\n\";",
    "    $j = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        if ($A[$i] == $B[$j]) {\n            $j++;\n            if ($j == count($B)) {\n                return true;\n            }\n        } else {\n            $j = 0;\n        }\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$B = array(2, 3, 4, 5);\n$C = array(2, 4, 6, 8, 10);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a sub array of Array A\";\n} else {\n    echo \"Array B is not a sub array of Array A\";\n}\n\necho \"<br>\";\n\nif (is_Sub_Array($A, $C)) {\n    echo \"Array C is a sub array of Array A\";\n} else {\n    echo \"Array C is not a sub array of Array A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = sizeof($A);\n    $m = sizeof($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $k = 0;\n    $flag = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $k;\n            $j = 0;\n            $k = 0;\n        }\n        if ($j == count($B)) {\n            $flag = 1;\n            break;\n        }\n        $k++;\n    }\n    if ($flag == 1) {\n        return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\necho is_Sub_Array($A, $B);",
    "    $j = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        if ($A[$i] == $B[$j]) {\n            $j++;\n            if ($j == count($B)) {\n                return true;\n            }\n        } else {\n            $j = 0;\n        }\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 0);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array B is sub array of A\";\n} else {\n    echo \"Array B is not sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($C, $A)) {\n    echo \"Array C is sub array of A\";\n} else {\n    echo \"Array C is not sub array of A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\n$C = array(7, 8, 9);\nif (is_Sub_Array($B, $A)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $j = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        if ($A[$i] == $B[$j]) {\n            $j++;\n        }\n        if ($j == count($B)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3);\n$C = array(6, 7, 8);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\necho \"\\n\";\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a sub array of A\";\n} else {\n    echo \"C is not a sub array of A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    if (count($A) > count($B)) {\n        return false;\n    }\n    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n        }\n        $j++;\n    }\n    return ($i == count($A));\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"A is subarray of B\";\n} else {\n    echo \"A is not subarray of B\";\n}",
    "    $j = 0;\n    for($i = 0; $i < count($A); $i++) {\n        if($A[$i] == $B[$j]) {\n            $j++;\n        }\n        if($j == count($B)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$B = array(2, 4, 6, 8);\n$C = array(2, 4, 6, 9);\n\nif(is_Sub_Array($A, $B)) {\n    echo \"B is a sublist of A\";\n} else {\n    echo \"B is not a sublist of A\";\n}\necho \"\\n\";\nif(is_Sub_Array($A, $C)) {\n    echo \"C is a sublist of A\";\n} else {\n    echo \"C is not a sublist of A\";\n}",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $j = 0;\n    for ($i = 0; $i < count($B); $i++) {\n        if ($A[$j] == $B[$i]) {\n            $j++;\n        }\n        if ($j == count($A)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\nif (is_Sub_Array($A, $B)) {\n    echo \"A is sub array of B\";\n} else {\n    echo \"A is not sub array of B\";\n}",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n$C = array(2, 3, 4, 5);\n$D = array(1, 2, 3, 4, 5);\n$E = array(2, 3, 4, 5, 6);\n$F = array(1, 2, 3, 4, 5, 6);\n$G = array(1, 2, 3, 4, 5, 6, 7);\n$H = array(1, 2, 3, 4, 5, 6, 7, 8);\n$I = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$J = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\n$L = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\n$M = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13);\n$N = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14);\n$O = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n$P = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);\n$Q = array(1, 2, 3, 4, 5, 6, 7, 8, 9",
    "    $i = 0;\n    $j = 0;\n    $count = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n            $count++;\n        } else {\n            $i++;\n        }\n    }\n    if ($count == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 3, 4);\n$C = array(2, 3, 4, 5);\n$D = array(2, 3, 4, 5, 6);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a sub array of A\";\n} else {\n    echo \"C is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $D)) {\n    echo \"D is a sub array of A\";\n} else {\n    echo \"D is not a sub array of A\";\n}",
    "    $len_A = count($A);\n    $len_B = count($B);\n    if ($len_A > $len_B) {\n        return false;\n    }\n    for ($i = 0; $i < $len_A; $i++) {\n        if ($A[$i] != $B[$i]) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6, 7);\n$B = array(4, 5, 6);\n$C = array(4, 5, 6, 7, 8);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a sub array of A\";\n} else {\n    echo \"C is not a sub array of A\";\n}",
    "    $len_A = count($A);\n    $len_B = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $len_B) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 3);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\n\necho \"\\n\";\n\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a sub array of A\";\n} else {\n    echo \"C is not a sub array of A\";\n}",
    "    $len_A = count($A);\n    $len_B = count($B);\n    if ($len_A > $len_B) {\n        return false;\n    }\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = 0;\n            $j++;\n        }\n    }\n    if ($i == $len_A) {\n        return true;\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$C = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$D = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$E = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$F = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$G = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$H = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$I = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$J = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$L = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$M = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$N = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == $m)\n            return 0;\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($A, $B))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$B = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$C = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$D = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$E = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$F = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$G = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$H = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$I = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$J = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$K = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$L = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$M = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$N = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$O = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$P = array(1, 2, 3, 4, 5",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n$C = array(1, 2, 3, 4, 5);\n$D = array(2, 3, 4, 5);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"A is a subarray of B\";\n} else {\n    echo \"A is not a subarray of B\";\n}\necho \"\\n\";\nif (is_Sub_Array($C, $D)) {\n    echo \"C is a subarray of D\";\n} else {\n    echo \"C is not a subarray of D\";\n}\necho \"\\n\";",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 3, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"A is subarray of B\";\n} else {\n    echo \"A is not subarray of B\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 6);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $m = count($A);\n    $n = count($B);\n    for ($i = 0; $i < $m; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $n) {\n            return false;\n        }\n    }\n    return true;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3);\n$C = array(1, 2, 4);\nif (is_Sub_Array($B, $A)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\necho \"\\n\";\nif (is_Sub_Array($C, $A)) {\n    echo \"C is a sub array of A\";\n} else {\n    echo \"C is not a sub array of A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $k = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        for ($j = 0; $j < count($B); $j++) {\n            if ($A[$i] == $B[$j]) {\n                $k++;\n                break;\n            }\n        }\n    }\n    if ($k == count($A)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5, 6, 7, 8);\necho is_Sub_Array($A, $B);",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3);\n$C = array(1, 2, 4);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array B is a sub array of Array A\";\n} else {\n    echo \"Array B is not a sub array of Array A\";\n}\necho \"\\n\";\nif (is_Sub_Array($C, $A)) {\n    echo \"Array C is a sub array of Array A\";\n} else {\n    echo \"Array C is not a sub array of Array A\";\n}",
    "    $j = 0;\n    for ($i=0; $i < sizeof($A); $i++) { \n        if($A[$i] == $B[$j]) {\n            $j++;\n            if($j == sizeof($B)) {\n                return true;\n            }\n        }\n        else {\n            $j = 0;\n        }\n    }\n    return false;\n}\n\n$A = array(1,2,3,4,5,6,7,8,9,10);\n$B = array(1,2,3,4,5,6,7,8,9,10);\n$C = array(1,2,3,4,5,6,7,8,9,10,11);\n$D = array(1,2,3,4,5,6,7,8,9,10,11,12);\n$E = array(1,2,3,4,5,6,7,8,9,10,11,12,13);\n$F = array(1,2,3,4,5,6,7,8,9,10,11,12,13,14);\n$G = array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15);\n$H = array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16);\n$I = array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17);\n$J = array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18);\n$K = array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19);\n$L = array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == $m)\n            return 0;\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($A, $B))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == $m)\n            return 0;\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n$C = array(2, 3, 4, 5);\n$D = array(1, 2, 3, 4, 5);\n$E = array(1, 2, 3, 4, 5);\n$F = array(1, 2, 3, 4, 5);\n$G = array(1, 2, 3, 4, 5);\n$H = array(1, 2, 3, 4, 5);\n$I = array(1, 2, 3, 4, 5);\n$J = array(1, 2, 3, 4, 5);\n$K = array(1, 2, 3, 4, 5);\n$L = array(1, 2, 3, 4, 5);\n$M = array(1, 2, 3, 4, 5);\n$N = array(1, 2, 3, 4, 5);\n$O = array(1, 2, 3, 4, 5);\n$P = array(1, 2, 3, 4, 5);\n$Q = array(1, 2, 3, 4, 5);\n$R = array(1, 2, 3, 4, 5);\n$S = array(1, 2, 3, 4, 5);\n$T = array(1, 2, 3, 4, 5);\n$U = array(1, 2, 3, 4, 5);\n$V = array(1, 2, 3, 4, 5);\n$W = array(1, 2, 3, 4, 5);\n$X = array(1, 2, 3, 4, 5);\n$Y = array(1, 2, 3",
    "    $i = 0;\n    $j = 0;\n    $k = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        for ($j = 0; $j < count($B); $j++) {\n            if ($A[$i] == $B[$j]) {\n                $k++;\n            }\n        }\n    }\n    if ($k == count($A)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$C = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20);\nif (is_Sub_Array($A, $B)) {\n    echo \"A is sub array of B\";\n} else {\n    echo \"A is not sub array of B\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"A is sub array of C\";\n} else {\n    echo \"A is not sub array of C\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return false;\n        }\n    }\n    return true;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 0);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array B is subarray of Array A\";\n} else {\n    echo \"Array B is not subarray of Array A\";\n}\necho \"<br>\";\nif (is_Sub_Array($C, $A)) {\n    echo \"Array C is subarray of Array A\";\n} else {\n    echo \"Array C is not subarray of Array A\";\n}",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6, 7, 8);\n$B = array(3, 4, 5);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 3);\n$D = array(1, 2, 3, 4, 5, 6);\n$E = array(1, 2, 3, 4, 5, 6);\n$F = array(1, 2, 3, 4, 5, 6);\n$G = array(1, 2, 3, 4, 5, 6);\n$H = array(1, 2, 3, 4, 5, 6);\n$I = array(1, 2, 3, 4, 5, 6);\n$J = array(1, 2, 3, 4, 5, 6);\n$K = array(1, 2, 3, 4, 5, 6);\n$L = array(1, 2, 3, 4, 5, 6);\n$M = array(1, 2, 3, 4, 5, 6);\n$N = array(1, 2, 3, 4, 5, 6);\n$O = array(1, 2, 3, 4, 5, 6);\n$P = array(1, 2, 3, 4, 5, 6);\n$Q = array(1, 2, 3, 4, 5, 6);\n$R = array(1, 2, 3, 4, 5, 6);\n$S = array(1, 2, 3, 4, 5, 6);\n$T = array(1, 2, 3, 4, 5, 6);\n$U = array(1, 2, 3, 4, 5, 6);\n$V = array(1, 2, 3, 4, 5, 6);\n$W = array(",
    "    $j = 0;\n    for ($i=0; $i<count($A); $i++) {\n        if ($A[$i] == $B[$j])\n            $j++;\n        if ($j == count($B))\n            return 1;\n    }\n    return 0;\n}\n\n$A = array(1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89);\n$B = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13);\n\nif (is_Sub_Array($A, $B))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $m = count($A);\n    $n = count($B);\n    for ($i = 0; $i < $n - $m + 1; $i++) {\n        $j = 0;\n        for ($j = 0; $j < $m; $j++) {\n            if ($B[$i + $j] != $A[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return true;\n        }\n    }\n    return false;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4, 5, 6);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 4);\n$C = array(6, 7, 8);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a subarray of A\";\n} else {\n    echo \"C is not a subarray of A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 0);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array B is subarray of Array A\";\n} else {\n    echo \"Array B is not subarray of Array A\";\n}\necho \"<br>\";\nif (is_Sub_Array($C, $A)) {\n    echo \"Array C is subarray of Array A\";\n} else {\n    echo \"Array C is not subarray of Array A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 6);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == $m)\n            return 0;\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5);\n$C = array(1, 2, 3);\n$D = array(1, 2, 3, 4, 5);\nif (is_Sub_Array($A, $B))\n    echo \"A is a subarray of B\";\nelse\n    echo \"A is not a subarray of B\";\nif (is_Sub_Array($C, $D))\n    echo \"C is a subarray of D\";\nelse\n    echo \"C is not a subarray of D\";",
    "    $j = 0;\n    for ($i = 0; $i < sizeof($A); $i++) {\n        if ($A[$i] == $B[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        if ($j == sizeof($B)) {\n            return true;\n        }\n    }\n    return false;\n}\n$A = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$B = array(2, 3, 4);\n$C = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$D = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($C, $D)) {\n    echo \"D is a sub array of C\";\n} else {\n    echo \"D is not a sub array of C\";\n}",
    "    $j = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        if ($A[$i] == $B[$j]) {\n            $j++;\n        }\n        if ($j == count($B)) {\n            return true;\n        }\n    }\n    return false;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 3, 4);\n$C = array(2, 4, 3);\n$D = array(2, 3, 6);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a sub array of A\";\n} else {\n    echo \"C is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $D)) {\n    echo \"D is a sub array of A\";\n} else {\n    echo \"D is not a sub array of A\";\n}",
    "    $j = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        if ($A[$i] == $B[$j]) {\n            $j++;\n            if ($j == count($B)) {\n                return true;\n            }\n        } else {\n            $j = 0;\n        }\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 3, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $j = 0;\n    for($i = 0; $i < count($A); $i++) {\n        if($A[$i] == $B[$j]) {\n            $j++;\n            if($j == count($B)) {\n                return true;\n            }\n        } else {\n            $j = 0;\n        }\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 3, 4);\n\nif(is_Sub_Array($A, $B)) {\n    echo \"B is sub array of A\";\n} else {\n    echo \"B is not sub array of A\";\n}\n",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$B = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$C = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\n$D = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"A is sub array of B\";\n} else {\n    echo \"A is not sub array of B\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"A is sub array of C\";\n} else {\n    echo \"A is not sub array of C\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $D)) {\n    echo \"A is sub array of D\";\n} else {\n    echo \"A is not sub array of D\";\n}\necho \"<br>\";\nif (is_Sub_Array($C, $D)) {\n    echo \"C is sub array of D\";\n} else {\n    echo \"C is not sub array of D\";\n}\necho \"<br>\";\nif (is_Sub_Array($D, $C)) {\n    echo \"D is sub array of C\";\n} else {\n    echo \"D is not sub array of C\";\n}\necho \"<br>\";",
    "    $lenA = count($A);\n    $lenB = count($B);\n    if ($lenA > $lenB) {\n        return false;\n    }\n    for ($i = 0; $i < $lenA; $i++) {\n        if ($A[$i] != $B[$i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"A is a sub array of B\";\n} else {\n    echo \"A is not a sub array of B\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3);\n$C = array(1, 2, 3, 4, 5);\n$D = array(1, 2, 3, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"A is a sub array of B\";\n} else {\n    echo \"A is not a sub array of B\";\n}\necho \"<br>\";\nif (is_Sub_Array($C, $D)) {\n    echo \"C is a sub array of D\";\n} else {\n    echo \"C is not a sub array of D\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5);\n$C = array(1, 2, 3, 4, 5);\n$D = array(1, 2, 3, 4, 5);\n$E = array(1, 2, 3, 4, 5);\n$F = array(1, 2, 3, 4, 5);\n$G = array(1, 2, 3, 4, 5);\n$H = array(1, 2, 3, 4, 5);\n$I = array(1, 2, 3, 4, 5);\n$J = array(1, 2, 3, 4, 5);\n$K = array(1, 2, 3, 4, 5);\n$L = array(1, 2, 3, 4, 5);\n$M = array(1, 2, 3, 4, 5);\n$N = array(1, 2, 3, 4, 5);\n$O = array(1, 2, 3, 4, 5);\n$P = array(1, 2, 3, 4, 5);\n$Q = array(1, 2, 3, 4, 5);\n$R = array(1, 2, 3, 4, 5);\n$S = array(1, 2, 3, 4, 5);\n$T = array(1, 2, 3, 4, 5);\n$U = array(1, 2, 3, 4, 5);\n$V = array(1, 2, 3, 4, 5);\n$W = array(1, 2, 3, 4, 5);\n$X = array(1, 2, 3, 4, 5);\n$Y = array",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a sub array of Array A\";\n} else {\n    echo \"Array B is not a sub array of Array A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array B is a sub array of A\";\n} else {\n    echo \"Array B is not a sub array of A\";\n}",
    "    $len_A = count($A);\n    $len_B = count($B);\n    if ($len_A > $len_B) {\n        return false;\n    }\n    for ($i = 0; $i < $len_A; $i++) {\n        if ($A[$i] != $B[$i]) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i <= $n - $m; $i++) {\n        $j = 0;\n        while ($j < $m && $A[$i + $j] == $B[$j]) {\n            $j++;\n        }\n        if ($j == $m) {\n            return true;\n        }\n    }\n    return false;\n}\n$A = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$B = array(1, 2, 3, 4, 5);\n$C = array(11, 12, 13, 14, 15);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub-array of A\";\n} else {\n    echo \"B is not a sub-array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a sub-array of A\";\n} else {\n    echo \"C is not a sub-array of A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n$C = array(1, 2, 3, 4, 5);\n$D = array(1, 2, 3, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a sub array of Array A\";\n} else {\n    echo \"Array B is not a sub array of Array A\";\n}\necho \"<br>\";\nif (is_Sub_Array($C, $D)) {\n    echo \"Array D is a sub array of Array C\";\n} else {\n    echo \"Array D is not a sub array of Array C\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == $m)\n            return 0;\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\nif (is_Sub_Array($A, $B))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "\t$i = 0;\n\t$j = 0;\n\t$n = count($A);\n\t$m = count($B);\n\twhile ($i < $n && $j < $m) {\n\t\tif ($A[$i] == $B[$j]) {\n\t\t\t$i++;\n\t\t\t$j++;\n\t\t} else {\n\t\t\t$i = $i - $j + 1;\n\t\t\t$j = 0;\n\t\t}\n\t}\n\tif ($j == $m) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\n$C = array(1, 2, 3, 4, 5, 6);\n$D = array(2, 4, 5);\n$E = array(1, 2, 3, 4, 5, 6);\n$F = array(2, 4, 6);\nif (is_Sub_Array($A, $B)) {\n\techo \"B is a sub array of A\";\n} else {\n\techo \"B is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($C, $D)) {\n\techo \"D is a sub array of C\";\n} else {\n\techo \"D is not a sub array of C\";\n}\necho \"<br>\";\nif (is_Sub_Array($E, $F)) {\n\techo \"F is a sub array of E\";\n} else {\n\techo \"F is not a sub array of E\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == $m)\n            return 0;\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\nif (is_Sub_Array($B, $A))\n    echo \"Array B is subarray of Array A\";\nelse\n    echo \"Array B is not subarray of Array A\";",
    "    $len_A = count($A);\n    $len_B = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $len_B) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3);\n$C = array(2, 3, 4);\n$D = array(2, 4);\n\necho is_Sub_Array($A, $B) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Sub_Array($A, $C) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Sub_Array($A, $D) ? \"Yes\" : \"No\";\necho \"\\n\";\n",
    "    $j = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        if ($A[$i] == $B[$j]) {\n            $j++;\n        }\n        if ($j == count($B)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 3, 4);\n$C = array(2, 4, 3);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\n\necho \"\\n\";\n\nif (is_Sub_Array($A, $C)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $count = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n            $count++;\n        } else {\n            $i++;\n        }\n    }\n    if ($count == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 0);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array B is subarray of Array A\";\n} else {\n    echo \"Array B is not subarray of Array A\";\n}\necho \"\\n\";\nif (is_Sub_Array($C, $A)) {\n    echo \"Array C is subarray of Array A\";\n} else {\n    echo \"Array C is not subarray of Array A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 3);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a sub array of Array A\";\n} else {\n    echo \"Array B is not a sub array of Array A\";\n}\n\necho \"<br>\";\n\nif (is_Sub_Array($A, $C)) {\n    echo \"Array C is a sub array of Array A\";\n} else {\n    echo \"Array C is not a sub array of Array A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == $m)\n            return 0;\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\nif (is_Sub_Array($B, $A))\n    echo \"YES\";\nelse\n    echo \"NO\";",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 3);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a subarray of Array A\";\n} else {\n    echo \"Array B is not a subarray of Array A\";\n}\n\necho \"<br>\";\n\nif (is_Sub_Array($A, $C)) {\n    echo \"Array C is a subarray of Array A\";\n} else {\n    echo \"Array C is not a subarray of Array A\";\n}",
    "    $j = 0;\n    for($i = 0; $i < count($A); $i++) {\n        if($A[$i] == $B[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        if($j == count($B)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 3, 4);\n\nif(is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 0);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array2 is a sub array of Array1\\n\";\n} else {\n    echo \"Array2 is not a sub array of Array1\\n\";\n}\nif (is_Sub_Array($C, $A)) {\n    echo \"Array3 is a sub array of Array1\\n\";\n} else {\n    echo \"Array3 is not a sub array of Array1\\n\";\n}",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $j = 0;\n    for ($i=0; $i < count($A); $i++) { \n        if($A[$i] == $B[$j]) {\n            $j++;\n        }\n        if($j == count($B)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$A = array(1,2,3,4,5,6,7,8,9,10);\n$B = array(1,2,3,4,5);\n$C = array(6,7,8,9,10);\n$D = array(1,2,3,4,5,6,7,8,9,10);\n$E = array(1,2,3,4,5,6,7,8,9,10,11);\n\necho is_Sub_Array($A, $B) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Sub_Array($A, $C) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Sub_Array($A, $D) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Sub_Array($A, $E) ? \"Yes\" : \"No\";\necho \"\\n\";\n",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 0);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array B is subarray of Array A\";\n} else {\n    echo \"Array B is not subarray of Array A\";\n}\necho \"\\n\";\nif (is_Sub_Array($C, $A)) {\n    echo \"Array C is subarray of Array A\";\n} else {\n    echo \"Array C is not subarray of Array A\";\n}",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == $m)\n            return 0;\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 4, 8, 16);\nif (is_Sub_Array($B, $A))\n    echo \"Array B is a sub array of Array A\";\nelse\n    echo \"Array B is not a sub array of Array A\";\necho \"<br>\";\nif (is_Sub_Array($C, $A))\n    echo \"Array C is a sub array of Array A\";\nelse\n    echo \"Array C is not a sub array of Array A\";",
    "    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a sub array of A\";\n} else {\n    echo \"Array B is not a sub array of A\";\n}"
  ]
}
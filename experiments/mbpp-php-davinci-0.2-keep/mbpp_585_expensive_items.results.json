{
  "name": "mbpp_585_expensive_items",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_585_expensive_items.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = array_sort($items, function($item) {\n    return $item['price'];\n  });\n\n  return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpu_onaxgi.php:4\nStack trace:\n#0 /tmp/tmpu_onaxgi.php(12): expensive_items(Array, 1)\n#1 /tmp/tmpu_onaxgi.php(16): candidate(Array, 1)\n#2 /tmp/tmpu_onaxgi.php(21): test()\n#3 {main}\n  thrown in /tmp/tmpu_onaxgi.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $b['price'] - $a['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 3],\n  ['name' => 'bananas', 'price' => 2],\n  ['name' => 'coconuts', 'price' => 5],\n  ['name' => 'dates', 'price' => 1],\n];\n\nprint_r(expensive_items($items, 2));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => coconuts\n            [price] => 5\n        )\n\n    [1] => Array\n        (\n            [name] => apples\n            [price] => 3\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = array_sort($items, 'price', SORT_DESC);\n    return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp1q6h2w9j.php:4\nStack trace:\n#0 /tmp/tmp1q6h2w9j.php(9): expensive_items(Array, 1)\n#1 /tmp/tmp1q6h2w9j.php(13): candidate(Array, 1)\n#2 /tmp/tmp1q6h2w9j.php(18): test()\n#3 {main}\n  thrown in /tmp/tmp1q6h2w9j.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = $items;\n  usort($sorted, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n\n$items = [\n  ['name' => 'Item 1', 'price' => 5],\n  ['name' => 'Item 2', 'price' => 10],\n  ['name' => 'Item 3', 'price' => 15],\n  ['name' => 'Item 4', 'price' => 20],\n  ['name' => 'Item 5', 'price' => 25],\n  ['name' => 'Item 6', 'price' => 30],\n  ['name' => 'Item 7', 'price' => 35],\n  ['name' => 'Item 8', 'price' => 40],\n  ['name' => 'Item 9', 'price' => 45],\n  ['name' => 'Item 10', 'price' => 50],\n];\n\nprint_r(expensive_items($items, 3));\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpwxrft1kl.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => Item 10\n            [price] => 50\n        )\n\n    [1] => Array\n        (\n            [name] => Item 9\n            [price] => 45\n        )\n\n    [2] => Array\n        (\n            [name] => Item 8\n            [price] => 40\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpwxrft1kl.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpwxrft1kl.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpwxrft1kl.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n\t$sorted_items = array_sort($items, 'price');\n\t$expensive_items = array_slice($sorted_items, 0, $n);\n\treturn $expensive_items;\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpy454w0ae.php:4\nStack trace:\n#0 /tmp/tmpy454w0ae.php(10): expensive_items(Array, 1)\n#1 /tmp/tmpy454w0ae.php(14): candidate(Array, 1)\n#2 /tmp/tmpy454w0ae.php(19): test()\n#3 {main}\n  thrown in /tmp/tmpy454w0ae.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n\t$prices = array();\n\tforeach ($items as $item) {\n\t\t$prices[] = $item['price'];\n\t}\n\tarray_multisort($prices, SORT_DESC, $items);\n\treturn array_slice($items, 0, $n);\n}\n\n$items = array(\n\tarray('name' => 'item1', 'price' => 10),\n\tarray('name' => 'item2', 'price' => 9),\n\tarray('name' => 'item3', 'price' => 12),\n\tarray('name' => 'item4', 'price' => 8),\n\tarray('name' => 'item5', 'price' => 11),\n\tarray('name' => 'item6', 'price' => 10),\n);\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => item3\n            [price] => 12\n        )\n\n    [1] => Array\n        (\n            [name] => item5\n            [price] => 11\n        )\n\n    [2] => Array\n        (\n            [name] => item1\n            [price] => 10\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted = array_sort($items, function($item) {\n        return $item['price'];\n    });\n    return array_slice($sorted, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp4w4efx2h.php:4\nStack trace:\n#0 /tmp/tmp4w4efx2h.php(11): expensive_items(Array, 1)\n#1 /tmp/tmp4w4efx2h.php(15): candidate(Array, 1)\n#2 /tmp/tmp4w4efx2h.php(20): test()\n#3 {main}\n  thrown in /tmp/tmp4w4efx2h.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $expensive_items = array();\n  $i = 0;\n  foreach ($items as $item) {\n    if ($i < $n) {\n      $expensive_items[] = $item;\n      $i++;\n    }\n    else {\n      $min_price = min($expensive_items);\n      if ($item > $min_price) {\n        $min_index = array_search($min_price, $expensive_items);\n        $expensive_items[$min_index] = $item;\n      }\n    }\n  }\n  return $expensive_items;\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp78fry1pl.php:28\nStack trace:\n#0 /tmp/tmp78fry1pl.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp78fry1pl.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'chair', 'price' => 200],\n  ['name' => 'desk', 'price' => 100],\n  ['name' => 'sofa', 'price' => 300],\n  ['name' => 'bed', 'price' => 400],\n  ['name' => 'table', 'price' => 50],\n];\n\nprint_r(expensive_items($items, 2));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpvxs4efvq.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => bed\n            [price] => 400\n        )\n\n    [1] => Array\n        (\n            [name] => sofa\n            [price] => 300\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpvxs4efvq.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpvxs4efvq.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpvxs4efvq.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n\t$sorted_items = array_sort($items, 'price', SORT_DESC);\n\treturn array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpu74pjad1.php:4\nStack trace:\n#0 /tmp/tmpu74pjad1.php(9): expensive_items(Array, 1)\n#1 /tmp/tmpu74pjad1.php(13): candidate(Array, 1)\n#2 /tmp/tmpu74pjad1.php(18): test()\n#3 {main}\n  thrown in /tmp/tmpu74pjad1.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = array();\n  foreach ($items as $item) {\n    $sorted_items[$item['price']] = $item;\n  }\n  krsort($sorted_items);\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = array(\n  array('name' => 'item1', 'price' => 10),\n  array('name' => 'item2', 'price' => 9),\n  array('name' => 'item3', 'price' => 12),\n  array('name' => 'item4', 'price' => 8),\n  array('name' => 'item5', 'price' => 11),\n  array('name' => 'item6', 'price' => 9),\n);\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => item3\n            [price] => 12\n        )\n\n    [1] => Array\n        (\n            [name] => item5\n            [price] => 11\n        )\n\n    [2] => Array\n        (\n            [name] => item1\n            [price] => 10\n        )\n\n)\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpa7uxl2hu.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpa7uxl2hu.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpa7uxl2hu.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpa7uxl2hu.php on line 6\n\nDeprecated: Implicit conversion from float 45.09 to int loses precision in /tmp/tmpa7uxl2hu.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpa7uxl2hu.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpa7uxl2hu.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = array_sort($items, 'price', SORT_DESC);\n    return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n    ['name' => 'coffee', 'price' => 3],\n    ['name' => 'tea', 'price' => 2],\n    ['name' => 'water', 'price' => 1],\n    ['name' => 'beer', 'price' => 5],\n    ['name' => 'wine', 'price' => 10],\n    ['name' => 'whiskey', 'price' => 15],\n];\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpud7suolk.php:4\nStack trace:\n#0 /tmp/tmpud7suolk.php(17): expensive_items(Array, 3)\n#1 {main}\n  thrown in /tmp/tmpud7suolk.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = array_sort($items, function($item) {\n    return $item['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmppsarmbq9.php:4\nStack trace:\n#0 /tmp/tmppsarmbq9.php(11): expensive_items(Array, 1)\n#1 /tmp/tmppsarmbq9.php(15): candidate(Array, 1)\n#2 /tmp/tmppsarmbq9.php(20): test()\n#3 {main}\n  thrown in /tmp/tmppsarmbq9.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = $items;\n  usort($sorted, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n\n$items = [\n  ['name' => 'item1', 'price' => 10],\n  ['name' => 'item2', 'price' => 9],\n  ['name' => 'item3', 'price' => 12],\n  ['name' => 'item4', 'price' => 8],\n  ['name' => 'item5', 'price' => 11],\n];\n\n$expensive_items = expensive_items($items, 3);\n\nforeach ($expensive_items as $item) {\n  echo $item['name'] . ': ' . $item['price'] . PHP_EOL;\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpcy0k0wfv.php on line 7\nitem3: 12\nitem5: 11\nitem1: 10\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpcy0k0wfv.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpcy0k0wfv.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpcy0k0wfv.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = array_sort($items, function($item) {\n    return $item['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpyqt1xgl_.php:4\nStack trace:\n#0 /tmp/tmpyqt1xgl_.php(11): expensive_items(Array, 1)\n#1 /tmp/tmpyqt1xgl_.php(15): candidate(Array, 1)\n#2 /tmp/tmpyqt1xgl_.php(20): test()\n#3 {main}\n  thrown in /tmp/tmpyqt1xgl_.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted = array_sort($items, function($item) {\n        return $item['price'];\n    });\n    return array_slice($sorted, 0, $n);\n}\n\n$items = [\n    ['name' => 'coffee', 'price' => 2.50],\n    ['name' => 'tea', 'price' => 1.50],\n    ['name' => 'biscuits', 'price' => 0.10],\n    ['name' => 'cake', 'price' => 1.00],\n];\n\n$most_expensive = expensive_items($items, 2);\n\nvar_dump($most_expensive);\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpuplzfc3d.php:4\nStack trace:\n#0 /tmp/tmpuplzfc3d.php(17): expensive_items(Array, 2)\n#1 {main}\n  thrown in /tmp/tmpuplzfc3d.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = array_sort($items, 'price', SORT_DESC);\n  return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpk3wq6id1.php:4\nStack trace:\n#0 /tmp/tmpk3wq6id1.php(9): expensive_items(Array, 1)\n#1 /tmp/tmpk3wq6id1.php(13): candidate(Array, 1)\n#2 /tmp/tmpk3wq6id1.php(18): test()\n#3 {main}\n  thrown in /tmp/tmpk3wq6id1.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = array_sort($items, function($item) {\n    return $item['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpyqt1xgl_.php:4\nStack trace:\n#0 /tmp/tmpyqt1xgl_.php(11): expensive_items(Array, 1)\n#1 /tmp/tmpyqt1xgl_.php(15): candidate(Array, 1)\n#2 /tmp/tmpyqt1xgl_.php(20): test()\n#3 {main}\n  thrown in /tmp/tmpyqt1xgl_.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = array_sort($items, function($item) {\n    return $item['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmppsarmbq9.php:4\nStack trace:\n#0 /tmp/tmppsarmbq9.php(11): expensive_items(Array, 1)\n#1 /tmp/tmppsarmbq9.php(15): candidate(Array, 1)\n#2 /tmp/tmppsarmbq9.php(20): test()\n#3 {main}\n  thrown in /tmp/tmppsarmbq9.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $expensive_items = [];\n    $i = 0;\n    foreach ($items as $item) {\n        if ($i < $n) {\n            $expensive_items[] = $item;\n            $i++;\n        } else {\n            $min_item = $expensive_items[0];\n            foreach ($expensive_items as $expensive_item) {\n                if ($expensive_item['price'] < $min_item['price']) {\n                    $min_item = $expensive_item;\n                }\n            }\n            if ($item['price'] > $min_item['price']) {\n                $expensive_items = array_diff($expensive_items, [$min_item]);\n                $expensive_items[] = $item;\n            }\n        }\n    }\n    return $expensive_items;\n}\n\n$items = [\n    ['name' => 'Item 1', 'price' => 100],\n    ['name' => 'Item 2', 'price' => 200],\n    ['name' => 'Item 3', 'price' => 300],\n    ['name' => 'Item 4', 'price' => 400],\n    ['name' => 'Item 5', 'price' => 500],\n    ['name' => 'Item 6', 'price' => 600],\n    ['name' => 'Item 7', 'price' => 700],\n    ['name' => 'Item 8', 'price' => 800],\n    ['name' => 'Item 9', 'price' => 900],\n    ['name' => 'Item 10', 'price' => 1000],\n];\n\n$n = 3;\n\n$expensive_items = expensive_items($items, $n);\n\nprint_r($expensive_items);\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nWarning: Array to string conversion in /tmp/tmp5upfigt5.php on line 18\n\nWarning: Array to string conversion in /tmp/tmp5upfigt5.php on line 18\n\nWarning: Array to string conversion in /tmp/tmp5upfigt5.php on line 18\n\nWarning: Array to string conversion in /tmp/tmp5upfigt5.php on line 18\n\nWarning: Array to string conversion in /tmp/tmp5upfigt5.php on line 18\n\nWarning: Array to string conversion in /tmp/tmp5upfigt5.php on line 18\n\nWarning: Array to string conversion in /tmp/tmp5upfigt5.php on line 18\n\nWarning: Array to string conversion in /tmp/tmp5upfigt5.php on line 18\n\nWarning: Array to string conversion in /tmp/tmp5upfigt5.php on line 18\n\nWarning: Array to string conversion in /tmp/tmp5upfigt5.php on line 18\n\nWarning: Array to string conversion in /tmp/tmp5upfigt5.php on line 18\n\nWarning: Array to string conversion in /tmp/tmp5upfigt5.php on line 18\n\nWarning: Array to string conversion in /tmp/tmp5upfigt5.php on line 18\n\nWarning: Array to string conversion in /tmp/tmp5upfigt5.php on line 18\n\nWarning: Array ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $items = array_filter($items, function($item) {\n        return $item['price'] > 0;\n    });\n\n    usort($items, function($a, $b) {\n        return $a['price'] < $b['price'];\n    });\n\n    return array_slice($items, 0, $n);\n}\n\n$items = [\n    ['name' => 'apples', 'price' => 0.5],\n    ['name' => 'bananas', 'price' => 0.3],\n    ['name' => 'carrots', 'price' => 0.6],\n    ['name' => 'dates', 'price' => 0.9],\n    ['name' => 'elderberries', 'price' => 0.2],\n    ['name' => 'figs', 'price' => 0.7],\n    ['name' => 'grapes', 'price' => 0.4],\n    ['name' => 'honeydew', 'price' => 0.8],\n    ['name' => 'iceberg lettuce', 'price' => 0.1],\n    ['name' => 'jalape\u00f1os', 'price' => 0.5],\n    ['name' => 'kiwi', 'price' => 0.3],\n    ['name' => 'lemons', 'price' => 0.6],\n    ['name' => 'mangoes', 'price' => 0.9],\n    ['name' => 'nectarines', 'price' => 0.2],\n    ['name' => 'oranges', 'price' => 0.7],\n    ['name' => 'papayas', 'price' => 0.4],\n    ['name' => 'quince', 'price' => 0.8],\n    ['name' => 'raspberries', 'price' => 0.1],\n    ['name' => 'strawberries', 'price' => 0.5],\n    ['name' => 'tomatoes', 'price' => 0.3],\n    ['name' => 'ugli fruit', 'price' => 0.6],\n    ['name' => 'vidalias', 'price' => 0.9],\n    ['name' => 'watermelon', 'price' => 0.\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmpkoa2pphc.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = $items;\n  usort($sorted, function($a, $b) {\n    return $b['price'] - $a['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 3],\n  ['name' => 'bananas', 'price' => 5],\n  ['name' => 'carrots', 'price' => 1],\n  ['name' => 'dates', 'price' => 10],\n];\n\nprint_r(expensive_items($items, 2));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => dates\n            [price] => 10\n        )\n\n    [1] => Array\n        (\n            [name] => bananas\n            [price] => 5\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = array_sort($items, 'price', SORT_DESC);\n    return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp1q6h2w9j.php:4\nStack trace:\n#0 /tmp/tmp1q6h2w9j.php(9): expensive_items(Array, 1)\n#1 /tmp/tmp1q6h2w9j.php(13): candidate(Array, 1)\n#2 /tmp/tmp1q6h2w9j.php(18): test()\n#3 {main}\n  thrown in /tmp/tmp1q6h2w9j.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = array_sort($items, function($item) {\n        return $item['price'];\n    });\n    return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpazg6tn2f.php:4\nStack trace:\n#0 /tmp/tmpazg6tn2f.php(11): expensive_items(Array, 1)\n#1 /tmp/tmpazg6tn2f.php(15): candidate(Array, 1)\n#2 /tmp/tmpazg6tn2f.php(20): test()\n#3 {main}\n  thrown in /tmp/tmpazg6tn2f.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = array();\n    foreach ($items as $item) {\n        $sorted_items[$item['price']] = $item;\n    }\n    krsort($sorted_items);\n    return array_slice($sorted_items, 0, $n);\n}\n\n$items = array(\n    array('name' => 'item1', 'price' => 10),\n    array('name' => 'item2', 'price' => 9),\n    array('name' => 'item3', 'price' => 12),\n    array('name' => 'item4', 'price' => 8),\n    array('name' => 'item5', 'price' => 11),\n    array('name' => 'item6', 'price' => 9),\n);\n\nprint_r(expensive_items($items, 3));\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => item3\n            [price] => 12\n        )\n\n    [1] => Array\n        (\n            [name] => item5\n            [price] => 11\n        )\n\n    [2] => Array\n        (\n            [name] => item1\n            [price] => 10\n        )\n\n)\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpmtll2zz2.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpmtll2zz2.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpmtll2zz2.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpmtll2zz2.php on line 6\n\nDeprecated: Implicit conversion from float 45.09 to int loses precision in /tmp/tmpmtll2zz2.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpmtll2zz2.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpmtll2zz2.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $b['price'] - $a['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 5],\n  ['name' => 'bananas', 'price' => 3],\n  ['name' => 'cherries', 'price' => 2],\n  ['name' => 'dates', 'price' => 4],\n  ['name' => 'eggplant', 'price' => 1],\n  ['name' => 'figs', 'price' => 6],\n  ['name' => 'grapes', 'price' => 7],\n  ['name' => 'honeydew', 'price' => 8],\n  ['name' => 'iceberg lettuce', 'price' => 9],\n  ['name' => 'jalapenos', 'price' => 10],\n  ['name' => 'kiwi', 'price' => 11],\n  ['name' => 'lemons', 'price' => 12],\n  ['name' => 'mangoes', 'price' => 13],\n  ['name' => 'nectarines', 'price' => 14],\n  ['name' => 'oranges', 'price' => 15],\n  ['name' => 'papaya', 'price' => 16],\n  ['name' => 'quince', 'price' => 17],\n  ['name' => 'raspberries', 'price' => 18],\n  ['name' => 'strawberries', 'price' => 19],\n  ['name' => 'tomatoes', 'price' => 20],\n  ['name' => 'ugli fruit', 'price' => 21],\n  ['name' => 'vidalias', 'price' => 22],\n  ['name' => 'watermelon', 'price' => 23],\n  ['name' => 'xigua', 'price' => 24],\n  ['name' => 'yams', 'price' => 25],\n  ['name' => 'zucchini', 'price' => 26],\n];\n\nprint_r(expensive_\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp0c4bcbr_.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted = array();\n    foreach ($items as $item) {\n        $sorted[$item['price']] = $item;\n    }\n    krsort($sorted);\n    return array_slice($sorted, 0, $n);\n}\n\n$items = array(\n    array('name' => 'item1', 'price' => 10),\n    array('name' => 'item2', 'price' => 9),\n    array('name' => 'item3', 'price' => 12),\n    array('name' => 'item4', 'price' => 8),\n    array('name' => 'item5', 'price' => 11),\n    array('name' => 'item6', 'price' => 10),\n);\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => item3\n            [price] => 12\n        )\n\n    [1] => Array\n        (\n            [name] => item5\n            [price] => 11\n        )\n\n    [2] => Array\n        (\n            [name] => item6\n            [price] => 10\n        )\n\n)\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpz9dvxugx.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpz9dvxugx.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpz9dvxugx.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpz9dvxugx.php on line 6\n\nDeprecated: Implicit conversion from float 45.09 to int loses precision in /tmp/tmpz9dvxugx.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpz9dvxugx.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpz9dvxugx.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted = $items;\n    usort($sorted, function($a, $b) {\n        return $a['price'] < $b['price'];\n    });\n    return array_slice($sorted, 0, $n);\n}\n\n$items = [\n    ['name' => 'chair', 'price' => 100],\n    ['name' => 'desk', 'price' => 200],\n    ['name' => 'lamp', 'price' => 10],\n    ['name' => 'book', 'price' => 5],\n    ['name' => 'computer', 'price' => 1000],\n    ['name' => 'pen', 'price' => 1],\n    ['name' => 'door', 'price' => 100],\n];\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123250,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmphsqswbq3.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => computer\n            [price] => 1000\n        )\n\n    [1] => Array\n        (\n            [name] => desk\n            [price] => 200\n        )\n\n    [2] => Array\n        (\n            [name] => chair\n            [price] => 100\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmphsqswbq3.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmphsqswbq3.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmphsqswbq3.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = array_sort($items, function($item) {\n    return $item['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmppsarmbq9.php:4\nStack trace:\n#0 /tmp/tmppsarmbq9.php(11): expensive_items(Array, 1)\n#1 /tmp/tmppsarmbq9.php(15): candidate(Array, 1)\n#2 /tmp/tmppsarmbq9.php(20): test()\n#3 {main}\n  thrown in /tmp/tmppsarmbq9.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = $items;\n  usort($sorted, function($a, $b) {\n    return $b['price'] - $a['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n\n$items = [\n  ['name' => 'Item 1', 'price' => 10],\n  ['name' => 'Item 2', 'price' => 20],\n  ['name' => 'Item 3', 'price' => 30],\n  ['name' => 'Item 4', 'price' => 40],\n  ['name' => 'Item 5', 'price' => 50],\n  ['name' => 'Item 6', 'price' => 60],\n  ['name' => 'Item 7', 'price' => 70],\n  ['name' => 'Item 8', 'price' => 80],\n  ['name' => 'Item 9', 'price' => 90],\n  ['name' => 'Item 10', 'price' => 100],\n];\n\n$expensive_items = expensive_items($items, 3);\n\nforeach ($expensive_items as $item) {\n  echo $item['name'] . ': ' . $item['price'] . PHP_EOL;\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "Item 10: 100\nItem 9: 90\nItem 8: 80\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 100],\n  ['name' => 'bananas', 'price' => 200],\n  ['name' => 'cherries', 'price' => 300],\n  ['name' => 'dates', 'price' => 400],\n  ['name' => 'eggplants', 'price' => 500],\n  ['name' => 'figs', 'price' => 600],\n  ['name' => 'grapes', 'price' => 700],\n  ['name' => 'honeydew', 'price' => 800],\n  ['name' => 'iceberg lettuce', 'price' => 900],\n  ['name' => 'jicama', 'price' => 1000],\n];\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpb5mscajy.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => jicama\n            [price] => 1000\n        )\n\n    [1] => Array\n        (\n            [name] => iceberg lettuce\n            [price] => 900\n        )\n\n    [2] => Array\n        (\n            [name] => honeydew\n            [price] => 800\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpb5mscajy.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpb5mscajy.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpb5mscajy.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'Item 1', 'price' => 10],\n  ['name' => 'Item 2', 'price' => 20],\n  ['name' => 'Item 3', 'price' => 30],\n  ['name' => 'Item 4', 'price' => 40],\n  ['name' => 'Item 5', 'price' => 50],\n  ['name' => 'Item 6', 'price' => 60],\n  ['name' => 'Item 7', 'price' => 70],\n  ['name' => 'Item 8', 'price' => 80],\n  ['name' => 'Item 9', 'price' => 90],\n  ['name' => 'Item 10', 'price' => 100],\n];\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpsbs6aq_b.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => Item 10\n            [price] => 100\n        )\n\n    [1] => Array\n        (\n            [name] => Item 9\n            [price] => 90\n        )\n\n    [2] => Array\n        (\n            [name] => Item 8\n            [price] => 80\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpsbs6aq_b.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpsbs6aq_b.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpsbs6aq_b.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 100],\n  ['name' => 'bananas', 'price' => 200],\n  ['name' => 'cherries', 'price' => 300],\n  ['name' => 'dates', 'price' => 400],\n  ['name' => 'eggplant', 'price' => 500],\n  ['name' => 'figs', 'price' => 600],\n  ['name' => 'grapes', 'price' => 700],\n  ['name' => 'honeydew', 'price' => 800],\n  ['name' => 'iceberg lettuce', 'price' => 900],\n  ['name' => 'jicama', 'price' => 1000],\n];\n\n$n = 3;\n\n$most_expensive_items = expensive_items($items, $n);\n\nprint_r($most_expensive_items);\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpgk535rm9.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => jicama\n            [price] => 1000\n        )\n\n    [1] => Array\n        (\n            [name] => iceberg lettuce\n            [price] => 900\n        )\n\n    [2] => Array\n        (\n            [name] => honeydew\n            [price] => 800\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpgk535rm9.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpgk535rm9.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpgk535rm9.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $items_by_price = [];\n    foreach ($items as $item) {\n        $items_by_price[$item['price']] = $item;\n    }\n    krsort($items_by_price);\n    return array_slice($items_by_price, 0, $n);\n}\n\n$items = [\n    ['name' => 'apples', 'price' => 2.50],\n    ['name' => 'bananas', 'price' => 1.50],\n    ['name' => 'oranges', 'price' => 3.00],\n    ['name' => 'pears', 'price' => 2.00],\n    ['name' => 'grapes', 'price' => 4.00],\n    ['name' => 'strawberries', 'price' => 3.50],\n    ['name' => 'blueberries', 'price' => 4.50],\n    ['name' => 'raspberries', 'price' => 5.00],\n    ['name' => 'blackberries', 'price' => 5.50],\n    ['name' => 'watermelon', 'price' => 6.00],\n];\n\n$expensive_items = expensive_items($items, 3);\nvar_dump($expensive_items);\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "\nDeprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmp3pvao7ib.php on line 6\n\nDeprecated: Implicit conversion from float 1.5 to int loses precision in /tmp/tmp3pvao7ib.php on line 6\n\nDeprecated: Implicit conversion from float 3.5 to int loses precision in /tmp/tmp3pvao7ib.php on line 6\n\nDeprecated: Implicit conversion from float 4.5 to int loses precision in /tmp/tmp3pvao7ib.php on line 6\n\nDeprecated: Implicit conversion from float 5.5 to int loses precision in /tmp/tmp3pvao7ib.php on line 6\narray(3) {\n  [0]=>\n  array(2) {\n    [\"name\"]=>\n    string(10) \"watermelon\"\n    [\"price\"]=>\n    float(6)\n  }\n  [1]=>\n  array(2) {\n    [\"name\"]=>\n    string(12) \"blackberries\"\n    [\"price\"]=>\n    float(5.5)\n  }\n  [2]=>\n  array(2) {\n    [\"name\"]=>\n    string(11) \"blueberries\"\n    [\"price\"]=>\n    float(4.5)\n  }\n}\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmp3pvao7ib.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = array_sort($items, 'price', SORT_DESC);\n  return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpk3wq6id1.php:4\nStack trace:\n#0 /tmp/tmpk3wq6id1.php(9): expensive_items(Array, 1)\n#1 /tmp/tmpk3wq6id1.php(13): candidate(Array, 1)\n#2 /tmp/tmpk3wq6id1.php(18): test()\n#3 {main}\n  thrown in /tmp/tmpk3wq6id1.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = array_sort($items, function($item) {\n    return $item['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpyqt1xgl_.php:4\nStack trace:\n#0 /tmp/tmpyqt1xgl_.php(11): expensive_items(Array, 1)\n#1 /tmp/tmpyqt1xgl_.php(15): candidate(Array, 1)\n#2 /tmp/tmpyqt1xgl_.php(20): test()\n#3 {main}\n  thrown in /tmp/tmpyqt1xgl_.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted = array();\n    foreach ($items as $item) {\n        $sorted[$item['price']] = $item;\n    }\n    krsort($sorted);\n    return array_slice($sorted, 0, $n);\n}\n\n$items = array(\n    array('name' => 'item1', 'price' => 10),\n    array('name' => 'item2', 'price' => 5),\n    array('name' => 'item3', 'price' => 15),\n    array('name' => 'item4', 'price' => 20),\n    array('name' => 'item5', 'price' => 25),\n    array('name' => 'item6', 'price' => 30),\n    array('name' => 'item7', 'price' => 35),\n    array('name' => 'item8', 'price' => 40),\n    array('name' => 'item9', 'price' => 45),\n    array('name' => 'item10', 'price' => 50),\n    array('name' => 'item11', 'price' => 55),\n    array('name' => 'item12', 'price' => 60),\n    array('name' => 'item13', 'price' => 65),\n    array('name' => 'item14', 'price' => 70),\n    array('name' => 'item15', 'price' => 75),\n    array('name' => 'item16', 'price' => 80),\n    array('name' => 'item17', 'price' => 85),\n    array('name' => 'item18', 'price' => 90),\n    array('name' => 'item19', 'price' => 95),\n    array('name' => 'item20', 'price' => 100),\n);\n\n$n = 5;\n\n$result = expensive_items($items, $n);\n\necho '<pre>';\nprint_r($result);\necho '</pre>';\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "<pre>Array\n(\n    [0] => Array\n        (\n            [name] => item20\n            [price] => 100\n        )\n\n    [1] => Array\n        (\n            [name] => item19\n            [price] => 95\n        )\n\n    [2] => Array\n        (\n            [name] => item18\n            [price] => 90\n        )\n\n    [3] => Array\n        (\n            [name] => item17\n            [price] => 85\n        )\n\n    [4] => Array\n        (\n            [name] => item16\n            [price] => 80\n        )\n\n)\n</pre>\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpn2mlryn8.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpn2mlryn8.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpn2mlryn8.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpn2mlryn8.php on line 6\n\nDeprecated: Implicit conversion from float 45.09 to int loses precision in /tmp/tmpn2mlryn8.php on line 6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = array_sort($items, 'price');\n  return array_slice($sorted, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123250,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp2te1pil6.php:4\nStack trace:\n#0 /tmp/tmp2te1pil6.php(9): expensive_items(Array, 1)\n#1 /tmp/tmp2te1pil6.php(13): candidate(Array, 1)\n#2 /tmp/tmp2te1pil6.php(18): test()\n#3 {main}\n  thrown in /tmp/tmp2te1pil6.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = array();\n    foreach ($items as $item) {\n        $sorted_items[$item['price']] = $item;\n    }\n    krsort($sorted_items);\n    return array_slice($sorted_items, 0, $n);\n}\n\n$items = array(\n    array('name' => 'item1', 'price' => 10),\n    array('name' => 'item2', 'price' => 9),\n    array('name' => 'item3', 'price' => 12),\n    array('name' => 'item4', 'price' => 8),\n    array('name' => 'item5', 'price' => 11),\n    array('name' => 'item6', 'price' => 9),\n);\n\n$expensive_items = expensive_items($items, 3);\n\nforeach ($expensive_items as $item) {\n    echo $item['name'] . ' ' . $item['price'] . \"\\n\";\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "item3 12\nitem5 11\nitem1 10\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmp4hdg9nuy.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmp4hdg9nuy.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmp4hdg9nuy.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmp4hdg9nuy.php on line 6\n\nDeprecated: Implicit conversion from float 45.09 to int loses precision in /tmp/tmp4hdg9nuy.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmp4hdg9nuy.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmp4hdg9nuy.php on line 6\n\nDeprecated: Implicit conversion from float 45.09 to int loses precision in /tmp/tmp4hdg9nuy.php on line 6\n\nDeprecated: Implicit conversion from float 22.75 to int loses precision in /tmp/tmp4hdg9nuy.php on line 6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 3],\n  ['name' => 'bananas', 'price' => 5],\n  ['name' => 'carrots', 'price' => 1],\n  ['name' => 'dates', 'price' => 10],\n];\n\nvar_dump(expensive_items($items, 2));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpctp9obed.php on line 7\narray(2) {\n  [0]=>\n  array(2) {\n    [\"name\"]=>\n    string(5) \"dates\"\n    [\"price\"]=>\n    int(10)\n  }\n  [1]=>\n  array(2) {\n    [\"name\"]=>\n    string(7) \"bananas\"\n    [\"price\"]=>\n    int(5)\n  }\n}\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpctp9obed.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpctp9obed.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpctp9obed.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = array_sort($items, 'price', SORT_DESC);\n  $expensive_items = array_slice($sorted_items, 0, $n);\n  return $expensive_items;\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpb1nu8ct0.php:4\nStack trace:\n#0 /tmp/tmpb1nu8ct0.php(10): expensive_items(Array, 1)\n#1 /tmp/tmpb1nu8ct0.php(14): candidate(Array, 1)\n#2 /tmp/tmpb1nu8ct0.php(19): test()\n#3 {main}\n  thrown in /tmp/tmpb1nu8ct0.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = array();\n  foreach ($items as $item) {\n    $sorted_items[$item['price']] = $item;\n  }\n  krsort($sorted_items);\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = array(\n  array('name' => 'A', 'price' => 10),\n  array('name' => 'B', 'price' => 5),\n  array('name' => 'C', 'price' => 15),\n  array('name' => 'D', 'price' => 20),\n  array('name' => 'E', 'price' => 25),\n  array('name' => 'F', 'price' => 30),\n  array('name' => 'G', 'price' => 35),\n  array('name' => 'H', 'price' => 40),\n  array('name' => 'I', 'price' => 45),\n  array('name' => 'J', 'price' => 50),\n);\n\nprint_r(expensive_items($items, 3));\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => J\n            [price] => 50\n        )\n\n    [1] => Array\n        (\n            [name] => I\n            [price] => 45\n        )\n\n    [2] => Array\n        (\n            [name] => H\n            [price] => 40\n        )\n\n)\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpas47e6cf.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpas47e6cf.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpas47e6cf.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpas47e6cf.php on line 6\n\nDeprecated: Implicit conversion from float 45.09 to int loses precision in /tmp/tmpas47e6cf.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpas47e6cf.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpas47e6cf.php on line ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = array();\n  foreach ($items as $item) {\n    $sorted[$item['price']] = $item;\n  }\n  krsort($sorted);\n  return array_slice($sorted, 0, $n);\n}\n\n$items = array(\n  array('name' => 'item1', 'price' => 10),\n  array('name' => 'item2', 'price' => 9),\n  array('name' => 'item3', 'price' => 12),\n  array('name' => 'item4', 'price' => 8),\n  array('name' => 'item5', 'price' => 11),\n  array('name' => 'item6', 'price' => 10),\n);\n\nprint_r(expensive_items($items, 3));\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => item3\n            [price] => 12\n        )\n\n    [1] => Array\n        (\n            [name] => item5\n            [price] => 11\n        )\n\n    [2] => Array\n        (\n            [name] => item6\n            [price] => 10\n        )\n\n)\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpqct4zw4j.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpqct4zw4j.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpqct4zw4j.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpqct4zw4j.php on line 6\n\nDeprecated: Implicit conversion from float 45.09 to int loses precision in /tmp/tmpqct4zw4j.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpqct4zw4j.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpqct4zw4j.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = array();\n  foreach ($items as $item) {\n    $sorted_items[$item['name']] = $item['price'];\n  }\n  arsort($sorted_items);\n  $sorted_items = array_slice($sorted_items, 0, $n, true);\n  $expensive_items = array();\n  foreach ($sorted_items as $name => $price) {\n    $expensive_items[] = array('name' => $name, 'price' => $price);\n  }\n  return $expensive_items;\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $expensive_items = array();\n  $i = 0;\n  foreach ($items as $item) {\n    if ($i < $n) {\n      $expensive_items[] = $item;\n      $i++;\n    } else {\n      $min = $expensive_items[0];\n      $min_index = 0;\n      foreach ($expensive_items as $index => $expensive_item) {\n        if ($expensive_item['price'] < $min['price']) {\n          $min = $expensive_item;\n          $min_index = $index;\n        }\n      }\n      if ($item['price'] > $min['price']) {\n        $expensive_items[$min_index] = $item;\n      }\n    }\n  }\n  return $expensive_items;\n}\n\n$items = array(\n  array('name' => 'item1', 'price' => 10),\n  array('name' => 'item2', 'price' => 9),\n  array('name' => 'item3', 'price' => 12),\n  array('name' => 'item4', 'price' => 8),\n  array('name' => 'item5', 'price' => 15),\n  array('name' => 'item6', 'price' => 7),\n  array('name' => 'item7', 'price' => 14),\n  array('name' => 'item8', 'price' => 11),\n  array('name' => 'item9', 'price' => 13),\n  array('name' => 'item10', 'price' => 16),\n  array('name' => 'item11', 'price' => 6),\n);\n\n$n = 3;\n\nprint_r(expensive_items($items, $n));\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => item7\n            [price] => 14\n        )\n\n    [1] => Array\n        (\n            [name] => item5\n            [price] => 15\n        )\n\n    [2] => Array\n        (\n            [name] => item10\n            [price] => 16\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyghped9z.php:50\nStack trace:\n#0 /tmp/tmpyghped9z.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpyghped9z.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted = array_sort($items, function($item) {\n        return $item['price'];\n    });\n    return array_slice($sorted, 0, $n);\n}\n\n$items = [\n    ['name' => 'coffee', 'price' => 2.50],\n    ['name' => 'tea', 'price' => 1.50],\n    ['name' => 'biscuits', 'price' => 0.10],\n    ['name' => 'cake', 'price' => 1.00],\n];\n\n$expensive_items = expensive_items($items, 2);\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpx79aguq_.php:4\nStack trace:\n#0 /tmp/tmpx79aguq_.php(17): expensive_items(Array, 2)\n#1 {main}\n  thrown in /tmp/tmpx79aguq_.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = array_sort($items, function($item) {\n    return $item['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpyqt1xgl_.php:4\nStack trace:\n#0 /tmp/tmpyqt1xgl_.php(11): expensive_items(Array, 1)\n#1 /tmp/tmpyqt1xgl_.php(15): candidate(Array, 1)\n#2 /tmp/tmpyqt1xgl_.php(20): test()\n#3 {main}\n  thrown in /tmp/tmpyqt1xgl_.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = array_sort($items, function($item) {\n    return $item['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmppsarmbq9.php:4\nStack trace:\n#0 /tmp/tmppsarmbq9.php(11): expensive_items(Array, 1)\n#1 /tmp/tmppsarmbq9.php(15): candidate(Array, 1)\n#2 /tmp/tmppsarmbq9.php(20): test()\n#3 {main}\n  thrown in /tmp/tmppsarmbq9.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted = array_sort($items, function($item) {\n        return $item['price'];\n    });\n    return array_slice($sorted, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp4w4efx2h.php:4\nStack trace:\n#0 /tmp/tmp4w4efx2h.php(11): expensive_items(Array, 1)\n#1 /tmp/tmp4w4efx2h.php(15): candidate(Array, 1)\n#2 /tmp/tmp4w4efx2h.php(20): test()\n#3 {main}\n  thrown in /tmp/tmp4w4efx2h.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $items = array_filter($items, function($item) {\n        return $item['price'] > 0;\n    });\n    usort($items, function($a, $b) {\n        return $a['price'] < $b['price'];\n    });\n    return array_slice($items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp8pyac2ne.php on line 9\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp8pyac2ne.php on line 9\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp8pyac2ne.php on line 9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = array_sort($items, function($item) {\n        return $item['price'];\n    });\n    return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpazg6tn2f.php:4\nStack trace:\n#0 /tmp/tmpazg6tn2f.php(11): expensive_items(Array, 1)\n#1 /tmp/tmpazg6tn2f.php(15): candidate(Array, 1)\n#2 /tmp/tmpazg6tn2f.php(20): test()\n#3 {main}\n  thrown in /tmp/tmpazg6tn2f.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 100],\n  ['name' => 'bananas', 'price' => 200],\n  ['name' => 'carrots', 'price' => 50],\n  ['name' => 'dates', 'price' => 300],\n  ['name' => 'eggplant', 'price' => 400],\n  ['name' => 'figs', 'price' => 500],\n  ['name' => 'grapes', 'price' => 600],\n  ['name' => 'honeydew', 'price' => 700],\n  ['name' => 'iceberg lettuce', 'price' => 800],\n  ['name' => 'jalapenos', 'price' => 900],\n  ['name' => 'kiwi', 'price' => 1000],\n  ['name' => 'lemons', 'price' => 1100],\n  ['name' => 'mangoes', 'price' => 1200],\n  ['name' => 'nectarines', 'price' => 1300],\n  ['name' => 'oranges', 'price' => 1400],\n  ['name' => 'pineapples', 'price' => 1500],\n  ['name' => 'quince', 'price' => 1600],\n  ['name' => 'raspberries', 'price' => 1700],\n  ['name' => 'strawberries', 'price' => 1800],\n  ['name' => 'tomatoes', 'price' => 1900],\n  ['name' => 'ugli fruit', 'price' => 2000],\n  ['name' => 'vidalias', 'price' => 2100],\n  ['name' => 'watermelon', 'price' => 2200],\n  ['name' => 'xigua', 'price' => 2300],\n  ['name' => 'yams', 'price' => 2400],\n  ['name' => 'zucchini', 'price' => 2500],\n];\n\n$n = 5\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpqfczf18u.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = $items;\n  usort($sorted, function($a, $b) {\n    return $b['price'] - $a['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 1.00],\n  ['name' => 'bananas', 'price' => 0.50],\n  ['name' => 'cherries', 'price' => 2.00],\n  ['name' => 'dates', 'price' => 3.00],\n  ['name' => 'eggplant', 'price' => 1.25],\n  ['name' => 'figs', 'price' => 2.50],\n  ['name' => 'grapes', 'price' => 1.75],\n  ['name' => 'honeydew', 'price' => 3.50],\n  ['name' => 'iceberg lettuce', 'price' => 0.75],\n  ['name' => 'jicama', 'price' => 1.50],\n  ['name' => 'kale', 'price' => 2.25],\n  ['name' => 'lemons', 'price' => 1.00],\n  ['name' => 'mangos', 'price' => 2.00],\n  ['name' => 'nectarines', 'price' => 3.00],\n  ['name' => 'oranges', 'price' => 0.75],\n  ['name' => 'peaches', 'price' => 1.50],\n  ['name' => 'quince', 'price' => 2.25],\n  ['name' => 'raspberries', 'price' => 3.00],\n  ['name' => 'strawberries', 'price' => 0.75],\n  ['name' => 'tomatoes', 'price' => 1.50],\n  ['name' => 'ugli fruit', 'price' => 2.25],\n  ['name' => 'watermelon', 'price' => 3.00],\n  ['name' => 'xigua', 'price' => 0.75],\n  ['name' => 'yams', 'price' => 1.50],\n  ['name\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "\nParse error: syntax error, unexpected string content \"name\", expecting \"]\" in /tmp/tmpy95kthkc.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $prices = array();\n  foreach ($items as $item) {\n    $prices[] = $item['price'];\n  }\n  rsort($prices);\n  $prices = array_slice($prices, 0, $n);\n  $expensive_items = array();\n  foreach ($items as $item) {\n    if (in_array($item['price'], $prices)) {\n      $expensive_items[] = $item;\n    }\n  }\n  return $expensive_items;\n}\n\n$items = array(\n  array('name' => 'item1', 'price' => 10),\n  array('name' => 'item2', 'price' => 9),\n  array('name' => 'item3', 'price' => 12),\n  array('name' => 'item4', 'price' => 8),\n  array('name' => 'item5', 'price' => 11),\n  array('name' => 'item6', 'price' => 10),\n);\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => item1\n            [price] => 10\n        )\n\n    [1] => Array\n        (\n            [name] => item3\n            [price] => 12\n        )\n\n    [2] => Array\n        (\n            [name] => item5\n            [price] => 11\n        )\n\n    [3] => Array\n        (\n            [name] => item6\n            [price] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyp1y8mki.php:36\nStack trace:\n#0 /tmp/tmpyp1y8mki.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpyp1y8mki.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = array_sort($items, 'price');\n    return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123250,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpclkzz6e0.php:4\nStack trace:\n#0 /tmp/tmpclkzz6e0.php(9): expensive_items(Array, 1)\n#1 /tmp/tmpclkzz6e0.php(13): candidate(Array, 1)\n#2 /tmp/tmpclkzz6e0.php(18): test()\n#3 {main}\n  thrown in /tmp/tmpclkzz6e0.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = $items;\n    usort($sorted_items, function($a, $b) {\n        return $a['price'] < $b['price'];\n    });\n    return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n    ['name' => 'coffee', 'price' => 2.50],\n    ['name' => 'tea', 'price' => 1.50],\n    ['name' => 'biscuits', 'price' => 0.10],\n    ['name' => 'cake', 'price' => 1.00],\n];\n\nvar_dump(expensive_items($items, 2));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpso6yq79a.php on line 7\narray(2) {\n  [0]=>\n  array(2) {\n    [\"name\"]=>\n    string(6) \"coffee\"\n    [\"price\"]=>\n    float(2.5)\n  }\n  [1]=>\n  array(2) {\n    [\"name\"]=>\n    string(3) \"tea\"\n    [\"price\"]=>\n    float(1.5)\n  }\n}\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpso6yq79a.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpso6yq79a.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpso6yq79a.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 2.50],\n  ['name' => 'bananas', 'price' => 1.50],\n  ['name' => 'oranges', 'price' => 3.00],\n  ['name' => 'pears', 'price' => 2.00],\n  ['name' => 'grapes', 'price' => 4.00],\n  ['name' => 'pineapples', 'price' => 5.00],\n];\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpjt8yakfi.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => pineapples\n            [price] => 5\n        )\n\n    [1] => Array\n        (\n            [name] => grapes\n            [price] => 4\n        )\n\n    [2] => Array\n        (\n            [name] => oranges\n            [price] => 3\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpjt8yakfi.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpjt8yakfi.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpjt8yakfi.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 3],\n  ['name' => 'bananas', 'price' => 5],\n  ['name' => 'pears', 'price' => 2],\n  ['name' => 'oranges', 'price' => 4],\n  ['name' => 'grapes', 'price' => 1],\n];\n\nvar_dump(expensive_items($items, 3));\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpgtj_93ha.php on line 7\narray(3) {\n  [0]=>\n  array(2) {\n    [\"name\"]=>\n    string(7) \"bananas\"\n    [\"price\"]=>\n    int(5)\n  }\n  [1]=>\n  array(2) {\n    [\"name\"]=>\n    string(7) \"oranges\"\n    [\"price\"]=>\n    int(4)\n  }\n  [2]=>\n  array(2) {\n    [\"name\"]=>\n    string(6) \"apples\"\n    [\"price\"]=>\n    int(3)\n  }\n}\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpgtj_93ha.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpgtj_93ha.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpgtj_93ha.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 1.00],\n  ['name' => 'oranges', 'price' => 2.00],\n  ['name' => 'bananas', 'price' => 3.00],\n  ['name' => 'grapes', 'price' => 4.00],\n  ['name' => 'pineapples', 'price' => 5.00],\n  ['name' => 'mangoes', 'price' => 6.00],\n  ['name' => 'peaches', 'price' => 7.00],\n  ['name' => 'strawberries', 'price' => 8.00],\n  ['name' => 'blueberries', 'price' => 9.00],\n  ['name' => 'watermelons', 'price' => 10.00],\n];\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp8rihfdvj.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => watermelons\n            [price] => 10\n        )\n\n    [1] => Array\n        (\n            [name] => blueberries\n            [price] => 9\n        )\n\n    [2] => Array\n        (\n            [name] => strawberries\n            [price] => 8\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp8rihfdvj.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp8rihfdvj.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp8rihfdvj.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted = $items;\n    usort($sorted, function($a, $b) {\n        return $a['price'] < $b['price'];\n    });\n    return array_slice($sorted, 0, $n);\n}\n\n$items = [\n    ['name' => 'coffee', 'price' => 3.50],\n    ['name' => 'tea', 'price' => 2.50],\n    ['name' => 'water', 'price' => 1.00],\n    ['name' => 'soda', 'price' => 2.00],\n    ['name' => 'juice', 'price' => 3.00],\n    ['name' => 'milk', 'price' => 2.50],\n    ['name' => 'beer', 'price' => 4.00],\n    ['name' => 'wine', 'price' => 5.00],\n    ['name' => 'whiskey', 'price' => 6.00],\n    ['name' => 'vodka', 'price' => 7.00],\n];\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp63in5w_d.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => vodka\n            [price] => 7\n        )\n\n    [1] => Array\n        (\n            [name] => whiskey\n            [price] => 6\n        )\n\n    [2] => Array\n        (\n            [name] => wine\n            [price] => 5\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp63in5w_d.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp63in5w_d.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp63in5w_d.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = $items;\n  usort($sorted, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n\n$items = [\n  ['name' => 'item1', 'price' => 10],\n  ['name' => 'item2', 'price' => 9],\n  ['name' => 'item3', 'price' => 12],\n  ['name' => 'item4', 'price' => 8],\n  ['name' => 'item5', 'price' => 11],\n];\n\nprint_r(expensive_items($items, 3));\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpdn8291oa.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => item3\n            [price] => 12\n        )\n\n    [1] => Array\n        (\n            [name] => item5\n            [price] => 11\n        )\n\n    [2] => Array\n        (\n            [name] => item1\n            [price] => 10\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpdn8291oa.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpdn8291oa.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpdn8291oa.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = array_sort($items, function($item) {\n    return $item['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpyqt1xgl_.php:4\nStack trace:\n#0 /tmp/tmpyqt1xgl_.php(11): expensive_items(Array, 1)\n#1 /tmp/tmpyqt1xgl_.php(15): candidate(Array, 1)\n#2 /tmp/tmpyqt1xgl_.php(20): test()\n#3 {main}\n  thrown in /tmp/tmpyqt1xgl_.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = array_sort($items, function($item) {\n        return $item['price'];\n    });\n    return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpazg6tn2f.php:4\nStack trace:\n#0 /tmp/tmpazg6tn2f.php(11): expensive_items(Array, 1)\n#1 /tmp/tmpazg6tn2f.php(15): candidate(Array, 1)\n#2 /tmp/tmpazg6tn2f.php(20): test()\n#3 {main}\n  thrown in /tmp/tmpazg6tn2f.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $expensive_items = array();\n    $i = 0;\n    foreach ($items as $item) {\n        if ($i < $n) {\n            $expensive_items[] = $item;\n            $i++;\n        } else {\n            $min_price = min($expensive_items);\n            if ($item > $min_price) {\n                $min_price_key = array_search($min_price, $expensive_items);\n                $expensive_items[$min_price_key] = $item;\n            }\n        }\n    }\n    return $expensive_items;\n}\n\n$items = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$n = 3;\nprint_r(expensive_items($items, $n));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 8\n    [2] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5qtl6yhl.php:31\nStack trace:\n#0 /tmp/tmp5qtl6yhl.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5qtl6yhl.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = $items;\n    usort($sorted_items, function($a, $b) {\n        return $a['price'] < $b['price'];\n    });\n    return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n    ['name' => 'coffee', 'price' => 2.50],\n    ['name' => 'tea', 'price' => 1.50],\n    ['name' => 'biscuits', 'price' => 0.10],\n    ['name' => 'tissues', 'price' => 0.02],\n    ['name' => 'chocolate', 'price' => 0.25],\n    ['name' => 'sandwich', 'price' => 2.00],\n    ['name' => 'crisps', 'price' => 0.15],\n    ['name' => 'water', 'price' => 0.05],\n    ['name' => 'juice', 'price' => 0.30],\n    ['name' => 'bread', 'price' => 0.20],\n];\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpg3dgew5b.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => coffee\n            [price] => 2.5\n        )\n\n    [1] => Array\n        (\n            [name] => sandwich\n            [price] => 2\n        )\n\n    [2] => Array\n        (\n            [name] => tea\n            [price] => 1.5\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpg3dgew5b.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpg3dgew5b.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpg3dgew5b.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = array();\n  foreach ($items as $item) {\n    $sorted_items[$item['price']] = $item;\n  }\n  krsort($sorted_items);\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = array(\n  array('name' => 'item1', 'price' => 10),\n  array('name' => 'item2', 'price' => 9),\n  array('name' => 'item3', 'price' => 12),\n  array('name' => 'item4', 'price' => 8),\n  array('name' => 'item5', 'price' => 11),\n);\n\nprint_r(expensive_items($items, 2));\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => item3\n            [price] => 12\n        )\n\n    [1] => Array\n        (\n            [name] => item5\n            [price] => 11\n        )\n\n)\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmp_jpnq98c.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmp_jpnq98c.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmp_jpnq98c.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmp_jpnq98c.php on line 6\n\nDeprecated: Implicit conversion from float 45.09 to int loses precision in /tmp/tmp_jpnq98c.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmp_jpnq98c.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmp_jpnq98c.php on line 6\n\nDeprecated: Implicit conversion from float 45.09 to int loses precision in /t",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n\t$expensive_items = array();\n\t$i = 0;\n\tforeach ($items as $item) {\n\t\tif ($i < $n) {\n\t\t\t$expensive_items[] = $item;\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$min_price = min($expensive_items);\n\t\t\t$min_price_index = array_search($min_price, $expensive_items);\n\t\t\tif ($item > $min_price) {\n\t\t\t\t$expensive_items[$min_price_index] = $item;\n\t\t\t}\n\t\t}\n\t}\n\treturn $expensive_items;\n}\n\n$items = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$n = 3;\n$expensive_items = expensive_items($items, $n);\nprint_r($expensive_items);\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 8\n    [2] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpug7vtuvs.php:32\nStack trace:\n#0 /tmp/tmpug7vtuvs.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpug7vtuvs.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = $items;\n    usort($sorted_items, function($a, $b) {\n        return $a['price'] < $b['price'];\n    });\n    return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n    ['name' => 'chair', 'price' => 200],\n    ['name' => 'desk', 'price' => 100],\n    ['name' => 'lamp', 'price' => 50],\n    ['name' => 'bookcase', 'price' => 150],\n    ['name' => 'picture frame', 'price' => 10],\n];\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp7z2_fs7u.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => chair\n            [price] => 200\n        )\n\n    [1] => Array\n        (\n            [name] => bookcase\n            [price] => 150\n        )\n\n    [2] => Array\n        (\n            [name] => desk\n            [price] => 100\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp7z2_fs7u.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp7z2_fs7u.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp7z2_fs7u.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = $items;\n    usort($sorted_items, function($a, $b) {\n        return $b['price'] - $a['price'];\n    });\n    return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n    ['name' => 'shoes', 'price' => 100],\n    ['name' => 'shirt', 'price' => 50],\n    ['name' => 'pants', 'price' => 75],\n    ['name' => 'hat', 'price' => 25],\n    ['name' => 'socks', 'price' => 10],\n    ['name' => 'jacket', 'price' => 150],\n    ['name' => 'scarf', 'price' => 20],\n    ['name' => 'gloves', 'price' => 15],\n    ['name' => 'belt', 'price' => 30],\n    ['name' => 'tie', 'price' => 35],\n];\n\n$n = 3;\n\n$most_expensive = expensive_items($items, $n);\n\nprint_r($most_expensive);\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => jacket\n            [price] => 150\n        )\n\n    [1] => Array\n        (\n            [name] => shoes\n            [price] => 100\n        )\n\n    [2] => Array\n        (\n            [name] => pants\n            [price] => 75\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = $items;\n    usort($sorted_items, function($a, $b) {\n        return $a['price'] < $b['price'];\n    });\n    return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123250,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpbe9wwem8.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpbe9wwem8.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpbe9wwem8.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = array_sort($items, function($item) {\n    return $item['price'];\n  });\n\n  return array_slice($sorted, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123250,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpn_vkb1b0.php:4\nStack trace:\n#0 /tmp/tmpn_vkb1b0.php(12): expensive_items(Array, 1)\n#1 /tmp/tmpn_vkb1b0.php(16): candidate(Array, 1)\n#2 /tmp/tmpn_vkb1b0.php(21): test()\n#3 {main}\n  thrown in /tmp/tmpn_vkb1b0.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $expensive_items = array();\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $b['price'] - $a['price'];\n  });\n  for ($i = 0; $i < $n; $i++) {\n    $expensive_items[] = $sorted_items[$i];\n  }\n  return $expensive_items;\n}\n\n$items = array(\n  array('name' => 'item1', 'price' => 10),\n  array('name' => 'item2', 'price' => 9),\n  array('name' => 'item3', 'price' => 12),\n  array('name' => 'item4', 'price' => 8),\n  array('name' => 'item5', 'price' => 15),\n  array('name' => 'item6', 'price' => 14),\n  array('name' => 'item7', 'price' => 11),\n  array('name' => 'item8', 'price' => 13),\n  array('name' => 'item9', 'price' => 7),\n  array('name' => 'item10', 'price' => 16),\n);\n\nprint_r(expensive_items($items, 3));\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => item10\n            [price] => 16\n        )\n\n    [1] => Array\n        (\n            [name] => item5\n            [price] => 15\n        )\n\n    [2] => Array\n        (\n            [name] => item6\n            [price] => 14\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123250,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpl7yda7ov.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpl7yda7ov.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpl7yda7ov.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123250,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpl7yda7ov.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpl7yda7ov.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpl7yda7ov.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = array();\n  foreach ($items as $item) {\n    $sorted[$item['price']] = $item;\n  }\n  krsort($sorted);\n  return array_slice($sorted, 0, $n);\n}\n\n$items = array(\n  array('name' => 'item1', 'price' => 100),\n  array('name' => 'item2', 'price' => 200),\n  array('name' => 'item3', 'price' => 300),\n  array('name' => 'item4', 'price' => 400),\n  array('name' => 'item5', 'price' => 500),\n  array('name' => 'item6', 'price' => 600),\n  array('name' => 'item7', 'price' => 700),\n  array('name' => 'item8', 'price' => 800),\n  array('name' => 'item9', 'price' => 900),\n  array('name' => 'item10', 'price' => 1000),\n);\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => item10\n            [price] => 1000\n        )\n\n    [1] => Array\n        (\n            [name] => item9\n            [price] => 900\n        )\n\n    [2] => Array\n        (\n            [name] => item8\n            [price] => 800\n        )\n\n)\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpupzk0jzy.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpupzk0jzy.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpupzk0jzy.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpupzk0jzy.php on line 6\n\nDeprecated: Implicit conversion from float 45.09 to int loses precision in /tmp/tmpupzk0jzy.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpupzk0jzy.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpupzk",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $b['price'] - $a['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 100],\n  ['name' => 'bananas', 'price' => 200],\n  ['name' => 'cherries', 'price' => 300],\n  ['name' => 'dates', 'price' => 400],\n  ['name' => 'eggplants', 'price' => 500],\n  ['name' => 'figs', 'price' => 600],\n  ['name' => 'grapes', 'price' => 700],\n  ['name' => 'honeydew', 'price' => 800],\n  ['name' => 'iceberg lettuce', 'price' => 900],\n  ['name' => 'jalapenos', 'price' => 1000],\n  ['name' => 'kale', 'price' => 1100],\n  ['name' => 'lemons', 'price' => 1200],\n  ['name' => 'mangos', 'price' => 1300],\n  ['name' => 'nectarines', 'price' => 1400],\n  ['name' => 'oranges', 'price' => 1500],\n  ['name' => 'pineapples', 'price' => 1600],\n  ['name' => 'quince', 'price' => 1700],\n  ['name' => 'raspberries', 'price' => 1800],\n  ['name' => 'strawberries', 'price' => 1900],\n  ['name' => 'tomatoes', 'price' => 2000],\n  ['name' => 'ugli fruit', 'price' => 2100],\n  ['name' => 'vidalias', 'price' => 2200],\n  ['name' => 'watermelon', 'price' => 2300],\n  ['name' => 'xigua', 'price' => 2400],\n  ['name' => 'yams', 'price' => 2500],\n  ['name' => 'zucchini', 'price' => 2600],\n];\n\n$n =\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpqjeue5aq.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted = $items;\n    usort($sorted, function($a, $b) {\n        return $b['price'] - $a['price'];\n    });\n    return array_slice($sorted, 0, $n);\n}\n\n$items = [\n    ['name' => 'coffee', 'price' => 2.50],\n    ['name' => 'tea', 'price' => 1.50],\n    ['name' => 'biscuits', 'price' => 0.10],\n    ['name' => 'cake', 'price' => 1.00],\n];\n\nprint_r(expensive_items($items, 2));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123251,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => coffee\n            [price] => 2.5\n        )\n\n    [1] => Array\n        (\n            [name] => tea\n            [price] => 1.5\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = array_sort($items, function($item) {\n    return $item['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpyqt1xgl_.php:4\nStack trace:\n#0 /tmp/tmpyqt1xgl_.php(11): expensive_items(Array, 1)\n#1 /tmp/tmpyqt1xgl_.php(15): candidate(Array, 1)\n#2 /tmp/tmpyqt1xgl_.php(20): test()\n#3 {main}\n  thrown in /tmp/tmpyqt1xgl_.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = array_sort($items, 'price');\n    $sorted_items = array_reverse($sorted_items);\n    $expensive_items = array_slice($sorted_items, 0, $n);\n    return $expensive_items;\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpov6pzga_.php:4\nStack trace:\n#0 /tmp/tmpov6pzga_.php(11): expensive_items(Array, 1)\n#1 /tmp/tmpov6pzga_.php(15): candidate(Array, 1)\n#2 /tmp/tmpov6pzga_.php(20): test()\n#3 {main}\n  thrown in /tmp/tmpov6pzga_.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = array();\n    foreach ($items as $item) {\n        $sorted_items[$item['price']] = $item;\n    }\n    krsort($sorted_items);\n    return array_slice($sorted_items, 0, $n);\n}\n\n$items = array(\n    array('name' => 'item1', 'price' => 10),\n    array('name' => 'item2', 'price' => 9),\n    array('name' => 'item3', 'price' => 12),\n    array('name' => 'item4', 'price' => 8),\n    array('name' => 'item5', 'price' => 11),\n    array('name' => 'item6', 'price' => 10),\n);\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => item3\n            [price] => 12\n        )\n\n    [1] => Array\n        (\n            [name] => item5\n            [price] => 11\n        )\n\n    [2] => Array\n        (\n            [name] => item6\n            [price] => 10\n        )\n\n)\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpo7ov2kq3.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpo7ov2kq3.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpo7ov2kq3.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpo7ov2kq3.php on line 6\n\nDeprecated: Implicit conversion from float 45.09 to int loses precision in /tmp/tmpo7ov2kq3.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpo7ov2kq3.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpo7ov2kq3.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 2.99],\n  ['name' => 'oranges', 'price' => 1.99],\n  ['name' => 'bananas', 'price' => 3.99],\n  ['name' => 'carrots', 'price' => 4.99],\n  ['name' => 'pears', 'price' => 5.99],\n  ['name' => 'celery', 'price' => 6.99],\n  ['name' => 'broccoli', 'price' => 7.99],\n  ['name' => 'cauliflower', 'price' => 8.99],\n  ['name' => 'lettuce', 'price' => 9.99],\n  ['name' => 'spinach', 'price' => 10.99],\n];\n\n$n = 3;\n\n$expensive_items = expensive_items($items, $n);\n\nforeach ($expensive_items as $item) {\n  echo $item['name'] . ': ' . $item['price'] . PHP_EOL;\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpw6wvrwj5.php on line 7\nspinach: 10.99\nlettuce: 9.99\ncauliflower: 8.99\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpw6wvrwj5.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpw6wvrwj5.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpw6wvrwj5.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $expensive_items = [];\n    $i = 0;\n    foreach ($items as $item) {\n        if ($i < $n) {\n            $expensive_items[] = $item;\n            $i++;\n        } else {\n            $min_price = min($expensive_items);\n            if ($item['price'] > $min_price['price']) {\n                $min_price_index = array_search($min_price, $expensive_items);\n                $expensive_items[$min_price_index] = $item;\n            }\n        }\n    }\n    return $expensive_items;\n}\n\n$items = [\n    ['name' => 'item1', 'price' => 100],\n    ['name' => 'item2', 'price' => 200],\n    ['name' => 'item3', 'price' => 300],\n    ['name' => 'item4', 'price' => 400],\n    ['name' => 'item5', 'price' => 500],\n    ['name' => 'item6', 'price' => 600],\n    ['name' => 'item7', 'price' => 700],\n    ['name' => 'item8', 'price' => 800],\n    ['name' => 'item9', 'price' => 900],\n    ['name' => 'item10', 'price' => 1000],\n    ['name' => 'item11', 'price' => 1100],\n    ['name' => 'item12', 'price' => 1200],\n    ['name' => 'item13', 'price' => 1300],\n    ['name' => 'item14', 'price' => 1400],\n    ['name' => 'item15', 'price' => 1500],\n    ['name' => 'item16', 'price' => 1600],\n    ['name' => 'item17', 'price' => 1700],\n    ['name' => 'item18', 'price' => 1800],\n    ['name' => 'item19', 'price' => 1900],\n    ['name' => 'item20', 'price' => 2000],\n];\n\n$n = 5;\n\n$expensive_items = expensive_items($items, $n);\n\necho '<pre>';\nprint_r($expensive\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxk3bppb7.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = [];\n  foreach ($items as $item) {\n    $sorted_items[$item['price']] = $item;\n  }\n  krsort($sorted_items);\n  $sorted_items = array_slice($sorted_items, 0, $n);\n  return $sorted_items;\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 100],\n  ['name' => 'bananas', 'price' => 200],\n  ['name' => 'cherries', 'price' => 300],\n  ['name' => 'dates', 'price' => 400],\n  ['name' => 'eggplants', 'price' => 500],\n  ['name' => 'figs', 'price' => 600],\n  ['name' => 'grapes', 'price' => 700],\n  ['name' => 'honeydew', 'price' => 800],\n  ['name' => 'iceberg lettuce', 'price' => 900],\n  ['name' => 'jicama', 'price' => 1000],\n  ['name' => 'kiwis', 'price' => 1100],\n  ['name' => 'lemons', 'price' => 1200],\n  ['name' => 'mangoes', 'price' => 1300],\n  ['name' => 'nectarines', 'price' => 1400],\n  ['name' => 'oranges', 'price' => 1500],\n  ['name' => 'papayas', 'price' => 1600],\n  ['name' => 'quince', 'price' => 1700],\n  ['name' => 'raspberries', 'price' => 1800],\n  ['name' => 'strawberries', 'price' => 1900],\n  ['name' => 'tomatoes', 'price' => 2000],\n  ['name' => 'ugli fruit', 'price' => 2100],\n  ['name' => 'vidalias', 'price' => 2200],\n  ['name' => 'watermelon', 'price' => 2300],\n  ['name' => 'xigua', 'price' => 2400],\n  ['name' => 'yams', 'price' => 2500],\n  ['name\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nParse error: syntax error, unexpected string content \"name\", expecting \"]\" in /tmp/tmpd0_rc3qa.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 100],\n  ['name' => 'bananas', 'price' => 200],\n  ['name' => 'pears', 'price' => 300],\n  ['name' => 'oranges', 'price' => 400],\n  ['name' => 'grapes', 'price' => 500],\n  ['name' => 'pineapples', 'price' => 600],\n  ['name' => 'mangos', 'price' => 700],\n  ['name' => 'watermelons', 'price' => 800],\n  ['name' => 'coconuts', 'price' => 900],\n  ['name' => 'papayas', 'price' => 1000],\n];\n\nprint_r(expensive_items($items, 3));\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp0dt0ens_.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => papayas\n            [price] => 1000\n        )\n\n    [1] => Array\n        (\n            [name] => coconuts\n            [price] => 900\n        )\n\n    [2] => Array\n        (\n            [name] => watermelons\n            [price] => 800\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp0dt0ens_.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp0dt0ens_.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp0dt0ens_.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted = array_sort($items, function($item) {\n        return $item['price'];\n    });\n    return array_slice($sorted, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp4w4efx2h.php:4\nStack trace:\n#0 /tmp/tmp4w4efx2h.php(11): expensive_items(Array, 1)\n#1 /tmp/tmp4w4efx2h.php(15): candidate(Array, 1)\n#2 /tmp/tmp4w4efx2h.php(20): test()\n#3 {main}\n  thrown in /tmp/tmp4w4efx2h.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = $items;\n  usort($sorted, function($a, $b) {\n    return $b['price'] - $a['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n\n$items = [\n  ['name' => 'item1', 'price' => 10],\n  ['name' => 'item2', 'price' => 9],\n  ['name' => 'item3', 'price' => 12],\n  ['name' => 'item4', 'price' => 8],\n  ['name' => 'item5', 'price' => 11],\n  ['name' => 'item6', 'price' => 10],\n];\n\n$most_expensive_items = expensive_items($items, 2);\n\nprint_r($most_expensive_items);\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => item3\n            [price] => 12\n        )\n\n    [1] => Array\n        (\n            [name] => item5\n            [price] => 11\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = array_sort($items, function($item) {\n    return $item['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpyqt1xgl_.php:4\nStack trace:\n#0 /tmp/tmpyqt1xgl_.php(11): expensive_items(Array, 1)\n#1 /tmp/tmpyqt1xgl_.php(15): candidate(Array, 1)\n#2 /tmp/tmpyqt1xgl_.php(20): test()\n#3 {main}\n  thrown in /tmp/tmpyqt1xgl_.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $b['price'] - $a['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 100],\n  ['name' => 'bananas', 'price' => 200],\n  ['name' => 'cherries', 'price' => 300],\n  ['name' => 'dates', 'price' => 400],\n  ['name' => 'eggplants', 'price' => 500],\n  ['name' => 'figs', 'price' => 600],\n  ['name' => 'grapes', 'price' => 700],\n  ['name' => 'honeydew', 'price' => 800],\n  ['name' => 'iceberg lettuce', 'price' => 900],\n  ['name' => 'jalapenos', 'price' => 1000],\n  ['name' => 'kiwis', 'price' => 1100],\n  ['name' => 'lemons', 'price' => 1200],\n  ['name' => 'mangos', 'price' => 1300],\n  ['name' => 'nectarines', 'price' => 1400],\n  ['name' => 'oranges', 'price' => 1500],\n  ['name' => 'pineapples', 'price' => 1600],\n  ['name' => 'quince', 'price' => 1700],\n  ['name' => 'raspberries', 'price' => 1800],\n  ['name' => 'strawberries', 'price' => 1900],\n  ['name' => 'tomatoes', 'price' => 2000],\n  ['name' => 'ugli fruit', 'price' => 2100],\n  ['name' => 'vidalias', 'price' => 2200],\n  ['name' => 'watermelons', 'price' => 2300],\n  ['name' => 'xigua', 'price' => 2400],\n  ['name' => 'yams', 'price' => 2500],\n  ['name' => 'zucchini', 'price' => 2600],\n];\n\n$\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp4ar9mstd.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = $items;\n    usort($sorted_items, function($a, $b) {\n        return $a['price'] < $b['price'];\n    });\n    return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123250,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpbe9wwem8.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpbe9wwem8.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpbe9wwem8.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = array_sort($items, function($item) {\n    return $item['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpyqt1xgl_.php:4\nStack trace:\n#0 /tmp/tmpyqt1xgl_.php(11): expensive_items(Array, 1)\n#1 /tmp/tmpyqt1xgl_.php(15): candidate(Array, 1)\n#2 /tmp/tmpyqt1xgl_.php(20): test()\n#3 {main}\n  thrown in /tmp/tmpyqt1xgl_.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted = array_sort($items, function($item) {\n        return $item['price'];\n    });\n    return array_slice($sorted, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp4w4efx2h.php:4\nStack trace:\n#0 /tmp/tmp4w4efx2h.php(11): expensive_items(Array, 1)\n#1 /tmp/tmp4w4efx2h.php(15): candidate(Array, 1)\n#2 /tmp/tmp4w4efx2h.php(20): test()\n#3 {main}\n  thrown in /tmp/tmp4w4efx2h.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = $items;\n    usort($sorted_items, function($a, $b) {\n        return $b['price'] - $a['price'];\n    });\n    return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n    ['name' => 'apples', 'price' => 100],\n    ['name' => 'bananas', 'price' => 200],\n    ['name' => 'cherries', 'price' => 300],\n    ['name' => 'dates', 'price' => 400],\n    ['name' => 'eggplants', 'price' => 500],\n    ['name' => 'figs', 'price' => 600],\n    ['name' => 'grapes', 'price' => 700],\n    ['name' => 'honeydew', 'price' => 800],\n    ['name' => 'iceberg lettuce', 'price' => 900],\n    ['name' => 'jalapenos', 'price' => 1000],\n    ['name' => 'kale', 'price' => 1100],\n    ['name' => 'lemons', 'price' => 1200],\n    ['name' => 'mangos', 'price' => 1300],\n    ['name' => 'nectarines', 'price' => 1400],\n    ['name' => 'oranges', 'price' => 1500],\n    ['name' => 'papayas', 'price' => 1600],\n    ['name' => 'quince', 'price' => 1700],\n    ['name' => 'raspberries', 'price' => 1800],\n    ['name' => 'strawberries', 'price' => 1900],\n    ['name' => 'tomatoes', 'price' => 2000],\n    ['name' => 'ugli fruit', 'price' => 2100],\n    ['name' => 'vidalias', 'price' => 2200],\n    ['name' => 'watermelon', 'price' => 2300],\n    ['name' => 'xigua', 'price' => 2400],\n    ['name' => 'yams', 'price' => 2500],\n    ['name' => 'zucchini', 'price' => 2600],\n];\n\nprint_\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpxboto3re.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = $items;\n    usort($sorted_items, function($a, $b) {\n        return $a['price'] < $b['price'];\n    });\n    return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n    ['name' => 'shoes', 'price' => 100],\n    ['name' => 'shirt', 'price' => 50],\n    ['name' => 'pants', 'price' => 75],\n    ['name' => 'hat', 'price' => 25],\n    ['name' => 'socks', 'price' => 10],\n];\n\nprint_r(expensive_items($items, 2));\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmplm0uj31d.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => shoes\n            [price] => 100\n        )\n\n    [1] => Array\n        (\n            [name] => pants\n            [price] => 75\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmplm0uj31d.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmplm0uj31d.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmplm0uj31d.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = $items;\n    usort($sorted_items, function($a, $b) {\n        return $a['price'] < $b['price'];\n    });\n    return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n    ['name' => 'apples', 'price' => 100],\n    ['name' => 'bananas', 'price' => 200],\n    ['name' => 'pears', 'price' => 300],\n    ['name' => 'oranges', 'price' => 400],\n    ['name' => 'grapes', 'price' => 500],\n    ['name' => 'pineapples', 'price' => 600],\n];\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpdr0s006s.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => pineapples\n            [price] => 600\n        )\n\n    [1] => Array\n        (\n            [name] => grapes\n            [price] => 500\n        )\n\n    [2] => Array\n        (\n            [name] => oranges\n            [price] => 400\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpdr0s006s.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpdr0s006s.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpdr0s006s.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = array_sort($items, 'price');\n  return array_slice($sorted, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123250,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp2te1pil6.php:4\nStack trace:\n#0 /tmp/tmp2te1pil6.php(9): expensive_items(Array, 1)\n#1 /tmp/tmp2te1pil6.php(13): candidate(Array, 1)\n#2 /tmp/tmp2te1pil6.php(18): test()\n#3 {main}\n  thrown in /tmp/tmp2te1pil6.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $most_expensive = array();\n  $prices = array();\n  foreach ($items as $item) {\n    $prices[] = $item['price'];\n  }\n  rsort($prices);\n  $prices = array_slice($prices, 0, $n);\n  foreach ($items as $item) {\n    if (in_array($item['price'], $prices)) {\n      $most_expensive[] = $item;\n    }\n  }\n  return $most_expensive;\n}\n\n$items = array(\n  array('name' => 'Item 1', 'price' => 10),\n  array('name' => 'Item 2', 'price' => 30),\n  array('name' => 'Item 3', 'price' => 20),\n  array('name' => 'Item 4', 'price' => 15),\n  array('name' => 'Item 5', 'price' => 40),\n  array('name' => 'Item 6', 'price' => 50),\n  array('name' => 'Item 7', 'price' => 60),\n  array('name' => 'Item 8', 'price' => 70),\n  array('name' => 'Item 9', 'price' => 80),\n  array('name' => 'Item 10', 'price' => 90),\n  array('name' => 'Item 11', 'price' => 100),\n  array('name' => 'Item 12', 'price' => 110),\n  array('name' => 'Item 13', 'price' => 120),\n  array('name' => 'Item 14', 'price' => 130),\n  array('name' => 'Item 15', 'price' => 140),\n  array('name' => 'Item 16', 'price' => 150),\n  array('name' => 'Item 17', 'price' => 160),\n  array('name' => 'Item 18', 'price' => 170),\n  array('name' => 'Item 19', 'price' => 180),\n  array('name' => 'Item 20', 'price' => 190),\n  array('name' => 'Item 21', 'price' => 200),\n  array('name' => 'Item 22', 'price' => 210),\n  array('name\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nParse error: syntax error, unexpected string content \"name\", expecting \")\" in /tmp/tmpkonuog2_.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted = array_sort($items, function($item) {\n        return $item['price'];\n    });\n\n    return array_slice($sorted, 0, $n);\n}\n\n$items = [\n    ['name' => 'coffee', 'price' => 2.50],\n    ['name' => 'tea', 'price' => 1.50],\n    ['name' => 'cake', 'price' => 3.50],\n    ['name' => 'biscuits', 'price' => 2.00],\n    ['name' => 'scones', 'price' => 2.50],\n    ['name' => 'soup', 'price' => 3.00],\n    ['name' => 'sandwich', 'price' => 3.50],\n    ['name' => 'salad', 'price' => 4.00],\n    ['name' => 'pie', 'price' => 3.50],\n    ['name' => 'pizza', 'price' => 4.50],\n    ['name' => 'chips', 'price' => 2.00],\n    ['name' => 'ice cream', 'price' => 3.00],\n    ['name' => 'smoothie', 'price' => 3.50],\n    ['name' => 'milkshake', 'price' => 3.50],\n    ['name' => 'cola', 'price' => 2.00],\n    ['name' => 'water', 'price' => 1.50],\n    ['name' => 'juice', 'price' => 2.00],\n    ['name' => 'coffee', 'price' => 2.50],\n    ['name' => 'tea', 'price' => 1.50],\n    ['name' => 'cake', 'price' => 3.50],\n    ['name' => 'biscuits', 'price' => 2.00],\n    ['name' => 'scones', 'price' => 2.50],\n    ['name' => 'soup', 'price' => 3.00],\n    ['name' => 'sandwich', 'price' => 3.50],\n    ['name' => 'salad', 'price' => 4.00],\n    ['name' => 'pie\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nParse error: syntax error, unexpected string content \"pie\" in /tmp/tmp6d44d3ka.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted = array_sort($items, function($item) {\n        return $item['price'];\n    });\n    return array_slice($sorted, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp4w4efx2h.php:4\nStack trace:\n#0 /tmp/tmp4w4efx2h.php(11): expensive_items(Array, 1)\n#1 /tmp/tmp4w4efx2h.php(15): candidate(Array, 1)\n#2 /tmp/tmp4w4efx2h.php(20): test()\n#3 {main}\n  thrown in /tmp/tmp4w4efx2h.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = array_sort($items, 'price', SORT_DESC);\n    return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp1q6h2w9j.php:4\nStack trace:\n#0 /tmp/tmp1q6h2w9j.php(9): expensive_items(Array, 1)\n#1 /tmp/tmp1q6h2w9j.php(13): candidate(Array, 1)\n#2 /tmp/tmp1q6h2w9j.php(18): test()\n#3 {main}\n  thrown in /tmp/tmp1q6h2w9j.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $expensive_items = [];\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  for ($i = 0; $i < $n; $i++) {\n    $expensive_items[] = $sorted_items[$i];\n  }\n  return $expensive_items;\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 3],\n  ['name' => 'bananas', 'price' => 5],\n  ['name' => 'carrots', 'price' => 1],\n  ['name' => 'dates', 'price' => 10],\n];\n\nprint_r(expensive_items($items, 2));\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp250vvpcn.php on line 8\nArray\n(\n    [0] => Array\n        (\n            [name] => dates\n            [price] => 10\n        )\n\n    [1] => Array\n        (\n            [name] => bananas\n            [price] => 5\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp250vvpcn.php on line 8\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp250vvpcn.php on line 8\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp250vvpcn.php on line 8\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] - $b['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 100],\n  ['name' => 'bananas', 'price' => 200],\n  ['name' => 'cherries', 'price' => 300],\n  ['name' => 'dates', 'price' => 400],\n  ['name' => 'elderberries', 'price' => 500],\n  ['name' => 'figs', 'price' => 600],\n  ['name' => 'grapes', 'price' => 700],\n  ['name' => 'honeydew', 'price' => 800],\n  ['name' => 'iceberg lettuce', 'price' => 900],\n  ['name' => 'jicama', 'price' => 1000],\n];\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => apples\n            [price] => 100\n        )\n\n    [1] => Array\n        (\n            [name] => bananas\n            [price] => 200\n        )\n\n    [2] => Array\n        (\n            [name] => cherries\n            [price] => 300\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3jfee4g2.php:31\nStack trace:\n#0 /tmp/tmp3jfee4g2.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3jfee4g2.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = $items;\n    usort($sorted_items, function($a, $b) {\n        return $a['price'] < $b['price'];\n    });\n    return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n    ['name' => 'coffee', 'price' => 2.50],\n    ['name' => 'tea', 'price' => 1.50],\n    ['name' => 'biscuits', 'price' => 0.10],\n    ['name' => 'tissues', 'price' => 0.99],\n    ['name' => 'chocolate', 'price' => 0.50],\n    ['name' => 'rubber duck', 'price' => 4.20],\n    ['name' => 'shampoo', 'price' => 3.79],\n    ['name' => 'soap', 'price' => 0.99],\n    ['name' => 'sponge', 'price' => 1.29],\n    ['name' => 'toothpaste', 'price' => 0.99],\n    ['name' => 'deodorant', 'price' => 3.20],\n    ['name' => 'razor blades', 'price' => 16.10],\n    ['name' => 'shaving foam', 'price' => 1.99],\n    ['name' => 'crisps', 'price' => 0.50],\n    ['name' => 'water', 'price' => 0.89],\n    ['name' => 'newspaper', 'price' => 0.60],\n    ['name' => 'magazine', 'price' => 3.10],\n    ['name' => 'chocolate', 'price' => 0.60],\n    ['name' => 'sweets', 'price' => 0.10],\n];\n\n$n = 3;\n$result = expensive_items($items, $n);\n\necho \"The $n most expensive items are:\\n\";\nforeach ($result as $item) {\n    echo $item['name'] . ': $' . $item['price'] . \"\\n\";\n}\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpwyi3i_2j.php on line 7\nThe 3 most expensive items are:\nrazor blades: $16.1\nrubber duck: $4.2\nshampoo: $3.79\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpwyi3i_2j.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpwyi3i_2j.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpwyi3i_2j.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n\t$sorted_items = array();\n\tforeach ($items as $item) {\n\t\t$sorted_items[$item['price']] = $item;\n\t}\n\tkrsort($sorted_items);\n\treturn array_slice($sorted_items, 0, $n);\n}\n\n$items = array(\n\tarray('name' => 'item1', 'price' => 10),\n\tarray('name' => 'item2', 'price' => 9),\n\tarray('name' => 'item3', 'price' => 12),\n\tarray('name' => 'item4', 'price' => 8),\n\tarray('name' => 'item5', 'price' => 11),\n\tarray('name' => 'item6', 'price' => 9),\n);\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => item3\n            [price] => 12\n        )\n\n    [1] => Array\n        (\n            [name] => item5\n            [price] => 11\n        )\n\n    [2] => Array\n        (\n            [name] => item1\n            [price] => 10\n        )\n\n)\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpwnemfixh.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpwnemfixh.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpwnemfixh.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpwnemfixh.php on line 6\n\nDeprecated: Implicit conversion from float 45.09 to int loses precision in /tmp/tmpwnemfixh.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpwnemfixh.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpwnemfixh.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = $items;\n    usort($sorted_items, function($a, $b) {\n        if ($a['price'] == $b['price']) {\n            return 0;\n        }\n        return ($a['price'] < $b['price']) ? 1 : -1;\n    });\n    return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 100],\n  ['name' => 'bananas', 'price' => 200],\n  ['name' => 'oranges', 'price' => 50],\n  ['name' => 'pears', 'price' => 150],\n  ['name' => 'pineapples', 'price' => 300],\n];\n\nprint_r(expensive_items($items, 2));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp7fopie5r.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => pineapples\n            [price] => 300\n        )\n\n    [1] => Array\n        (\n            [name] => bananas\n            [price] => 200\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp7fopie5r.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp7fopie5r.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp7fopie5r.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 3],\n  ['name' => 'bananas', 'price' => 5],\n  ['name' => 'cherries', 'price' => 4],\n  ['name' => 'dates', 'price' => 7],\n  ['name' => 'eggplant', 'price' => 1],\n  ['name' => 'figs', 'price' => 2],\n  ['name' => 'grapes', 'price' => 6],\n];\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpdxkcdl7t.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => dates\n            [price] => 7\n        )\n\n    [1] => Array\n        (\n            [name] => grapes\n            [price] => 6\n        )\n\n    [2] => Array\n        (\n            [name] => bananas\n            [price] => 5\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpdxkcdl7t.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpdxkcdl7t.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpdxkcdl7t.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted = array_sort($items, 'price');\n    return array_slice($sorted, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123250,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpejj7ekyx.php:4\nStack trace:\n#0 /tmp/tmpejj7ekyx.php(9): expensive_items(Array, 1)\n#1 /tmp/tmpejj7ekyx.php(13): candidate(Array, 1)\n#2 /tmp/tmpejj7ekyx.php(18): test()\n#3 {main}\n  thrown in /tmp/tmpejj7ekyx.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $b['price'] - $a['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 100],\n  ['name' => 'bananas', 'price' => 200],\n  ['name' => 'cherries', 'price' => 300],\n  ['name' => 'dates', 'price' => 400],\n  ['name' => 'eggplants', 'price' => 500],\n  ['name' => 'figs', 'price' => 600],\n  ['name' => 'grapes', 'price' => 700],\n  ['name' => 'honeydew', 'price' => 800],\n  ['name' => 'iceberg lettuce', 'price' => 900],\n  ['name' => 'jicama', 'price' => 1000],\n];\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => jicama\n            [price] => 1000\n        )\n\n    [1] => Array\n        (\n            [name] => iceberg lettuce\n            [price] => 900\n        )\n\n    [2] => Array\n        (\n            [name] => honeydew\n            [price] => 800\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 2.99],\n  ['name' => 'oranges', 'price' => 3.99],\n  ['name' => 'bananas', 'price' => 1.99],\n  ['name' => 'pears', 'price' => 4.99],\n  ['name' => 'grapes', 'price' => 5.99],\n  ['name' => 'pineapples', 'price' => 6.99],\n  ['name' => 'strawberries', 'price' => 7.99],\n  ['name' => 'blueberries', 'price' => 8.99],\n  ['name' => 'raspberries', 'price' => 9.99],\n  ['name' => 'blackberries', 'price' => 10.99],\n];\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpfdbe114f.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => blackberries\n            [price] => 10.99\n        )\n\n    [1] => Array\n        (\n            [name] => raspberries\n            [price] => 9.99\n        )\n\n    [2] => Array\n        (\n            [name] => blueberries\n            [price] => 8.99\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpfdbe114f.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpfdbe114f.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpfdbe114f.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = $items;\n  usort($sorted, function($a, $b) {\n    return $a['price'] - $b['price'];\n  });\n  return array_slice($sorted, -$n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 100],\n  ['name' => 'bananas', 'price' => 200],\n  ['name' => 'carrots', 'price' => 50],\n  ['name' => 'dates', 'price' => 300],\n  ['name' => 'eggplant', 'price' => 400],\n  ['name' => 'figs', 'price' => 500],\n  ['name' => 'grapes', 'price' => 600],\n  ['name' => 'honeydew', 'price' => 700],\n  ['name' => 'iceberg lettuce', 'price' => 800],\n  ['name' => 'jicama', 'price' => 900],\n  ['name' => 'kale', 'price' => 1000],\n  ['name' => 'lemons', 'price' => 1100],\n  ['name' => 'mangos', 'price' => 1200],\n  ['name' => 'nectarines', 'price' => 1300],\n  ['name' => 'oranges', 'price' => 1400],\n  ['name' => 'pears', 'price' => 1500],\n  ['name' => 'quince', 'price' => 1600],\n  ['name' => 'rutabaga', 'price' => 1700],\n  ['name' => 'spinach', 'price' => 1800],\n  ['name' => 'tomatoes', 'price' => 1900],\n  ['name' => 'ugli fruit', 'price' => 2000],\n  ['name' => 'vidalias', 'price' => 2100],\n  ['name' => 'watermelon', 'price' => 2200],\n  ['name' => 'xigua', 'price' => 2300],\n  ['name' => 'yams', 'price' => 2400],\n  ['name' => 'zucchini', 'price' => 2500],\n];\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => xigua\n            [price] => 2300\n        )\n\n    [1] => Array\n        (\n            [name] => yams\n            [price] => 2400\n        )\n\n    [2] => Array\n        (\n            [name] => zucchini\n            [price] => 2500\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb35_xqq7.php:48\nStack trace:\n#0 /tmp/tmpb35_xqq7.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpb35_xqq7.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = $items;\n    usort($sorted_items, function($a, $b) {\n        return $a['price'] < $b['price'];\n    });\n    return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n    ['name' => 'item1', 'price' => 10],\n    ['name' => 'item2', 'price' => 20],\n    ['name' => 'item3', 'price' => 30],\n    ['name' => 'item4', 'price' => 40],\n    ['name' => 'item5', 'price' => 50],\n    ['name' => 'item6', 'price' => 60],\n    ['name' => 'item7', 'price' => 70],\n    ['name' => 'item8', 'price' => 80],\n    ['name' => 'item9', 'price' => 90],\n    ['name' => 'item10', 'price' => 100],\n];\n\nprint_r(expensive_items($items, 3));\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp2jo0lgvm.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => item10\n            [price] => 100\n        )\n\n    [1] => Array\n        (\n            [name] => item9\n            [price] => 90\n        )\n\n    [2] => Array\n        (\n            [name] => item8\n            [price] => 80\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp2jo0lgvm.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp2jo0lgvm.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp2jo0lgvm.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $b['price'] - $a['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 3],\n  ['name' => 'bananas', 'price' => 2],\n  ['name' => 'pears', 'price' => 5],\n  ['name' => 'carrots', 'price' => 4],\n  ['name' => 'pineapples', 'price' => 6],\n  ['name' => 'oranges', 'price' => 1],\n];\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => pineapples\n            [price] => 6\n        )\n\n    [1] => Array\n        (\n            [name] => pears\n            [price] => 5\n        )\n\n    [2] => Array\n        (\n            [name] => carrots\n            [price] => 4\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = array_sort($items, 'price', SORT_DESC);\n  return array_slice($sorted, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123250,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp3hfsfjwr.php:4\nStack trace:\n#0 /tmp/tmp3hfsfjwr.php(9): expensive_items(Array, 1)\n#1 /tmp/tmp3hfsfjwr.php(13): candidate(Array, 1)\n#2 /tmp/tmp3hfsfjwr.php(18): test()\n#3 {main}\n  thrown in /tmp/tmp3hfsfjwr.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = array_sort($items, function($item) {\n        return $item['price'];\n    });\n\n    return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n    ['name' => 'coffee', 'price' => 10],\n    ['name' => 'tea', 'price' => 5],\n    ['name' => 'milk', 'price' => 3],\n    ['name' => 'water', 'price' => 1],\n    ['name' => 'juice', 'price' => 2]\n];\n\n$most_expensive_items = expensive_items($items, 3);\n\nforeach ($most_expensive_items as $item) {\n    echo $item['name'] . ': ' . $item['price'] . PHP_EOL;\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp966mg7xs.php:4\nStack trace:\n#0 /tmp/tmp966mg7xs.php(19): expensive_items(Array, 3)\n#1 {main}\n  thrown in /tmp/tmp966mg7xs.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $items_by_price = array();\n  foreach ($items as $item) {\n    $items_by_price[$item['price']] = $item;\n  }\n  krsort($items_by_price);\n  return array_slice($items_by_price, 0, $n);\n}\n\n$items = array(\n  array('name' => 'item1', 'price' => 10),\n  array('name' => 'item2', 'price' => 9),\n  array('name' => 'item3', 'price' => 12),\n  array('name' => 'item4', 'price' => 8),\n  array('name' => 'item5', 'price' => 11),\n  array('name' => 'item6', 'price' => 10),\n);\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => item3\n            [price] => 12\n        )\n\n    [1] => Array\n        (\n            [name] => item5\n            [price] => 11\n        )\n\n    [2] => Array\n        (\n            [name] => item6\n            [price] => 10\n        )\n\n)\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmp0qqmr4k8.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmp0qqmr4k8.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmp0qqmr4k8.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmp0qqmr4k8.php on line 6\n\nDeprecated: Implicit conversion from float 45.09 to int loses precision in /tmp/tmp0qqmr4k8.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmp0qqmr4k8.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmp0qqmr4k8.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted = array_sort($items, function($item) {\n        return $item['price'];\n    });\n\n    return array_slice($sorted, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123250,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmprk82ckyc.php:4\nStack trace:\n#0 /tmp/tmprk82ckyc.php(12): expensive_items(Array, 1)\n#1 /tmp/tmprk82ckyc.php(16): candidate(Array, 1)\n#2 /tmp/tmprk82ckyc.php(21): test()\n#3 {main}\n  thrown in /tmp/tmprk82ckyc.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = array_sort($items, function($item) {\n    return $item['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpyqt1xgl_.php:4\nStack trace:\n#0 /tmp/tmpyqt1xgl_.php(11): expensive_items(Array, 1)\n#1 /tmp/tmpyqt1xgl_.php(15): candidate(Array, 1)\n#2 /tmp/tmpyqt1xgl_.php(20): test()\n#3 {main}\n  thrown in /tmp/tmpyqt1xgl_.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 2.00],\n  ['name' => 'oranges', 'price' => 1.50],\n  ['name' => 'bananas', 'price' => 3.00],\n  ['name' => 'kiwis', 'price' => 4.00],\n  ['name' => 'pears', 'price' => 2.50],\n  ['name' => 'pineapples', 'price' => 5.00],\n  ['name' => 'grapes', 'price' => 3.50],\n  ['name' => 'strawberries', 'price' => 4.50],\n  ['name' => 'blueberries', 'price' => 6.00],\n  ['name' => 'raspberries', 'price' => 7.00],\n  ['name' => 'blackberries', 'price' => 8.00],\n  ['name' => 'cranberries', 'price' => 9.00],\n  ['name' => 'cherries', 'price' => 10.00],\n  ['name' => 'mangos', 'price' => 11.00],\n  ['name' => 'papayas', 'price' => 12.00],\n  ['name' => 'guavas', 'price' => 13.00],\n  ['name' => 'lychees', 'price' => 14.00],\n  ['name' => 'passion fruit', 'price' => 15.00],\n  ['name' => 'dragon fruit', 'price' => 16.00],\n  ['name' => 'jackfruit', 'price' => 17.00],\n  ['name' => 'durian', 'price' => 18.00],\n  ['name' => 'longan', 'price' => 19.00],\n  ['name' => 'rambutan', 'price' => 20.00],\n  ['name' => 'starfruit', 'price\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nParse error: syntax error, unexpected string content \"price\", expecting \"]\" in /tmp/tmpn00z5nsb.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = array_sort($items, 'price', SORT_DESC);\n    return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp1q6h2w9j.php:4\nStack trace:\n#0 /tmp/tmp1q6h2w9j.php(9): expensive_items(Array, 1)\n#1 /tmp/tmp1q6h2w9j.php(13): candidate(Array, 1)\n#2 /tmp/tmp1q6h2w9j.php(18): test()\n#3 {main}\n  thrown in /tmp/tmp1q6h2w9j.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted = $items;\n    usort($sorted, function($a, $b) {\n        return $a['price'] < $b['price'];\n    });\n    return array_slice($sorted, 0, $n);\n}\n\n$items = [\n    ['name' => 'shoes', 'price' => 10],\n    ['name' => 'socks', 'price' => 5],\n    ['name' => 'shirt', 'price' => 15],\n    ['name' => 'pants', 'price' => 25],\n    ['name' => 'hat', 'price' => 20],\n    ['name' => 'jacket', 'price' => 30],\n];\n\n$most_expensive = expensive_items($items, 3);\nprint_r($most_expensive);\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp168spe42.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => jacket\n            [price] => 30\n        )\n\n    [1] => Array\n        (\n            [name] => pants\n            [price] => 25\n        )\n\n    [2] => Array\n        (\n            [name] => hat\n            [price] => 20\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp168spe42.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp168spe42.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp168spe42.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = array_sort($items, function($item) {\n    return $item['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n\n$items = [\n  ['name' => 'coffee', 'price' => 2.50],\n  ['name' => 'tea', 'price' => 1.50],\n  ['name' => 'biscuits', 'price' => 0.10],\n  ['name' => 'cake', 'price' => 1.00]\n];\n\nprint_r(expensive_items($items, 2));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp9xtoit_0.php:4\nStack trace:\n#0 /tmp/tmp9xtoit_0.php(17): expensive_items(Array, 2)\n#1 {main}\n  thrown in /tmp/tmp9xtoit_0.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $items = array_map(function($item) {\n    return $item['price'];\n  }, $items);\n\n  rsort($items);\n\n  return array_slice($items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 2.50],\n  ['name' => 'oranges', 'price' => 1.50],\n  ['name' => 'bananas', 'price' => 3.00],\n  ['name' => 'grapes', 'price' => 4.00],\n  ['name' => 'pineapples', 'price' => 5.00],\n  ['name' => 'pears', 'price' => 2.00],\n  ['name' => 'mangos', 'price' => 3.50],\n  ['name' => 'strawberries', 'price' => 2.00],\n  ['name' => 'blueberries', 'price' => 4.00],\n  ['name' => 'raspberries', 'price' => 3.00],\n  ['name' => 'blackberries', 'price' => 4.00],\n  ['name' => 'peaches', 'price' => 2.50],\n  ['name' => 'cherries', 'price' => 3.00],\n  ['name' => 'plums', 'price' => 2.00],\n  ['name' => 'nectarines', 'price' => 2.50],\n  ['name' => 'apricots', 'price' => 3.00],\n  ['name' => 'pomegranates', 'price' => 4.00],\n  ['name' => 'kiwis', 'price' => 3.00],\n  ['name' => 'guavas', 'price' => 2.50],\n  ['name' => 'coconuts', 'price' => 5.00],\n  ['name' => 'avocados', 'price' => 4.00],\n  ['name' => 'cantaloupes', 'price' => 3.00],\n  ['name' => 'watermelons', 'price' => 4.00],\n  ['name' => 'honeydews', 'price' => 3.00],\n  ['\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nParse error: syntax error, unexpected string content \"\", expecting \"]\" in /tmp/tmpwhdlgjxq.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $b['price'] - $a['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 100],\n  ['name' => 'bananas', 'price' => 200],\n  ['name' => 'cherries', 'price' => 300],\n  ['name' => 'dates', 'price' => 400],\n  ['name' => 'eggplant', 'price' => 500],\n  ['name' => 'figs', 'price' => 600],\n  ['name' => 'grapes', 'price' => 700],\n  ['name' => 'honeydew', 'price' => 800],\n  ['name' => 'iceberg lettuce', 'price' => 900],\n  ['name' => 'jicama', 'price' => 1000],\n];\n\nprint_r(expensive_items($items, 5));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => jicama\n            [price] => 1000\n        )\n\n    [1] => Array\n        (\n            [name] => iceberg lettuce\n            [price] => 900\n        )\n\n    [2] => Array\n        (\n            [name] => honeydew\n            [price] => 800\n        )\n\n    [3] => Array\n        (\n            [name] => grapes\n            [price] => 700\n        )\n\n    [4] => Array\n        (\n            [name] => figs\n            [price] => 600\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = array_sort($items, 'price', SORT_DESC);\n    return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp1q6h2w9j.php:4\nStack trace:\n#0 /tmp/tmp1q6h2w9j.php(9): expensive_items(Array, 1)\n#1 /tmp/tmp1q6h2w9j.php(13): candidate(Array, 1)\n#2 /tmp/tmp1q6h2w9j.php(18): test()\n#3 {main}\n  thrown in /tmp/tmp1q6h2w9j.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = array_sort($items, function($item) {\n        return $item['price'];\n    });\n    return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpazg6tn2f.php:4\nStack trace:\n#0 /tmp/tmpazg6tn2f.php(11): expensive_items(Array, 1)\n#1 /tmp/tmpazg6tn2f.php(15): candidate(Array, 1)\n#2 /tmp/tmpazg6tn2f.php(20): test()\n#3 {main}\n  thrown in /tmp/tmpazg6tn2f.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 3],\n  ['name' => 'bananas', 'price' => 2],\n  ['name' => 'cherries', 'price' => 5],\n  ['name' => 'dates', 'price' => 4],\n];\n\nprint_r(expensive_items($items, 2));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmphfpiffv_.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => cherries\n            [price] => 5\n        )\n\n    [1] => Array\n        (\n            [name] => dates\n            [price] => 4\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmphfpiffv_.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmphfpiffv_.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmphfpiffv_.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = array_sort($items, 'price', SORT_DESC);\n  return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpk3wq6id1.php:4\nStack trace:\n#0 /tmp/tmpk3wq6id1.php(9): expensive_items(Array, 1)\n#1 /tmp/tmpk3wq6id1.php(13): candidate(Array, 1)\n#2 /tmp/tmpk3wq6id1.php(18): test()\n#3 {main}\n  thrown in /tmp/tmpk3wq6id1.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = array_sort($items, function($item) {\n    return $item['price'];\n  });\n\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'coffee', 'price' => 3],\n  ['name' => 'tea', 'price' => 2],\n  ['name' => 'milk', 'price' => 1],\n  ['name' => 'cookies', 'price' => 4],\n];\n\nprint_r(expensive_items($items, 2));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp2qnvbp9p.php:4\nStack trace:\n#0 /tmp/tmp2qnvbp9p.php(18): expensive_items(Array, 2)\n#1 {main}\n  thrown in /tmp/tmp2qnvbp9p.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $items = array_filter($items, function($item) {\n        return $item['price'] > 0;\n    });\n\n    usort($items, function($a, $b) {\n        return $b['price'] - $a['price'];\n    });\n\n    return array_slice($items, 0, $n);\n}\n\n$items = [\n    ['name' => 'item1', 'price' => 10],\n    ['name' => 'item2', 'price' => -1],\n    ['name' => 'item3', 'price' => 3],\n    ['name' => 'item4', 'price' => 0],\n    ['name' => 'item5', 'price' => -4],\n    ['name' => 'item6', 'price' => 1],\n    ['name' => 'item7', 'price' => 5],\n    ['name' => 'item8', 'price' => 10],\n    ['name' => 'item9', 'price' => 12],\n    ['name' => 'item10', 'price' => 0],\n];\n\nprint_r(expensive_items($items, 3));\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => item9\n            [price] => 12\n        )\n\n    [1] => Array\n        (\n            [name] => item1\n            [price] => 10\n        )\n\n    [2] => Array\n        (\n            [name] => item8\n            [price] => 10\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = array_sort($items, function($item) {\n    return $item['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmppsarmbq9.php:4\nStack trace:\n#0 /tmp/tmppsarmbq9.php(11): expensive_items(Array, 1)\n#1 /tmp/tmppsarmbq9.php(15): candidate(Array, 1)\n#2 /tmp/tmppsarmbq9.php(20): test()\n#3 {main}\n  thrown in /tmp/tmppsarmbq9.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = array_sort($items, 'price', SORT_DESC);\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 2.50],\n  ['name' => 'bananas', 'price' => 1.50],\n  ['name' => 'oranges', 'price' => 3.00],\n  ['name' => 'pears', 'price' => 2.00],\n  ['name' => 'pineapples', 'price' => 4.00],\n  ['name' => 'strawberries', 'price' => 3.50],\n];\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpyxwne_8p.php:4\nStack trace:\n#0 /tmp/tmpyxwne_8p.php(17): expensive_items(Array, 3)\n#1 {main}\n  thrown in /tmp/tmpyxwne_8p.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = $items;\n  usort($sorted, function($a, $b) {\n    return $b['price'] - $a['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n\n$items = [\n  ['name' => 'Item 1', 'price' => 10],\n  ['name' => 'Item 2', 'price' => 20],\n  ['name' => 'Item 3', 'price' => 30],\n  ['name' => 'Item 4', 'price' => 40],\n  ['name' => 'Item 5', 'price' => 50],\n  ['name' => 'Item 6', 'price' => 60],\n  ['name' => 'Item 7', 'price' => 70],\n  ['name' => 'Item 8', 'price' => 80],\n  ['name' => 'Item 9', 'price' => 90],\n  ['name' => 'Item 10', 'price' => 100],\n];\n\nprint_r(expensive_items($items, 3));\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => Item 10\n            [price] => 100\n        )\n\n    [1] => Array\n        (\n            [name] => Item 9\n            [price] => 90\n        )\n\n    [2] => Array\n        (\n            [name] => Item 8\n            [price] => 80\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $items = array_map(function($item) {\n    $item['price'] = (float) $item['price'];\n    return $item;\n  }, $items);\n\n  usort($items, function($a, $b) {\n    return $b['price'] - $a['price'];\n  });\n\n  return array_slice($items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 1.5],\n  ['name' => 'bananas', 'price' => 2.5],\n  ['name' => 'oranges', 'price' => 3.5],\n  ['name' => 'grapes', 'price' => 4.5],\n  ['name' => 'pineapples', 'price' => 5.5],\n  ['name' => 'pears', 'price' => 6.5],\n  ['name' => 'mangoes', 'price' => 7.5],\n  ['name' => 'watermelons', 'price' => 8.5],\n  ['name' => 'strawberries', 'price' => 9.5],\n  ['name' => 'blueberries', 'price' => 10.5],\n];\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => blueberries\n            [price] => 10.5\n        )\n\n    [1] => Array\n        (\n            [name] => strawberries\n            [price] => 9.5\n        )\n\n    [2] => Array\n        (\n            [name] => watermelons\n            [price] => 8.5\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = $items;\n    usort($sorted_items, function($a, $b) {\n        return $a['price'] < $b['price'];\n    });\n    return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n    ['name' => 'apples', 'price' => 3],\n    ['name' => 'bananas', 'price' => 5],\n    ['name' => 'cherries', 'price' => 4],\n    ['name' => 'dates', 'price' => 7],\n    ['name' => 'eggplants', 'price' => 1],\n    ['name' => 'figs', 'price' => 6],\n    ['name' => 'grapes', 'price' => 2],\n    ['name' => 'honeydew', 'price' => 8],\n    ['name' => 'iceberg lettuce', 'price' => 9],\n    ['name' => 'jalapenos', 'price' => 10],\n    ['name' => 'kiwis', 'price' => 11],\n    ['name' => 'lemons', 'price' => 12],\n    ['name' => 'mangos', 'price' => 13],\n    ['name' => 'nectarines', 'price' => 14],\n    ['name' => 'oranges', 'price' => 15],\n    ['name' => 'pineapples', 'price' => 16],\n    ['name' => 'quince', 'price' => 17],\n    ['name' => 'raspberries', 'price' => 18],\n    ['name' => 'strawberries', 'price' => 19],\n    ['name' => 'tomatoes', 'price' => 20],\n    ['name' => 'ugli fruit', 'price' => 21],\n    ['name' => 'vidalias', 'price' => 22],\n    ['name' => 'watermelon', 'price' => 23],\n    ['name' => 'xigua', 'price' => 24],\n    ['name' => 'yellow squash', 'price' => 25],\n    ['name' => 'zucchini', 'price' => 26],\n];\n\n$n = 5\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpqpt8v_nm.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = array();\n  foreach ($items as $item) {\n    $sorted_items[$item['price']] = $item;\n  }\n  krsort($sorted_items);\n  $sorted_items = array_values($sorted_items);\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = array(\n  array('name' => 'item1', 'price' => 10),\n  array('name' => 'item2', 'price' => 9),\n  array('name' => 'item3', 'price' => 12),\n  array('name' => 'item4', 'price' => 8),\n  array('name' => 'item5', 'price' => 11),\n  array('name' => 'item6', 'price' => 10),\n);\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => item3\n            [price] => 12\n        )\n\n    [1] => Array\n        (\n            [name] => item5\n            [price] => 11\n        )\n\n    [2] => Array\n        (\n            [name] => item6\n            [price] => 10\n        )\n\n)\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpk_4vec83.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpk_4vec83.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpk_4vec83.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpk_4vec83.php on line 6\n\nDeprecated: Implicit conversion from float 45.09 to int loses precision in /tmp/tmpk_4vec83.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpk_4vec83.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpk_4vec83.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted = $items;\n    usort($sorted, function($a, $b) {\n        return $a['price'] < $b['price'];\n    });\n    return array_slice($sorted, 0, $n);\n}\n\n$items = [\n    ['name' => 'shoes', 'price' => 10],\n    ['name' => 'socks', 'price' => 5],\n    ['name' => 'shirt', 'price' => 15],\n    ['name' => 'pants', 'price' => 25],\n    ['name' => 'jacket', 'price' => 50],\n    ['name' => 'belt', 'price' => 12],\n    ['name' => 'tie', 'price' => 3],\n    ['name' => 'hat', 'price' => 20],\n    ['name' => 'gloves', 'price' => 7],\n    ['name' => 'scarf', 'price' => 18],\n];\n\n$most_expensive = expensive_items($items, 3);\n\nprint_r($most_expensive);\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpuldpo28_.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => jacket\n            [price] => 50\n        )\n\n    [1] => Array\n        (\n            [name] => pants\n            [price] => 25\n        )\n\n    [2] => Array\n        (\n            [name] => hat\n            [price] => 20\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpuldpo28_.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpuldpo28_.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpuldpo28_.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sort_items = $items;\n    usort($sort_items, function($a, $b) {\n        return $a['price'] < $b['price'];\n    });\n    return array_slice($sort_items, 0, $n);\n}\n\n$items = [\n    ['name' => 'apples', 'price' => 100],\n    ['name' => 'bananas', 'price' => 200],\n    ['name' => 'pears', 'price' => 300],\n    ['name' => 'oranges', 'price' => 400],\n    ['name' => 'grapes', 'price' => 500],\n    ['name' => 'pineapples', 'price' => 600],\n    ['name' => 'mangoes', 'price' => 700],\n    ['name' => 'watermelons', 'price' => 800],\n    ['name' => 'strawberries', 'price' => 900],\n    ['name' => 'blueberries', 'price' => 1000],\n];\n\nprint_r(expensive_items($items, 5));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp3cybc_e9.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => blueberries\n            [price] => 1000\n        )\n\n    [1] => Array\n        (\n            [name] => strawberries\n            [price] => 900\n        )\n\n    [2] => Array\n        (\n            [name] => watermelons\n            [price] => 800\n        )\n\n    [3] => Array\n        (\n            [name] => mangoes\n            [price] => 700\n        )\n\n    [4] => Array\n        (\n            [name] => pineapples\n            [price] => 600\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp3cybc_e9.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp3cybc_e9.php on line 7\n\nDeprecat",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted = array_sort($items, function($item) {\n        return $item['price'];\n    });\n    return array_slice($sorted, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp4w4efx2h.php:4\nStack trace:\n#0 /tmp/tmp4w4efx2h.php(11): expensive_items(Array, 1)\n#1 /tmp/tmp4w4efx2h.php(15): candidate(Array, 1)\n#2 /tmp/tmp4w4efx2h.php(20): test()\n#3 {main}\n  thrown in /tmp/tmp4w4efx2h.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 10],\n  ['name' => 'bananas', 'price' => 5],\n  ['name' => 'coconuts', 'price' => 15],\n  ['name' => 'dates', 'price' => 20],\n  ['name' => 'eggs', 'price' => 25],\n  ['name' => 'figs', 'price' => 30],\n  ['name' => 'grapes', 'price' => 35],\n  ['name' => 'honeydew', 'price' => 40],\n  ['name' => 'ice cream', 'price' => 45],\n  ['name' => 'jalapenos', 'price' => 50],\n  ['name' => 'kiwis', 'price' => 55],\n  ['name' => 'lemons', 'price' => 60],\n  ['name' => 'mangos', 'price' => 65],\n  ['name' => 'nectarines', 'price' => 70],\n  ['name' => 'oranges', 'price' => 75],\n  ['name' => 'pineapples', 'price' => 80],\n  ['name' => 'quince', 'price' => 85],\n  ['name' => 'raspberries', 'price' => 90],\n  ['name' => 'strawberries', 'price' => 95],\n  ['name' => 'tomatoes', 'price' => 100],\n  ['name' => 'ugli fruit', 'price' => 105],\n  ['name' => 'vitamin C', 'price' => 110],\n  ['name' => 'watermelon', 'price' => 115],\n  ['name' => 'xigua', 'price' => 120],\n  ['name' => 'yams', 'price' => 125],\n  ['name' => 'zucchini', 'price' => 130],\n];\n\nprint_r(expensive\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpnk1z9jn1.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = array_sort($items, 'price', SORT_DESC);\n    return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp1q6h2w9j.php:4\nStack trace:\n#0 /tmp/tmp1q6h2w9j.php(9): expensive_items(Array, 1)\n#1 /tmp/tmp1q6h2w9j.php(13): candidate(Array, 1)\n#2 /tmp/tmp1q6h2w9j.php(18): test()\n#3 {main}\n  thrown in /tmp/tmp1q6h2w9j.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = array_sort($items, function($item) {\n    return $item['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpyqt1xgl_.php:4\nStack trace:\n#0 /tmp/tmpyqt1xgl_.php(11): expensive_items(Array, 1)\n#1 /tmp/tmpyqt1xgl_.php(15): candidate(Array, 1)\n#2 /tmp/tmpyqt1xgl_.php(20): test()\n#3 {main}\n  thrown in /tmp/tmpyqt1xgl_.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $items = array_filter($items, function ($item) {\n        return $item['price'] > 0;\n    });\n\n    usort($items, function ($a, $b) {\n        return $a['price'] < $b['price'];\n    });\n\n    return array_slice($items, 0, $n);\n}\n\n$items = [\n    ['name' => 'apples', 'price' => 0.5],\n    ['name' => 'bananas', 'price' => 0.3],\n    ['name' => 'carrots', 'price' => 1.2],\n    ['name' => 'dates', 'price' => 0.9],\n    ['name' => 'eggs', 'price' => 0.8],\n    ['name' => 'figs', 'price' => 0],\n    ['name' => 'grapes', 'price' => 1.1],\n    ['name' => 'honeydew', 'price' => 0.7],\n    ['name' => 'ice cream', 'price' => 2.5],\n    ['name' => 'jalapeno', 'price' => 0.6],\n    ['name' => 'kiwi', 'price' => 1.3],\n    ['name' => 'lemons', 'price' => 0.4],\n    ['name' => 'mangos', 'price' => 1.4],\n    ['name' => 'nectarines', 'price' => 1.5],\n    ['name' => 'oranges', 'price' => 0.2],\n    ['name' => 'pineapples', 'price' => 1.6],\n    ['name' => 'quinoa', 'price' => 0.1],\n    ['name' => 'raisins', 'price' => 1.7],\n    ['name' => 'strawberries', 'price' => 1.8],\n    ['name' => 'tomatoes', 'price' => 0.9],\n    ['name' => 'ugli fruit', 'price' => 1.9],\n    ['name' => 'vanilla', 'price' => 2.0],\n    ['name' => 'watermelon', 'price' => 2.1],\n    ['name'\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmp_q3atk5r.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = $items;\n    usort($sorted_items, function($a, $b) {\n        return $a['price'] < $b['price'];\n    });\n    return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n    ['name' => 'apples', 'price' => 5],\n    ['name' => 'bananas', 'price' => 2],\n    ['name' => 'pears', 'price' => 3],\n    ['name' => 'pineapples', 'price' => 4],\n    ['name' => 'oranges', 'price' => 1],\n];\n\n$most_expensive = expensive_items($items, 3);\n\nforeach ($most_expensive as $item) {\n    echo $item['name'] . ': ' . $item['price'] . PHP_EOL;\n}\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpuld7jq6s.php on line 7\napples: 5\npineapples: 4\npears: 3\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpuld7jq6s.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpuld7jq6s.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpuld7jq6s.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = array_sort($items, 'price', SORT_DESC);\n  return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpk3wq6id1.php:4\nStack trace:\n#0 /tmp/tmpk3wq6id1.php(9): expensive_items(Array, 1)\n#1 /tmp/tmpk3wq6id1.php(13): candidate(Array, 1)\n#2 /tmp/tmpk3wq6id1.php(18): test()\n#3 {main}\n  thrown in /tmp/tmpk3wq6id1.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $expensive_items = [];\n    $i = 0;\n    foreach ($items as $item) {\n        if ($i < $n) {\n            $expensive_items[] = $item;\n            $i++;\n        } else {\n            $min_price = min($expensive_items);\n            if ($item > $min_price) {\n                $min_price_key = array_search($min_price, $expensive_items);\n                $expensive_items[$min_price_key] = $item;\n            }\n        }\n    }\n    return $expensive_items;\n}\n\n$items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$n = 3;\n\nprint_r(expensive_items($items, $n));\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 8\n    [2] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn3n5p_ie.php:31\nStack trace:\n#0 /tmp/tmpn3n5p_ie.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpn3n5p_ie.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = array_sort($items, 'price', SORT_DESC);\n  return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpk3wq6id1.php:4\nStack trace:\n#0 /tmp/tmpk3wq6id1.php(9): expensive_items(Array, 1)\n#1 /tmp/tmpk3wq6id1.php(13): candidate(Array, 1)\n#2 /tmp/tmpk3wq6id1.php(18): test()\n#3 {main}\n  thrown in /tmp/tmpk3wq6id1.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = $items;\n    usort($sorted_items, function($a, $b) {\n        return $a['price'] < $b['price'];\n    });\n    return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n    ['name' => 'Item 1', 'price' => 10],\n    ['name' => 'Item 2', 'price' => 30],\n    ['name' => 'Item 3', 'price' => 20],\n    ['name' => 'Item 4', 'price' => 15],\n    ['name' => 'Item 5', 'price' => 40],\n    ['name' => 'Item 6', 'price' => 50],\n    ['name' => 'Item 7', 'price' => 25],\n    ['name' => 'Item 8', 'price' => 35],\n    ['name' => 'Item 9', 'price' => 45],\n    ['name' => 'Item 10', 'price' => 55],\n];\n\n$n = 3;\n\n$result = expensive_items($items, $n);\n\nprint_r($result);\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmprgjxmaw1.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => Item 10\n            [price] => 55\n        )\n\n    [1] => Array\n        (\n            [name] => Item 6\n            [price] => 50\n        )\n\n    [2] => Array\n        (\n            [name] => Item 9\n            [price] => 45\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmprgjxmaw1.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmprgjxmaw1.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmprgjxmaw1.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = array_sort($items, function($item) {\n    return $item['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpyqt1xgl_.php:4\nStack trace:\n#0 /tmp/tmpyqt1xgl_.php(11): expensive_items(Array, 1)\n#1 /tmp/tmpyqt1xgl_.php(15): candidate(Array, 1)\n#2 /tmp/tmpyqt1xgl_.php(20): test()\n#3 {main}\n  thrown in /tmp/tmpyqt1xgl_.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = $items;\n    usort($sorted_items, function($a, $b) {\n        return $a['price'] <=> $b['price'];\n    });\n    return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n    ['name' => 'Item 1', 'price' => 10],\n    ['name' => 'Item 2', 'price' => 5],\n    ['name' => 'Item 3', 'price' => 15],\n    ['name' => 'Item 4', 'price' => 20],\n    ['name' => 'Item 5', 'price' => 25],\n];\n\n$expensive_items = expensive_items($items, 3);\n\nforeach ($expensive_items as $item) {\n    echo $item['name'] . ': $' . $item['price'] . PHP_EOL;\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "Item 2: $5\nItem 1: $10\nItem 3: $15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg9zajnuv.php:30\nStack trace:\n#0 /tmp/tmpg9zajnuv.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpg9zajnuv.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = array_sort($items, 'price', SORT_DESC);\n    return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp1q6h2w9j.php:4\nStack trace:\n#0 /tmp/tmp1q6h2w9j.php(9): expensive_items(Array, 1)\n#1 /tmp/tmp1q6h2w9j.php(13): candidate(Array, 1)\n#2 /tmp/tmp1q6h2w9j.php(18): test()\n#3 {main}\n  thrown in /tmp/tmp1q6h2w9j.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted = array_sort($items, function($item) {\n        return $item['price'];\n    });\n    return array_slice($sorted, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp4w4efx2h.php:4\nStack trace:\n#0 /tmp/tmp4w4efx2h.php(11): expensive_items(Array, 1)\n#1 /tmp/tmp4w4efx2h.php(15): candidate(Array, 1)\n#2 /tmp/tmp4w4efx2h.php(20): test()\n#3 {main}\n  thrown in /tmp/tmp4w4efx2h.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = array_sort($items, function($item) {\n    return $item['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpyqt1xgl_.php:4\nStack trace:\n#0 /tmp/tmpyqt1xgl_.php(11): expensive_items(Array, 1)\n#1 /tmp/tmpyqt1xgl_.php(15): candidate(Array, 1)\n#2 /tmp/tmpyqt1xgl_.php(20): test()\n#3 {main}\n  thrown in /tmp/tmpyqt1xgl_.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = array_sort($items, function($item) {\n    return $item['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmppsarmbq9.php:4\nStack trace:\n#0 /tmp/tmppsarmbq9.php(11): expensive_items(Array, 1)\n#1 /tmp/tmppsarmbq9.php(15): candidate(Array, 1)\n#2 /tmp/tmppsarmbq9.php(20): test()\n#3 {main}\n  thrown in /tmp/tmppsarmbq9.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted = array();\n    foreach ($items as $item) {\n        $sorted[$item['price']] = $item;\n    }\n    krsort($sorted);\n    return array_slice($sorted, 0, $n);\n}\n\n$items = array(\n    array('name' => 'item1', 'price' => 10),\n    array('name' => 'item2', 'price' => 9),\n    array('name' => 'item3', 'price' => 12),\n    array('name' => 'item4', 'price' => 8),\n    array('name' => 'item5', 'price' => 11),\n);\n\n$result = expensive_items($items, 3);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => item3\n            [price] => 12\n        )\n\n    [1] => Array\n        (\n            [name] => item5\n            [price] => 11\n        )\n\n    [2] => Array\n        (\n            [name] => item1\n            [price] => 10\n        )\n\n)\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpemqp56kn.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpemqp56kn.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpemqp56kn.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpemqp56kn.php on line 6\n\nDeprecated: Implicit conversion from float 45.09 to int loses precision in /tmp/tmpemqp56kn.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpemqp56kn.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpemqp56kn.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted = $items;\n    usort($sorted, function($a, $b) {\n        return $a['price'] < $b['price'];\n    });\n    return array_slice($sorted, 0, $n);\n}\n\n$items = [\n    ['name' => 'coffee', 'price' => 2.50],\n    ['name' => 'tea', 'price' => 1.50],\n    ['name' => 'biscuits', 'price' => 0.10],\n    ['name' => 'tissues', 'price' => 0.02],\n    ['name' => 'chocolate', 'price' => 0.50],\n    ['name' => 'rubber', 'price' => 0.20],\n    ['name' => 'pencil', 'price' => 0.80],\n    ['name' => 'book', 'price' => 12.00],\n    ['name' => 'notebook', 'price' => 3.60],\n    ['name' => 'desk', 'price' => 75.00],\n    ['name' => 'chair', 'price' => 25.00],\n    ['name' => 'sofa', 'price' => 150.00],\n    ['name' => 'dresser', 'price' => 80.00],\n    ['name' => 'mirror', 'price' => 10.00],\n    ['name' => 'curtains', 'price' => 15.00],\n    ['name' => 'rug', 'price' => 30.00],\n    ['name' => 'lamp', 'price' => 5.00],\n    ['name' => 'pillow', 'price' => 2.00],\n    ['name' => 'blanket', 'price' => 7.00],\n    ['name' => 'wardrobe', 'price' => 150.00],\n    ['name' => 'bed', 'price' => 100.00],\n    ['name' => 'table', 'price' => 50.00],\n    ['name' => 'cupboard', 'price' => 75.00],\n    ['name' => 'vase', 'price' => 8.00],\n    ['name' => 'candle', 'price' => 1.50\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmpmmobnpoc.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $most_expensive = array();\n    $i = 0;\n    foreach ($items as $item) {\n        if ($i < $n) {\n            $most_expensive[] = $item;\n            $i++;\n        } else {\n            $min_price = min($most_expensive);\n            if ($item > $min_price) {\n                $min_key = array_search($min_price, $most_expensive);\n                $most_expensive[$min_key] = $item;\n            }\n        }\n    }\n    return $most_expensive;\n}\n\n$items = array(\n    array('name' => 'item1', 'price' => 10),\n    array('name' => 'item2', 'price' => 9),\n    array('name' => 'item3', 'price' => 12),\n    array('name' => 'item4', 'price' => 8),\n    array('name' => 'item5', 'price' => 15),\n    array('name' => 'item6', 'price' => 14),\n    array('name' => 'item7', 'price' => 7),\n    array('name' => 'item8', 'price' => 11),\n    array('name' => 'item9', 'price' => 13),\n    array('name' => 'item10', 'price' => 16),\n);\n\n$n = 3;\n$most_expensive = expensive_items($items, $n);\necho '<pre>';\nprint_r($most_expensive);\necho '</pre>';\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "<pre>Array\n(\n    [0] => Array\n        (\n            [name] => item7\n            [price] => 7\n        )\n\n    [1] => Array\n        (\n            [name] => item8\n            [price] => 11\n        )\n\n    [2] => Array\n        (\n            [name] => item9\n            [price] => 13\n        )\n\n)\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjb3ddi97.php:45\nStack trace:\n#0 /tmp/tmpjb3ddi97.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpjb3ddi97.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 4],\n  ['name' => 'bananas', 'price' => 2],\n  ['name' => 'cherries', 'price' => 3],\n  ['name' => 'dates', 'price' => 5],\n  ['name' => 'eggplant', 'price' => 1],\n  ['name' => 'figs', 'price' => 6],\n  ['name' => 'grapes', 'price' => 7],\n  ['name' => 'honeydew', 'price' => 8],\n  ['name' => 'ice cream', 'price' => 9],\n  ['name' => 'jalapenos', 'price' => 10],\n  ['name' => 'kiwi', 'price' => 11],\n  ['name' => 'lemons', 'price' => 12],\n  ['name' => 'mangos', 'price' => 13],\n  ['name' => 'nectarines', 'price' => 14],\n  ['name' => 'oranges', 'price' => 15],\n  ['name' => 'pineapples', 'price' => 16],\n  ['name' => 'quinoa', 'price' => 17],\n  ['name' => 'raspberries', 'price' => 18],\n  ['name' => 'strawberries', 'price' => 19],\n  ['name' => 'tomatoes', 'price' => 20],\n  ['name' => 'ugli fruit', 'price' => 21],\n  ['name' => 'vanilla', 'price' => 22],\n  ['name' => 'watermelon', 'price' => 23],\n  ['name' => 'xigua', 'price' => 24],\n  ['name' => 'yams', 'price' => 25],\n  ['name' => 'zucchini', 'price' => 26],\n];\n\nprint_r(expensive_items($\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpeov07qx_.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $expensive_items = [];\n    $prices = [];\n    foreach ($items as $item) {\n        $prices[] = $item['price'];\n    }\n    rsort($prices);\n    $prices = array_slice($prices, 0, $n);\n    foreach ($items as $item) {\n        if (in_array($item['price'], $prices)) {\n            $expensive_items[] = $item;\n        }\n    }\n    return $expensive_items;\n}\n\n$items = [\n    ['name' => 'apples', 'price' => 100],\n    ['name' => 'bananas', 'price' => 200],\n    ['name' => 'cherries', 'price' => 300],\n    ['name' => 'dates', 'price' => 400],\n    ['name' => 'eggplants', 'price' => 500],\n    ['name' => 'figs', 'price' => 600],\n    ['name' => 'grapes', 'price' => 700],\n    ['name' => 'honeydew', 'price' => 800],\n    ['name' => 'iceberg lettuce', 'price' => 900],\n    ['name' => 'jalapeno', 'price' => 1000],\n    ['name' => 'kiwi', 'price' => 1100],\n    ['name' => 'lemons', 'price' => 1200],\n    ['name' => 'mangos', 'price' => 1300],\n    ['name' => 'nectarines', 'price' => 1400],\n    ['name' => 'oranges', 'price' => 1500],\n    ['name' => 'pineapples', 'price' => 1600],\n    ['name' => 'quince', 'price' => 1700],\n    ['name' => 'raspberries', 'price' => 1800],\n    ['name' => 'strawberries', 'price' => 1900],\n    ['name' => 'tomatoes', 'price' => 2000],\n    ['name' => 'ugli fruit', 'price' => 2100],\n    ['name' => 'vadalia onions', 'price' => 2200],\n    ['name' => 'watermelon', 'price' => 23\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmptwkxzc0r.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = array_sort($items, 'price', SORT_DESC);\n  return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpk3wq6id1.php:4\nStack trace:\n#0 /tmp/tmpk3wq6id1.php(9): expensive_items(Array, 1)\n#1 /tmp/tmpk3wq6id1.php(13): candidate(Array, 1)\n#2 /tmp/tmpk3wq6id1.php(18): test()\n#3 {main}\n  thrown in /tmp/tmpk3wq6id1.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = array_sort($items, function($item) {\n        return $item['price'];\n    });\n\n    return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123250,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpn_wzf9ap.php:4\nStack trace:\n#0 /tmp/tmpn_wzf9ap.php(12): expensive_items(Array, 1)\n#1 /tmp/tmpn_wzf9ap.php(16): candidate(Array, 1)\n#2 /tmp/tmpn_wzf9ap.php(21): test()\n#3 {main}\n  thrown in /tmp/tmpn_wzf9ap.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = array();\n  foreach ($items as $item) {\n    $sorted_items[$item['price']] = $item;\n  }\n  krsort($sorted_items);\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = array(\n  array('name' => 'item1', 'price' => 10),\n  array('name' => 'item2', 'price' => 9),\n  array('name' => 'item3', 'price' => 12),\n  array('name' => 'item4', 'price' => 8),\n  array('name' => 'item5', 'price' => 15),\n  array('name' => 'item6', 'price' => 14),\n  array('name' => 'item7', 'price' => 11),\n  array('name' => 'item8', 'price' => 13),\n  array('name' => 'item9', 'price' => 10),\n  array('name' => 'item10', 'price' => 9),\n  array('name' => 'item11', 'price' => 12),\n  array('name' => 'item12', 'price' => 8),\n  array('name' => 'item13', 'price' => 15),\n  array('name' => 'item14', 'price' => 14),\n  array('name' => 'item15', 'price' => 11),\n  array('name' => 'item16', 'price' => 13),\n);\n\nprint_r(expensive_items($items, 3));\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => item13\n            [price] => 15\n        )\n\n    [1] => Array\n        (\n            [name] => item14\n            [price] => 14\n        )\n\n    [2] => Array\n        (\n            [name] => item16\n            [price] => 13\n        )\n\n)\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpuv5_514f.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpuv5_514f.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpuv5_514f.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpuv5_514f.php on line 6\n\nDeprecated: Implicit conversion from float 45.09 to int loses precision in /tmp/tmpuv5_514f.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpuv5_514f.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpuv5_51",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $b['price'] - $a['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = array(\n  array('name' => 'item1', 'price' => 10),\n  array('name' => 'item2', 'price' => 30),\n  array('name' => 'item3', 'price' => 20),\n  array('name' => 'item4', 'price' => 15),\n  array('name' => 'item5', 'price' => 40),\n  array('name' => 'item6', 'price' => 25),\n);\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => item5\n            [price] => 40\n        )\n\n    [1] => Array\n        (\n            [name] => item2\n            [price] => 30\n        )\n\n    [2] => Array\n        (\n            [name] => item6\n            [price] => 25\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n\t$sorted_items = $items;\n\tusort($sorted_items, function($a, $b) {\n\t\treturn $a['price'] < $b['price'];\n\t});\n\treturn array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n\t['name' => 'item1', 'price' => 10],\n\t['name' => 'item2', 'price' => 20],\n\t['name' => 'item3', 'price' => 30],\n\t['name' => 'item4', 'price' => 40],\n\t['name' => 'item5', 'price' => 50],\n];\n\nprint_r(expensive_items($items, 3));\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpu2gmmw97.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => item5\n            [price] => 50\n        )\n\n    [1] => Array\n        (\n            [name] => item4\n            [price] => 40\n        )\n\n    [2] => Array\n        (\n            [name] => item3\n            [price] => 30\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpu2gmmw97.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpu2gmmw97.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpu2gmmw97.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = $items;\n    usort($sorted_items, function($a, $b) {\n        return $a['price'] < $b['price'];\n    });\n    return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n    ['name' => 'shoes', 'price' => 100],\n    ['name' => 'shirt', 'price' => 50],\n    ['name' => 'pants', 'price' => 75],\n    ['name' => 'jacket', 'price' => 150],\n    ['name' => 'hat', 'price' => 25],\n    ['name' => 'socks', 'price' => 10],\n    ['name' => 'gloves', 'price' => 20],\n    ['name' => 'scarf', 'price' => 30],\n    ['name' => 'belt', 'price' => 40],\n    ['name' => 'tie', 'price' => 60],\n];\n\nprint_r(expensive_items($items, 3));\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpf11pqcxc.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => jacket\n            [price] => 150\n        )\n\n    [1] => Array\n        (\n            [name] => shoes\n            [price] => 100\n        )\n\n    [2] => Array\n        (\n            [name] => pants\n            [price] => 75\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpf11pqcxc.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpf11pqcxc.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpf11pqcxc.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = array_sort($items, 'price', SORT_DESC);\n    return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp1q6h2w9j.php:4\nStack trace:\n#0 /tmp/tmp1q6h2w9j.php(9): expensive_items(Array, 1)\n#1 /tmp/tmp1q6h2w9j.php(13): candidate(Array, 1)\n#2 /tmp/tmp1q6h2w9j.php(18): test()\n#3 {main}\n  thrown in /tmp/tmp1q6h2w9j.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted = $items;\n    usort($sorted, function($a, $b) {\n        return $a['price'] < $b['price'];\n    });\n    return array_slice($sorted, 0, $n);\n}\n\n$items = [\n    ['name' => 'Item 1', 'price' => 100],\n    ['name' => 'Item 2', 'price' => 200],\n    ['name' => 'Item 3', 'price' => 300],\n    ['name' => 'Item 4', 'price' => 400],\n    ['name' => 'Item 5', 'price' => 500],\n    ['name' => 'Item 6', 'price' => 600],\n    ['name' => 'Item 7', 'price' => 700],\n    ['name' => 'Item 8', 'price' => 800],\n    ['name' => 'Item 9', 'price' => 900],\n    ['name' => 'Item 10', 'price' => 1000],\n];\n\nprint_r(expensive_items($items, 3));\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpphigcyn7.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => Item 10\n            [price] => 1000\n        )\n\n    [1] => Array\n        (\n            [name] => Item 9\n            [price] => 900\n        )\n\n    [2] => Array\n        (\n            [name] => Item 8\n            [price] => 800\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpphigcyn7.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpphigcyn7.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpphigcyn7.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = array_sort($items, 'price', SORT_DESC);\n  return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpk3wq6id1.php:4\nStack trace:\n#0 /tmp/tmpk3wq6id1.php(9): expensive_items(Array, 1)\n#1 /tmp/tmpk3wq6id1.php(13): candidate(Array, 1)\n#2 /tmp/tmpk3wq6id1.php(18): test()\n#3 {main}\n  thrown in /tmp/tmpk3wq6id1.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = $items;\n    usort($sorted_items, function($a, $b) {\n        return $a['price'] < $b['price'];\n    });\n    return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n    ['name' => 'Item 1', 'price' => 100],\n    ['name' => 'Item 2', 'price' => 200],\n    ['name' => 'Item 3', 'price' => 300],\n    ['name' => 'Item 4', 'price' => 400],\n    ['name' => 'Item 5', 'price' => 500],\n    ['name' => 'Item 6', 'price' => 600],\n    ['name' => 'Item 7', 'price' => 700],\n    ['name' => 'Item 8', 'price' => 800],\n    ['name' => 'Item 9', 'price' => 900],\n    ['name' => 'Item 10', 'price' => 1000],\n];\n\nprint_r(expensive_items($items, 5));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp62y9rfo5.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => Item 10\n            [price] => 1000\n        )\n\n    [1] => Array\n        (\n            [name] => Item 9\n            [price] => 900\n        )\n\n    [2] => Array\n        (\n            [name] => Item 8\n            [price] => 800\n        )\n\n    [3] => Array\n        (\n            [name] => Item 7\n            [price] => 700\n        )\n\n    [4] => Array\n        (\n            [name] => Item 6\n            [price] => 600\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp62y9rfo5.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp62y9rfo5.php on line 7\n\nDeprecated: usort(): Returni",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = $items;\n    usort($sorted_items, function($a, $b) {\n        return $a['price'] < $b['price'];\n    });\n    return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n    ['name' => 'coffee', 'price' => 3],\n    ['name' => 'tea', 'price' => 1],\n    ['name' => 'beer', 'price' => 6],\n    ['name' => 'wine', 'price' => 10],\n    ['name' => 'whiskey', 'price' => 12],\n];\n\n$n = 2;\n\n$result = expensive_items($items, $n);\n\nprint_r($result);\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp4f5kiphw.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => whiskey\n            [price] => 12\n        )\n\n    [1] => Array\n        (\n            [name] => wine\n            [price] => 10\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp4f5kiphw.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp4f5kiphw.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp4f5kiphw.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $expensive_items = array();\n  foreach ($items as $item) {\n    if (count($expensive_items) < $n) {\n      $expensive_items[] = $item;\n    } else {\n      $min_price = min(array_column($expensive_items, 'price'));\n      if ($item['price'] > $min_price) {\n        $min_price_index = array_search($min_price, array_column($expensive_items, 'price'));\n        $expensive_items[$min_price_index] = $item;\n      }\n    }\n  }\n  return $expensive_items;\n}\n\n$items = array(\n  array('name' => 'item1', 'price' => 10),\n  array('name' => 'item2', 'price' => 9),\n  array('name' => 'item3', 'price' => 12),\n  array('name' => 'item4', 'price' => 8),\n  array('name' => 'item5', 'price' => 15),\n  array('name' => 'item6', 'price' => 14),\n  array('name' => 'item7', 'price' => 7),\n  array('name' => 'item8', 'price' => 11),\n  array('name' => 'item9', 'price' => 13),\n  array('name' => 'item10', 'price' => 16),\n);\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => item6\n            [price] => 14\n        )\n\n    [1] => Array\n        (\n            [name] => item5\n            [price] => 15\n        )\n\n    [2] => Array\n        (\n            [name] => item10\n            [price] => 16\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu2mfmgeu.php:40\nStack trace:\n#0 /tmp/tmpu2mfmgeu.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpu2mfmgeu.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $b['price'] - $a['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 2.49],\n  ['name' => 'bananas', 'price' => 1.99],\n  ['name' => 'carrots', 'price' => 2.99],\n  ['name' => 'dates', 'price' => 3.99],\n  ['name' => 'eggs', 'price' => 4.99],\n  ['name' => 'figs', 'price' => 5.99],\n  ['name' => 'grapes', 'price' => 6.99],\n  ['name' => 'honeydew', 'price' => 7.99],\n  ['name' => 'iceberg lettuce', 'price' => 8.99],\n  ['name' => 'jalapenos', 'price' => 9.99],\n  ['name' => 'kiwis', 'price' => 10.99],\n  ['name' => 'lemons', 'price' => 11.99],\n  ['name' => 'mangos', 'price' => 12.99],\n  ['name' => 'nectarines', 'price' => 13.99],\n  ['name' => 'oranges', 'price' => 14.99],\n  ['name' => 'pineapples', 'price' => 15.99],\n  ['name' => 'quince', 'price' => 16.99],\n  ['name' => 'raspberries', 'price' => 17.99],\n  ['name' => 'strawberries', 'price' => 18.99],\n  ['name' => 'tomatoes', 'price' => 19.99],\n  ['name' => 'ugli fruit', 'price' => 20.99],\n  ['name' => 'vidalias', 'price' => 21.99],\n  ['name' => 'watermelon', 'price' => 22.99],\n  ['name' => 'xigua', 'price\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nParse error: syntax error, unexpected string content \"price\", expecting \"]\" in /tmp/tmpa2832c1s.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = array_sort($items, 'price', SORT_DESC);\n    return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp1q6h2w9j.php:4\nStack trace:\n#0 /tmp/tmp1q6h2w9j.php(9): expensive_items(Array, 1)\n#1 /tmp/tmp1q6h2w9j.php(13): candidate(Array, 1)\n#2 /tmp/tmp1q6h2w9j.php(18): test()\n#3 {main}\n  thrown in /tmp/tmp1q6h2w9j.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = array();\n  foreach ($items as $item) {\n    $sorted[$item['price']] = $item;\n  }\n  krsort($sorted);\n  return array_slice($sorted, 0, $n);\n}\n\n$items = array(\n  array('name' => 'item 1', 'price' => 10),\n  array('name' => 'item 2', 'price' => 30),\n  array('name' => 'item 3', 'price' => 20),\n  array('name' => 'item 4', 'price' => 15),\n  array('name' => 'item 5', 'price' => 25),\n  array('name' => 'item 6', 'price' => 40),\n  array('name' => 'item 7', 'price' => 35),\n  array('name' => 'item 8', 'price' => 45),\n  array('name' => 'item 9', 'price' => 50),\n  array('name' => 'item 10', 'price' => 55),\n);\n\nprint_r(expensive_items($items, 3));\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => item 10\n            [price] => 55\n        )\n\n    [1] => Array\n        (\n            [name] => item 9\n            [price] => 50\n        )\n\n    [2] => Array\n        (\n            [name] => item 8\n            [price] => 45\n        )\n\n)\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpar3mpm4l.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpar3mpm4l.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpar3mpm4l.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpar3mpm4l.php on line 6\n\nDeprecated: Implicit conversion from float 45.09 to int loses precision in /tmp/tmpar3mpm4l.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpar3mpm4l.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpar3mp",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 10],\n  ['name' => 'bananas', 'price' => 3],\n  ['name' => 'pears', 'price' => 5],\n  ['name' => 'oranges', 'price' => 6],\n  ['name' => 'pineapples', 'price' => 15],\n  ['name' => 'grapes', 'price' => 7],\n  ['name' => 'strawberries', 'price' => 9],\n  ['name' => 'blueberries', 'price' => 8],\n  ['name' => 'raspberries', 'price' => 4],\n  ['name' => 'blackberries', 'price' => 11],\n  ['name' => 'cranberries', 'price' => 12],\n  ['name' => 'mangos', 'price' => 13],\n  ['name' => 'papayas', 'price' => 14],\n  ['name' => 'kiwis', 'price' => 2],\n  ['name' => 'guavas', 'price' => 1],\n  ['name' => 'lychees', 'price' => 16],\n  ['name' => 'peaches', 'price' => 17],\n  ['name' => 'plums', 'price' => 18],\n  ['name' => 'nectarines', 'price' => 19],\n  ['name' => 'apricots', 'price' => 20],\n  ['name' => 'cherries', 'price' => 21],\n  ['name' => 'pomegranates', 'price' => 22],\n  ['name' => 'starfruit', 'price' => 23],\n  ['name' => 'jackfruit', 'price' => 24],\n  ['name' => 'durian', 'price' => 25],\n];\n\n$n = 5;\n$most_expensive_items = expensive_items($items, $\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpdlyby4s7.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted = $items;\n    usort($sorted, function($a, $b) {\n        return $a['price'] < $b['price'];\n    });\n    return array_slice($sorted, 0, $n);\n}\n\n$items = [\n    ['name' => 'coffee', 'price' => 2.75],\n    ['name' => 'tea', 'price' => 1.50],\n    ['name' => 'water', 'price' => 1.00],\n    ['name' => 'soda', 'price' => 1.25],\n    ['name' => 'juice', 'price' => 2.00],\n    ['name' => 'milk', 'price' => 2.50],\n];\n\n$most_expensive = expensive_items($items, 3);\n\nforeach ($most_expensive as $item) {\n    echo $item['name'] . ': $' . $item['price'] . PHP_EOL;\n}\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpf8xo_u5h.php on line 7\ncoffee: $2.75\nmilk: $2.5\njuice: $2\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpf8xo_u5h.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpf8xo_u5h.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpf8xo_u5h.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = array_sort($items, function($item) {\n        return $item['price'];\n    });\n\n    return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123250,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpn_wzf9ap.php:4\nStack trace:\n#0 /tmp/tmpn_wzf9ap.php(12): expensive_items(Array, 1)\n#1 /tmp/tmpn_wzf9ap.php(16): candidate(Array, 1)\n#2 /tmp/tmpn_wzf9ap.php(21): test()\n#3 {main}\n  thrown in /tmp/tmpn_wzf9ap.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = $items;\n    usort($sorted_items, function($a, $b) {\n        return $a['price'] < $b['price'];\n    });\n    return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n    ['name' => 'Item 1', 'price' => 10],\n    ['name' => 'Item 2', 'price' => 30],\n    ['name' => 'Item 3', 'price' => 20],\n    ['name' => 'Item 4', 'price' => 40],\n    ['name' => 'Item 5', 'price' => 50],\n    ['name' => 'Item 6', 'price' => 60],\n];\n\n$n = 3;\n\nprint_r(expensive_items($items, $n));\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpurupjrwk.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => Item 6\n            [price] => 60\n        )\n\n    [1] => Array\n        (\n            [name] => Item 5\n            [price] => 50\n        )\n\n    [2] => Array\n        (\n            [name] => Item 4\n            [price] => 40\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpurupjrwk.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpurupjrwk.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpurupjrwk.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'Item 1', 'price' => 10],\n  ['name' => 'Item 2', 'price' => 20],\n  ['name' => 'Item 3', 'price' => 30],\n  ['name' => 'Item 4', 'price' => 40],\n  ['name' => 'Item 5', 'price' => 50],\n  ['name' => 'Item 6', 'price' => 60],\n  ['name' => 'Item 7', 'price' => 70],\n  ['name' => 'Item 8', 'price' => 80],\n  ['name' => 'Item 9', 'price' => 90],\n  ['name' => 'Item 10', 'price' => 100],\n];\n\nprint_r(expensive_items($items, 5));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpolbi8t_9.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => Item 10\n            [price] => 100\n        )\n\n    [1] => Array\n        (\n            [name] => Item 9\n            [price] => 90\n        )\n\n    [2] => Array\n        (\n            [name] => Item 8\n            [price] => 80\n        )\n\n    [3] => Array\n        (\n            [name] => Item 7\n            [price] => 70\n        )\n\n    [4] => Array\n        (\n            [name] => Item 6\n            [price] => 60\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpolbi8t_9.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpolbi8t_9.php on line 7\n\nDeprecated: usort(): Returning bo",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = array_sort($items, function($item) {\n        return $item['price'];\n    });\n\n    return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123250,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpn_wzf9ap.php:4\nStack trace:\n#0 /tmp/tmpn_wzf9ap.php(12): expensive_items(Array, 1)\n#1 /tmp/tmpn_wzf9ap.php(16): candidate(Array, 1)\n#2 /tmp/tmpn_wzf9ap.php(21): test()\n#3 {main}\n  thrown in /tmp/tmpn_wzf9ap.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = array_sort($items, function($item) {\n    return $item['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpyqt1xgl_.php:4\nStack trace:\n#0 /tmp/tmpyqt1xgl_.php(11): expensive_items(Array, 1)\n#1 /tmp/tmpyqt1xgl_.php(15): candidate(Array, 1)\n#2 /tmp/tmpyqt1xgl_.php(20): test()\n#3 {main}\n  thrown in /tmp/tmpyqt1xgl_.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  // Sort the items by price.\n  usort($items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n\n  // Return the first $n items.\n  return array_slice($items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpo9ekircn.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpo9ekircn.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmpo9ekircn.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = array_sort($items, 'price');\n  return array_slice($sorted, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123250,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp2te1pil6.php:4\nStack trace:\n#0 /tmp/tmp2te1pil6.php(9): expensive_items(Array, 1)\n#1 /tmp/tmp2te1pil6.php(13): candidate(Array, 1)\n#2 /tmp/tmp2te1pil6.php(18): test()\n#3 {main}\n  thrown in /tmp/tmp2te1pil6.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $items_by_price = array();\n    foreach ($items as $item) {\n        $items_by_price[$item['price']] = $item;\n    }\n    krsort($items_by_price);\n    return array_slice($items_by_price, 0, $n);\n}\n\n$items = array(\n    array('name' => 'item1', 'price' => 10),\n    array('name' => 'item2', 'price' => 5),\n    array('name' => 'item3', 'price' => 15),\n    array('name' => 'item4', 'price' => 20),\n    array('name' => 'item5', 'price' => 30),\n    array('name' => 'item6', 'price' => 25),\n    array('name' => 'item7', 'price' => 40),\n    array('name' => 'item8', 'price' => 35),\n    array('name' => 'item9', 'price' => 45),\n    array('name' => 'item10', 'price' => 50),\n);\n\n$n = 3;\n$result = expensive_items($items, $n);\nprint_r($result);\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => item10\n            [price] => 50\n        )\n\n    [1] => Array\n        (\n            [name] => item9\n            [price] => 45\n        )\n\n    [2] => Array\n        (\n            [name] => item7\n            [price] => 40\n        )\n\n)\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpq8z_7c2h.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpq8z_7c2h.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpq8z_7c2h.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpq8z_7c2h.php on line 6\n\nDeprecated: Implicit conversion from float 45.09 to int loses precision in /tmp/tmpq8z_7c2h.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmpq8z_7c2h.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmpq8z_7c2h",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'item1', 'price' => 10],\n  ['name' => 'item2', 'price' => 9],\n  ['name' => 'item3', 'price' => 12],\n  ['name' => 'item4', 'price' => 8],\n  ['name' => 'item5', 'price' => 11],\n  ['name' => 'item6', 'price' => 7],\n];\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmppm5azj8w.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => item3\n            [price] => 12\n        )\n\n    [1] => Array\n        (\n            [name] => item5\n            [price] => 11\n        )\n\n    [2] => Array\n        (\n            [name] => item1\n            [price] => 10\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmppm5azj8w.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmppm5azj8w.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmppm5azj8w.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = array_sort($items, 'price');\n  return array_slice($sorted, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123250,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp2te1pil6.php:4\nStack trace:\n#0 /tmp/tmp2te1pil6.php(9): expensive_items(Array, 1)\n#1 /tmp/tmp2te1pil6.php(13): candidate(Array, 1)\n#2 /tmp/tmp2te1pil6.php(18): test()\n#3 {main}\n  thrown in /tmp/tmp2te1pil6.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 2.50],\n  ['name' => 'oranges', 'price' => 1.50],\n  ['name' => 'bananas', 'price' => 3.00],\n  ['name' => 'pears', 'price' => 4.00],\n  ['name' => 'grapes', 'price' => 2.00],\n  ['name' => 'pineapples', 'price' => 5.00],\n  ['name' => 'mangos', 'price' => 3.50],\n  ['name' => 'strawberries', 'price' => 1.00],\n];\n\n$n = 3;\n$most_expensive = expensive_items($items, $n);\n\nforeach ($most_expensive as $item) {\n  echo $item['name'] . ' ' . $item['price'] . PHP_EOL;\n}\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp3_jnwb4y.php on line 7\npineapples 5\npears 4\nmangos 3.5\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp3_jnwb4y.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp3_jnwb4y.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp3_jnwb4y.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted = $items;\n    usort($sorted, function($a, $b) {\n        return $a['price'] < $b['price'];\n    });\n    return array_slice($sorted, 0, $n);\n}\n\n$items = [\n    ['name' => 'item1', 'price' => 10],\n    ['name' => 'item2', 'price' => 9],\n    ['name' => 'item3', 'price' => 12],\n    ['name' => 'item4', 'price' => 8],\n    ['name' => 'item5', 'price' => 11],\n    ['name' => 'item6', 'price' => 10],\n];\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp45dtqe3d.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => item3\n            [price] => 12\n        )\n\n    [1] => Array\n        (\n            [name] => item5\n            [price] => 11\n        )\n\n    [2] => Array\n        (\n            [name] => item1\n            [price] => 10\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp45dtqe3d.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp45dtqe3d.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp45dtqe3d.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  // Sort the items by price.\n  usort($items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n\n  // Return the n most expensive items.\n  return array_slice($items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp_l0zirtl.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp_l0zirtl.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp_l0zirtl.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $most_expensive = [];\n  $prices = [];\n  foreach ($items as $item) {\n    $prices[] = $item['price'];\n  }\n  rsort($prices);\n  $prices = array_slice($prices, 0, $n);\n  foreach ($items as $item) {\n    if (in_array($item['price'], $prices)) {\n      $most_expensive[] = $item;\n    }\n  }\n  return $most_expensive;\n}\n\n$items = [\n  ['name' => 'coffee', 'price' => 3],\n  ['name' => 'tea', 'price' => 2],\n  ['name' => 'water', 'price' => 1],\n  ['name' => 'soda', 'price' => 4],\n  ['name' => 'juice', 'price' => 5],\n  ['name' => 'milk', 'price' => 2],\n];\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => coffee\n            [price] => 3\n        )\n\n    [1] => Array\n        (\n            [name] => soda\n            [price] => 4\n        )\n\n    [2] => Array\n        (\n            [name] => juice\n            [price] => 5\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi6a0zf2p.php:36\nStack trace:\n#0 /tmp/tmpi6a0zf2p.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpi6a0zf2p.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = array_sort($items, 'price');\n  return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123250,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp9y_m5aw4.php:4\nStack trace:\n#0 /tmp/tmp9y_m5aw4.php(9): expensive_items(Array, 1)\n#1 /tmp/tmp9y_m5aw4.php(13): candidate(Array, 1)\n#2 /tmp/tmp9y_m5aw4.php(18): test()\n#3 {main}\n  thrown in /tmp/tmp9y_m5aw4.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = array_sort($items, function($item) {\n    return $item['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmppsarmbq9.php:4\nStack trace:\n#0 /tmp/tmppsarmbq9.php(11): expensive_items(Array, 1)\n#1 /tmp/tmppsarmbq9.php(15): candidate(Array, 1)\n#2 /tmp/tmppsarmbq9.php(20): test()\n#3 {main}\n  thrown in /tmp/tmppsarmbq9.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    // Sort the array by price\n    usort($items, function($a, $b) {\n        return $a['price'] < $b['price'];\n    });\n\n    // Return the first n items\n    return array_slice($items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmps73lhpkb.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmps73lhpkb.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmps73lhpkb.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $prices = array_column($items, 'price');\n  array_multisort($prices, SORT_DESC, $items);\n  return array_slice($items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 3],\n  ['name' => 'bananas', 'price' => 2],\n  ['name' => 'cherries', 'price' => 5],\n  ['name' => 'dates', 'price' => 4],\n];\n\nprint_r(expensive_items($items, 2));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => cherries\n            [price] => 5\n        )\n\n    [1] => Array\n        (\n            [name] => dates\n            [price] => 4\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 100],\n  ['name' => 'bananas', 'price' => 200],\n  ['name' => 'carrots', 'price' => 50],\n  ['name' => 'dates', 'price' => 300],\n];\n\nprint_r(expensive_items($items, 2));\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123250,
      "stdout": "\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp9z6udghd.php on line 7\nArray\n(\n    [0] => Array\n        (\n            [name] => dates\n            [price] => 300\n        )\n\n    [1] => Array\n        (\n            [name] => bananas\n            [price] => 200\n        )\n\n)\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp9z6udghd.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp9z6udghd.php on line 7\n\nDeprecated: usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /tmp/tmp9z6udghd.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted = array_sort($items, function($item) {\n    return $item['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpyqt1xgl_.php:4\nStack trace:\n#0 /tmp/tmpyqt1xgl_.php(11): expensive_items(Array, 1)\n#1 /tmp/tmpyqt1xgl_.php(15): candidate(Array, 1)\n#2 /tmp/tmpyqt1xgl_.php(20): test()\n#3 {main}\n  thrown in /tmp/tmpyqt1xgl_.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = array();\n  foreach ($items as $item) {\n    $sorted_items[$item['name']] = $item['price'];\n  }\n  arsort($sorted_items);\n  $sorted_items = array_slice($sorted_items, 0, $n);\n  return $sorted_items;\n}\n\n$items = array(\n  array('name' => 'Item 1', 'price' => 10),\n  array('name' => 'Item 2', 'price' => 5),\n  array('name' => 'Item 3', 'price' => 15),\n  array('name' => 'Item 4', 'price' => 20),\n  array('name' => 'Item 5', 'price' => 25),\n  array('name' => 'Item 6', 'price' => 30),\n  array('name' => 'Item 7', 'price' => 35),\n  array('name' => 'Item 8', 'price' => 40),\n  array('name' => 'Item 9', 'price' => 45),\n  array('name' => 'Item 10', 'price' => 50),\n);\n\n$n = 3;\n$result = expensive_items($items, $n);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "Array\n(\n    [Item 10] => 50\n    [Item 9] => 45\n    [Item 8] => 40\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf1su6xnm.php:35\nStack trace:\n#0 /tmp/tmpf1su6xnm.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpf1su6xnm.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $sorted_items = array_sort($items, function($item) {\n    return $item['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmppsarmbq9.php:4\nStack trace:\n#0 /tmp/tmppsarmbq9.php(11): expensive_items(Array, 1)\n#1 /tmp/tmppsarmbq9.php(15): candidate(Array, 1)\n#2 /tmp/tmppsarmbq9.php(20): test()\n#3 {main}\n  thrown in /tmp/tmppsarmbq9.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted = array_sort($items, function($item) {\n        return $item['price'];\n    });\n    return array_slice($sorted, 0, $n);\n}\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517442,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp4w4efx2h.php:4\nStack trace:\n#0 /tmp/tmp4w4efx2h.php(11): expensive_items(Array, 1)\n#1 /tmp/tmp4w4efx2h.php(15): candidate(Array, 1)\n#2 /tmp/tmp4w4efx2h.php(20): test()\n#3 {main}\n  thrown in /tmp/tmp4w4efx2h.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n    $sorted_items = [];\n    foreach ($items as $item) {\n        $sorted_items[$item['price']] = $item;\n    }\n    krsort($sorted_items);\n    return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n    ['name' => 'apples', 'price' => 100],\n    ['name' => 'bananas', 'price' => 200],\n    ['name' => 'grapes', 'price' => 300],\n    ['name' => 'oranges', 'price' => 400],\n    ['name' => 'mangoes', 'price' => 500],\n    ['name' => 'papayas', 'price' => 600],\n];\n\nprint_r(expensive_items($items, 3));\n\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [name] => papayas\n            [price] => 600\n        )\n\n    [1] => Array\n        (\n            [name] => mangoes\n            [price] => 500\n        )\n\n    [2] => Array\n        (\n            [name] => oranges\n            [price] => 400\n        )\n\n)\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmp9lqcz6qh.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmp9lqcz6qh.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmp9lqcz6qh.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmp9lqcz6qh.php on line 6\n\nDeprecated: Implicit conversion from float 45.09 to int loses precision in /tmp/tmp9lqcz6qh.php on line 6\n\nDeprecated: Implicit conversion from float 101.1 to int loses precision in /tmp/tmp9lqcz6qh.php on line 6\n\nDeprecated: Implicit conversion from float 555.22 to int loses precision in /tmp/tmp",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n  $items = array_filter($items, function($item) {\n    return $item['price'] > 0;\n  });\n  usort($items, function($a, $b) {\n    return $b['price'] - $a['price'];\n  });\n  return array_slice($items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 0.99],\n  ['name' => 'bananas', 'price' => 0.99],\n  ['name' => 'pears', 'price' => 0.99],\n  ['name' => 'oranges', 'price' => 0.99],\n  ['name' => 'grapes', 'price' => 0.99],\n  ['name' => 'pineapples', 'price' => 0.99],\n  ['name' => 'avocados', 'price' => 0.99],\n  ['name' => 'mangoes', 'price' => 0.99],\n  ['name' => 'kiwis', 'price' => 0.99],\n  ['name' => 'papayas', 'price' => 0.99],\n  ['name' => 'coconuts', 'price' => 0.99],\n  ['name' => 'lemons', 'price' => 0.99],\n  ['name' => 'limes', 'price' => 0.99],\n  ['name' => 'peaches', 'price' => 0.99],\n  ['name' => 'plums', 'price' => 0.99],\n  ['name' => 'cherries', 'price' => 0.99],\n  ['name' => 'strawberries', 'price' => 0.99],\n  ['name' => 'blueberries', 'price' => 0.99],\n  ['name' => 'raspberries', 'price' => 0.99],\n  ['name' => 'blackberries', 'price' => 0.99],\n  ['name' => 'cranberries', 'price' => 0.99],\n  ['name' => 'watermelons', 'price' => 0.99],\n  ['name' => 'cantaloupes', 'price' => 0.\nfunction candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123252,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmpz0w2haaw.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
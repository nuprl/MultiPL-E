{
  "name": "mbpp_442_positive_count",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_442_positive_count.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\necho positive_count([1, 2, 3, -1, -2, -3]);\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $positive = 0;\n    $negative = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $positive++;\n        } else {\n            $negative++;\n        }\n    }\n    return $positive / $negative;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n",
    "  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\n$count = positive_count($nums);\necho $count;",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\n$ratio = positive_count($nums) / count($nums);\necho $ratio;",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, -1, -2, -3, -4, -5];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho \"Positive numbers count: \" . positive_count($nums);",
    "    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = array(1, 2, 3, -1, -2, -3);\n$count = positive_count($nums);\necho \"The number of positive numbers is $count\";",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
    "  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho \"Positive : \" . positive_count($nums) . \"\\n\";\necho \"Total : \" . count($nums) . \"\\n\";\necho \"Ratio : \" . number_format((positive_count($nums) / count($nums)) * 100, 2) . \"%\\n\";",
    "  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n\necho positive_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15]);\necho \"\\n\";\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\necho positive_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15]) . \"\\n\";\necho positive_count([92, 6, 73, -77, 81, -90, 99, 8, -85, 34]) . \"\\n\";\necho positive_count([91, -4, 80, -73, -28]) . \"\\n\";\necho positive_count([]) . \"\\n\";\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\n\necho \"\\n\";\n",
    "    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $positive_count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $positive_count++;\n        }\n    }\n    return $positive_count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\n$positive_count = positive_count($nums);\necho \"Positive count: \" . $positive_count . \"\\n\";\necho \"Ratio: \" . $positive_count / count($nums) . \"\\n\";\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n",
    "    $positive = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $positive++;\n        }\n    }\n    return $positive / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\necho positive_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15]) . \"\\n\";\necho positive_count([92, 6, 73, -77, 81, -90, 99, 8, -85, 34]) . \"\\n\";\necho positive_count([91, -4, 80, -73, -28]) . \"\\n\";\necho positive_count([]) . \"\\n\";\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
    "  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho positive_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15]) . PHP_EOL;\necho positive_count([0, 2, 3, 0, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14]) . PHP_EOL;\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n",
    "  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n",
    "  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\n",
    "    $count = 0;\n    $total = count($nums);\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / $total;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n",
    "    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\n$count = positive_count($nums);\necho $count;",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\n",
    "  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\n$count = positive_count($nums);\n$total = count($nums);\necho \"Positive numbers count: $count\\n\";\necho \"Total numbers count: $total\\n\";\necho \"Ratio: \" . $count / $total . \"\\n\";",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\n",
    "    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho \"Positive numbers count: \" . positive_count($nums);",
    "  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\necho positive_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15]) . \"\\n\";\necho positive_count([92, 6, 73, -77, 81, -90, 99, 8, -85, 34]) . \"\\n\";\necho positive_count([91, -4, 80, -73, -28]) . \"\\n\";\necho positive_count([]) . \"\\n\";",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);",
    "\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\necho positive_count([1, 2, 3, -1, -2, -3]);\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\n$count = positive_count($nums);\n$total = count($nums);\necho \"Positive numbers in array: \" . $count . \"<br>\";\necho \"Total numbers in array: \" . $total . \"<br>\";\necho \"Ratio of positive numbers: \" . $count / $total;",
    "    $count = 0;\n    foreach($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\n$count = positive_count($nums);\necho $count;",
    "    $positive_count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $positive_count++;\n        }\n    }\n    return $positive_count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\n",
    "    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n",
    "  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n",
    "    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\necho \"\\n\";\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho \"Positive : \" . positive_count($nums) . \"\\n\";\necho \"Total : \" . count($nums) . \"\\n\";\necho \"Ratio : \" . positive_count($nums) / count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\necho positive_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15]) . \"\\n\";\necho positive_count([92, 6, 73, -77, 81, -90, 99, 8, -85, 34]) . \"\\n\";\necho positive_count([91, 93, 45, -67, -96, -40, 34, -96, 42, -58]) . \"\\n\";\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\n",
    "    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, -1, -2, -3, -4, -5];\necho positive_count($nums);",
    "    $positive = 0;\n    $negative = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $positive++;\n        } else {\n            $negative++;\n        }\n    }\n    return $positive / $negative;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\n",
    "  $count = 0;\n  foreach($nums as $num) {\n    if($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -4, -5, 6, 7, -8, 9, 10];\necho \"The ratio of positive numbers in the array is \" . positive_count($nums) / count($nums) . \"\\n\";\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n",
    "    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, -2, 3, -4, 5, -6, 7, -8, 9, -10];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho \"Array values: \";\necho implode(\", \", $nums);\necho \"\\n\";\necho \"Positive integers: \" . positive_count($nums) . \"\\n\";\necho \"Ratio: \" . positive_count($nums) / count($nums);",
    "  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, -1, -2, -3, -4, -5];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n",
    "    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\n$count = positive_count($nums);\necho $count;",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    $total = count($nums);\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / $total;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, -1, 2, -2, 3, -3, 4, -4, 5, -5];\necho positive_count($nums);\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15);\necho positive_count($nums);\necho \"\\n\";",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n",
    "    $positive_nums = 0;\n    $total_nums = count($nums);\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $positive_nums++;\n        }\n    }\n    return $positive_nums / $total_nums;\n}\n",
    "  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\necho positive_count([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]) . PHP_EOL;\necho positive_count([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15]) . PHP_EOL;\necho positive_count([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]) . PHP_EOL;\necho positive_count([1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1]) . PHP_EOL;\necho positive_count([-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1]) . PHP_EOL;\necho positive_count([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15]) . PHP_EOL;\necho positive_count([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]) . PHP_EOL;\necho positive_count([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1]) . PHP_EOL;\necho positive_count([0,0,0,0,0,0,0,0,0,0,0,0,",
    "  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\n",
    "    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\necho positive_count([1, 2, 3, -1, -2, -3]);\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);",
    "  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = array(1, 2, 3, -4, -1, 4);\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3, 0];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho \"Positive : \" . positive_count($nums) . \"\\n\";\necho \"Total : \" . count($nums) . \"\\n\";\necho \"Ratio : \" . positive_count($nums) / count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n",
    "  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $positive = 0;\n    $negative = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $positive++;\n        } else {\n            $negative++;\n        }\n    }\n    return $positive / $negative;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\n",
    "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);"
  ]
}
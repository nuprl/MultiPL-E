{
  "name": "mbpp_470_add_pairwise",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the pairwise addition of the neighboring elements of the given tuple.\nfunction add_pairwise($test_tup) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_470_add_pairwise.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return add_pairwise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, 8, 10)) !== array(6, 12, 15, 18)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, 9, 11)) !== array(8, 14, 17, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, 10, 12)) !== array(10, 16, 19, 22)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $result = array();\n    for ($i = 0; $i < count($test_tup); $i++) {\n        if ($i == count($test_tup) - 1) {\n            array_push($result, $test_tup[$i] + $test_tup[0]);\n        } else {\n            array_push($result, $test_tup[$i] + $test_tup[$i + 1]);\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5);\nprint_r(add_pairwise($test_tup));",
    "    $result_tup = array();\n    $length = count($test_tup);\n    for ($i = 0; $i < $length; $i++) {\n        if ($i == 0) {\n            $result_tup[$i] = $test_tup[$i] + $test_tup[$i + 1];\n        } else if ($i == $length - 1) {\n            $result_tup[$i] = $test_tup[$i] + $test_tup[$i - 1];\n        } else {\n            $result_tup[$i] = $test_tup[$i - 1] + $test_tup[$i + 1];\n        }\n    }\n    return $result_tup;\n}\n\n$test_tup = array(1, 2, 3, 4, 5);\n$result_tup = add_pairwise($test_tup);\nprint_r($result_tup);",
    "    $result = array();\n    $length = count($test_tup);\n    for($i = 0; $i < $length-1; $i++) {\n        $result[$i] = $test_tup[$i] + $test_tup[$i+1];\n    }\n    return $result;\n}\n\n$test_tup = array(1,2,3,4,5,6,7,8,9,10);\n$result = add_pairwise($test_tup);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup); $i++) {\n        if ($i == 0) {\n            $result[$i] = $test_tup[$i] + $test_tup[$i + 1];\n        } else if ($i == count($test_tup) - 1) {\n            $result[$i] = $test_tup[$i] + $test_tup[$i - 1];\n        } else {\n            $result[$i] = $test_tup[$i] + $test_tup[$i - 1] + $test_tup[$i + 1];\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5);\n$result = add_pairwise($test_tup);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup); $i++) {\n        if ($i == count($test_tup) - 1) {\n            $result[$i] = $test_tup[$i] + $test_tup[0];\n        } else {\n            $result[$i] = $test_tup[$i] + $test_tup[$i + 1];\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5);\n$result = add_pairwise($test_tup);\nprint_r($result);",
    "    $res_list = array();\n    $len = count($test_tup);\n    for ($i = 0; $i < $len - 1; $i++) {\n        $res_list[$i] = $test_tup[$i] + $test_tup[$i + 1];\n    }\n    return $res_list;\n}\n\n$test_tup = array(1, 2, 3, 4, 5);\n$result = add_pairwise($test_tup);\nprint_r($result);",
    "    $new_tup = array();\n    for ($i = 0; $i < count($test_tup) - 1; $i++) {\n        $new_tup[$i] = $test_tup[$i] + $test_tup[$i + 1];\n    }\n    return $new_tup;\n}\n\n$test_tup = array(1, 2, 3, 4, 5);\necho \"Original tuple: \";\nprint_r($test_tup);\necho \"<br>\";\necho \"New tuple: \";\nprint_r(add_pairwise($test_tup));\necho \"<br><br>\";\n",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup); $i++) {\n        if ($i == 0) {\n            $result[$i] = $test_tup[$i] + $test_tup[$i + 1];\n        } else if ($i == count($test_tup) - 1) {\n            $result[$i] = $test_tup[$i] + $test_tup[$i - 1];\n        } else {\n            $result[$i] = $test_tup[$i - 1] + $test_tup[$i + 1];\n        }\n    }\n    return $result;\n}\n\necho \"Original tuple: \";\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\nprint_r($test_tup);\necho \"<br>\";\necho \"Pairwise addition of the neighboring elements: \";\nprint_r(add_pairwise($test_tup));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup); $i++) {\n        if ($i == 0) {\n            $result[$i] = $test_tup[$i] + $test_tup[$i + 1];\n        } else if ($i == count($test_tup) - 1) {\n            $result[$i] = $test_tup[$i] + $test_tup[$i - 1];\n        } else {\n            $result[$i] = $test_tup[$i - 1] + $test_tup[$i + 1];\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5);\n$result = add_pairwise($test_tup);\nprint_r($result);",
    "    $result = array();\n    $length = count($test_tup);\n    for ($i = 0; $i < $length; $i++) {\n        if ($i == $length - 1) {\n            $result[] = $test_tup[$i] + $test_tup[0];\n        } else {\n            $result[] = $test_tup[$i] + $test_tup[$i + 1];\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5);\n$result = add_pairwise($test_tup);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup); $i++) {\n        if ($i == count($test_tup) - 1) {\n            $result[$i] = $test_tup[$i] + $test_tup[0];\n        } else {\n            $result[$i] = $test_tup[$i] + $test_tup[$i + 1];\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5);\nprint_r(add_pairwise($test_tup));",
    "    $result = array();\n    $size = count($test_tup);\n    for ($i = 0; $i < $size; $i++) {\n        $result[$i] = $test_tup[$i] + $test_tup[($i + 1) % $size];\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5);\nprint_r(add_pairwise($test_tup));",
    "    $result = array();\n    $len = count($test_tup);\n    for($i = 0; $i < $len; $i++) {\n        if($i == $len - 1) {\n            $result[$i] = $test_tup[$i] + $test_tup[0];\n        } else {\n            $result[$i] = $test_tup[$i] + $test_tup[$i + 1];\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5);\nprint_r(add_pairwise($test_tup));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup); $i++) {\n        if ($i == 0) {\n            $result[$i] = $test_tup[$i] + $test_tup[$i + 1];\n        } else if ($i == count($test_tup) - 1) {\n            $result[$i] = $test_tup[$i] + $test_tup[$i - 1];\n        } else {\n            $result[$i] = $test_tup[$i - 1] + $test_tup[$i + 1];\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5);\n$result = add_pairwise($test_tup);\nprint_r($result);\n",
    "    $result = array();\n    $len = count($test_tup);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i == $len - 1) {\n            $result[$i] = $test_tup[$i] + $test_tup[0];\n        } else {\n            $result[$i] = $test_tup[$i] + $test_tup[$i + 1];\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5);\n$result = add_pairwise($test_tup);\nprint_r($result);",
    "    $result = array();\n    $len = count($test_tup);\n    for($i = 0; $i < $len; $i++) {\n        if($i == $len - 1) {\n            $result[$i] = $test_tup[$i] + $test_tup[0];\n        } else {\n            $result[$i] = $test_tup[$i] + $test_tup[$i + 1];\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5);\nprint_r(add_pairwise($test_tup));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup); $i++) {\n        if ($i == 0) {\n            $result[$i] = $test_tup[$i] + $test_tup[$i + 1];\n        } else if ($i == count($test_tup) - 1) {\n            $result[$i] = $test_tup[$i] + $test_tup[$i - 1];\n        } else {\n            $result[$i] = $test_tup[$i - 1] + $test_tup[$i + 1];\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\nprint_r(add_pairwise($test_tup));",
    "    $result = array();\n    $size = count($test_tup);\n    for ($i = 0; $i < $size; $i++) {\n        if ($i == 0) {\n            $result[$i] = $test_tup[$i] + $test_tup[$i + 1];\n        } else if ($i == $size - 1) {\n            $result[$i] = $test_tup[$i] + $test_tup[$i - 1];\n        } else {\n            $result[$i] = $test_tup[$i - 1] + $test_tup[$i + 1];\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(add_pairwise($test_tup));",
    "    $result = array();\n    $len = count($test_tup);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i == $len - 1) {\n            $result[] = $test_tup[$i] + $test_tup[0];\n        } else {\n            $result[] = $test_tup[$i] + $test_tup[$i + 1];\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6);\nprint_r(add_pairwise($test_tup));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup); $i++) {\n        if ($i == count($test_tup) - 1) {\n            $result[$i] = $test_tup[$i] + $test_tup[0];\n        } else {\n            $result[$i] = $test_tup[$i] + $test_tup[$i + 1];\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6);\n$result = add_pairwise($test_tup);\nprint_r($result);"
  ]
}
{
  "name": "mbpp_619_move_num",
  "language": "php",
  "prompt": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_619_move_num.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = array();\n    $str_arr_new = array();\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr_new[] = $value;\n        }\n    }\n    $str_arr_new = array_merge($str_arr_new, $num_arr);\n    $str_arr_new = implode('', $str_arr_new);\n    return $str_arr_new;\n}\n\n$test_str = \"a1b2c3d4\";\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517316,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $arr = str_split($test_str);\n    $arr_num = array();\n    $arr_str = array();\n    foreach ($arr as $key => $value) {\n        if (is_numeric($value)) {\n            $arr_num[] = $value;\n        } else {\n            $arr_str[] = $value;\n        }\n    }\n    $arr_str = array_merge($arr_str, $arr_num);\n    $result = implode($arr_str);\n    return $result;\n}\necho move_num(\"abc123\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517316,
      "stdout": "abc123",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr_len = count($str_arr);\n    for ($i = 0; $i < $str_arr_len; $i++) {\n        if (is_numeric($str_arr[$i])) {\n            array_push($num_arr, $str_arr[$i]);\n            unset($str_arr[$i]);\n        }\n    }\n    $str_arr = array_merge($str_arr, $num_arr);\n    return implode($str_arr);\n}\n\necho move_num(\"abc123\");\necho move_num(\"abc123def\");\necho move_num(\"abc123def456\");\necho move_num(\"abc123def456ghi789\");\necho move_num(\"abc123def456ghi789jkl\");\necho move_num(\"abc123def456ghi789jkl012\");\necho move_num(\"abc123def456ghi789jkl012mno345\");\necho move_num(\"abc123def456ghi789jkl012mno345pqr678\");\necho move_num(\"abc123def456ghi789jkl012mno345pqr678stu901\");\necho move_num(\"abc123def456ghi789jkl012mno345pqr678stu901234vwx567\");\necho move_num(\"abc123def456ghi789jkl012mno345pqr678stu901234vwx56789\");\necho move_num(\"abc123def456ghi789jkl012mno345pqr678stu901234vwx56789012\");\necho move_num(\"abc123def456ghi789jkl012mno345pqr678stu901234vwx567890123\");\necho move_num(\"abc123def456ghi789jkl012mno345pqr678stu901234vwx567890123456\");\necho move_num(\"abc123def456ghi789jkl012mno345pqr678stu901234vwx56789012345678\");\necho move_num(\"abc123def\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517316,
      "stdout": "\nParse error: syntax error, unexpected identifier \"I1love143you55three3000thousand\", expecting \")\" in /tmp/tmpzh1gciak.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str = \"\";\n    $num = \"\";\n    for ($i = 0; $i < strlen($test_str); $i++) {\n        if (is_numeric($test_str[$i])) {\n            $num .= $test_str[$i];\n        } else {\n            $str .= $test_str[$i];\n        }\n    }\n    return $str . $num;\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517316,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    foreach ($str_arr as $value) {\n        if (is_numeric($value)) {\n            array_push($num_arr, $value);\n        } else {\n            array_push($char_arr, $value);\n        }\n    }\n    $result = implode('', $char_arr) . implode('', $num_arr);\n    return $result;\n}\n\n$test_str = \"a1b2c3d4\";\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517316,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $num = array();\n    $str = array();\n    $result = array();\n    for ($i = 0; $i < strlen($test_str); $i++) {\n        if (is_numeric($test_str[$i])) {\n            array_push($num, $test_str[$i]);\n        } else {\n            array_push($str, $test_str[$i]);\n        }\n    }\n    $result = array_merge($str, $num);\n    return implode($result);\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517316,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            $num_arr[] = $char;\n        } else {\n            $char_arr[] = $char;\n        }\n    }\n    return implode('', $char_arr) . implode('', $num_arr);\n}\n\necho move_num('a1b2c3d4e5f6g7h8i9j0');\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517316,
      "stdout": "abcdefghij1234567890",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $num = array();\n    $str = array();\n    $result = array();\n    $test_str = str_split($test_str);\n    foreach ($test_str as $key => $value) {\n        if (is_numeric($value)) {\n            $num[] = $value;\n        } else {\n            $str[] = $value;\n        }\n    }\n    $result = array_merge($str, $num);\n    return implode(\"\", $result);\n}\necho move_num(\"abcd1234efgh5678\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517316,
      "stdout": "abcdefgh12345678",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr_new = [];\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr_new[] = $value;\n        }\n    }\n    return implode('', $str_arr_new) . implode('', $num_arr);\n}\n\necho move_num('abcd1234');\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517316,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str = str_split($test_str);\n    $num = array();\n    $char = array();\n    foreach ($str as $value) {\n        if (is_numeric($value)) {\n            array_push($num, $value);\n        } else {\n            array_push($char, $value);\n        }\n    }\n    $result = implode($char) . implode($num);\n    return $result;\n}\necho move_num(\"a1b2c3\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517316,
      "stdout": "abc123",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str = \"\";\n    $num = \"\";\n    for ($i = 0; $i < strlen($test_str); $i++) {\n        if (is_numeric($test_str[$i])) {\n            $num .= $test_str[$i];\n        } else {\n            $str .= $test_str[$i];\n        }\n    }\n    return $str . $num;\n}\n\necho move_num(\"abc123\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517316,
      "stdout": "abc123",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n  $test_str = str_split($test_str);\n  $num_arr = [];\n  $str_arr = [];\n  foreach ($test_str as $key => $value) {\n    if (is_numeric($value)) {\n      array_push($num_arr, $value);\n    } else {\n      array_push($str_arr, $value);\n    }\n  }\n  $num_arr = implode('', $num_arr);\n  $str_arr = implode('', $str_arr);\n  $test_str = $str_arr . $num_arr;\n  return $test_str;\n}\n\necho move_num('a1b2c3d4');\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517316,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = array();\n    $char_arr = array();\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            array_push($num_arr, $char);\n        } else {\n            array_push($char_arr, $char);\n        }\n    }\n    return implode($char_arr) . implode($num_arr);\n}\n\necho move_num(\"a1b2c3d4e5f6g7h8i9j10\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517316,
      "stdout": "abcdefghij12345678910",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str = '';\n    $num = '';\n    for ($i = 0; $i < strlen($test_str); $i++) {\n        if (is_numeric($test_str[$i])) {\n            $num .= $test_str[$i];\n        } else {\n            $str .= $test_str[$i];\n        }\n    }\n    return $str . $num;\n}\n\necho move_num('abc123');\necho move_num('abc123xyz');\necho move_num('abcdef');\necho move_num('123456');\necho move_num('0');\necho move_num('abc');\necho move_num('123abc');\necho move_num('abcd123');\necho move_num('abcd1234');\necho move_num('abcd12345');\necho move_num('abcd123456');\necho move_num('abcd1234567');\necho move_num('abcd12345678');\necho move_num('abcd123456789');\necho move_num('abcd1234567890');\necho move_num('abcd12345678901');\necho move_num('abcd123456789012');\necho move_num('abcd1234567890123');\necho move_num('abcd12345678901234');\necho move_num('abcd123456789012345');\necho move_num('abcd1234567890123456');\necho move_num('abcd12345678901234567');\necho move_num('abcd123456789012345678');\necho move_num('abcd1234567890123456789');\necho move_num('abcd12345678901234567890');\necho move_num('abcd123456789012345678901');\necho move_num('abcd1234567890123456789012');\necho move_num('abcd12345678901234567890123');\necho move_num('abcd123456789012345678901234');\necho move_num('abcd12345678901\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517316,
      "stdout": "\nParse error: syntax error, unexpected string content \"abcd12345678901\" in /tmp/tmp5ztezf15.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $num_arr = array();\n    $str_arr = array();\n    $result_arr = array();\n    for ($i = 0; $i < strlen($test_str); $i++) {\n        if (is_numeric($test_str[$i])) {\n            array_push($num_arr, $test_str[$i]);\n        } else {\n            array_push($str_arr, $test_str[$i]);\n        }\n    }\n    $result_arr = array_merge($str_arr, $num_arr);\n    $result_str = implode($result_arr);\n    return $result_str;\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517316,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr = [];\n    foreach ($test_arr as $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr[] = $value;\n        }\n    }\n    $result = implode($str_arr) . implode($num_arr);\n    return $result;\n}\n\necho move_num(\"abc123\");\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517316,
      "stdout": "abc123",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr_new = [];\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr_new[] = $value;\n        }\n    }\n    return implode($str_arr_new) . implode($num_arr);\n}\n\n$test_str = \"abc123def456\";\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517316,
      "stdout": "abcdef123456",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr_new = [];\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr_new[] = $value;\n        }\n    }\n    $str_arr_new = array_merge($str_arr_new, $num_arr);\n    return implode('', $str_arr_new);\n}\n\necho move_num('a1b2c3d4');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3n');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3n4');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517316,
      "stdout": "\nParse error: syntax error, unexpected string content \"a1b2c3d4e5f6g7h8i9j0k1l2\" in /tmp/tmp4__wo4jt.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr_new = [];\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr_new[] = $value;\n        }\n    }\n    return implode($str_arr_new) . implode($num_arr);\n}\necho move_num('abc123');\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517316,
      "stdout": "abc123",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $num_arr = array();\n    $char_arr = array();\n    foreach ($test_arr as $char) {\n        if (is_numeric($char)) {\n            array_push($num_arr, $char);\n        } else {\n            array_push($char_arr, $char);\n        }\n    }\n    $new_str = implode($char_arr) . implode($num_arr);\n    return $new_str;\n}\n\n$test_str = \"a1b2c3d4\";\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517316,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr_new = [];\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr_new[] = $value;\n        }\n    }\n    return implode('', $str_arr_new) . implode('', $num_arr);\n}\n\necho move_num('a1b2c3d4e5f6g7h8i9j0');\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij1234567890",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $num_arr = array();\n    $char_arr = array();\n    foreach ($test_arr as $key => $value) {\n        if (is_numeric($value)) {\n            array_push($num_arr, $value);\n        } else {\n            array_push($char_arr, $value);\n        }\n    }\n    $result = implode($char_arr) . implode($num_arr);\n    return $result;\n}\n\necho move_num(\"abcd123\");\necho \"\\n\";\necho move_num(\"abcd\");\necho \"\\n\";\necho move_num(\"123\");\necho \"\\n\";\necho move_num(\"a1b2c3d4\");\necho \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j\");\necho \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0\");\necho \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k\");\necho \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6\");\necho \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6A7B8C9D0E1F2G3H4I5J6K7L8M9N0O1P2Q3R4S5T6U7V8W9X0Y1Z2\");\necho \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "\nParse error: syntax error, unexpected identifier \"I1love143you55three3000thousand\", expecting \")\" in /tmp/tmposulbdqn.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr_new = [];\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr_new[] = $value;\n        }\n    }\n    return implode($str_arr_new) . implode($num_arr);\n}\n\necho move_num(\"abc123\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abc123",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n  $arr = str_split($test_str);\n  $num = array();\n  $str = array();\n  foreach ($arr as $key => $value) {\n    if (is_numeric($value)) {\n      $num[] = $value;\n    } else {\n      $str[] = $value;\n    }\n  }\n  $result = implode($str).implode($num);\n  return $result;\n}\n\necho move_num('abcd123');\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd123",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr_new = [];\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr_new[] = $value;\n        }\n    }\n    $str_arr_new = array_merge($str_arr_new, $num_arr);\n    return implode($str_arr_new);\n}\n\necho move_num('a1b2c3d4');\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    foreach($str_arr as $char) {\n        if(is_numeric($char)) {\n            array_push($num_arr, $char);\n        } else {\n            array_push($char_arr, $char);\n        }\n    }\n    $result = implode($char_arr) . implode($num_arr);\n    return $result;\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n  $arr = str_split($test_str);\n  $num = array();\n  $str = array();\n  foreach ($arr as $key => $value) {\n    if (is_numeric($value)) {\n      $num[] = $value;\n    } else {\n      $str[] = $value;\n    }\n  }\n  $result = implode($str).implode($num);\n  return $result;\n}\necho move_num('a1b2c3d4');\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $num_arr = array();\n    $str_arr = array();\n    foreach ($test_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr[] = $value;\n        }\n    }\n    $result = implode($str_arr) . implode($num_arr);\n    return $result;\n}\n\n$test_str = \"a1b2c3d4\";\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $num = [];\n    $str = [];\n    foreach ($test_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num[] = $value;\n        } else {\n            $str[] = $value;\n        }\n    }\n    $result = implode('', $str) . implode('', $num);\n    return $result;\n}\n\necho move_num('abcd1234');\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $num_arr = array();\n    $str_arr = array();\n    $result_arr = array();\n    $str_len = strlen($test_str);\n    for($i=0; $i<$str_len; $i++) {\n        if(is_numeric($test_str[$i])) {\n            $num_arr[] = $test_str[$i];\n        } else {\n            $str_arr[] = $test_str[$i];\n        }\n    }\n    $result_arr = array_merge($str_arr, $num_arr);\n    $result_str = implode(\"\", $result_arr);\n    return $result_str;\n}\n\n$test_str = \"a1b2c3d4\";\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    foreach ($test_arr as $key => $value) {\n        if (is_numeric($value)) {\n            array_push($num_arr, $value);\n        } else {\n            array_push($char_arr, $value);\n        }\n    }\n    $result = implode($char_arr) . implode($num_arr);\n    return $result;\n}\necho move_num(\"abc123\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abc123",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n\t$str_arr = str_split($test_str);\n\t$num_arr = array();\n\t$str_arr_new = array();\n\tforeach ($str_arr as $key => $value) {\n\t\tif (is_numeric($value)) {\n\t\t\t$num_arr[] = $value;\n\t\t} else {\n\t\t\t$str_arr_new[] = $value;\n\t\t}\n\t}\n\t$str_arr_new = array_merge($str_arr_new, $num_arr);\n\treturn implode($str_arr_new);\n}\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    foreach ($str_arr as $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $char_arr[] = $value;\n        }\n    }\n    return implode($char_arr) . implode($num_arr);\n}\n\necho move_num(\"a1b2c3d4\");\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_str = str_split($test_str);\n    $num_arr = [];\n    $str_arr = [];\n    foreach ($test_str as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr[] = $value;\n        }\n    }\n    $test_str = implode('', $str_arr) . implode('', $num_arr);\n    return $test_str;\n}\n\necho move_num('a1b2c3d4');\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $arr = str_split($test_str);\n    $num = array();\n    $str = array();\n    foreach ($arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num[] = $value;\n        } else {\n            $str[] = $value;\n        }\n    }\n    return implode($str) . implode($num);\n}\n\necho move_num('a1b2c3d4');\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = array();\n    $char_arr = array();\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            $num_arr[] = $char;\n        } else {\n            $char_arr[] = $char;\n        }\n    }\n    $result = implode('', $char_arr) . implode('', $num_arr);\n    return $result;\n}\n\necho move_num('a1b2c3d4e5f6g7h8i9j0');\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij1234567890",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = array();\n    $char_arr = array();\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            $num_arr[] = $char;\n        } else {\n            $char_arr[] = $char;\n        }\n    }\n    $result = implode('', $char_arr) . implode('', $num_arr);\n    return $result;\n}\n\necho move_num('a1b2c3d4e5f6g7h8i9j0');\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij1234567890",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            array_push($num_arr, $char);\n        } else {\n            array_push($char_arr, $char);\n        }\n    }\n    return implode($char_arr) . implode($num_arr);\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    foreach ($str_arr as $value) {\n        if (is_numeric($value)) {\n            array_push($num_arr, $value);\n        } else {\n            array_push($char_arr, $value);\n        }\n    }\n    $result_arr = array_merge($char_arr, $num_arr);\n    $result_str = implode($result_arr);\n    return $result_str;\n}\n\n$test_str = 'a1b2c3d4';\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $numbers = array();\n    $letters = array();\n    $result = array();\n    $str_len = strlen($test_str);\n    for ($i = 0; $i < $str_len; $i++) {\n        if (is_numeric($test_str[$i])) {\n            array_push($numbers, $test_str[$i]);\n        } else {\n            array_push($letters, $test_str[$i]);\n        }\n    }\n    $result = array_merge($letters, $numbers);\n    return implode(\"\", $result);\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = array();\n    $char_arr = array();\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            array_push($num_arr, $char);\n        } else {\n            array_push($char_arr, $char);\n        }\n    }\n    $result = implode($char_arr) . implode($num_arr);\n    return $result;\n}\n\n$test_str = \"a1b2c3d4\";\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122840,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $num_arr = array();\n    $str_arr = array();\n    $result_arr = array();\n    for ($i = 0; $i < strlen($test_str); $i++) {\n        if (is_numeric($test_str[$i])) {\n            array_push($num_arr, $test_str[$i]);\n        } else {\n            array_push($str_arr, $test_str[$i]);\n        }\n    }\n    $result_arr = array_merge($str_arr, $num_arr);\n    $result_str = implode(\"\", $result_arr);\n    return $result_str;\n}\n\necho move_num(\"a1b2c3d4\");\necho \"<br>\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0\");\necho \"<br>\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6\");\necho \"<br>\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6\");\necho \"<br>\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a1b2\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "\nParse error: syntax error, unexpected identifier \"I1love143you55three3000thousand\", expecting \")\" in /tmp/tmp1efuk0st.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str = \"\";\n    $num = \"\";\n    for($i=0; $i<strlen($test_str); $i++) {\n        if(is_numeric($test_str[$i])) {\n            $num .= $test_str[$i];\n        } else {\n            $str .= $test_str[$i];\n        }\n    }\n    return $str.$num;\n}\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122840,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $num_arr = array();\n    $str_arr = array();\n    $new_str = \"\";\n    for ($i = 0; $i < strlen($test_str); $i++) {\n        if (is_numeric($test_str[$i])) {\n            array_push($num_arr, $test_str[$i]);\n        } else {\n            array_push($str_arr, $test_str[$i]);\n        }\n    }\n    $new_str = implode(\"\", $str_arr);\n    $new_str .= implode(\"\", $num_arr);\n    return $new_str;\n}\n\necho move_num(\"a1b2c3d4e5f6g7h8i9j0\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij1234567890",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n\t$test_str = str_split($test_str);\n\t$num_arr = array();\n\t$str_arr = array();\n\tforeach ($test_str as $key => $value) {\n\t\tif (is_numeric($value)) {\n\t\t\t$num_arr[] = $value;\n\t\t} else {\n\t\t\t$str_arr[] = $value;\n\t\t}\n\t}\n\t$str_arr = implode('', $str_arr);\n\t$num_arr = implode('', $num_arr);\n\t$test_str = $str_arr.$num_arr;\n\treturn $test_str;\n}\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n\t$num_arr = array();\n\t$char_arr = array();\n\t$result_arr = array();\n\t$result_str = \"\";\n\tfor ($i = 0; $i < strlen($test_str); $i++) {\n\t\tif (is_numeric($test_str[$i])) {\n\t\t\tarray_push($num_arr, $test_str[$i]);\n\t\t} else {\n\t\t\tarray_push($char_arr, $test_str[$i]);\n\t\t}\n\t}\n\t$result_arr = array_merge($char_arr, $num_arr);\n\t$result_str = implode(\"\", $result_arr);\n\treturn $result_str;\n}\n\n$test_str = \"a1b2c3d4\";\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = array();\n    $str_arr_new = array();\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            $num_arr[] = $char;\n        } else {\n            $str_arr_new[] = $char;\n        }\n    }\n    return implode($str_arr_new) . implode($num_arr);\n}\n\necho move_num('a1b2c3d4e5f6g7h8i9j0');\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij1234567890",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $arr = str_split($test_str);\n    $num = array();\n    $str = array();\n    foreach ($arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num[] = $value;\n        } else {\n            $str[] = $value;\n        }\n    }\n    return implode($str) . implode($num);\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122840,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr_new = [];\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr_new[] = $value;\n        }\n    }\n    $str_arr_new = array_merge($str_arr_new, $num_arr);\n    return implode('', $str_arr_new);\n}\necho move_num('abcd123');\necho \"\\n\";\necho move_num('abcd');\necho \"\\n\";\necho move_num('123');\necho \"\\n\";\necho move_num('abcd123xyz');\necho \"\\n\";\necho move_num('abcdxyz123');\necho \"\\n\";\necho move_num('abcdxyz');\necho \"\\n\";\necho move_num('123xyz');\necho \"\\n\";\necho move_num('xyz123');\necho \"\\n\";\necho move_num('xyz');\necho \"\\n\";\necho move_num('123');\necho \"\\n\";\necho move_num('abc123xyz');\necho \"\\n\";\necho move_num('abcxyz123');\necho \"\\n\";\necho move_num('abcxyz');\necho \"\\n\";\necho move_num('abc123');\necho \"\\n\";\necho move_num('123xyzabc');\necho \"\\n\";\necho move_num('xyzabc123');\necho \"\\n\";\necho move_num('xyzabc');\necho \"\\n\";\necho move_num('xyz123');\necho \"\\n\";\necho move_num('123abc');\necho \"\\n\";\necho move_num('abc');\necho \"\\n\";\necho move_num('123');\necho \"\\n\";\necho move_num('abcxyz123');\necho \"\\n\";\necho move_num('abc123xyz');\necho \"\\n\";\necho move_num('abcxyz');\necho \"\\n\";\necho move_num('abc123');\necho \"\\n\";\necho\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpyhtwikyk.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $arr_str = str_split($test_str);\n    $arr_num = array();\n    $arr_char = array();\n    foreach ($arr_str as $key => $value) {\n        if (is_numeric($value)) {\n            array_push($arr_num, $value);\n        } else {\n            array_push($arr_char, $value);\n        }\n    }\n    $result = array_merge($arr_char, $arr_num);\n    return implode($result);\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $result = '';\n    $num = '';\n    for ($i = 0; $i < strlen($test_str); $i++) {\n        if (is_numeric($test_str[$i])) {\n            $num .= $test_str[$i];\n        } else {\n            $result .= $test_str[$i];\n        }\n    }\n    return $result . $num;\n}\n\necho move_num('a1b2c3d4e5f6g7h8i9j0');\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij1234567890",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n\t$str_arr = str_split($test_str);\n\t$num_arr = [];\n\t$char_arr = [];\n\tforeach ($str_arr as $key => $value) {\n\t\tif (is_numeric($value)) {\n\t\t\tarray_push($num_arr, $value);\n\t\t} else {\n\t\t\tarray_push($char_arr, $value);\n\t\t}\n\t}\n\t$result = implode($char_arr) . implode($num_arr);\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    foreach ($test_arr as $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $char_arr[] = $value;\n        }\n    }\n    return implode($char_arr) . implode($num_arr);\n}\n\n$test_str = \"a1b2c3d4\";\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = array();\n    $char_arr = array();\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            array_push($num_arr, $char);\n        } else {\n            array_push($char_arr, $char);\n        }\n    }\n    $result = implode($char_arr) . implode($num_arr);\n    return $result;\n}\n\necho move_num(\"abcd1234efg5678\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefg12345678",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr_new = [];\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr_new[] = $value;\n        }\n    }\n    $str_arr_new = array_merge($str_arr_new, $num_arr);\n    $str_arr_new = implode('', $str_arr_new);\n    return $str_arr_new;\n}\n\necho move_num('a1b2c3d4e5f6g7h8i9j0');\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij1234567890",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = array();\n    $char_arr = array();\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            array_push($num_arr, $value);\n        } else {\n            array_push($char_arr, $value);\n        }\n    }\n    return implode($char_arr) . implode($num_arr);\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_str = str_split($test_str);\n    $num = array();\n    $str = array();\n    foreach ($test_str as $key => $value) {\n        if (is_numeric($value)) {\n            $num[] = $value;\n        } else {\n            $str[] = $value;\n        }\n    }\n    return implode($str) . implode($num);\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $num = \"\";\n    $str = \"\";\n    for ($i = 0; $i < strlen($test_str); $i++) {\n        if (is_numeric($test_str[$i])) {\n            $num .= $test_str[$i];\n        } else {\n            $str .= $test_str[$i];\n        }\n    }\n    return $str . $num;\n}\n\necho move_num(\"abc123\");\necho \"<br>\";\necho move_num(\"abcdef\");\necho \"<br>\";\necho move_num(\"123abc\");\necho \"<br>\";\necho move_num(\"\");\necho \"<br>\";\necho move_num(\"abc\");\necho \"<br>\";\necho move_num(\"123\");\necho \"<br>\";\necho move_num(\"abc123xyz\");\necho \"<br>\";\necho move_num(\"aa11b33\");\necho \"<br>\";\necho move_num(\"11aa33\");\necho \"<br>\";\necho move_num(\"abc123xyz456\");\necho \"<br>\";\necho move_num(\"a123b456c789\");\necho \"<br>\";\necho move_num(\"abc123xyz456\");\necho \"<br>\";\necho move_num(\"abc123xyz456\");\necho \"<br>\";\necho move_num(\"abc123xyz456\");\necho \"<br>\";\necho move_num(\"abc123xyz456\");\necho \"<br>\";\necho move_num(\"abc123xyz456\");\necho \"<br>\";\necho move_num(\"abc123xyz456\");\necho \"<br>\";\necho move_num(\"abc123xyz456\");\necho \"<br>\";\necho move_num(\"abc123xyz456\");\necho \"<br>\";\necho move_num(\"abc123xyz456\");\necho \"<br>\";\necho move_num(\"abc123xyz456\");\necho \"<br>\";\necho move_num(\"abc123xyz456\");\necho \"<br>\";\necho move_num(\"abc123xyz456\");\necho \"<br>\";\necho move_num(\"abc123xyz456\");\necho \"<br>\";\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abc123<br>abcdef<br>abc123<br><br>abc<br>123<br>abcxyz123<br>aab1133<br>aa1133<br>abcxyz123456<br>abc123456789<br>abcxyz123456<br>abcxyz123456<br>abcxyz123456<br>abcxyz123456<br>abcxyz123456<br>abcxyz123456<br>abcxyz123456<br>abcxyz123456<br>abcxyz123456<br>abcxyz123456<br>abcxyz123456<br>abcxyz123456<br>abcxyz123456<br>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $num_arr = array();\n    $char_arr = array();\n    foreach ($test_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $char_arr[] = $value;\n        }\n    }\n    $result = implode('', $char_arr) . implode('', $num_arr);\n    return $result;\n}\necho move_num('a1b2c3d4');\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            array_push($num_arr, $char);\n        } else {\n            array_push($char_arr, $char);\n        }\n    }\n    return implode('', $char_arr) . implode('', $num_arr);\n}\n\necho move_num('a1b2c3d4e5f6g7h8i9j0');\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij1234567890",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    foreach ($test_arr as $key => $value) {\n        if (is_numeric($value)) {\n            array_push($num_arr, $value);\n        } else {\n            array_push($char_arr, $value);\n        }\n    }\n    $result = implode($char_arr) . implode($num_arr);\n    return $result;\n}\n\n$test_str = \"a1b2c3d4\";\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122839,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = array();\n    $char_arr = array();\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            array_push($num_arr, $char);\n        } else {\n            array_push($char_arr, $char);\n        }\n    }\n    $result = implode(\"\", $char_arr) . implode(\"\", $num_arr);\n    return $result;\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    foreach ($str_arr as $value) {\n        if (is_numeric($value)) {\n            array_push($num_arr, $value);\n        } else {\n            array_push($char_arr, $value);\n        }\n    }\n    $new_str = implode($char_arr) . implode($num_arr);\n    return $new_str;\n}\n\necho move_num(\"a1b2c3d4\");\necho \"<br>\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j10\");\necho \"<br>\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j10k11l12m13n14o15p16q17r18s19t20u21v22w23x24y25z26\");\necho \"<br>\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j10k11l12m13n14o15p16q17r18s19t20u21v22w23x24y25z26A27B28C29D30E31F32G33H34I35J36K37L38M39N40O41P42Q43R44S45T46U47V48W49X50Y51Z52\");\necho \"<br>\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j10k11l12m13n14o15p16q17r18s19t20u21v22w23x24y25z26A27B28C29D30E31F32G33H34I35J36K37L38M39N40O41P42Q43R44S45T46U47V48W49X50Y51Z52a53b54c55d56e57f58g59h60i61j62k63l64m65n66o67p68q69r70s71t72\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "\nParse error: syntax error, unexpected identifier \"I1love143you55three3000thousand\", expecting \")\" in /tmp/tmppq5en_rz.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            $num_arr[] = $char;\n        } else {\n            $char_arr[] = $char;\n        }\n    }\n    return implode($char_arr) . implode($num_arr);\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122839,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $arr = str_split($test_str);\n    $num = array();\n    $str = array();\n    foreach ($arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num[] = $value;\n        } else {\n            $str[] = $value;\n        }\n    }\n    $result = implode($str) . implode($num);\n    return $result;\n}\n\necho move_num(\"a1b2c3d4\");\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    foreach($str_arr as $char) {\n        if(is_numeric($char)) {\n            array_push($num_arr, $char);\n        } else {\n            array_push($char_arr, $char);\n        }\n    }\n    $result = implode($char_arr) . implode($num_arr);\n    return $result;\n}\n\n$test_str = \"a1b2c3d4e5f6g7h8i9j0\";\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij1234567890",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            $num_arr[] = $char;\n        } else {\n            $char_arr[] = $char;\n        }\n    }\n    return implode($char_arr) . implode($num_arr);\n}\n\necho move_num('a1b2c3d4e5f6g7h8i9j0');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3n');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3n4');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3n4o');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5');\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij1234567890\nabcdefghijk1234567890\nabcdefghijk12345678901\nabcdefghijkl12345678901\nabcdefghijkl123456789012\nabcdefghijklm123456789012\nabcdefghijklm1234567890123\nabcdefghijklmn1234567890123\nabcdefghijklmn12345678901234\nabcdefghijklmno12345678901234\nabcdefghijklmno123456789012345",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_str = str_split($test_str);\n    $numbers = array();\n    $letters = array();\n    foreach ($test_str as $value) {\n        if (is_numeric($value)) {\n            array_push($numbers, $value);\n        } else {\n            array_push($letters, $value);\n        }\n    }\n    $result = array_merge($letters, $numbers);\n    return implode($result);\n}\n\necho move_num(\"a1b2c3\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abc123",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            array_push($num_arr, $char);\n        } else {\n            array_push($char_arr, $char);\n        }\n    }\n    return implode($char_arr) . implode($num_arr);\n}\n\necho move_num('a1b2c3d4e5f6g7h8i9j0');\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122840,
      "stdout": "abcdefghij1234567890",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $num_arr = array();\n    $str_arr = array();\n    $result = \"\";\n    for ($i = 0; $i < strlen($test_str); $i++) {\n        if (is_numeric($test_str[$i])) {\n            array_push($num_arr, $test_str[$i]);\n        } else {\n            array_push($str_arr, $test_str[$i]);\n        }\n    }\n    $result = implode(\"\", $str_arr) . implode(\"\", $num_arr);\n    return $result;\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_str = str_split($test_str);\n    $num_arr = [];\n    $str_arr = [];\n    foreach ($test_str as $key => $value) {\n        if (is_numeric($value)) {\n            array_push($num_arr, $value);\n        } else {\n            array_push($str_arr, $value);\n        }\n    }\n    $str_arr = implode($str_arr);\n    $num_arr = implode($num_arr);\n    return $str_arr . $num_arr;\n}\necho move_num('abc123');\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abc123",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_str = str_split($test_str);\n    $num = array();\n    $str = array();\n    foreach($test_str as $key => $value) {\n        if(is_numeric($value)) {\n            $num[] = $value;\n        } else {\n            $str[] = $value;\n        }\n    }\n    $result = implode($str).implode($num);\n    return $result;\n}\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $arr = str_split($test_str);\n    $num = array();\n    $str = array();\n    foreach ($arr as $value) {\n        if (is_numeric($value)) {\n            $num[] = $value;\n        } else {\n            $str[] = $value;\n        }\n    }\n    return implode($str) . implode($num);\n}\n\necho move_num(\"abcd1234efgh5678\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefgh12345678",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $numbers = array('0', '1', '2', '3', '4', '5', '6', '7', '8', '9');\n    $str_arr = str_split($test_str);\n    $num_arr = array();\n    $str_arr_new = array();\n    foreach ($str_arr as $key => $value) {\n        if (in_array($value, $numbers)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr_new[] = $value;\n        }\n    }\n    $str_arr_new = array_merge($str_arr_new, $num_arr);\n    $test_str = implode($str_arr_new);\n    return $test_str;\n}\n\necho move_num('a1b2c3d4e5f6g7h8i9j0');\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij1234567890",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $num_arr = array();\n    $str_arr = array();\n    foreach ($test_arr as $key => $value) {\n        if (is_numeric($value)) {\n            array_push($num_arr, $value);\n        } else {\n            array_push($str_arr, $value);\n        }\n    }\n    $result = implode($str_arr) . implode($num_arr);\n    return $result;\n}\n\n$test_str = \"a1b2c3d4\";\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_str = str_split($test_str);\n    $numbers = array();\n    $letters = array();\n    foreach ($test_str as $key => $value) {\n        if (is_numeric($value)) {\n            array_push($numbers, $value);\n        } else {\n            array_push($letters, $value);\n        }\n    }\n    $result = array_merge($letters, $numbers);\n    return implode($result);\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $new_str = '';\n    $num_str = '';\n    for ($i = 0; $i < strlen($test_str); $i++) {\n        if (is_numeric($test_str[$i])) {\n            $num_str .= $test_str[$i];\n        } else {\n            $new_str .= $test_str[$i];\n        }\n    }\n    return $new_str . $num_str;\n}\n\necho move_num('a1b2c3');\necho \"\\n\";\necho move_num('a10b20c30');\necho \"\\n\";\necho move_num('abc');\necho \"\\n\";\necho move_num('123');\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abc123\nabc102030\nabc\n123\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $num_arr = array();\n    $str_arr = array();\n    foreach ($test_arr as $key => $value) {\n        if (is_numeric($value)) {\n            array_push($num_arr, $value);\n        } else {\n            array_push($str_arr, $value);\n        }\n    }\n    $result = implode($str_arr) . implode($num_arr);\n    return $result;\n}\n\necho move_num('abc123');\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abc123",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $nums = \"\";\n    $str = \"\";\n    for ($i = 0; $i < strlen($test_str); $i++) {\n        if (is_numeric($test_str[$i])) {\n            $nums .= $test_str[$i];\n        } else {\n            $str .= $test_str[$i];\n        }\n    }\n    return $str . $nums;\n}\n\necho move_num(\"abc123\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abc123",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $num_arr = array();\n    $char_arr = array();\n    foreach ($test_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $char_arr[] = $value;\n        }\n    }\n    $result = implode('', $char_arr) . implode('', $num_arr);\n    return $result;\n}\n\necho move_num('abc123');\necho '<br>';\necho move_num('abc123def456');\necho '<br>';\necho move_num('abc123def456xyz789');\necho '<br>';\necho move_num('abc123def456xyz789abc123def456xyz789');\necho '<br>';\necho move_num('abc123def456xyz789abc123def456xyz789abc123def456xyz789');\necho '<br>';\necho move_num('abc123def456xyz789abc123def456xyz789abc123def456xyz789abc123def456xyz789');\necho '<br>';\necho move_num('abc123def456xyz789abc123def456xyz789abc123def456xyz789abc123def456xyz789abc123def456xyz789');\necho '<br>';\necho move_num('abc123def456xyz789abc123def456xyz789abc123def456xyz789abc123def456xyz789abc123def456xyz789abc123def456xyz789');\necho '<br>';\necho move_num('abc123def456xyz789abc123def456xyz789abc123def456xyz789abc123def456xyz789abc123def456xyz789abc123def456xyz789abc123def456xyz789');\necho '<br>';\necho move_num('abc123def456xyz789abc123def456xyz789abc123def456xyz789abc123def456xyz789abc123def456xyz789abc123def456xyz789abc123def456xyz789abc123\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "\nParse error: syntax error, unexpected string content \"abc123def456xyz789abc123def456...\" in /tmp/tmphlfvt2f9.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $arr = str_split($test_str);\n    $arr_num = array();\n    $arr_str = array();\n    foreach ($arr as $key => $value) {\n        if (is_numeric($value)) {\n            array_push($arr_num, $value);\n        } else {\n            array_push($arr_str, $value);\n        }\n    }\n    $arr_str = array_merge($arr_str, $arr_num);\n    $str = implode('', $arr_str);\n    return $str;\n}\n\necho move_num('a1b2c3d4');\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr_new = [];\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr_new[] = $value;\n        }\n    }\n    $str_arr_new = array_merge($str_arr_new, $num_arr);\n    return implode($str_arr_new);\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = array();\n    $char_arr = array();\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            array_push($num_arr, $char);\n        } else {\n            array_push($char_arr, $char);\n        }\n    }\n    $result = implode($char_arr) . implode($num_arr);\n    echo $result;\n}\n\nmove_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234Iloveyouthreethousand1143553000\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt1w7cmfe.php:24\nStack trace:\n#0 /tmp/tmpt1w7cmfe.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpt1w7cmfe.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr_new = [];\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr_new[] = $value;\n        }\n    }\n    $str_arr_new = array_merge($str_arr_new, $num_arr);\n    return implode($str_arr_new);\n}\n\necho move_num('a1b2c3d4e5f6g7h8i9j0');\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122840,
      "stdout": "abcdefghij1234567890",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr = [];\n    foreach($test_arr as $char) {\n        if(is_numeric($char)) {\n            array_push($num_arr, $char);\n        } else {\n            array_push($str_arr, $char);\n        }\n    }\n    $result = implode($str_arr) . implode($num_arr);\n    return $result;\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = array();\n    $str_arr_new = array();\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr_new[] = $value;\n        }\n    }\n    $str_arr_new = array_merge($str_arr_new, $num_arr);\n    return implode('', $str_arr_new);\n}\necho move_num('abc123def456');\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdef123456",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $numbers = array();\n    $letters = array();\n    $result = array();\n    for ($i = 0; $i < strlen($test_str); $i++) {\n        if (is_numeric($test_str[$i])) {\n            array_push($numbers, $test_str[$i]);\n        } else {\n            array_push($letters, $test_str[$i]);\n        }\n    }\n    $result = array_merge($letters, $numbers);\n    return implode($result);\n}\necho move_num(\"a1b2c3\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abc123",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr_new = [];\n    foreach ($str_arr as $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr_new[] = $value;\n        }\n    }\n    return implode($str_arr_new) . implode($num_arr);\n}\n\necho move_num('a1b2c3d4');\necho \"<br>\";\necho move_num('a1b2c3d4e5f6g7h8i9j0');\necho \"<br>\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k');\necho \"<br>\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1');\necho \"<br>\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l');\necho \"<br>\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2');\necho \"<br>\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m');\necho \"<br>\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3');\necho \"<br>\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3n');\necho \"<br>\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3n4');\necho \"<br>\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3n4o');\necho \"<br>\";\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234<br>abcdefghij1234567890<br>abcdefghijk1234567890<br>abcdefghijk12345678901<br>abcdefghijkl12345678901<br>abcdefghijkl123456789012<br>abcdefghijklm123456789012<br>abcdefghijklm1234567890123<br>abcdefghijklmn1234567890123<br>abcdefghijklmn12345678901234<br>abcdefghijklmno12345678901234<br>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = array();\n    $char_arr = array();\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            $num_arr[] = $char;\n        } else {\n            $char_arr[] = $char;\n        }\n    }\n    return implode($char_arr) . implode($num_arr);\n}\n\necho move_num(\"abc123\");\necho \"<br>\";\necho move_num(\"abcdef\");\necho \"<br>\";\necho move_num(\"123abc\");\necho \"<br>\";\necho move_num(\"\");\necho \"<br>\";\necho move_num(\"abc\");\necho \"<br>\";\necho move_num(\"123\");\necho \"<br>\";\necho move_num(\"abc123xyz\");\necho \"<br>\";\necho move_num(\"aa11b33\");\necho \"<br>\";\necho move_num(\"11aa33\");\necho \"<br>\";\necho move_num(\"aa11bb22\");\necho \"<br>\";\necho move_num(\"1111\");\necho \"<br>\";\necho move_num(\"aaaa\");\necho \"<br>\";\necho move_num(\"a11a\");\necho \"<br>\";\necho move_num(\"a11a1\");\necho \"<br>\";\necho move_num(\"1a1a\");\necho \"<br>\";\necho move_num(\"a1a1\");\necho \"<br>\";\necho move_num(\"a1a11\");\necho \"<br>\";\necho move_num(\"1a1a1\");\necho \"<br>\";\necho move_num(\"a1a111\");\necho \"<br>\";\necho move_num(\"1a1a11\");\necho \"<br>\";\necho move_num(\"a1a1111\");\necho \"<br>\";\necho move_num(\"1a1a111\");\necho \"<br>\";\necho move_num(\"a1a11111\");\necho \"<br>\";\necho move_num(\"1a1a1111\");\necho \"<br>\";\necho move_num(\"a1a111111\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "\nParse error: syntax error, unexpected identifier \"I1love143you55three3000thousand\", expecting \")\" in /tmp/tmpnkurvihy.php on line 71\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $arr = str_split($test_str);\n    $num = array();\n    $str = array();\n    foreach ($arr as $value) {\n        if (is_numeric($value)) {\n            $num[] = $value;\n        } else {\n            $str[] = $value;\n        }\n    }\n    return implode($str) . implode($num);\n}\n\necho move_num('a1b2c3d4');\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr_new = [];\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr_new[] = $value;\n        }\n    }\n    return implode('', $str_arr_new) . implode('', $num_arr);\n}\n\necho move_num('abc123');\necho \"\\n\";\necho move_num('abc');\necho \"\\n\";\necho move_num('123');\necho \"\\n\";\necho move_num('abc123xyz');\necho \"\\n\";\necho move_num('abcd1234');\necho \"\\n\";\necho move_num('abcd1234xyz');\necho \"\\n\";\necho move_num('abcd1234xyz5678');\necho \"\\n\";\necho move_num('abcd1234xyz56');\necho \"\\n\";\necho move_num('abcd1234xyz56uvw');\necho \"\\n\";\necho move_num('abcd1234xyz56uvw789');\necho \"\\n\";\necho move_num('abcd1234xyz56uvw7890');\necho \"\\n\";\necho move_num('abcd1234xyz56uvw78901');\necho \"\\n\";\necho move_num('abcd1234xyz56uvw789012');\necho \"\\n\";\necho move_num('abcd1234xyz56uvw7890123');\necho \"\\n\";\necho move_num('abcd1234xyz56uvw78901234');\necho \"\\n\";\necho move_num('abcd1234xyz56uvw789012345');\necho \"\\n\";\necho move_num('abcd1234xyz56uvw7890123456');\necho \"\\n\";\necho move_num('abcd1234xyz56uvw78901234567');\necho \"\\n\";\necho move_num('abcd1234xyz56uvw789012345678');\necho \"\\\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "\nParse error: syntax error, unexpected identifier \"I1love143you55three3000thousand\", expecting \",\" or \";\" in /tmp/tmp4rm3bkop.php on line 60\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            $num_arr[] = $char;\n        } else {\n            $char_arr[] = $char;\n        }\n    }\n    return implode($char_arr) . implode($num_arr);\n}\n\necho move_num('a1b2c3d4');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3n');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3n4');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3n4o');\necho \"\\n\";\necho move_num('a1b2c3d4e5f\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122840,
      "stdout": "\nParse error: syntax error, unexpected string content \"a1b2c3d4e5f\" in /tmp/tmp2yi524q9.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $num = array();\n    $str = array();\n    $len = strlen($test_str);\n    for ($i = 0; $i < $len; $i++) {\n        if (is_numeric($test_str[$i])) {\n            array_push($num, $test_str[$i]);\n        } else {\n            array_push($str, $test_str[$i]);\n        }\n    }\n    $str = implode($str);\n    $num = implode($num);\n    $result = $str . $num;\n    return $result;\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $char_arr[] = $value;\n        }\n    }\n    $result = implode($char_arr) . implode($num_arr);\n    return $result;\n}\n\n$test_str = \"a1b2c3d4\";\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    foreach($str_arr as $char) {\n        if(is_numeric($char)) {\n            array_push($num_arr, $char);\n        } else {\n            array_push($char_arr, $char);\n        }\n    }\n    $result = implode($char_arr) . implode($num_arr);\n    return $result;\n}\n\n$test_str = \"a1b2c3d4\";\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr_new = [];\n    foreach ($str_arr as $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr_new[] = $value;\n        }\n    }\n    $str_arr_new = array_merge($str_arr_new, $num_arr);\n    return implode('', $str_arr_new);\n}\n\necho move_num('a1b2c3d4e5f6g7h8i9j10');\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij12345678910",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $num_arr = [];\n    $str_arr = [];\n    $result = '';\n    for ($i = 0; $i < strlen($test_str); $i++) {\n        if (is_numeric($test_str[$i])) {\n            $num_arr[] = $test_str[$i];\n        } else {\n            $str_arr[] = $test_str[$i];\n        }\n    }\n    $result = implode('', $str_arr) . implode('', $num_arr);\n    return $result;\n}\n\necho move_num('a1b2c3d4e5f6g7h8i9j10');\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij12345678910",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = array();\n    $char_arr = array();\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            $num_arr[] = $char;\n        } else {\n            $char_arr[] = $char;\n        }\n    }\n    return implode($char_arr) . implode($num_arr);\n}\n\necho move_num(\"a1b2c3\");\necho \"\\n\";\necho move_num(\"a10b20c30\");\necho \"\\n\";\necho move_num(\"abc\");\necho \"\\n\";\necho move_num(\"123\");\necho \"\\n\";\necho move_num(\"\");\necho \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j\");\necho \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0\");\necho \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k\");\necho \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1\");\necho \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l\");\necho \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l2\");\necho \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l2m\");\necho \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l2m3\");\necho \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l2m3n\");\necho \"\\n\";\necho move_num(\"a1b2c\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "\nParse error: syntax error, unexpected identifier \"I1love143you55three3000thousand\", expecting \")\" in /tmp/tmpex9kwhvz.php on line 51\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            $num_arr[] = $char;\n        } else {\n            $char_arr[] = $char;\n        }\n    }\n    return implode('', $char_arr) . implode('', $num_arr);\n}\n\necho move_num('a1b2c3d4e5f6g7h8i9j0');\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517316,
      "stdout": "abcdefghij1234567890",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $char_arr[] = $value;\n        }\n    }\n    $result = implode('', $char_arr) . implode('', $num_arr);\n    return $result;\n}\n\necho move_num('a1b2c3d4');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3n');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3n4');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3n4o');\necho \"\\n\";\necho\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmphx3pk7wh.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr_new = [];\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr_new[] = $value;\n        }\n    }\n    return implode($str_arr_new) . implode($num_arr);\n}\n\necho move_num('abc123');\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abc123",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = array();\n    $char_arr = array();\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            array_push($num_arr, $char);\n        } else {\n            array_push($char_arr, $char);\n        }\n    }\n    $result = implode($char_arr) . implode($num_arr);\n    return $result;\n}\n\n$test_str = \"a1b2c3d4\";\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122840,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $num_arr = array();\n    $str_arr = array();\n    foreach ($test_arr as $key => $value) {\n        if (is_numeric($value)) {\n            array_push($num_arr, $value);\n        } else {\n            array_push($str_arr, $value);\n        }\n    }\n    $result = implode($str_arr) . implode($num_arr);\n    return $result;\n}\n\necho move_num('a1b2c3d4');\necho \"<br>\";\necho move_num('a1b2c3d4e5f6g7h8i9j0');\necho \"<br>\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k');\necho \"<br>\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1');\necho \"<br>\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l');\necho \"<br>\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2');\necho \"<br>\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m');\necho \"<br>\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3');\necho \"<br>\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3n');\necho \"<br>\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3n4');\necho \"<br>\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "\nParse error: syntax error, unexpected string content \"a1b2c3d4e5f6g7h8i9j0k1l2m\" in /tmp/tmpw3lv68kd.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $str_arr_len = count($str_arr);\n    $num_arr = array();\n    $char_arr = array();\n    for ($i = 0; $i < $str_arr_len; $i++) {\n        if (is_numeric($str_arr[$i])) {\n            $num_arr[] = $str_arr[$i];\n        } else {\n            $char_arr[] = $str_arr[$i];\n        }\n    }\n    $result = array_merge($char_arr, $num_arr);\n    return implode($result);\n}\n\n$test_str = \"a1b2c3d4\";\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = array();\n    $char_arr = array();\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            array_push($num_arr, $value);\n        } else {\n            array_push($char_arr, $value);\n        }\n    }\n    $result = implode($char_arr) . implode($num_arr);\n    return $result;\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    foreach ($str_arr as $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $char_arr[] = $value;\n        }\n    }\n    return implode($char_arr) . implode($num_arr);\n}\n\necho move_num('a1b2c3d4e5f6g7h8i9j0');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3n');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3n4');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3n4o');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5');\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij1234567890\nabcdefghijk1234567890\nabcdefghijk12345678901\nabcdefghijkl12345678901\nabcdefghijkl123456789012\nabcdefghijklm123456789012\nabcdefghijklm1234567890123\nabcdefghijklmn1234567890123\nabcdefghijklmn12345678901234\nabcdefghijklmno12345678901234\nabcdefghijklmno123456789012345",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $num_arr = array();\n    $char_arr = array();\n    foreach ($test_arr as $key => $value) {\n        if (is_numeric($value)) {\n            array_push($num_arr, $value);\n        } else {\n            array_push($char_arr, $value);\n        }\n    }\n    return implode($char_arr) . implode($num_arr);\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = array();\n    $char_arr = array();\n    foreach ($str_arr as $value) {\n        if (is_numeric($value)) {\n            array_push($num_arr, $value);\n        } else {\n            array_push($char_arr, $value);\n        }\n    }\n    $result = implode($char_arr) . implode($num_arr);\n    return $result;\n}\n\n$test_str = \"a1b2c3d4\";\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    foreach ($test_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $char_arr[] = $value;\n        }\n    }\n    return implode('', $char_arr) . implode('', $num_arr);\n}\n\n$test_str = 'a1b2c3d4e5f6g7h8i9j0';\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij1234567890",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n\t$str_arr = str_split($test_str);\n\t$num_arr = array();\n\t$str_arr_new = array();\n\tforeach ($str_arr as $key => $value) {\n\t\tif (is_numeric($value)) {\n\t\t\t$num_arr[] = $value;\n\t\t} else {\n\t\t\t$str_arr_new[] = $value;\n\t\t}\n\t}\n\t$str_arr_new = array_merge($str_arr_new, $num_arr);\n\t$str_new = implode('', $str_arr_new);\n\treturn $str_new;\n}\n\necho move_num('a1b2c3d4e5f6g7h8i9j0');\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij1234567890",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr = [];\n    foreach ($test_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr[] = $value;\n        }\n    }\n    $result = implode($str_arr) . implode($num_arr);\n    return $result;\n}\n\n$test_str = \"a1b2c3d4\";\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $num_arr = array();\n    $str_arr = array();\n    foreach ($test_arr as $value) {\n        if (is_numeric($value)) {\n            array_push($num_arr, $value);\n        } else {\n            array_push($str_arr, $value);\n        }\n    }\n    $result = implode($str_arr) . implode($num_arr);\n    return $result;\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr = [];\n    foreach ($test_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr[] = $value;\n        }\n    }\n    $result = implode($str_arr) . implode($num_arr);\n    return $result;\n}\n\necho move_num(\"a1b2c3d4\");\necho \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0\");\necho \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k\");\necho \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6\");\necho \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6A7B8C9D0E1F2G3H4I5J6K7L8M9N0O1P2Q3R4S5T6U7V8W9X0Y1Z2\");\necho \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6A7B8C9D0E1F2G3H4I5J6K7L8M9N0O1P2Q3R4S5T6U7V8W9X0Y1Z2a3b4c5d6e7f8g9h0\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "\nParse error: syntax error, unexpected identifier \"I1love143you55three3000thousand\", expecting \")\" in /tmp/tmpvix5ijbu.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $len = strlen($test_str);\n    $num = \"\";\n    $str = \"\";\n    for ($i = 0; $i < $len; $i++) {\n        if (is_numeric($test_str[$i])) {\n            $num .= $test_str[$i];\n        } else {\n            $str .= $test_str[$i];\n        }\n    }\n    return $str . $num;\n}\n\necho move_num(\"a1b2c3d4\") . \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0\") . \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6\") . \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6\") . \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6\") . \"\\n\";\necho move_\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmpugejw_kl.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr_new = [];\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr_new[] = $value;\n        }\n    }\n    return implode(\"\", $str_arr_new) . implode(\"\", $num_arr);\n}\n\necho move_num(\"abc123\");\necho move_num(\"abc123xyz\");\necho move_num(\"abcdef\");\necho move_num(\"123456\");\necho move_num(\"\");\necho move_num(\"a\");\necho move_num(\"ab\");\necho move_num(\"a1b2\");\necho move_num(\"a1b2c3\");\necho move_num(\"a1b2c3d4\");\necho move_num(\"a1b2c3d4e5f6g7h8i9j0\");\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k\");\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6\");\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6A7B8C9D0E1F2G3H4I5J6K7L8M9N0O1P2Q3R4S5T6U7V8W9X0Y1Z2\");\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6A7B8C9\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "\nParse error: syntax error, unexpected identifier \"I1love143you55three3000thousand\", expecting \")\" in /tmp/tmp3xcjrjqa.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            $num_arr[] = $char;\n        } else {\n            $char_arr[] = $char;\n        }\n    }\n    return implode($char_arr) . implode($num_arr);\n}\n\necho move_num('abc123');\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abc123",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $num = array();\n    $str = array();\n    for ($i = 0; $i < strlen($test_str); $i++) {\n        if (is_numeric($test_str[$i])) {\n            array_push($num, $test_str[$i]);\n        } else {\n            array_push($str, $test_str[$i]);\n        }\n    }\n    return implode($str) . implode($num);\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr_new = [];\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr_new[] = $value;\n        }\n    }\n    return implode($str_arr_new) . implode($num_arr);\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $arr = str_split($test_str);\n    $num = array();\n    $str = array();\n    foreach ($arr as $value) {\n        if (is_numeric($value)) {\n            $num[] = $value;\n        } else {\n            $str[] = $value;\n        }\n    }\n    $str = implode('', $str);\n    $num = implode('', $num);\n    return $str . $num;\n}\necho move_num('a1b2c3d4');\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr_new = [];\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            $num_arr[] = $char;\n        } else {\n            $str_arr_new[] = $char;\n        }\n    }\n    return implode('', $str_arr_new) . implode('', $num_arr);\n}\n\necho move_num('a1b2c3d4e5f6g7h8i9j0');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3n');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3n4');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3n4o');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "\nParse error: syntax error, unexpected string content \"a1b2c3d4e5f6g7h8i9j0k\" in /tmp/tmp38l6ta2d.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $arr = str_split($test_str);\n    $num = array();\n    $str = array();\n    $result = array();\n    foreach ($arr as $value) {\n        if (is_numeric($value)) {\n            array_push($num, $value);\n        } else {\n            array_push($str, $value);\n        }\n    }\n    $result = array_merge($str, $num);\n    return implode($result);\n}\n\necho move_num(\"a1b2c3\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abc123",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $arr = str_split($test_str);\n    $num = array();\n    $str = array();\n    foreach ($arr as $value) {\n        if (is_numeric($value)) {\n            $num[] = $value;\n        } else {\n            $str[] = $value;\n        }\n    }\n    $result = implode($str) . implode($num);\n    return $result;\n}\n\necho move_num(\"a1b2c3d4e5f6g7h8i9j0\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij1234567890",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $num = array();\n    $str = array();\n    $result = array();\n    for ($i = 0; $i < strlen($test_str); $i++) {\n        if (is_numeric($test_str[$i])) {\n            $num[] = $test_str[$i];\n        } else {\n            $str[] = $test_str[$i];\n        }\n    }\n    $result = array_merge($str, $num);\n    return implode($result);\n}\necho move_num(\"a1b2c3\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abc123",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_str = str_split($test_str);\n    $num_arr = [];\n    $str_arr = [];\n    foreach ($test_str as $key => $value) {\n        if (is_numeric($value)) {\n            array_push($num_arr, $value);\n        } else {\n            array_push($str_arr, $value);\n        }\n    }\n    $str_arr = array_merge($str_arr, $num_arr);\n    $str_arr = implode($str_arr);\n    return $str_arr;\n}\n\necho move_num(\"a1b2c3d4e5f6g7h8i9j0\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij1234567890",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $arr = str_split($test_str);\n    $num = array();\n    $str = array();\n    foreach ($arr as $value) {\n        if (is_numeric($value)) {\n            $num[] = $value;\n        } else {\n            $str[] = $value;\n        }\n    }\n    return implode($str) . implode($num);\n}\n\necho move_num('a1b2c3d4');\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr = [];\n    foreach ($test_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr[] = $value;\n        }\n    }\n    $result = implode($str_arr) . implode($num_arr);\n    return $result;\n}\n\necho move_num(\"a1b2c3d4\");\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            $num_arr[] = $char;\n        } else {\n            $char_arr[] = $char;\n        }\n    }\n    $result = implode('', $char_arr);\n    $result .= implode('', $num_arr);\n    return $result;\n}\n\necho move_num('abc123');\necho move_num('abc123def456');\necho move_num('abc123def456ghi789');\necho move_num('abc123def456ghi789jkl012');\necho move_num('abc123def456ghi789jkl012mno345');\necho move_num('abc123def456ghi789jkl012mno345pqr678');\necho move_num('abc123def456ghi789jkl012mno345pqr678stu901');\necho move_num('abc123def456ghi789jkl012mno345pqr678stu901vwx234');\necho move_num('abc123def456ghi789jkl012mno345pqr678stu901vwx234yz567');\necho move_num('abc123def456ghi789jkl012mno345pqr678stu901vwx234yz567');\necho move_num('abc123def456ghi789jkl012mno345pqr678stu901vwx234yz567');\necho move_num('abc123def456ghi789jkl012mno345pqr678stu901vwx234yz567');\necho move_num('abc123def456ghi789jkl012mno345pqr678stu901vwx234yz567');\necho move_num('abc123def456ghi789jkl012mno345pqr678stu901vwx234yz567');\necho move_num('abc123def456ghi789jkl012mno345pqr678stu901vwx234yz567');\necho\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmprratczv0.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str = str_split($test_str);\n    $num = array();\n    $str_new = array();\n    foreach ($str as $key => $value) {\n        if (is_numeric($value)) {\n            $num[] = $value;\n        } else {\n            $str_new[] = $value;\n        }\n    }\n    $str_new = implode($str_new);\n    $num = implode($num);\n    return $str_new . $num;\n}\n\necho move_num(\"a1b2c3d4\");\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str = str_split($test_str);\n    $num = array();\n    $char = array();\n    foreach ($str as $key => $value) {\n        if (is_numeric($value)) {\n            $num[] = $value;\n        } else {\n            $char[] = $value;\n        }\n    }\n    $result = implode($char) . implode($num);\n    return $result;\n}\n\necho move_num(\"abcd1234efgh5678\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefgh12345678",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = array();\n    $char_arr = array();\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            array_push($num_arr, $value);\n        } else {\n            array_push($char_arr, $value);\n        }\n    }\n    $result = implode('', $char_arr) . implode('', $num_arr);\n    return $result;\n}\n\necho move_num('a1b2c3d4');\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr_new = [];\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr_new[] = $value;\n        }\n    }\n    return implode($str_arr_new) . implode($num_arr);\n}\necho move_num('abc123');\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517316,
      "stdout": "abc123",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $num_arr = array();\n    $str_arr = array();\n    foreach ($test_arr as $key => $value) {\n        if (is_numeric($value)) {\n            array_push($num_arr, $value);\n        } else {\n            array_push($str_arr, $value);\n        }\n    }\n    return implode($str_arr) . implode($num_arr);\n}\n\necho move_num(\"abc123\");\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abc123",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $arr = str_split($test_str);\n    $num = array();\n    $str = array();\n    foreach ($arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num[] = $value;\n        } else {\n            $str[] = $value;\n        }\n    }\n    $str = implode($str);\n    $num = implode($num);\n    return $str . $num;\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    for ($i = 0; $i < count($test_arr); $i++) {\n        if (is_numeric($test_arr[$i])) {\n            array_push($num_arr, $test_arr[$i]);\n        } else {\n            array_push($char_arr, $test_arr[$i]);\n        }\n    }\n    $result = array_merge($char_arr, $num_arr);\n    return implode(\"\", $result);\n}\necho move_num(\"abc123\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abc123",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_str = str_split($test_str);\n    $num_arr = [];\n    $str_arr = [];\n    foreach ($test_str as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr[] = $value;\n        }\n    }\n    $result = array_merge($str_arr, $num_arr);\n    return implode($result);\n}\n\necho move_num(\"abc123\");\necho \"<br>\";\necho move_num(\"123abc\");\necho \"<br>\";\necho move_num(\"abc123abc\");\necho \"<br>\";\necho move_num(\"abc\");\necho \"<br>\";\necho move_num(\"123\");\necho \"<br>\";\necho move_num(\"\");\necho \"<br>\";\necho move_num(\"a1b2c3\");\necho \"<br>\";\necho move_num(\"1a2b3c\");\necho \"<br>\";\necho move_num(\"1a2b3c4\");\necho \"<br>\";\necho move_num(\"a1b2c3d4\");\necho \"<br>\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j\");\necho \"<br>\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0\");\necho \"<br>\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k\");\necho \"<br>\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6\");\necho \"<br>\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6A7\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "\nParse error: syntax error, unexpected identifier \"I1love143you55three3000thousand\", expecting \")\" in /tmp/tmpef1jhaww.php on line 52\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $num_arr = array();\n    $str_arr = array();\n    $result = \"\";\n    for ($i = 0; $i < strlen($test_str); $i++) {\n        if (is_numeric($test_str[$i])) {\n            array_push($num_arr, $test_str[$i]);\n        } else {\n            array_push($str_arr, $test_str[$i]);\n        }\n    }\n    $result = implode($str_arr) . implode($num_arr);\n    return $result;\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517316,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n\t$test_str = str_split($test_str);\n\t$num_arr = array();\n\t$str_arr = array();\n\tforeach ($test_str as $key => $value) {\n\t\tif (is_numeric($value)) {\n\t\t\t$num_arr[] = $value;\n\t\t} else {\n\t\t\t$str_arr[] = $value;\n\t\t}\n\t}\n\treturn implode('', $str_arr) . implode('', $num_arr);\n}\n\necho move_num('a1b2c3');\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abc123",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $num_arr = array();\n    $str_arr = array();\n    $result = array();\n    $num_arr = str_split($test_str);\n    foreach ($num_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[$key] = $value;\n        } else {\n            $str_arr[$key] = $value;\n        }\n    }\n    $result = array_merge($str_arr, $num_arr);\n    return implode($result);\n}\necho move_num(\"abc123\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcabc123\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbhd37fj7.php:24\nStack trace:\n#0 /tmp/tmpbhd37fj7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpbhd37fj7.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $num_arr = array();\n    $char_arr = array();\n    foreach ($test_arr as $key => $value) {\n        if (is_numeric($value)) {\n            array_push($num_arr, $value);\n        } else {\n            array_push($char_arr, $value);\n        }\n    }\n    $result = implode($char_arr) . implode($num_arr);\n    return $result;\n}\n\n$test_str = \"a1b2c3d4\";\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = array();\n    $char_arr = array();\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            array_push($num_arr, $char);\n        } else {\n            array_push($char_arr, $char);\n        }\n    }\n    $result = implode($char_arr) . implode($num_arr);\n    return $result;\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122840,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr_new = [];\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr_new[] = $value;\n        }\n    }\n    $str_arr_new = array_merge($str_arr_new, $num_arr);\n    return implode('', $str_arr_new);\n}\n\necho move_num('a1b2c3d4e5f6g7h8i9j0');\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij1234567890",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_str = str_split($test_str);\n    $num = array();\n    $char = array();\n    foreach ($test_str as $key => $value) {\n        if (is_numeric($value)) {\n            $num[] = $value;\n        } else {\n            $char[] = $value;\n        }\n    }\n    return implode($char) . implode($num);\n}\n\necho move_num(\"a1b2c3d4e5f6g7h8i9j\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij123456789",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $arr = str_split($test_str);\n    $num = array();\n    $char = array();\n    foreach ($arr as $value) {\n        if (is_numeric($value)) {\n            array_push($num, $value);\n        } else {\n            array_push($char, $value);\n        }\n    }\n    $result = array_merge($char, $num);\n    return implode($result);\n}\n\necho move_num(\"a1b2c3\");\necho \"<br>\";\necho move_num(\"a10b20c30\");\necho \"<br>\";\necho move_num(\"abc\");\necho \"<br>\";\necho move_num(\"123\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abc123<br>abc102030<br>abc<br>123",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = array();\n    $char_arr = array();\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            array_push($num_arr, $char);\n        } else {\n            array_push($char_arr, $char);\n        }\n    }\n    return implode($char_arr) . implode($num_arr);\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            $num_arr[] = $char;\n        } else {\n            $char_arr[] = $char;\n        }\n    }\n    return implode($char_arr) . implode($num_arr);\n}\n\necho move_num(\"a1b2c3d4e5f6g7h8i9j0\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij1234567890",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n\t$arr = str_split($test_str);\n\t$num_arr = array();\n\t$str_arr = array();\n\tforeach ($arr as $key => $value) {\n\t\tif (is_numeric($value)) {\n\t\t\t$num_arr[] = $value;\n\t\t} else {\n\t\t\t$str_arr[] = $value;\n\t\t}\n\t}\n\t$result = implode($str_arr) . implode($num_arr);\n\treturn $result;\n}\n\n$test_str = \"a1b2c3d4\";\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = array();\n    $char_arr = array();\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            array_push($num_arr, $value);\n        } else {\n            array_push($char_arr, $value);\n        }\n    }\n    $result = implode($char_arr) . implode($num_arr);\n    return $result;\n}\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = array();\n    $str_arr_new = array();\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr_new[] = $value;\n        }\n    }\n    return implode('', $str_arr_new) . implode('', $num_arr);\n}\n\necho move_num('abc123');\necho '<br>';\necho move_num('abc123xyz');\necho '<br>';\necho move_num('abcdef');\necho '<br>';\necho move_num('123456');\necho '<br>';\necho move_num('0');\necho '<br>';\necho move_num('abc');\necho '<br>';\necho move_num('abc123xyz456');\necho '<br>';\necho move_num('abc123xyz456xyz123abc');\necho '<br>';\necho move_num('abc123xyz456xyz123abc456');\necho '<br>';\necho move_num('abc123xyz456xyz123abc456xyz');\necho '<br>';\necho move_num('abc123xyz456xyz123abc456xyz789');\necho '<br>';\necho move_num('abc123xyz456xyz123abc456xyz789abc');\necho '<br>';\necho move_num('abc123xyz456xyz123abc456xyz789abc123');\necho '<br>';\necho move_num('abc123xyz456xyz123abc456xyz789abc123xyz');\necho '<br>';\necho move_num('abc123xyz456xyz123abc456xyz789abc123xyz456');\necho '<br>';\necho move_num('abc123xyz456xyz123abc456xyz789abc123xyz456abc');\necho '<br>';\necho move_num('abc123xyz456xyz123abc456xyz789\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "\nParse error: syntax error, unexpected string content \"abc123xyz456xyz123abc456xyz789\" in /tmp/tmp93t3o4sy.php on line 49\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = array();\n    $char_arr = array();\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            array_push($num_arr, $value);\n        } else {\n            array_push($char_arr, $value);\n        }\n    }\n    $result = array_merge($char_arr, $num_arr);\n    return implode($result);\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $arr = str_split($test_str);\n    $num = array();\n    $str = array();\n    foreach ($arr as $value) {\n        if (is_numeric($value)) {\n            array_push($num, $value);\n        } else {\n            array_push($str, $value);\n        }\n    }\n    $result = implode($str) . implode($num);\n    return $result;\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_str = str_split($test_str);\n    $num_arr = array();\n    $str_arr = array();\n    foreach ($test_str as $key => $value) {\n        if (is_numeric($value)) {\n            array_push($num_arr, $value);\n        } else {\n            array_push($str_arr, $value);\n        }\n    }\n    $result = implode($str_arr) . implode($num_arr);\n    return $result;\n}\necho move_num('a1b2c3d4e5f6g7h8i9j0');\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij1234567890",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $num = array();\n    $str = array();\n    $result = array();\n    $test_str = str_split($test_str);\n    foreach ($test_str as $value) {\n        if (is_numeric($value)) {\n            $num[] = $value;\n        } else {\n            $str[] = $value;\n        }\n    }\n    $result = array_merge($str, $num);\n    return implode($result);\n}\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $num_arr = array();\n    $str_arr = array();\n    $result_arr = array();\n    for ($i = 0; $i < strlen($test_str); $i++) {\n        if (is_numeric($test_str[$i])) {\n            $num_arr[] = $test_str[$i];\n        } else {\n            $str_arr[] = $test_str[$i];\n        }\n    }\n    $result_arr = array_merge($str_arr, $num_arr);\n    $result_str = implode(\"\", $result_arr);\n    return $result_str;\n}\n\necho move_num(\"a1b2c3d4e5\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcde12345",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $arr = str_split($test_str);\n    $num = [];\n    $str = [];\n    foreach ($arr as $value) {\n        if (is_numeric($value)) {\n            $num[] = $value;\n        } else {\n            $str[] = $value;\n        }\n    }\n    return implode($str) . implode($num);\n}\n\necho move_num(\"a1b2c3d4\");\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $num_arr = array();\n    $char_arr = array();\n    foreach ($test_arr as $key => $value) {\n        if (is_numeric($value)) {\n            array_push($num_arr, $value);\n        } else {\n            array_push($char_arr, $value);\n        }\n    }\n    $result_arr = array_merge($char_arr, $num_arr);\n    $result_str = implode($result_arr);\n    return $result_str;\n}\n\necho move_num(\"a1b2c3\");\necho \"<br>\";\necho move_num(\"abc123\");\necho \"<br>\";\necho move_num(\"123abc\");\necho \"<br>\";\necho move_num(\"123\");\necho \"<br>\";\necho move_num(\"abc\");\necho \"<br>\";\necho move_num(\"\");\necho \"<br>\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0\");\necho \"<br>\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k\");\necho \"<br>\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1\");\necho \"<br>\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l\");\necho \"<br>\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l2\");\necho \"<br>\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l2m\");\necho \"<br>\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l2m3\");\necho \"<br>\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "\nParse error: syntax error, unexpected identifier \"I1love143you55three3000thousand\", expecting \")\" in /tmp/tmpm_iv1zd6.php on line 51\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr_len = count($str_arr);\n    for ($i = 0; $i < $str_arr_len; $i++) {\n        if (is_numeric($str_arr[$i])) {\n            array_push($num_arr, $str_arr[$i]);\n            unset($str_arr[$i]);\n        }\n    }\n    $str_arr = array_merge($str_arr, $num_arr);\n    return implode($str_arr);\n}\n\n$test_str = \"a1b2c3d4\";\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr_new = [];\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr_new[] = $value;\n        }\n    }\n    $str_arr_new = array_merge($str_arr_new, $num_arr);\n    return implode('', $str_arr_new);\n}\n\necho move_num('a1b2c3d4e5f6g7h8i9j10');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j10k11l12m13n14o15p16q17r18s19t20u21v22w23x24y25z26');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j10k11l12m13n14o15p16q17r18s19t20u21v22w23x24y25z26a');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j10k11l12m13n14o15p16q17r18s19t20u21v22w23x24y25z26a1');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j10k11l12m13n14o15p16q17r18s19t20u21v22w23x24y25z26a1b');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j10k11l12m13n14o15p16q17r18s19t20u21v22w23x24y25z26a1b2');\necho \"\\n\";\necho move_num('a1b2c3\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "\nParse error: syntax error, unexpected string content \"a1b2c3\" in /tmp/tmpfo78um3f.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            array_push($num_arr, $char);\n        } else {\n            array_push($char_arr, $char);\n        }\n    }\n    $result = implode('', $char_arr) . implode('', $num_arr);\n    return $result;\n}\n\n$test_str = \"abcd123\";\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd123",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = array();\n    $char_arr = array();\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            array_push($num_arr, $char);\n        } else {\n            array_push($char_arr, $char);\n        }\n    }\n    return implode($char_arr) . implode($num_arr);\n}\n\n$test_str = \"a1b2c3d4\";\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr = [];\n    foreach ($test_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr[] = $value;\n        }\n    }\n    $result = implode($str_arr) . implode($num_arr);\n    return $result;\n}\necho move_num('a1b2c3d4e5f6g7h8i9j0');\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122840,
      "stdout": "abcdefghij1234567890",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            array_push($num_arr, $char);\n        } else {\n            array_push($char_arr, $char);\n        }\n    }\n    return implode($char_arr) . implode($num_arr);\n}\n\necho move_num(\"a1b2c3d4e5\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcde12345",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str = \"\";\n    $num = \"\";\n    for ($i = 0; $i < strlen($test_str); $i++) {\n        if (is_numeric($test_str[$i])) {\n            $num .= $test_str[$i];\n        } else {\n            $str .= $test_str[$i];\n        }\n    }\n    return $str . $num;\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517316,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str = \"\";\n    $num = \"\";\n    for ($i = 0; $i < strlen($test_str); $i++) {\n        if (is_numeric($test_str[$i])) {\n            $num .= $test_str[$i];\n        } else {\n            $str .= $test_str[$i];\n        }\n    }\n    return $str . $num;\n}\n\necho move_num(\"a1b2c3\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abc123",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_str = str_split($test_str);\n    $num_arr = [];\n    $str_arr = [];\n    $result = [];\n    foreach ($test_str as $value) {\n        if (is_numeric($value)) {\n            array_push($num_arr, $value);\n        } else {\n            array_push($str_arr, $value);\n        }\n    }\n    $result = array_merge($str_arr, $num_arr);\n    return implode($result);\n}\n\necho move_num('abc123');\necho \"<br>\";\necho move_num('abc123def456');\necho \"<br>\";\necho move_num('abc123def456xyz789');\necho \"<br>\";\necho move_num('abc123def456xyz789abc123def456xyz789');\necho \"<br>\";\necho move_num('abc123def456xyz789abc123def456xyz789abc123def456xyz789');\necho \"<br>\";\necho move_num('abc123def456xyz789abc123def456xyz789abc123def456xyz789abc123def456xyz789');\necho \"<br>\";\necho move_num('abc123def456xyz789abc123def456xyz789abc123def456xyz789abc123def456xyz789abc123def456xyz789');\necho \"<br>\";\necho move_num('abc123def456xyz789abc123def456xyz789abc123def456xyz789abc123def456xyz789abc123def456xyz789abc123def456xyz789');\necho \"<br>\";\necho move_num('abc123def456xyz789abc123def456xyz789abc123def456xyz789abc123def456xyz789abc123def456xyz789abc123def456xyz789abc123def456xyz789');\necho \"<br>\";\necho move_num('abc123def456xyz789abc123def456xyz789abc123def456xyz789abc123def456xyz789abc123def456xyz789abc123def456xyz789abc123def456xyz789abc123def456xyz789');\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abc123<br>abcdef123456<br>abcdefxyz123456789<br>abcdefxyzabcdefxyz123456789123456789<br>abcdefxyzabcdefxyzabcdefxyz123456789123456789123456789<br>abcdefxyzabcdefxyzabcdefxyzabcdefxyz123456789123456789123456789123456789<br>abcdefxyzabcdefxyzabcdefxyzabcdefxyzabcdefxyz123456789123456789123456789123456789123456789<br>abcdefxyzabcdefxyzabcdefxyzabcdefxyzabcdefxyzabcdefxyz123456789123456789123456789123456789123456789123456789<br>abcdefxyzabcdefxyzabcdefxyzabcdefxyzabcdefxyzabcdefxyzabcdefxyz123456789123456789123456789123456789123456789123456789123456789<br>abcdefxyzabcdefxyzabcdefxyzabcdefxyzabcdefxyzabcdefxyzabcdefxyzabcdefxyz123456789123456789123456789123456789123456789123456789123456789123456789",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $result = '';\n    $num_arr = [];\n    foreach ($test_arr as $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $result .= $value;\n        }\n    }\n    $result .= implode('', $num_arr);\n    return $result;\n}\n\n$test_str = 'a1b2c3d4';\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr_new = [];\n    foreach ($str_arr as $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr_new[] = $value;\n        }\n    }\n    $str_arr_new = array_merge($str_arr_new, $num_arr);\n    return implode('', $str_arr_new);\n}\n\necho move_num('a1b2c3d4e5f6g7h8i9j0');\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij1234567890",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $num_array = array();\n    $char_array = array();\n    $result = \"\";\n    for ($i = 0; $i < strlen($test_str); $i++) {\n        if (is_numeric($test_str[$i])) {\n            array_push($num_array, $test_str[$i]);\n        } else {\n            array_push($char_array, $test_str[$i]);\n        }\n    }\n    $result = implode($char_array) . implode($num_array);\n    return $result;\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr_new = [];\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr_new[] = $value;\n        }\n    }\n    return implode($str_arr_new) . implode($num_arr);\n}\necho move_num(\"a1b2c3d4e5f6g7h8i9j10\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij12345678910",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $arr = str_split($test_str);\n    $num = array();\n    $str = array();\n    foreach ($arr as $value) {\n        if (is_numeric($value)) {\n            array_push($num, $value);\n        } else {\n            array_push($str, $value);\n        }\n    }\n    $result = implode($str) . implode($num);\n    return $result;\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str = \"\";\n    $num = \"\";\n    for ($i = 0; $i < strlen($test_str); $i++) {\n        if (is_numeric($test_str[$i])) {\n            $num .= $test_str[$i];\n        } else {\n            $str .= $test_str[$i];\n        }\n    }\n    return $str . $num;\n}\n\necho move_num(\"a1b2c3d4\") . \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j10\") . \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j10k11l12m13n14o15p16q17r18s19t20u21v22w23x24y25z26\") . \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j10k11l12m13n14o15p16q17r18s19t20u21v22w23x24y25z26A\") . \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j10k11l12m13n14o15p16q17r18s19t20u21v22w23x24y25z26A1\") . \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j10k11l12m13n14o15p16q17r18s19t20u21v22w23x24y25z26A1B\") . \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j10k11l12m13n14o15p16q17r18s19t20u21v22w23x24y25z26A1B2\") . \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j10k11l12m13\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "\nParse error: syntax error, unexpected identifier \"I1love143you55three3000thousand\", expecting \")\" in /tmp/tmps_hcxu7p.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $new_str = \"\";\n    $num_str = \"\";\n    for ($i = 0; $i < strlen($test_str); $i++) {\n        if (is_numeric($test_str[$i])) {\n            $num_str .= $test_str[$i];\n        } else {\n            $new_str .= $test_str[$i];\n        }\n    }\n    return $new_str . $num_str;\n}\n\necho move_num(\"a1b2c3d4e5f6g7h8i9j0\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij1234567890",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n\t$num_arr = array();\n\t$str_arr = array();\n\t$result = \"\";\n\tfor ($i = 0; $i < strlen($test_str); $i++) {\n\t\tif (is_numeric($test_str[$i])) {\n\t\t\tarray_push($num_arr, $test_str[$i]);\n\t\t} else {\n\t\t\tarray_push($str_arr, $test_str[$i]);\n\t\t}\n\t}\n\t$result = implode($str_arr) . implode($num_arr);\n\treturn $result;\n}\n\necho move_num(\"abcd1234efgh5678\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefgh12345678",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n\t$str_arr = str_split($test_str);\n\t$num_arr = [];\n\t$str_arr_new = [];\n\tforeach ($str_arr as $key => $value) {\n\t\tif (is_numeric($value)) {\n\t\t\tarray_push($num_arr, $value);\n\t\t} else {\n\t\t\tarray_push($str_arr_new, $value);\n\t\t}\n\t}\n\treturn implode($str_arr_new) . implode($num_arr);\n}\necho move_num('abc123');\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abc123",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str = '';\n    $num = '';\n    for($i=0; $i<strlen($test_str); $i++) {\n        if(is_numeric($test_str[$i])) {\n            $num .= $test_str[$i];\n        } else {\n            $str .= $test_str[$i];\n        }\n    }\n    return $str.$num;\n}\necho move_num('a1b2c3d4e5f6g7h8i9j0');\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij1234567890",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_str = str_split($test_str);\n    $num = [];\n    $str = [];\n    foreach ($test_str as $key => $value) {\n        if (is_numeric($value)) {\n            $num[] = $value;\n        } else {\n            $str[] = $value;\n        }\n    }\n    $test_str = array_merge($str, $num);\n    return implode($test_str);\n}\necho move_num(\"a1b2c3\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abc123",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr_new = [];\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            $num_arr[] = $char;\n        } else {\n            $str_arr_new[] = $char;\n        }\n    }\n    $str_arr_new = array_merge($str_arr_new, $num_arr);\n    return implode($str_arr_new);\n}\n\necho move_num('a1b2c3d4e5f6g7h8i9j0');\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij1234567890",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $arr = str_split($test_str);\n    $num = [];\n    $str = [];\n    foreach ($arr as $value) {\n        if (is_numeric($value)) {\n            $num[] = $value;\n        } else {\n            $str[] = $value;\n        }\n    }\n    return implode($str) . implode($num);\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr_new = [];\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr_new[] = $value;\n        }\n    }\n    return implode($str_arr_new) . implode($num_arr);\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str = \"\";\n    $num = \"\";\n    for ($i = 0; $i < strlen($test_str); $i++) {\n        if (is_numeric($test_str[$i])) {\n            $num .= $test_str[$i];\n        } else {\n            $str .= $test_str[$i];\n        }\n    }\n    return $str . $num;\n}\necho move_num(\"a1b2c3d4e5f6g7h8i9j10\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij12345678910",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    foreach ($str_arr as $value) {\n        if (is_numeric($value)) {\n            array_push($num_arr, $value);\n        } else {\n            array_push($char_arr, $value);\n        }\n    }\n    $result = implode($char_arr) . implode($num_arr);\n    return $result;\n}\n\necho move_num(\"a1b2c3\");\necho \"\\n\";\necho move_num(\"a10b20c30\");\necho \"\\n\";\necho move_num(\"abc\");\necho \"\\n\";\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abc123\nabc102030\nabc\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $num = array();\n    $str = array();\n    $len = strlen($test_str);\n    for ($i = 0; $i < $len; $i++) {\n        if (is_numeric($test_str[$i])) {\n            $num[] = $test_str[$i];\n        } else {\n            $str[] = $test_str[$i];\n        }\n    }\n    $result = implode($str) . implode($num);\n    return $result;\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $str_arr_len = count($str_arr);\n    $num_arr = array();\n    $str_arr_new = array();\n    for($i = 0; $i < $str_arr_len; $i++) {\n        if(is_numeric($str_arr[$i])) {\n            array_push($num_arr, $str_arr[$i]);\n        } else {\n            array_push($str_arr_new, $str_arr[$i]);\n        }\n    }\n    $str_arr_new = array_merge($str_arr_new, $num_arr);\n    $str_arr_new = implode($str_arr_new);\n    return $str_arr_new;\n}\n\necho move_num(\"abc123\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abc123",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $str_len = count($str_arr);\n    $num_arr = array();\n    $str_arr_new = array();\n    for ($i = 0; $i < $str_len; $i++) {\n        if (is_numeric($str_arr[$i])) {\n            array_push($num_arr, $str_arr[$i]);\n        } else {\n            array_push($str_arr_new, $str_arr[$i]);\n        }\n    }\n    $str_arr_new = array_merge($str_arr_new, $num_arr);\n    $test_str = implode($str_arr_new);\n    return $test_str;\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n\t$test_arr = str_split($test_str);\n\t$num_arr = array();\n\t$letter_arr = array();\n\tforeach ($test_arr as $key => $value) {\n\t\tif (is_numeric($value)) {\n\t\t\tarray_push($num_arr, $value);\n\t\t} else {\n\t\t\tarray_push($letter_arr, $value);\n\t\t}\n\t}\n\t$result = implode($letter_arr) . implode($num_arr);\n\treturn $result;\n}\n\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    foreach ($str_arr as $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $char_arr[] = $value;\n        }\n    }\n    return implode($char_arr) . implode($num_arr);\n}\n\necho move_num('a1b2c3');\necho \"\\n\";\necho move_num('a10b20c30');\necho \"\\n\";\necho move_num('abc');\necho \"\\n\";\necho move_num('123');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3n');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3n4');\necho \"\\n\";\necho move_num('a1b2c3d4e5\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "\nParse error: syntax error, unexpected string content \"a1b2c3d4e5\" in /tmp/tmpd0x5p98a.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = [];\n    $char_arr = [];\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            $num_arr[] = $char;\n        } else {\n            $char_arr[] = $char;\n        }\n    }\n    return implode('', $char_arr) . implode('', $num_arr);\n}\n\necho move_num('a1b2c3d4');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3n');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3n4');\necho \"\\n\";\necho move_num('a1b2c3d4e5f6g7h8i9j0k1l2m3n4o');\necho \"\\n\";\necho move_num('a1b2c3d\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "\nParse error: syntax error, unexpected string content \"a1b2c3d\" in /tmp/tmpbkx3hrs4.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n\t$test_str = str_split($test_str);\n\t$str = '';\n\t$num = '';\n\tforeach ($test_str as $key => $value) {\n\t\tif (is_numeric($value)) {\n\t\t\t$num .= $value;\n\t\t} else {\n\t\t\t$str .= $value;\n\t\t}\n\t}\n\treturn $str . $num;\n}\n\necho move_num('a1b2c3d4e5f6g7h8i9j0');\n\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij1234567890",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $str_len = count($str_arr);\n    $num_arr = [];\n    $str_arr_new = [];\n    for ($i = 0; $i < $str_len; $i++) {\n        if (is_numeric($str_arr[$i])) {\n            array_push($num_arr, $str_arr[$i]);\n        } else {\n            array_push($str_arr_new, $str_arr[$i]);\n        }\n    }\n    $str_arr_new = array_merge($str_arr_new, $num_arr);\n    $str_arr_new = implode($str_arr_new);\n    return $str_arr_new;\n}\n\n$test_str = \"a1b2c3d4\";\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str = '';\n    $num = '';\n    for ($i = 0; $i < strlen($test_str); $i++) {\n        if (is_numeric($test_str[$i])) {\n            $num .= $test_str[$i];\n        } else {\n            $str .= $test_str[$i];\n        }\n    }\n    return $str . $num;\n}\necho move_num('a1b2c3d4e5f6g7h8i9j0');\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij1234567890",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $num_arr = array();\n    $str_arr = array();\n    foreach ($test_arr as $value) {\n        if (is_numeric($value)) {\n            array_push($num_arr, $value);\n        } else {\n            array_push($str_arr, $value);\n        }\n    }\n    $result_arr = array_merge($str_arr, $num_arr);\n    $result_str = implode($result_arr);\n    return $result_str;\n}\n\n$test_str = \"a1b2c3d4e5f6g7h8i9j0\";\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij1234567890",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str = \"\";\n    $num = \"\";\n    for ($i = 0; $i < strlen($test_str); $i++) {\n        if (is_numeric($test_str[$i])) {\n            $num .= $test_str[$i];\n        } else {\n            $str .= $test_str[$i];\n        }\n    }\n    return $str . $num;\n}\n\necho move_num(\"abcd1234efgh5678\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122840,
      "stdout": "abcdefgh12345678",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = array();\n    $char_arr = array();\n    foreach ($str_arr as $key => $value) {\n        if (is_numeric($value)) {\n            array_push($num_arr, $value);\n        } else {\n            array_push($char_arr, $value);\n        }\n    }\n    $result = implode(\"\", $char_arr) . implode(\"\", $num_arr);\n    return $result;\n}\n\n$test_str = \"a1b2c3d4\";\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $num_arr = array();\n    $str_arr = array();\n    foreach ($test_arr as $char) {\n        if (is_numeric($char)) {\n            array_push($num_arr, $char);\n        } else {\n            array_push($str_arr, $char);\n        }\n    }\n    $result = implode($str_arr) . implode($num_arr);\n    return $result;\n}\necho move_num(\"a1b2c3d4\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $arr = str_split($test_str);\n    $num = array();\n    $str = array();\n    foreach ($arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num[] = $value;\n        } else {\n            $str[] = $value;\n        }\n    }\n    $new_str = implode($str) . implode($num);\n    return $new_str;\n}\n\n$test_str = \"a1b2c3d4\";\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcd1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr = [];\n    foreach ($test_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr[] = $value;\n        }\n    }\n    $result = implode($str_arr) . implode($num_arr);\n    return $result;\n}\n\necho move_num(\"abc123\");\necho \"<br>\";\necho move_num(\"abcdef\");\necho \"<br>\";\necho move_num(\"123abc\");\necho \"<br>\";\necho move_num(\"\");\necho \"<br>\";\necho move_num(\"abc\");\necho \"<br>\";\necho move_num(\"123\");\necho \"<br>\";\necho move_num(\"abc123xyz\");\necho \"<br>\";\necho move_num(\"aa11b33\");\necho \"<br>\";\necho move_num(\"11aa33\");\necho \"<br>\";\necho move_num(\"abc123xyz\");\necho \"<br>\";\necho move_num(\"z987y\");\necho \"<br>\";\necho move_num(\"abc\");\necho \"<br>\";\necho move_num(\"xyz123\");\necho \"<br>\";\necho move_num(\"xyz\");\necho \"<br>\";\necho move_num(\"123\");\necho \"<br>\";\necho move_num(\"\");\necho \"<br>\";\necho move_num(\"12abc\");\necho \"<br>\";\necho move_num(\"abcd12\");\necho \"<br>\";\necho move_num(\"abcd12xyz\");\necho \"<br>\";\necho move_num(\"abcd12xyz\");\necho \"<br>\";\necho move_num(\"12xyz\");\necho \"<br>\";\necho move_num(\"12xyz\");\necho \"<br>\";\necho move_num(\"abcd12xyz\");\necho \"<br>\";\necho move_num(\"12xyz\");\necho \"<br>\";\necho move_num(\"abcd12xyz\");\necho \"<br>\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "\nParse error: syntax error, unexpected identifier \"I1love143you55three3000thousand\", expecting \",\" or \";\" in /tmp/tmpf9m2qwyj.php on line 73\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str_arr = str_split($test_str);\n    $num_arr = array();\n    $char_arr = array();\n    foreach ($str_arr as $char) {\n        if (is_numeric($char)) {\n            array_push($num_arr, $char);\n        } else {\n            array_push($char_arr, $char);\n        }\n    }\n    $result = implode($char_arr) . implode($num_arr);\n    return $result;\n}\n\necho move_num(\"abc123\");\necho \"\\n\";\necho move_num(\"abc\");\necho \"\\n\";\necho move_num(\"123\");\necho \"\\n\";\necho move_num(\"\");\necho \"\\n\";\necho move_num(\"a1b2c3\");\necho \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0\");\necho \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k\");\necho \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1\");\necho \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l\");\necho \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l2\");\necho \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l2m\");\necho \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l2m3\");\necho \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l2m3n\");\necho \"\\n\";\necho move_num(\"a1b2c3d4e5f6g7h8i9j0k1l2m3n4\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "\nParse error: syntax error, unexpected identifier \"I1love143you55three3000thousand\", expecting \")\" in /tmp/tmp6uhfms69.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $str = \"\";\n    $num = \"\";\n    for ($i = 0; $i < strlen($test_str); $i++) {\n        if (is_numeric($test_str[$i])) {\n            $num .= $test_str[$i];\n        } else {\n            $str .= $test_str[$i];\n        }\n    }\n    return $str . $num;\n}\necho move_num(\"a1b2c3d4e5f6g7h8i9j10\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij12345678910",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $num = '';\n    $str = '';\n    for ($i = 0; $i < strlen($test_str); $i++) {\n        if (is_numeric($test_str[$i])) {\n            $num .= $test_str[$i];\n        } else {\n            $str .= $test_str[$i];\n        }\n    }\n    return $str . $num;\n}\necho move_num('a1b2c3d4e5f6g7h8i9j10');\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij12345678910",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $num_arr = array();\n    $str_arr = array();\n    foreach ($test_arr as $key => $value) {\n        if (is_numeric($value)) {\n            array_push($num_arr, $value);\n        } else {\n            array_push($str_arr, $value);\n        }\n    }\n    $result = implode($str_arr) . implode($num_arr);\n    return $result;\n}\n\n$test_str = \"a1b2c3d4e5f6g7h8i9j10\";\necho move_num($test_str);\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefghij12345678910",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to move all the numbers to the end of the given string.\nfunction move_num($test_str) {\n    $test_arr = str_split($test_str);\n    $num_arr = [];\n    $str_arr = [];\n    foreach ($test_arr as $key => $value) {\n        if (is_numeric($value)) {\n            $num_arr[] = $value;\n        } else {\n            $str_arr[] = $value;\n        }\n    }\n    return implode($str_arr) . implode($num_arr);\n}\n\necho move_num(\"abcd1234efg\");\nfunction candidate(...$args) {\n    return move_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"I1love143you55three3000thousand\") !== \"Iloveyouthreethousand1143553000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Avengers124Assemble\") !== \"AvengersAssemble124\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Its11our12path13to14see15things16do17things\") !== \"Itsourpathtoseethingsdothings11121314151617\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122841,
      "stdout": "abcdefg1234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
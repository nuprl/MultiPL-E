{
  "name": "mbpp_395_first_non_repeating_character",
  "language": "php",
  "prompt": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_395_first_non_repeating_character.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n\t$str_len = strlen($str1);\n\tfor($i=0; $i<$str_len; $i++) {\n\t\t$char = $str1[$i];\n\t\tif(substr_count($str1, $char) == 1) {\n\t\t\treturn $char;\n\t\t}\n\t}\n\treturn null;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517375,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str = str_split($str1);\n    $count = array_count_values($str);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return 'No non-repeating character found';\n}\necho first_non_repeating_character('abcdabcd');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517375,
      "stdout": "No non-repeating character found\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa2ub48lt.php:19\nStack trace:\n#0 /tmp/tmpa2ub48lt.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpa2ub48lt.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_len = strlen($str1);\n    for ($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if (substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return null;\n}\n\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517375,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1_array = str_split($str1);\n    $str1_array_count = array_count_values($str1_array);\n    foreach ($str1_array_count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return null;\n}\n\necho first_non_repeating_character('aabbccddeeffgg');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $str1 = array_unique($str1);\n    $str1 = implode($str1);\n    $str1 = str_split($str1);\n    $str1 = array_values($str1);\n    return $str1[0];\n}\n\necho first_non_repeating_character(\"abcdefghija\");\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho first_non_repeating_character(\"go hang a salami, im a lasagna hog!\");\necho first_non_repeating_character(\"hello world, eh?\");\necho first_non_repeating_character(\"sTreSS\");\necho first_non_repeating_character(\"Go hang a salami I'm a lasagna hog!\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517375,
      "stdout": "atghsg\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8vf08wgc.php:24\nStack trace:\n#0 /tmp/tmp8vf08wgc.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp8vf08wgc.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str_len = strlen($str1);\n    $char_count = array();\n    for($i = 0; $i < $str_len; $i++) {\n        if(!array_key_exists($str1[$i], $char_count)) {\n            $char_count[$str1[$i]] = 1;\n        } else {\n            $char_count[$str1[$i]] += 1;\n        }\n    }\n    for($i = 0; $i < $str_len; $i++) {\n        if($char_count[$str1[$i]] == 1) {\n            return $str1[$i];\n        }\n    }\n    return 'No non-repeating character found';\n}\n\necho first_non_repeating_character('aabbccddeeff');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517375,
      "stdout": "No non-repeating character found\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0dz_4vl0.php:28\nStack trace:\n#0 /tmp/tmp0dz_4vl0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp0dz_4vl0.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    for ($i = 0; $i < strlen($str1); $i++) {\n        $char = $str1[$i];\n        if (substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return null;\n}\n\n$str1 = 'the quick brown fox jumps then quickly blow air';\necho first_non_repeating_character($str1);\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517375,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_len = strlen($str1);\n    for($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if(substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return null;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517375,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_arr = str_split($str1);\n    $count = array_count_values($str_arr);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517375,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmp80aw0_fo.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $arr = array();\n    foreach ($str1 as $key => $value) {\n        if (array_key_exists($value, $arr)) {\n            $arr[$value] += 1;\n        } else {\n            $arr[$value] = 1;\n        }\n    }\n    foreach ($arr as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $arr = str_split($str1);\n    $arr_count = array_count_values($arr);\n    foreach ($arr_count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return \"No non-repeating character found\";\n}\n\n$str1 = \"aabcd\";\necho first_non_repeating_character($str1);\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517375,
      "stdout": "b\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprkigr1cp.php:22\nStack trace:\n#0 /tmp/tmprkigr1cp.php(27): test()\n#1 {main}\n  thrown in /tmp/tmprkigr1cp.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_len = strlen($str1);\n    for($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if(substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return -1;\n}\n\n$str1 = 'abcdab';\necho first_non_repeating_character($str1);\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517375,
      "stdout": "c\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwx9ef90a.php:21\nStack trace:\n#0 /tmp/tmpwx9ef90a.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpwx9ef90a.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_len = strlen($str1);\n    for($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if(substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return null;\n}\n\n$str1 = 'the quick brown fox jumps then quickly blow air';\necho first_non_repeating_character($str1);\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517375,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1_array = str_split($str1);\n    $str1_array_unique = array_unique($str1_array);\n    $str1_array_unique_count = count($str1_array_unique);\n    $str1_array_unique_count_index = 0;\n    $str1_array_unique_count_index_value = '';\n    while ($str1_array_unique_count_index < $str1_array_unique_count) {\n        $str1_array_unique_count_index_value = $str1_array_unique[$str1_array_unique_count_index];\n        $str1_array_unique_count_index_value_count = substr_count($str1, $str1_array_unique_count_index_value);\n        if ($str1_array_unique_count_index_value_count == 1) {\n            return $str1_array_unique_count_index_value;\n        }\n        $str1_array_unique_count_index++;\n    }\n    return false;\n}\necho first_non_repeating_character('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517375,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpiezi623h.php on line 11\n\nDeprecated: substr_count(): Passing null to parameter #2 ($needle) of type string is deprecated in /tmp/tmpiezi623h.php on line 12\n\nFatal error: Uncaught ValueError: substr_count(): Argument #2 ($needle) cannot be empty in /tmp/tmpiezi623h.php:12\nStack trace:\n#0 /tmp/tmpiezi623h.php(12): substr_count('aabbccddeeffggh...', '')\n#1 /tmp/tmpiezi623h.php(20): first_non_repeating_character('aabbccddeeffggh...')\n#2 {main}\n  thrown in /tmp/tmpiezi623h.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character(\"abcdcd\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517375,
      "stdout": "a",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $arr1 = array();\n    foreach ($str1 as $key => $value) {\n        if (array_key_exists($value, $arr1)) {\n            $arr1[$value] += 1;\n        } else {\n            $arr1[$value] = 1;\n        }\n    }\n    foreach ($arr1 as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return '_';\n}\n\necho first_non_repeating_character('abcdabcd');\necho \"\\n\";\necho first_non_repeating_character('abcdabcdabcd');\necho \"\\n\";\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyziflskecznslkjfabe');\necho \"\\n\";\necho first_non_repeating_character('bcccccccccccccyb');\necho \"\\n\";\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyziflskecznslkjfabe');\necho \"\\n\";\necho first_non_repeating_character('bcccccccccccccyb');\necho \"\\n\";\necho first_non_repeating_character('xdnxxlvupzuwgigeqjggosgljuhliybkjpibyatofcjbfxwtalc');\necho \"\\n\";\necho first_non_repeating_character('ngrhhqbhnsipkcoqjyviikvxbxyphsnjpdxkhtadltsuxbfbrkof');\necho \"\\n\";\necho first_non_repeating_character('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaabcdefghijklmnopqrstuvwxyziflskecznslkjfabe');\necho \"\\n\";\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyziflskecznslkjfabe');\necho \"\\n\";\necho\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517375,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpjfk67q_8.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $len = strlen($str1);\n    for($i=0; $i<$len; $i++) {\n        if(substr_count($str1, $str1[$i]) == 1) {\n            return $str1[$i];\n        }\n    }\n    return 'No non-repeating character found';\n}\n\necho first_non_repeating_character('aabbccddeeffgg');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517375,
      "stdout": "No non-repeating character found\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd6n6ezhe.php:20\nStack trace:\n#0 /tmp/tmpd6n6ezhe.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpd6n6ezhe.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str = strtolower($str1);\n    $len = strlen($str);\n    for ($i = 0; $i < $len; $i++) {\n        if (substr_count($str, $str[$i]) == 1) {\n            return $str[$i];\n        }\n    }\n    return \"No non-repeating character found\";\n}\n\necho first_non_repeating_character(\"abcab\");\necho \"\\n\";\necho first_non_repeating_character(\"abab\");\necho \"\\n\";\necho first_non_repeating_character(\"aabbbc\");\necho \"\\n\";\necho first_non_repeating_character(\"aabbdbc\");\n\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517375,
      "stdout": "c\nNo non-repeating character found\nc\nd\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwfnkw79q.php:27\nStack trace:\n#0 /tmp/tmpwfnkw79q.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpwfnkw79q.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str = str_split($str1);\n    $count = array_count_values($str);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\n\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517375,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        $char = $str1[$i];\n        if (substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return false;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517375,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpiff0bpo2.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $str1 = array_unique($str1);\n    $str1 = implode($str1);\n    $str1 = str_split($str1);\n    $str1 = array_values($str1);\n    return $str1[0];\n}\n\necho first_non_repeating_character('aabbccddeeffgg');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "a\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7wiv7v3q.php:19\nStack trace:\n#0 /tmp/tmp7wiv7v3q.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp7wiv7v3q.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_arr = str_split($str1);\n    $count = array_count_values($str_arr);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return '-1';\n}\n\necho first_non_repeating_character('abcdabcd');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "-1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv973aad7.php:20\nStack trace:\n#0 /tmp/tmpv973aad7.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpv973aad7.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_len = strlen($str1);\n    for($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if(substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return null;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\n\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return false;\n}\n\necho first_non_repeating_character('aabbccddeeffgg');\n\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsndfdc84.php:22\nStack trace:\n#0 /tmp/tmpsndfdc84.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpsndfdc84.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str = str_split($str1);\n    $count = array_count_values($str);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_arr = str_split($str1);\n    $str_arr_count = array_count_values($str_arr);\n    foreach($str_arr_count as $key => $value) {\n        if($value == 1) {\n            return $key;\n        }\n    }\n    return \"No non-repeating character found\";\n}\n\necho first_non_repeating_character(\"aabbccddeeffgg\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "No non-repeating character found\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppk0joscp.php:20\nStack trace:\n#0 /tmp/tmppk0joscp.php(25): test()\n#1 {main}\n  thrown in /tmp/tmppk0joscp.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character(\"abcdefghija\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"hello world, eh?\");\necho \"\\n\";\necho first_non_repeating_character(\"sTreSS\");\necho \"\\n\";\necho first_non_repeating_character(\"Go hang a salami, I'm a lasagna hog!\");\necho \"\\n\";\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "b\nf\nw\ns\nG\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $arr = array_count_values($str1);\n    foreach ($arr as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character(\"aabbccddeeffgg\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character(\"abcdabcd\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $arr = array();\n    foreach($str1 as $char) {\n        if(!array_key_exists($char, $arr)) {\n            $arr[$char] = 1;\n        } else {\n            $arr[$char] += 1;\n        }\n    }\n    foreach($arr as $key => $value) {\n        if($value == 1) {\n            return $key;\n        }\n    }\n    return '_';\n}\n\necho first_non_repeating_character('stress');\necho \"\\n\";\necho first_non_repeating_character('moonmen');\necho \"\\n\";\necho first_non_repeating_character('abba');\necho \"\\n\";\necho first_non_repeating_character('aa');\necho \"\\n\";\necho first_non_repeating_character('');\necho \"\\n\";\necho first_non_repeating_character('~><#~><');\necho \"\\n\";\necho first_non_repeating_character('hello world, eh?');\necho \"\\n\";\necho first_non_repeating_character('sTreSS');\necho \"\\n\";\necho first_non_repeating_character('Go hang a salami, I\\'m a lasagna hog!');\necho \"\\n\";\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "t\ne\n_\n_\n\n#\nw\nt\n,\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf6jq9f11.php:45\nStack trace:\n#0 /tmp/tmpf6jq9f11.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpf6jq9f11.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n  $str_arr = str_split($str1);\n  $count_arr = array_count_values($str_arr);\n  foreach ($count_arr as $key => $value) {\n    if ($value == 1) {\n      return $key;\n    }\n  }\n  return false;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "f\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpddatx3nz.php:20\nStack trace:\n#0 /tmp/tmpddatx3nz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpddatx3nz.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $arr1 = str_split($str1);\n    $arr2 = array_count_values($arr1);\n    foreach ($arr2 as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character('aabbccddeeff');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $arr = array();\n    foreach ($str1 as $key => $value) {\n        if (in_array($value, $arr)) {\n            unset($str1[$key]);\n        } else {\n            $arr[] = $value;\n        }\n    }\n    return $str1[0];\n}\n\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyz');\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho first_non_repeating_character('go hang a salami im a lasagna hog');\necho first_non_repeating_character('i am sick today i am sick today');\necho first_non_repeating_character('hello world hello world');\necho first_non_repeating_character('hello world hello world');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "attgihh\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphvxkw7pq.php:29\nStack trace:\n#0 /tmp/tmphvxkw7pq.php(34): test()\n#1 {main}\n  thrown in /tmp/tmphvxkw7pq.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $str1 = array_unique($str1);\n    $str1 = array_values($str1);\n    return $str1[0];\n}\necho first_non_repeating_character(\"aabbccddeeffgg\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "a\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf2j54_c4.php:16\nStack trace:\n#0 /tmp/tmpf2j54_c4.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpf2j54_c4.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $len = strlen($str1);\n    $char = '';\n    $count = 0;\n    for ($i = 0; $i < $len; $i++) {\n        $char = $str1[$i];\n        $count = substr_count($str1, $char);\n        if ($count == 1) {\n            return $char;\n        }\n    }\n    return '-1';\n}\n\necho first_non_repeating_character('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "-1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxquqexij.php:24\nStack trace:\n#0 /tmp/tmpxquqexij.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpxquqexij.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $len = strlen($str1);\n    $char = '';\n    for ($i = 0; $i < $len; $i++) {\n        if (substr_count($str1, $str1[$i]) == 1) {\n            $char = $str1[$i];\n            break;\n        }\n    }\n    return $char;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "\nParse error: syntax error, unexpected string content \"the quick brown fox jumps then...\" in /tmp/tmp__0_znn5.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_arr = str_split($str1);\n    $count = array_count_values($str_arr);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\n\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str = str_split($str1);\n    $count = array_count_values($str);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $len = strlen($str1);\n    for($i=0;$i<$len;$i++) {\n        $char = $str1[$i];\n        if(substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return null;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str = str_split($str1);\n    $count = array_count_values($str);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character(\"abcdefghija\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "b",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_arr = str_split($str1);\n    $count_arr = array_count_values($str_arr);\n    foreach ($count_arr as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return \"No non-repeating character found\";\n}\n\necho first_non_repeating_character(\"abcdcd\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdef\");\necho \"\\n\";\necho first_non_repeating_character(\"aabbcc\");\necho \"\\n\";\necho first_non_repeating_character(\"aabbccddeeff\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyz\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxy\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "\nParse error: syntax error, unexpected identifier \"abcabc\", expecting \")\" in /tmp/tmpqu4hwnt5.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str_len = strlen($str1);\n    $i = 0;\n    while ($i < $str_len) {\n        $j = 0;\n        $count = 0;\n        while ($j < $str_len) {\n            if ($str1[$i] == $str1[$j]) {\n                $count++;\n            }\n            $j++;\n        }\n        if ($count == 1) {\n            return $str1[$i];\n        }\n        $i++;\n    }\n    return \"No non-repeating character found\";\n}\n\necho first_non_repeating_character(\"abcdefghija\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"go hang a salami im a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i am sick today\");\necho \"\\n\";\necho first_non_repeating_character(\"hello world hello\");\necho \"\\n\";\necho first_non_repeating_character(\"hello world hello\");\necho \"\\n\";\necho first_non_repeating_character(\"z\");\necho \"\\n\";\necho first_non_repeating_character(\"bcb\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyziflskecznslkjfabe\");\necho \"\\n\";\necho first_non_repeating_character(\"bcccccccccccccyb\");\necho \"\\n\";\necho first_non_repeating_character(\"\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyziflskecznslkjfabe\");\necho \"\\n\";\necho first_non_repeating_character(\"bcccccccccccccyb\");\necho \"\\n\";\necho first_non_repeating_character(\"\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuv\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "\nParse error: syntax error, unexpected identifier \"abcabc\", expecting \")\" in /tmp/tmpg5sfoy_2.php on line 58\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = str_split($str1);\n    $str2 = array_unique($str1);\n    $str3 = array_diff_assoc($str1, $str2);\n    $str4 = array_diff_key($str1, $str3);\n    $str5 = array_values($str4);\n    return $str5[0];\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "t\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gigxq67.php:18\nStack trace:\n#0 /tmp/tmp4gigxq67.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4gigxq67.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_len = strlen($str1);\n    for($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if(substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return null;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517375,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = str_split($str1);\n    $str2 = array_count_values($str1);\n    foreach ($str2 as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\necho first_non_repeating_character('abcdabcd');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\n\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_len = strlen($str1);\n    for($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if(substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return null;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected string content \"the\" in /tmp/tmpmvpvcfx3.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = preg_replace('/\\s+/', '', $str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return 'No non-repeating character found';\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmpxi4tud3f.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return 'No non-repeating character';\n}\n\necho first_non_repeating_character('aabbccddeeff');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "No non-repeating character\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9zih6yb5.php:21\nStack trace:\n#0 /tmp/tmp9zih6yb5.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp9zih6yb5.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character(\"abcdabcd\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_len = strlen($str1);\n    for($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if(substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return null;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\n\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = str_split($str1);\n    $str2 = array_count_values($str1);\n    foreach ($str2 as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $len = strlen($str1);\n    $count = 0;\n    for($i=0; $i<$len; $i++) {\n        $count = 0;\n        for($j=0; $j<$len; $j++) {\n            if($str1[$i] == $str1[$j]) {\n                $count++;\n            }\n        }\n        if($count == 1) {\n            return $str1[$i];\n        }\n    }\n}\n\n$str1 = \"Hello World\";\necho \"First non-repeating character in '$str1' is: \".first_non_repeating_character($str1);\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "First non-repeating character in 'Hello World' is: h",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str = str_split($str1);\n    $count = array_count_values($str);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repe\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmpwuhki1ko.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n  $str1 = strtolower($str1);\n  $str1 = str_split($str1);\n  $arr = array();\n  foreach ($str1 as $key => $value) {\n    if (array_key_exists($value, $arr)) {\n      $arr[$value]++;\n    } else {\n      $arr[$value] = 1;\n    }\n  }\n  foreach ($arr as $key => $value) {\n    if ($value == 1) {\n      return $key;\n    }\n  }\n}\necho first_non_repeating_character('abcdabcd');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str_len = strlen($str1);\n    $char_count = array();\n    for($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if(array_key_exists($char, $char_count)) {\n            $char_count[$char] += 1;\n        } else {\n            $char_count[$char] = 1;\n        }\n    }\n    for($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if($char_count[$char] == 1) {\n            return $char;\n        }\n    }\n    return '_';\n}\n\necho first_non_repeating_character('abcdefghija') . \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air') . \"\\n\";\necho first_non_repeating_character('go hang a salami im a lasagna hog') . \"\\n\";\necho first_non_repeating_character('i am sick today i am sick tomorrow') . \"\\n\";\necho first_non_repeating_character('hello world hello_world') . \"\\n\";\necho first_non_repeating_character('hello world hello world') . \"\\n\";\necho first_non_repeating_character('4444444444abcdefghijklmnopqrstuvwxyz1111111111') . \"\\n\";\necho first_non_repeating_character('4444444444aaaaaaaaaa4444444444') . \"\\n\";\necho first_non_repeating_character('44444444444444444444444444444444444444444444444444') . \"\\n\";\necho first_non_repeating_character('aaaaaaaaaa4444444444abcdefghijklmnopqrstuvwxyz1111111111') . \"\\n\";\necho first_non_repeating_character('aaaaaaaaaa444444444444444444444444444444444444444444\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected string content \"aaaaaaaaaa44444444444444444444...\" in /tmp/tmpx_arywmg.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $len = strlen($str1);\n    $char = '';\n    $count = 0;\n    for ($i = 0; $i < $len; $i++) {\n        $char = $str1[$i];\n        if (substr_count($str1, $char) == 1) {\n            $count++;\n            break;\n        }\n    }\n    if ($count == 0) {\n        return 'No non repeated character found';\n    } else {\n        return $char;\n    }\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmpx2ag1osz.php on line 51\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str = str_split($str1);\n    $count = array_count_values($str);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = str_split($str1);\n    $str2 = array_count_values($str1);\n    foreach ($str2 as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str_len = strlen($str1);\n    $char_count = array();\n    for($i=0; $i<$str_len; $i++) {\n        $char = $str1[$i];\n        if(array_key_exists($char, $char_count)) {\n            $char_count[$char]++;\n        } else {\n            $char_count[$char] = 1;\n        }\n    }\n    foreach($char_count as $key => $value) {\n        if($value == 1) {\n            return $key;\n        }\n    }\n    return '_';\n}\n\necho first_non_repeating_character('abcdabcd');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "_\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp67lgkzg3.php:29\nStack trace:\n#0 /tmp/tmp67lgkzg3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp67lgkzg3.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_len = strlen($str1);\n    for($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if(substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return null;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517375,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\n\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $str2 = array_count_values($str1);\n    foreach ($str2 as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return 'No non-repeating character found.';\n}\necho first_non_repeating_character('abcdefghija');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('go hang a salami, im a lasagna hog!');\necho \"\\n\";\necho first_non_repeating_character('hello world, eh?');\necho \"\\n\";\necho first_non_repeating_character('sTreSS');\necho \"\\n\";\necho first_non_repeating_character('Go hang a salami, I\\'m a lasagna hog!');\necho \"\\n\";\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "b\nf\n,\nw\nt\n,\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx8lrrn6t.php:31\nStack trace:\n#0 /tmp/tmpx8lrrn6t.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpx8lrrn6t.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if (substr_count($str1, $str1[$i]) == 1) {\n            return $str1[$i];\n        }\n    }\n    return 'No non-repeating character found';\n}\n\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyy');\necho \"\\n\";\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyz');\necho \"\\n\";\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');\necho \"\\n\";\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789');\necho \"\\n\";\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789~!@#$%^&*()_+`-=[]\\{}|;\\':\",./<>?');\necho \"\\n\";\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789~!@#$%^&*()_+`-=[]\\{}|;\\':\",./<>?abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789~!@#$%^&*()_+`-=[]\\{}|;\\':\",./<>?');\necho \"\\n\";\necho first\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmpqb1degbv.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str = str_split($str1);\n    $len = count($str);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i == $len - 1) {\n            return $str[$i];\n        }\n        if ($str[$i] != $str[$i + 1]) {\n            return $str[$i];\n        }\n    }\n}\n\necho first_non_repeating_character('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz');\n\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "a\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf6rdxf7i.php:23\nStack trace:\n#0 /tmp/tmpf6rdxf7i.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpf6rdxf7i.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str = str_split($str1);\n    $count = array_count_values($str);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $str1 = array_count_values($str1);\n    foreach ($str1 as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected identifier \"abcabc\", expecting \",\" or \";\" in /tmp/tmpmek465wb.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return null;\n}\n\necho first_non_repeating_character('abcdefghija');\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho first_non_repeating_character('go hang a salami, im a lasagna hog!');\necho first_non_repeating_character('hello world, eh?');\necho first_non_repeating_character('sTreSS');\necho first_non_repeating_character('Go hang a salami, I\\'m a lasagna hog!');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "bf,wt,",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1_array = str_split($str1);\n    $count = array_count_values($str1_array);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character(\"abcab\");\necho \"\\n\";\necho first_non_repeating_character(\"abab\");\necho \"\\n\";\necho first_non_repeating_character(\"aabbbc\");\necho \"\\n\";\necho first_non_repeating_character(\"aabbdbc\");\necho \"\\n\";\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "c\n\nc\nd\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return false;\n}\n\necho first_non_repeating_character('abcdabcdabcd');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsqc2c2e1.php:21\nStack trace:\n#0 /tmp/tmpsqc2c2e1.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpsqc2c2e1.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $arr = array();\n    foreach($str1 as $char) {\n        if(!array_key_exists($char, $arr)) {\n            $arr[$char] = 1;\n        } else {\n            $arr[$char] += 1;\n        }\n    }\n    foreach($arr as $key => $value) {\n        if($value == 1) {\n            return $key;\n        }\n    }\n    return 'No non-repeating characters';\n}\n\necho first_non_repeating_character('aabbcddeeff');\n\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "c\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptg4r0u8b.php:29\nStack trace:\n#0 /tmp/tmptg4r0u8b.php(34): test()\n#1 {main}\n  thrown in /tmp/tmptg4r0u8b.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $str1 = array_count_values($str1);\n    foreach ($str1 as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character('aabbccddeeff');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyziflskecznslkjfabe\");\necho \"\\n\";\necho first_non_repeating_character(\"DBCABA\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyziflskecznslkjfabe\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyziflskecznslkjfabe\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyziflskecznslkjfabe\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyziflskecznslkjfabe\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyziflskecznslkjfabe\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyziflskecznslkjfabe\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyziflskecznslkjfabe\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyziflskecznslkjfabe\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyziflskecznslkjfabe\");\necho \"\\n\";\necho first_non_repeating_character(\"abc\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected identifier \"abcabc\", expecting \")\" in /tmp/tmpf2ikxi4k.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = str_split($str1);\n    $count = count($str1);\n    for ($i = 0; $i < $count; $i++) {\n        if (substr_count($str1[$i], $str1) == 1) {\n            return $str1[$i];\n        }\n    }\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected string content \"the quick\" in /tmp/tmp8coglpr4.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str = str_split($str1);\n    $count = array_count_values($str);\n    foreach($count as $key => $value) {\n        if($value == 1) {\n            return $key;\n        }\n    }\n}\necho first_non_repeating_character('abcdabcd');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n  $str_len = strlen($str1);\n  for ($i = 0; $i < $str_len; $i++) {\n    $char = $str1[$i];\n    if (substr_count($str1, $char) == 1) {\n      return $char;\n    }\n  }\n  return \"No non-repeating character found\";\n}\n\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air.\");\necho \"\\n\";\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "f\nf\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj34b0eyo.php:23\nStack trace:\n#0 /tmp/tmpj34b0eyo.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpj34b0eyo.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if (substr_count($str1, $str1[$i]) == 1) {\n            return $str1[$i];\n        }\n    }\n    return false;\n}\n\necho first_non_repeating_character(\"aabbccddeeffgghh\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppyq2pazb.php:20\nStack trace:\n#0 /tmp/tmppyq2pazb.php(25): test()\n#1 {main}\n  thrown in /tmp/tmppyq2pazb.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    for ($i = 0; $i < strlen($str1); $i++) {\n        $char = $str1[$i];\n        if (substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return null;\n}\n\n$str1 = \"the quick brown fox jumps then quickly blow air\";\necho first_non_repeating_character($str1);\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $str1 = array_unique($str1);\n    $str1 = array_values($str1);\n    return $str1[0];\n}\n\necho first_non_repeating_character(\"abcdefghija\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"go hang a salami i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmp2muuwabk.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_arr = str_split($str1);\n    $count_arr = array_count_values($str_arr);\n    foreach($count_arr as $key => $val) {\n        if($val == 1) {\n            return $key;\n        }\n    }\n    return \"All characters are repeating\";\n}\n\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "f\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu0jcum5s.php:20\nStack trace:\n#0 /tmp/tmpu0jcum5s.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpu0jcum5s.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_len = strlen($str1);\n    for($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if(substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return null;\n}\n\n$str1 = \"the quick brown fox jumps then quickly blow air\";\necho \"The given string is: $str1 <br>\";\necho \"The first non-repeating character is: \" . first_non_repeating_character($str1);\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "The given string is: the quick brown fox jumps then quickly blow air <br>The first non-repeating character is: f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $len = strlen($str1);\n    $char = '';\n    for ($i = 0; $i < $len; $i++) {\n        if (substr_count($str1, $str1[$i]) == 1) {\n            $char = $str1[$i];\n            break;\n        }\n    }\n    return $char;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "f\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxqwydjoa.php:22\nStack trace:\n#0 /tmp/tmpxqwydjoa.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpxqwydjoa.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str_len = strlen($str1);\n    $char_count = array();\n    for ($i = 0; $i < $str_len; $i++) {\n        if (isset($char_count[$str1[$i]])) {\n            $char_count[$str1[$i]]++;\n        } else {\n            $char_count[$str1[$i]] = 1;\n        }\n    }\n    foreach ($char_count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return 'No non-repeating character found';\n}\n\necho first_non_repeating_character('abcdabcd');\necho first_non_repeating_character('abcd');\necho first_non_repeating_character('aabbcc');\necho first_non_repeating_character('aabbccddeeff');\necho first_non_repeating_character('aabbccddefff');\necho first_non_repeating_character('aabbccddefffg');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "No non-repeating character foundaNo non-repeating character foundNo non-repeating character foundee\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1wt1ukff.php:33\nStack trace:\n#0 /tmp/tmp1wt1ukff.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp1wt1ukff.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str_len = strlen($str1);\n    for ($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if (substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return false;\n}\n\necho first_non_repeating_character('aabbccddeeffgg');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgga');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffggaa');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffggaaa');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffggaaaa');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffggaaaaa');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffggaaaaaa');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffggaaaaaaa');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffggaaaaaaaa');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffggaaaaaaaaa');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffggaaaaaaaaaa');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffggaaaaaaaaaaa');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffggaaaaaaaaaaaa');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffggaaaaaaaaaaaaa');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffggaaaaaaaaaaaaaa');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffggaaaaaaaaaaaaaaa\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected string content \"aabbccddeeffggaaaaaaaaaaaaaaa\" in /tmp/tmpuyya0vld.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $arr = array();\n    foreach ($str1 as $key => $value) {\n        if (in_array($value, $arr)) {\n            unset($str1[$key]);\n        } else {\n            $arr[] = $value;\n        }\n    }\n    return $str1[0];\n}\necho first_non_repeating_character('aabbccddeeff');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "a\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_maef7v9.php:22\nStack trace:\n#0 /tmp/tmp_maef7v9.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp_maef7v9.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $len = strlen($str1);\n    $char = '';\n    $count = 0;\n    for ($i = 0; $i < $len; $i++) {\n        $count = 0;\n        for ($j = 0; $j < $len; $j++) {\n            if ($str1[$i] == $str1[$j]) {\n                $count++;\n            }\n        }\n        if ($count == 1) {\n            $char = $str1[$i];\n            break;\n        }\n    }\n    return $char;\n}\n\n$str1 = 'aabbccddeeffgg';\necho first_non_repeating_character($str1);\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpolk6qcvc.php:30\nStack trace:\n#0 /tmp/tmpolk6qcvc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpolk6qcvc.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return false;\n}\necho first_non_repeating_character('aabbccddeeff');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwwkt5py_.php:20\nStack trace:\n#0 /tmp/tmpwwkt5py_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpwwkt5py_.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $len = strlen($str1);\n    $count = 0;\n    for($i = 0; $i < $len; $i++) {\n        $count = 0;\n        for($j = 0; $j < $len; $j++) {\n            if($str1[$i] == $str1[$j]) {\n                $count++;\n            }\n        }\n        if($count == 1) {\n            return $str1[$i];\n        }\n    }\n    return \"No non-repeating character found\";\n}\n\necho first_non_repeating_character(\"abcdefghija\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"go hang a salami, i'm a lasagna hog!\");\necho \"\\n\";\necho first_non_repeating_character(\"hello world, eh?\");\necho \"\\n\";\necho first_non_repeating_character(\"sTreSS\");\necho \"\\n\";\necho first_non_repeating_character(\"Go hang a salami, I'm a lasagna hog!\");\necho \"\\n\";\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "b\nf\n,\nw\nt\n,\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt4tw9lop.php:38\nStack trace:\n#0 /tmp/tmpt4tw9lop.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpt4tw9lop.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $count = array();\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if (isset($count[$str1[$i]])) {\n            $count[$str1[$i]]++;\n        } else {\n            $count[$str1[$i]] = 1;\n        }\n    }\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return false;\n}\n\necho first_non_repeating_character('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm0212uc1.php:27\nStack trace:\n#0 /tmp/tmpm0212uc1.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpm0212uc1.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $str2 = array_count_values($str1);\n    foreach ($str2 as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return '-1';\n}\n\necho first_non_repeating_character('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzzaa');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzzaaabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzzaaabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzzaaabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzzaaabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzzaaabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzzaaabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgghhiijjkkllmmnnooppqqr\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected string content \"aabbccddeeffgghhiijjkkllmmnnoo...\" in /tmp/tmp0p1cbf09.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        $char = $str1[$i];\n        if (substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return \"\";\n}\n\necho first_non_repeating_character(\"abcab\");\necho first_non_repeating_character(\"abcabc\");\necho first_non_repeating_character(\"abcabcd\");\necho first_non_repeating_character(\"abcabcdef\");\necho first_non_repeating_character(\"abcabcdefa\");\necho first_non_repeating_character(\"abcabcdefab\");\necho first_non_repeating_character(\"abcabcdefabc\");\necho first_non_repeating_character(\"abcabcdefabcd\");\necho first_non_repeating_character(\"abcabcdefabcde\");\necho first_non_repeating_character(\"abcabcdefabcdef\");\necho first_non_repeating_character(\"abcabcdefabcdefa\");\necho first_non_repeating_character(\"abcabcdefabcdefab\");\necho first_non_repeating_character(\"abcabcdefabcdefabc\");\necho first_non_repeating_character(\"abcabcdefabcdefabcd\");\necho first_non_repeating_character(\"abcabcdefabcdefabcde\");\necho first_non_repeating_character(\"abcabcdefabcdefabcdef\");\necho first_non_repeating_character(\"abcabcdefabcdefabcdefa\");\necho first_non_repeating_character(\"abcabcdefabcdefabcdefab\");\necho first_non_repeating_character(\"abcabcdefabcdefabcdefabc\");\necho first_non_repeating_character(\"abcabcdefabcdefabcdefabcd\");\necho first_non_repeating_character(\"abcabcdefabcdefabcdefabcde\");\necho first_non_repeating_character(\"abcabcdefabcdefabcdefabcdef\");\necho first_non_repeating_character(\"abcabcdefabcdefabcdefabcdefa\");\necho first_non\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmpax9lnvr1.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return '_';\n}\n\necho first_non_repeating_character('stress');\necho \"\\n\";\necho first_non_repeating_character('moonmen');\necho \"\\n\";\necho first_non_repeating_character('abba');\necho \"\\n\";\necho first_non_repeating_character('aa');\necho \"\\n\";\necho first_non_repeating_character('~><#~><');\necho \"\\n\";\necho first_non_repeating_character('hello world, eh?');\necho \"\\n\";\necho first_non_repeating_character('sTreSS');\necho \"\\n\";\necho first_non_repeating_character('Go hang a salami, I\\'m a lasagna hog!');\necho \"\\n\";\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "t\ne\n_\n_\n#\nw\nt\n,\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9btu13tz.php:36\nStack trace:\n#0 /tmp/tmp9btu13tz.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp9btu13tz.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n\t$str1 = strtolower($str1);\n\t$str1 = str_split($str1);\n\t$count = array_count_values($str1);\n\tforeach ($count as $key => $value) {\n\t\tif ($value == 1) {\n\t\t\treturn $key;\n\t\t}\n\t}\n\treturn false;\n}\n\necho first_non_repeating_character('aabbccddeeffgg');\n\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsqea7elv.php:22\nStack trace:\n#0 /tmp/tmpsqea7elv.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpsqea7elv.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $arr = array();\n    foreach ($str1 as $char) {\n        if (array_key_exists($char, $arr)) {\n            $arr[$char] += 1;\n        } else {\n            $arr[$char] = 1;\n        }\n    }\n    foreach ($arr as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return \"No non-repeating character found\";\n}\n\necho first_non_repeating_character(\"abcdcd\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "a\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7qcdrced.php:28\nStack trace:\n#0 /tmp/tmp7qcdrced.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7qcdrced.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $len = strlen($str1);\n    $char = '';\n    for($i = 0; $i < $len; $i++) {\n        if(substr_count($str1, $str1[$i]) == 1) {\n            $char = $str1[$i];\n            break;\n        }\n    }\n    return $char;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "f\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4zf0duhr.php:22\nStack trace:\n#0 /tmp/tmp4zf0duhr.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp4zf0duhr.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return \"No non-repeating character found\";\n}\n\necho first_non_repeating_character(\"aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "No non-repeating character found\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpejc0aqhm.php:21\nStack trace:\n#0 /tmp/tmpejc0aqhm.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpejc0aqhm.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $arr = array();\n    foreach ($str1 as $key => $value) {\n        if (array_key_exists($value, $arr)) {\n            $arr[$value] += 1;\n        } else {\n            $arr[$value] = 1;\n        }\n    }\n    foreach ($arr as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character('aabbccddeeff');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $arr1 = str_split($str1);\n    $arr2 = array_count_values($arr1);\n    foreach ($arr2 as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\n$str1 = \"abcdefghija\";\necho first_non_repeating_character($str1);\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "b",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return 'No non-repeating character found';\n}\n\necho first_non_repeating_character('abcdabcd');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "No non-repeating character found\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91i149rt.php:21\nStack trace:\n#0 /tmp/tmp91i149rt.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp91i149rt.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_len = strlen($str1);\n    for($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if(substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return null;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\n\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n  $str1 = strtolower($str1);\n  $str_len = strlen($str1);\n  $char_count = array();\n  for ($i = 0; $i < $str_len; $i++) {\n    $char = $str1[$i];\n    if (array_key_exists($char, $char_count)) {\n      $char_count[$char] += 1;\n    } else {\n      $char_count[$char] = 1;\n    }\n  }\n  foreach ($char_count as $key => $value) {\n    if ($value == 1) {\n      return $key;\n    }\n  }\n  return '_';\n}\n\n$str1 = 'abcdefghija';\necho first_non_repeating_character($str1);\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "b\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppzrd_95c.php:30\nStack trace:\n#0 /tmp/tmppzrd_95c.php(35): test()\n#1 {main}\n  thrown in /tmp/tmppzrd_95c.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $str1 = array_count_values($str1);\n    foreach ($str1 as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\necho first_non_repeating_character('aabbccddeeff');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character(\"abcdefghija\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"happy\");\necho \"\\n\";\necho first_non_repeating_character(\"Python\");\necho \"\\n\";\necho first_non_repeating_character(\"PHP\");\necho \"\\n\";\necho first_non_repeating_character(\"Java\");\necho \"\\n\";\necho first_non_repeating_character(\"C\");\necho \"\\n\";\necho first_non_repeating_character(\"Go\");\necho \"\\n\";\necho first_non_repeating_character(\"C++\");\necho \"\\n\";\necho first_non_repeating_character(\"C#\");\necho \"\\n\";\necho first_non_repeating_character(\"R\");\necho \"\\n\";\necho first_non_repeating_character(\"Swift\");\necho \"\\n\";\necho first_non_repeating_character(\"Scala\");\necho \"\\n\";\necho first_non_repeating_character(\"Kotlin\");\necho \"\\n\";\necho first_non_repeating_character(\"Ruby\");\necho \"\\n\";\necho first_non_repeating_character(\"Rust\");\necho \"\\n\";\necho first_non_repeating_character(\"Objective-C\");\necho \"\\n\";\necho first_non_repeating_character(\"Elixir\");\necho \"\\n\";\necho first_non_repeating_character(\"Clojure\");\necho \"\\n\";\necho first_non_repeating_character(\"Erlang\");\necho \"\\n\";\necho first_non_repeating_character(\"Crystal\");\necho \"\\n\";\necho first_non_repeating_character(\"Julia\");\necho \"\\n\";\necho first_non_repeating_character(\"Has\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected identifier \"abcabc\", expecting \")\" in /tmp/tmpn_3qrbkt.php on line 64\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1_array = str_split($str1);\n    $str1_array_count = array_count_values($str1_array);\n    foreach ($str1_array_count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyz\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "a",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_arr = str_split($str1);\n    $count = array_count_values($str_arr);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return '-1';\n}\n\necho first_non_repeating_character('aabbccddeeffgg');\n\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "-1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi620bd78.php:21\nStack trace:\n#0 /tmp/tmpi620bd78.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpi620bd78.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = str_split($str1);\n    $str2 = array_unique($str1);\n    $result = array_diff_assoc($str1, $str2);\n    $key = key($result);\n    return $str1[$key];\n}\necho first_non_repeating_character('abcdab');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "a\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplifvmyfw.php:16\nStack trace:\n#0 /tmp/tmplifvmyfw.php(21): test()\n#1 {main}\n  thrown in /tmp/tmplifvmyfw.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $str1 = array_count_values($str1);\n    foreach ($str1 as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\necho first_non_repeating_character('aabbcddeeff');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "c",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return '-1';\n}\n\n$str1 = 'abcdabcd';\necho first_non_repeating_character($str1);\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "-1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjdm5gcnz.php:22\nStack trace:\n#0 /tmp/tmpjdm5gcnz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpjdm5gcnz.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character('aabbccddeeffgg');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return '_';\n}\n\necho first_non_repeating_character('stress');\necho \"\\n\";\necho first_non_repeating_character('moonmen');\necho \"\\n\";\necho first_non_repeating_character('abba');\necho \"\\n\";\necho first_non_repeating_character('aa');\necho \"\\n\";\necho first_non_repeating_character('~><#~><');\necho \"\\n\";\necho first_non_repeating_character('hello world, eh?');\necho \"\\n\";\necho first_non_repeating_character('sTreSS');\necho \"\\n\";\necho first_non_repeating_character('Go hang a salami, I\\'m a lasagna hog!');\necho \"\\n\";\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "t\ne\n_\n_\n#\nw\nt\n,\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9btu13tz.php:36\nStack trace:\n#0 /tmp/tmp9btu13tz.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp9btu13tz.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $str1 = array_count_values($str1);\n    foreach ($str1 as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\necho first_non_repeating_character(\"aabbccddeeffgg\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if (substr_count($str1, $str1[$i]) == 1) {\n            return $str1[$i];\n        }\n    }\n    return 'No non-repeating characters found!';\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\n\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "f\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxzzztg88.php:21\nStack trace:\n#0 /tmp/tmpxzzztg88.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpxzzztg88.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $str1 = array_count_values($str1);\n    foreach ($str1 as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character('abcdefghija');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('go hang a salami, im a lasagna hog!');\necho \"\\n\";\necho first_non_repeating_character('hello world, eh?');\necho \"\\n\";\necho first_non_repeating_character('sTreSS');\necho \"\\n\";\necho first_non_repeating_character('moonmen');\necho \"\\n\";\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "b\nf\n,\nw\nt\ne\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_arr = str_split($str1);\n    $arr_len = count($str_arr);\n    $char_count = array();\n    for ($i = 0; $i < $arr_len; $i++) {\n        if (array_key_exists($str_arr[$i], $char_count)) {\n            $char_count[$str_arr[$i]] += 1;\n        } else {\n            $char_count[$str_arr[$i]] = 1;\n        }\n    }\n    foreach ($char_count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return 'No non-repeating character found';\n}\n\necho first_non_repeating_character('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "No non-repeating character found\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnygclthg.php:28\nStack trace:\n#0 /tmp/tmpnygclthg.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpnygclthg.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return false;\n}\n\necho first_non_repeating_character(\"aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz\");\necho \"\\n\";\necho first_non_repeating_character(\"aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzzaa\");\necho \"\\n\";\necho first_non_repeating_character(\"aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzzaaabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz\");\necho \"\\n\";\necho first_non_repeating_character(\"aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzzaaabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzzaaabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz\");\necho \"\\n\";\necho first_non_repeating_character(\"aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzzaaabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzzaaabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzzaaabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz\");\necho \"\\n\";\necho first_non_repeating_character(\"aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuu\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected identifier \"abcabc\", expecting \")\" in /tmp/tmpij3j44kp.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    for ($i = 0; $i < strlen($str1); $i++) {\n        $char = $str1[$i];\n        if (substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return '_';\n}\n\necho first_non_repeating_character('stress');\necho first_non_repeating_character('moonmen');\necho first_non_repeating_character('abba');\necho first_non_repeating_character('aa');\necho first_non_repeating_character('~><#~><');\necho first_non_repeating_character('hello world, eh?');\necho first_non_repeating_character('sTreSS');\necho first_non_repeating_character('Go hang a salami, I\\'m a lasagna hog!');\necho first_non_repeating_character('hello world, eh?');\necho first_non_repeating_character('Hello World');\necho first_non_repeating_character('Hello World');\necho first_non_repeating_character('Hello World');\necho first_non_repeating_character('Hello World');\necho first_non_repeating_character('Hello World');\necho first_non_repeating_character('Hello World');\necho first_non_repeating_character('Hello World');\necho first_non_repeating_character('Hello World');\necho first_non_repeating_character('Hello World');\necho first_non_repeating_character('Hello World');\necho first_non_repeating_character('Hello World');\necho first_non_repeating_character('Hello World');\necho first_non_repeating_character('Hello World');\necho first_non_repeating_character('Hello World');\necho first_non_repeating_character('Hello World');\necho first_non_repeating_character('Hello World');\necho first_non_repeating_character('Hello World');\necho first_non_repeating_character('Hello World');\necho first_non_repeating_character('Hello World');\necho first_non_repeating_character('Hello World');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "te__#wt,whhhhhhhhhhhhhhhhhhhh\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjz45ci4s.php:48\nStack trace:\n#0 /tmp/tmpjz45ci4s.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpjz45ci4s.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $arr1 = str_split($str1);\n    $arr2 = array_count_values($arr1);\n    foreach($arr2 as $key => $value) {\n        if($value == 1) {\n            return $key;\n        }\n    }\n    return '_';\n}\n\necho first_non_repeating_character('abacabad');\necho \"\\n\";\necho first_non_repeating_character('abacabaabacaba');\necho \"\\n\";\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyziflskecznslkjfabe');\necho \"\\n\";\necho first_non_repeating_character('bcccccccccccccyb');\necho \"\\n\";\necho first_non_repeating_character('xdnxxlvupzuwgigeqjggosgljuhliybkjpibyatofcjbfxwtalc');\necho \"\\n\";\necho first_non_repeating_character('ngrhhqbhnsipkcoqjyviikvxbxyphsnjpdxkhtadltsuxbfbrkof');\necho \"\\n\";\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "c\n_\nd\ny\nd\ng\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgl0464lx.php:32\nStack trace:\n#0 /tmp/tmpgl0464lx.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpgl0464lx.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach($count as $key => $value) {\n        if($value == 1) {\n            return $key;\n        }\n    }\n    return 'No non-repeating character';\n}\n\necho first_non_repeating_character('aabbccddeeffgg');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "No non-repeating character\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcxrhndut.php:21\nStack trace:\n#0 /tmp/tmpcxrhndut.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpcxrhndut.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_len = strlen($str1);\n    for ($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if (substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return null;\n}\n\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected identifier \"abcabc\", expecting \")\" in /tmp/tmpa4f806vt.php on line 52\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_arr = str_split($str1);\n    $char_count = array_count_values($str_arr);\n    foreach ($char_count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected identifier \"abcabc\", expecting \",\" or \";\" in /tmp/tmpp6a1bluq.php on line 52\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_len = strlen($str1);\n    for($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if(substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return false;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected string content \"the\" in /tmp/tmpdheez167.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character('abcdabcd');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n  $str1 = strtolower($str1);\n  $str1 = str_split($str1);\n  $str1 = array_count_values($str1);\n  foreach ($str1 as $key => $value) {\n    if ($value == 1) {\n      return $key;\n    }\n  }\n}\necho first_non_repeating_character('aabbccddeeff');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return '_';\n}\n\n$str1 = 'aabbcddd';\necho first_non_repeating_character($str1);\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "c\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa5ttywbc.php:22\nStack trace:\n#0 /tmp/tmpa5ttywbc.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpa5ttywbc.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_len = strlen($str1);\n    for ($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if (substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return null;\n}\n\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected identifier \"abcabc\", expecting \")\" in /tmp/tmpa4f806vt.php on line 52\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $arr = array();\n    foreach ($str1 as $key => $value) {\n        if (array_key_exists($value, $arr)) {\n            $arr[$value] += 1;\n        } else {\n            $arr[$value] = 1;\n        }\n    }\n    foreach ($arr as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return \"No non-repeating character found\";\n}\necho first_non_repeating_character(\"aabbccddeeffgg\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "No non-repeating character found\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfoaceqi.php:27\nStack trace:\n#0 /tmp/tmptfoaceqi.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptfoaceqi.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str = str_split($str1);\n    $count = array_count_values($str);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_arr = str_split($str1);\n    $str_arr_count = array_count_values($str_arr);\n    foreach ($str_arr_count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return false;\n}\n\necho first_non_repeating_character('abcdabcd');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7oxx67zn.php:20\nStack trace:\n#0 /tmp/tmp7oxx67zn.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp7oxx67zn.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyz');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "a",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = str_split($str1);\n    $str2 = array_unique($str1);\n    $str3 = array_diff_assoc($str1, $str2);\n    $str4 = array_diff_key($str1, $str3);\n    $str5 = array_values($str4);\n    return $str5[0];\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "t\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gigxq67.php:18\nStack trace:\n#0 /tmp/tmp4gigxq67.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4gigxq67.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        $char = $str1[$i];\n        if (strpos($str1, $char, $i + 1) === false) {\n            return $char;\n        }\n    }\n    return false;\n}\n\necho first_non_repeating_character(\"abcdefghija\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"go hang a salami i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "b\nf\ni\ni\ni\ni\ni\ni\ni\ni\ni\ni\ni\ni\ni\ni\ni\ni\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp06s_3vty.php:55\nStack trace:\n#0 /tmp/tmp06s_3vty.php(60): test()\n#1 {main}\n  thrown in /tmp/tmp06s_3vty.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $len = strlen($str1);\n    $char = '';\n    for ($i = 0; $i < $len; $i++) {\n        if (substr_count($str1, $str1[$i]) == 1) {\n            $char = $str1[$i];\n            break;\n        }\n    }\n    return $char;\n}\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "f\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7p4xo621.php:21\nStack trace:\n#0 /tmp/tmp7p4xo621.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7p4xo621.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $arr = array();\n    foreach ($str1 as $key => $value) {\n        if (array_key_exists($value, $arr)) {\n            $arr[$value] += 1;\n        } else {\n            $arr[$value] = 1;\n        }\n    }\n    foreach ($arr as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\n$str1 = \"abcdabcd\";\necho first_non_repeating_character($str1);\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str = str_split($str1);\n    $count = array_count_values($str);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyz');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "a",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str_len = strlen($str1);\n    for($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if(substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return false;\n}\n\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyz');\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho first_non_repeating_character('go hang a salami im a lasagna hog');\necho first_non_repeating_character('hello world, eh?');\necho first_non_repeating_character('sTreSS');\necho first_non_repeating_character('moonmen');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "afwte\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6y8pu5rs.php:26\nStack trace:\n#0 /tmp/tmp6y8pu5rs.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp6y8pu5rs.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $str1 = array_count_values($str1);\n    foreach ($str1 as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character('abcdabcd');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_arr = str_split($str1);\n    $count = array_count_values($str_arr);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_len = strlen($str1);\n    for($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if(substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return null;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517375,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $str1 = array_count_values($str1);\n    foreach ($str1 as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return 'No non-repeating character found';\n}\n\necho first_non_repeating_character('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzzaa');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzzaaa');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzzaaaa');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzzaaaaa');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzzaaaaaa');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzzaaaaaaa');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzzaaaaaaaa');\necho \"\\n\";\necho first_non_repeating_character('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzzaaaaaaaaa');\necho \"\\n\";\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "No non-repeating character found\nNo non-repeating character found\nNo non-repeating character found\nNo non-repeating character found\nNo non-repeating character found\nNo non-repeating character found\nNo non-repeating character found\nNo non-repeating character found\nNo non-repeating character found\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp59zolf4e.php:38\nStack trace:\n#0 /tmp/tmp59zolf4e.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp59zolf4e.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str = str_split($str1);\n    $count = array_count_values($str);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\n\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517375,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str = str_split($str1);\n    $count = array_count_values($str);\n    foreach($count as $key => $value) {\n        if($value == 1) {\n            return $key;\n        }\n    }\n    return '-1';\n}\n\necho first_non_repeating_character('abcab');\necho \"\\n\";\necho first_non_repeating_character('abab');\necho \"\\n\";\necho first_non_repeating_character('aabbbc');\necho \"\\n\";\necho first_non_repeating_character('aabbdbc');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "c\n-1\nc\nd\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptnlfkfdt.php:26\nStack trace:\n#0 /tmp/tmptnlfkfdt.php(31): test()\n#1 {main}\n  thrown in /tmp/tmptnlfkfdt.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $arr = array();\n    foreach($str1 as $char) {\n        if(isset($arr[$char])) {\n            $arr[$char] += 1;\n        } else {\n            $arr[$char] = 1;\n        }\n    }\n    foreach($arr as $key => $value) {\n        if($value == 1) {\n            return $key;\n        }\n    }\n    return false;\n}\n\necho first_non_repeating_character('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz');\n\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphk80ie40.php:29\nStack trace:\n#0 /tmp/tmphk80ie40.php(34): test()\n#1 {main}\n  thrown in /tmp/tmphk80ie40.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach($count as $key => $val) {\n        if($val == 1) {\n            return $key;\n        }\n    }\n}\necho first_non_repeating_character('aabbcddeeff');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "c",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $len = strlen($str1);\n    $count = 0;\n    for ($i = 0; $i < $len; $i++) {\n        $count = 0;\n        for ($j = 0; $j < $len; $j++) {\n            if ($str1[$i] == $str1[$j]) {\n                $count++;\n            }\n        }\n        if ($count == 1) {\n            return $str1[$i];\n        }\n    }\n    return \"No non-repeating character found\";\n}\n\necho first_non_repeating_character(\"aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "No non-repeating character found\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk3w1yeer.php:27\nStack trace:\n#0 /tmp/tmpk3w1yeer.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpk3w1yeer.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str_len = strlen($str1);\n    $count = 0;\n    for($i=0; $i<$str_len; $i++) {\n        $count = 0;\n        for($j=0; $j<$str_len; $j++) {\n            if($str1[$i] == $str1[$j]) {\n                $count++;\n            }\n        }\n        if($count == 1) {\n            return $str1[$i];\n        }\n    }\n    return false;\n}\n\necho first_non_repeating_character(\"abcdefghija\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"go hang a salami i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"i'm a lasagna hog\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected identifier \"abcabc\", expecting \")\" in /tmp/tmppfy364bg.php on line 57\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_len = strlen($str1);\n    for($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if(substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return null;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected string content \"the\" in /tmp/tmpmvpvcfx3.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $count = array();\n    foreach ($str1 as $key => $value) {\n        if (isset($count[$value])) {\n            $count[$value] += 1;\n        } else {\n            $count[$value] = 1;\n        }\n    }\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return 'No non-repeating characters found';\n}\n\necho first_non_repeating_character('abcdefghija');\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho first_non_repeating_character('go hang a salami, im a lasagna hog!');\necho first_non_repeating_character('hello world, eh?');\necho first_non_repeating_character('sTreSS');\necho first_non_repeating_character('Go hang a salami, I\\'m a lasagna hog!');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "bf,wt,\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg_y1ug8x.php:33\nStack trace:\n#0 /tmp/tmpg_y1ug8x.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg_y1ug8x.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_len = strlen($str1);\n    for($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if(substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return null;\n}\n\n$str1 = \"the quick brown fox jumps then quickly blow air\";\necho first_non_repeating_character($str1);\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $str2 = array_unique($str1);\n    $str3 = array_diff_assoc($str1, $str2);\n    $str4 = array_diff_key($str1, $str3);\n    return implode($str4);\n}\necho first_non_repeating_character(\"aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "abcdefghijklmnopqrstuvwxyz\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe6rvsfxm.php:17\nStack trace:\n#0 /tmp/tmpe6rvsfxm.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpe6rvsfxm.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $str2 = array_unique($str1);\n    $str3 = array_diff_assoc($str1, $str2);\n    $str4 = array_diff_key($str1, $str3);\n    $str5 = implode($str4);\n    echo $str5[0];\n}\n\nfirst_non_repeating_character(\"abcdefghija\");\nfirst_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "ataa\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt75_01ph.php:21\nStack trace:\n#0 /tmp/tmpt75_01ph.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpt75_01ph.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1_array = str_split($str1);\n    $str1_array_count = array_count_values($str1_array);\n    foreach ($str1_array_count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"go hang a salami i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"hello world, eh?\");\necho \"\\n\";\necho first_non_repeating_character(\"sTreSS\");\necho \"\\n\";\necho first_non_repeating_character(\"Go hang a salami, I'm a lasagna hog!\");\necho \"\\n\";\necho first_non_repeating_character(\"hello\");\necho \"\\n\";\necho first_non_repeating_character(\"hello world\");\necho \"\\n\";\necho first_non_repeating_character(\"z\");\necho \"\\n\";\necho first_non_repeating_character(\"\");\necho \"\\n\";\necho first_non_repeating_character(\"~`!@#$%^&*()_+-={}|[]\\\\:\\\";'<>?,./\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"go hang a salami i'm a lasagna hog\");\necho \"\\n\";\necho first_non_repeating_character(\"hello world, eh?\");\necho \"\\n\";\necho first_non_repeating_character(\"\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected identifier \"abcabc\", expecting \")\" in /tmp/tmpm_iri2ji.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_arr = str_split($str1);\n    $count = array_count_values($str_arr);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return '-1';\n}\n\necho first_non_repeating_character('abcdabcd');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "-1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv973aad7.php:20\nStack trace:\n#0 /tmp/tmpv973aad7.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpv973aad7.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return '-1';\n}\n\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyz');\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho first_non_repeating_character('go hang a salami im a lasagna hog');\necho first_non_repeating_character('hello world, eh?');\necho first_non_repeating_character('sTreSS');\necho first_non_repeating_character('Go hang a salami, I\\'m a lasagna hog!');\necho first_non_repeating_character('hello world, eh?');\necho first_non_repeating_character('sTreSS');\necho first_non_repeating_character('Go hang a salami, I\\'m a lasagna hog!');\necho first_non_repeating_character('hello world, eh?');\necho first_non_repeating_character('sTreSS');\necho first_non_repeating_character('Go hang a salami, I\\'m a lasagna hog!');\necho first_non_repeating_character('hello world, eh?');\necho first_non_repeating_character('sTreSS');\necho first_non_repeating_character('Go hang a salami, I\\'m a lasagna hog!');\necho first_non_repeating_character('hello world, eh?');\necho first_non_repeating_character('sTreSS');\necho first_non_repeating_character('Go hang a salami, I\\'m a lasagna hog!');\necho first_non_repeating_character('hello world, eh?');\necho first_non_repeating_character('sTreSS');\necho first_non_repeating_character('Go hang a\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected string content \"Go hang a\" in /tmp/tmpkz9iwevq.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $str1 = array_count_values($str1);\n    foreach ($str1 as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return '_';\n}\n\necho first_non_repeating_character('aabbccddeffg');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "e\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6amndna8.php:21\nStack trace:\n#0 /tmp/tmp6amndna8.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6amndna8.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        $char = $str1[$i];\n        if (substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return false;\n}\n\necho first_non_repeating_character('abcabcabc');\necho \"\\n\";\necho first_non_repeating_character('abcdabcd');\necho \"\\n\";\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyz');\necho \"\\n\";\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyza');\necho \"\\n\";\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyzab');\necho \"\\n\";\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyzabc');\necho \"\\n\";\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyzabcd');\necho \"\\n\";\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyzabcde');\necho \"\\n\";\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyzabcdef');\necho \"\\n\";\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyzabcdefg');\necho \"\\n\";\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyzabcdefgh');\necho \"\\n\";\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyzabcdefghi');\necho \"\\n\";\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyzabcdefghij');\necho \"\\n\";\necho first_non_repeating_character('abcdefgh\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected string content \"abcdefgh\" in /tmp/tmp_ilsotnh.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        $char = $str1[$i];\n        if (substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return \"\";\n}\n\necho first_non_repeating_character(\"abcdefghija\");\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho first_non_repeating_character(\"go hang a salami i'm a lasagna hog\");\necho first_non_repeating_character(\"hello world, eh?\");\necho first_non_repeating_character(\"sTreSS\");\necho first_non_repeating_character(\"Go hang a salami, I'm a lasagna hog!\");\necho first_non_repeating_character(\"\");\necho first_non_repeating_character(\"~><#~><\");\necho first_non_repeating_character(\"hello world\");\necho first_non_repeating_character(\"#$%^&*()_-+=[]{}|\\';:/?.>,<\");\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyziflskecznslkjfabe\");\necho first_non_repeating_character(\"bcccccccccccccyb\");\necho first_non_repeating_character(\"zzz\");\necho first_non_repeating_character(\"bcccccccccccccyb\");\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyziflskecznslkjfabe\");\necho first_non_repeating_character(\"~><#~><\");\necho first_non_repeating_character(\"#$%^&*()_-+=[]{}|\\';:/?.>,<\");\necho first_non_repeating_character(\"hello world\");\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyziflskecznslkjfabe\");\necho\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp5tm3lteh.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1_array = str_split($str1);\n    $count_array = array_count_values($str1_array);\n    foreach ($count_array as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character(\"abcdefghija\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaabcdefghijklmnopqrstuvwxyz\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyz\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijkl\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected identifier \"abcabc\", expecting \")\" in /tmp/tmpzshb0ex6.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_len = strlen($str1);\n    for($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if(substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return null;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517375,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_len = strlen($str1);\n    for($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if(substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return null;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected string content \"the\" in /tmp/tmpmvpvcfx3.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $arr = str_split($str1);\n    $arr_count = array_count_values($arr);\n    foreach ($arr_count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return false;\n}\n\necho first_non_repeating_character('abcdefghija');\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho first_non_repeating_character('go hang a salami i\\'m a lasagna hog');\necho first_non_repeating_character('hello world, eh?');\necho first_non_repeating_character('sTreSS');\necho first_non_repeating_character('moonmen');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "bf'wte\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsje40x6l.php:26\nStack trace:\n#0 /tmp/tmpsje40x6l.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpsje40x6l.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1_len = strlen($str1);\n    for ($i = 0; $i < $str1_len; $i++) {\n        $char = $str1[$i];\n        if (substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return false;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\n\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "f\nf\nf\nf\nf\nf\nf\nf\nf\nf\nf\nf\nf\nf\nf\nf\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm0sglcu_.php:52\nStack trace:\n#0 /tmp/tmpm0sglcu_.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpm0sglcu_.php on line 52\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_arr = str_split($str1);\n    $str_arr_length = count($str_arr);\n    for($i=0; $i<$str_arr_length; $i++) {\n        if(substr_count($str1, $str_arr[$i]) == 1) {\n            return $str_arr[$i];\n        }\n    }\n    return false;\n}\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "f\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc1f6dh2b.php:19\nStack trace:\n#0 /tmp/tmpc1f6dh2b.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpc1f6dh2b.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $len = strlen($str1);\n    $count = 0;\n    $char = '';\n    for ($i = 0; $i < $len; $i++) {\n        $char = $str1[$i];\n        $count = 0;\n        for ($j = 0; $j < $len; $j++) {\n            if ($char == $str1[$j]) {\n                $count++;\n            }\n        }\n        if ($count == 1) {\n            return $char;\n        }\n    }\n    return 'No non-repeating character found';\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "f\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt57tpsll.php:29\nStack trace:\n#0 /tmp/tmpt57tpsll.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpt57tpsll.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n  $str1 = strtolower($str1);\n  $str1 = str_split($str1);\n  $arr = array();\n  foreach ($str1 as $key => $value) {\n    if (array_key_exists($value, $arr)) {\n      $arr[$value] += 1;\n    } else {\n      $arr[$value] = 1;\n    }\n  }\n  foreach ($arr as $key => $value) {\n    if ($value == 1) {\n      return $key;\n    }\n  }\n  return 'No non-repeating character found';\n}\necho first_non_repeating_character('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "No non-repeating character found\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpimprl6op.php:27\nStack trace:\n#0 /tmp/tmpimprl6op.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpimprl6op.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str_len = strlen($str1);\n    for ($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if (strpos($str1, $char) == strrpos($str1, $char)) {\n            return $char;\n        }\n    }\n    return null;\n}\n\necho first_non_repeating_character(\"aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = preg_replace('/\\s+/', '', $str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return false;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "f\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zif4v5s.php:22\nStack trace:\n#0 /tmp/tmp7zif4v5s.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp7zif4v5s.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if (substr_count($str1, $str1[$i]) == 1) {\n            return $str1[$i];\n        }\n    }\n    return 'No non-repeating characters found!';\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected identifier \"abcabc\", expecting \",\" or \";\" in /tmp/tmpb4woyrw0.php on line 51\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str_len = strlen($str1);\n    for ($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if (substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return \"\";\n}\n\necho first_non_repeating_character(\"abcdabcd\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdabcdabcd\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyz\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\");\necho \"\\n\";\necho first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopq\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected identifier \"abcabc\", expecting \")\" in /tmp/tmp2qmgkhee.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character(\"aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $len = strlen($str1);\n    $char = '';\n    for ($i = 0; $i < $len; $i++) {\n        if (substr_count($str1, $str1[$i]) == 1) {\n            $char = $str1[$i];\n            break;\n        }\n    }\n    return $char;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "\nParse error: syntax error, unexpected string content \"the quick brown fox jumps then...\" in /tmp/tmp__0_znn5.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_len = strlen($str1);\n    for($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if(substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return null;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517375,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_arr = str_split($str1);\n    $count_arr = array_count_values($str_arr);\n    foreach ($count_arr as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return '-1';\n}\n\necho first_non_repeating_character('aabbccddeeffgg');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "-1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46z5d5ak.php:20\nStack trace:\n#0 /tmp/tmp46z5d5ak.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp46z5d5ak.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str_len = strlen($str1);\n    for ($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if (substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return '-1';\n}\n\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcv_1rvix.php:20\nStack trace:\n#0 /tmp/tmpcv_1rvix.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpcv_1rvix.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_len = strlen($str1);\n    for($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if(substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return null;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517375,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str = str_split($str1);\n    $len = count($str);\n    for ($i = 0; $i < $len; $i++) {\n        $flag = 0;\n        for ($j = 0; $j < $len; $j++) {\n            if ($i != $j) {\n                if ($str[$i] == $str[$j]) {\n                    $flag = 1;\n                    break;\n                }\n            }\n        }\n        if ($flag == 0) {\n            return $str[$i];\n        }\n    }\n}\n\n$str1 = \"abcdabcd\";\necho first_non_repeating_character($str1);\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str = str_split($str1);\n    $count = array_count_values($str);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character('abcdabcd');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str_len = strlen($str1);\n    for ($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if (strpos($str1, $char, $i + 1) === false) {\n            return $char;\n        }\n    }\n    return false;\n}\n\necho first_non_repeating_character('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "a\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsiwc2sx7.php:21\nStack trace:\n#0 /tmp/tmpsiwc2sx7.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpsiwc2sx7.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $c = str_split($str1);\n    $len = count($c);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i == $len - 1) {\n            return $c[$i];\n        }\n        if ($c[$i] != $c[$i + 1]) {\n            return $c[$i];\n        }\n        $i++;\n    }\n}\n\n$str1 = 'aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz';\necho first_non_repeating_character($str1);\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc3vu6lht.php:24\nStack trace:\n#0 /tmp/tmpc3vu6lht.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpc3vu6lht.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_arr = str_split($str1);\n    $count = array_count_values($str_arr);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character('abcdab');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "c",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\n\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $arr = array();\n    foreach ($str1 as $key => $value) {\n        if (array_key_exists($value, $arr)) {\n            $arr[$value] += 1;\n        } else {\n            $arr[$value] = 1;\n        }\n    }\n    foreach ($arr as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return 'No non-repeating character found!';\n}\n\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyz');\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho first_non_repeating_character('Go hang a salami, I\\'m a lasagna hog!');\necho first_non_repeating_character('hello world, eh?');\necho first_non_repeating_character('sTreSS');\necho first_non_repeating_character('Go hang a salami, I\\'m a lasagna hog!');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "af,wt,\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr2iqqvk0.php:33\nStack trace:\n#0 /tmp/tmpr2iqqvk0.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpr2iqqvk0.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str = str_split($str1);\n    $count = array_count_values($str);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\n\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517375,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $str2 = array_unique($str1);\n    $str2 = array_intersect_key($str1, $str2);\n    if (empty($str2)) {\n        return 'No non-repeating character found';\n    }\n    return $str2[0];\n}\n\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyz');\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz');\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz');\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz');\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz');\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz');\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrst\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected string content \"abcdefghijklmnopqrstuvwxyzabcd...\" in /tmp/tmpcgnvjn_w.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $str2 = array_unique($str1);\n    $str3 = array_diff_assoc($str1, $str2);\n    $str4 = array_keys($str3);\n    $str5 = array_values($str4);\n    $str6 = $str5[0];\n    $str7 = $str1[$str6];\n    return $str7;\n}\necho first_non_repeating_character(\"aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "a\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph5gdtooa.php:20\nStack trace:\n#0 /tmp/tmph5gdtooa.php(25): test()\n#1 {main}\n  thrown in /tmp/tmph5gdtooa.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $arr = array();\n    foreach ($str1 as $key => $value) {\n        if (isset($arr[$value])) {\n            $arr[$value] += 1;\n        } else {\n            $arr[$value] = 1;\n        }\n    }\n    foreach ($arr as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return false;\n}\necho first_non_repeating_character(\"abcdefghija\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "b\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp697enh74.php:27\nStack trace:\n#0 /tmp/tmp697enh74.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp697enh74.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $arr1 = str_split($str1);\n    $arr2 = array_count_values($arr1);\n    foreach ($arr2 as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return \"No non-repeating character found\";\n}\n\necho first_non_repeating_character(\"abcdabcd\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "No non-repeating character found\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqpl8nxqp.php:21\nStack trace:\n#0 /tmp/tmpqpl8nxqp.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpqpl8nxqp.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_arr = str_split($str1);\n    $arr_count = array_count_values($str_arr);\n    foreach ($arr_count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character('abcdef');\necho \"\\n\";\necho first_non_repeating_character('abab');\necho \"\\n\";\necho first_non_repeating_character('aabbbc');\necho \"\\n\";\necho first_non_repeating_character('aabbdbc');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "a\n\nc\nd",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if (substr_count($str1, $str1[$i]) == 1) {\n            return $str1[$i];\n        }\n    }\n    return \"\";\n}\n\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\necho \"\\n\";\necho first_non_\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmphssvh_9a.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $arr = array_count_values($str1);\n    foreach ($arr as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return false;\n}\n\necho first_non_repeating_character('abcdefghijklmnopqrstuvwxyz');\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho first_non_repeating_character('go hang a salami, im a lasagna hog!');\necho first_non_repeating_character('hello world, eh?');\necho first_non_repeating_character('sTreSS');\necho first_non_repeating_character('moonmen');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "af,wte\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphb7qqj33.php:26\nStack trace:\n#0 /tmp/tmphb7qqj33.php(31): test()\n#1 {main}\n  thrown in /tmp/tmphb7qqj33.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $str1 = array_count_values($str1);\n    foreach ($str1 as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character(\"aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_len = strlen($str1);\n    for($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if(substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return null;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517375,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_len = strlen($str1);\n    for($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if(substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return null;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\n\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123317,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str_len = strlen($str1);\n    for($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if(substr_count($str1, $char) == 1) {\n            return $char;\n        }\n    }\n    return null;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\necho \"\\n\";\necho first_non_repeating_character('abcdab');\necho \"\\n\";\necho first_non_repeating_character('abcdabc');\necho \"\\n\";\necho first_non_repeating_character('abcdabcd');\necho \"\\n\";\necho first_non_repeating_character('abcdabcdab');\necho \"\\n\";\necho first_non_repeating_character('abcdabcdabcd');\necho \"\\n\";\necho first_non_repeating_character('abcdabcdabcdab');\necho \"\\n\";\necho first_non_repeating_character('abcdabcdabcdabcd');\necho \"\\n\";\necho first_non_repeating_character('abcdabcdabcdabcdab');\necho \"\\n\";\necho first_non_repeating_character('abcdabcdabcdabcdabcd');\necho \"\\n\";\necho first_non_repeating_character('abcdabcdabcdabcdabcdab');\necho \"\\n\";\necho first_non_repeating_character('abcdabcdabcdabcdabcdabcd');\necho \"\\n\";\necho first_non_repeating_character('abcdabcdabcdabcdabcdabcdab');\necho \"\\n\";\necho first_non_repeating_character('abcdabcdabcdabcdabcdabcdabcd');\necho \"\\n\";\necho first_non_repeating_character('abcdabcdabcdabcdabcdabcdabcdab');\necho \"\\n\";\necho first_non_repeating_character('abcdabcdabcdab\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "\nParse error: syntax error, unexpected string content \"abcdabcdabcdab\" in /tmp/tmpw2h_0wlh.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $arr = array();\n    foreach ($str1 as $key => $value) {\n        if (array_key_exists($value, $arr)) {\n            $arr[$value] += 1;\n        } else {\n            $arr[$value] = 1;\n        }\n    }\n    foreach ($arr as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n    return \"No non-repeating character found\";\n}\necho first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "f\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp21yg7qpu.php:27\nStack trace:\n#0 /tmp/tmp21yg7qpu.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp21yg7qpu.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = str_split($str1);\n    $str2 = array_count_values($str1);\n    foreach($str2 as $key => $value) {\n        if($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach($count as $key => $value) {\n        if($value == 1) {\n            return $key;\n        }\n    }\n    return '-1';\n}\n\necho first_non_repeating_character('aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "-1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa8ltt6s0.php:21\nStack trace:\n#0 /tmp/tmpa8ltt6s0.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpa8ltt6s0.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str = str_split($str1);\n    $str_length = count($str);\n    for ($i = 0; $i < $str_length; $i++) {\n        $flag = 0;\n        for ($j = 0; $j < $str_length; $j++) {\n            if ($i != $j && $str[$i] == $str[$j]) {\n                $flag = 1;\n                break;\n            }\n        }\n        if ($flag == 0) {\n            return $str[$i];\n        }\n    }\n}\n\necho first_non_repeating_character('aabbccddeeff');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str_len = strlen($str1);\n    for ($i = 0; $i < $str_len; $i++) {\n        $char = $str1[$i];\n        if (strpos($str1, $char, $i + 1) === false) {\n            return $char;\n        }\n    }\n    return false;\n}\n\necho first_non_repeating_character('the quick brown fox jumps then quickly blow air');\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123318,
      "stdout": "f\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp_na0xh5.php:21\nStack trace:\n#0 /tmp/tmpp_na0xh5.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpp_na0xh5.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character($str1) {\n    $str1 = strtolower($str1);\n    $str1 = str_split($str1);\n    $count = array_count_values($str1);\n    foreach ($count as $key => $value) {\n        if ($value == 1) {\n            return $key;\n        }\n    }\n}\n\necho first_non_repeating_character(\"abcdcd\");\nfunction candidate(...$args) {\n    return first_non_repeating_character(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"abcabc\") !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abc\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ababc\") !== \"c\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517375,
      "stdout": "a",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
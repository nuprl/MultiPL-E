{
  "name": "mbpp_755_second_smallest",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the second smallest number in a list.\nfunction second_smallest($numbers) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_755_second_smallest.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return second_smallest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, -8, -2, 0, -2)) !== -2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, -0.5, 0, 2, -2, -2)) !== -0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 2)) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 2, 2)) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "  $min = min($numbers);\n  $min2 = INF;\n  foreach ($numbers as $number) {\n    if ($number < $min2 && $number != $min) {\n      $min2 = $number;\n    }\n  }\n  return $min2;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho second_smallest($numbers);\n",
    "    $smallest = min($numbers);\n    $second_smallest = max($numbers);\n    foreach ($numbers as $number) {\n        if ($number < $second_smallest && $number != $smallest) {\n            $second_smallest = $number;\n        }\n    }\n    return $second_smallest;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$second_smallest = second_smallest($numbers);\necho \"Second smallest number is: $second_smallest\";",
    "    $smallest = $numbers[0];\n    $second_smallest = $numbers[1];\n    for ($i = 0; $i < count($numbers); $i++) {\n        if ($numbers[$i] < $smallest) {\n            $second_smallest = $smallest;\n            $smallest = $numbers[$i];\n        } elseif ($numbers[$i] < $second_smallest) {\n            $second_smallest = $numbers[$i];\n        }\n    }\n    return $second_smallest;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho second_smallest($numbers);",
    "    $smallest = min($numbers);\n    $second_smallest = null;\n    foreach ($numbers as $number) {\n        if ($number < $smallest && $number > $second_smallest) {\n            $second_smallest = $number;\n        }\n    }\n    return $second_smallest;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho second_smallest($numbers);",
    "    $smallest = $numbers[0];\n    $second_smallest = $numbers[1];\n    for ($i = 0; $i < count($numbers); $i++) {\n        if ($numbers[$i] < $smallest) {\n            $second_smallest = $smallest;\n            $smallest = $numbers[$i];\n        } else if ($numbers[$i] < $second_smallest) {\n            $second_smallest = $numbers[$i];\n        }\n    }\n    return $second_smallest;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho second_smallest($numbers);",
    "    $smallest = $numbers[0];\n    $second_smallest = $numbers[0];\n    for ($i = 0; $i < count($numbers); $i++) {\n        if ($numbers[$i] < $smallest) {\n            $second_smallest = $smallest;\n            $smallest = $numbers[$i];\n        } elseif ($numbers[$i] < $second_smallest) {\n            $second_smallest = $numbers[$i];\n        }\n    }\n    return $second_smallest;\n}\n\n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho second_smallest($numbers);",
    "    $smallest = $numbers[0];\n    $second_smallest = $numbers[1];\n    foreach ($numbers as $number) {\n        if ($number < $smallest) {\n            $second_smallest = $smallest;\n            $smallest = $number;\n        } else if ($number < $second_smallest) {\n            $second_smallest = $number;\n        }\n    }\n    return $second_smallest;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho second_smallest($numbers);",
    "  $smallest = $numbers[0];\n  $second_smallest = $numbers[1];\n  foreach ($numbers as $number) {\n    if ($number < $smallest) {\n      $second_smallest = $smallest;\n      $smallest = $number;\n    } elseif ($number < $second_smallest) {\n      $second_smallest = $number;\n    }\n  }\n  return $second_smallest;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho second_smallest($numbers);",
    "    $smallest = $numbers[0];\n    $second_smallest = $numbers[0];\n    foreach ($numbers as $number) {\n        if ($number < $smallest) {\n            $second_smallest = $smallest;\n            $smallest = $number;\n        } elseif ($number < $second_smallest) {\n            $second_smallest = $number;\n        }\n    }\n    return $second_smallest;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho second_smallest($numbers);\n",
    "    $smallest = min($numbers);\n    $second_smallest = $smallest;\n    foreach ($numbers as $number) {\n        if ($number < $second_smallest && $number != $smallest) {\n            $second_smallest = $number;\n        }\n    }\n    return $second_smallest;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho second_smallest($numbers);",
    "    $smallest = $numbers[0];\n    $second_smallest = $numbers[1];\n    for ($i = 0; $i < count($numbers); $i++) {\n        if ($numbers[$i] < $smallest) {\n            $second_smallest = $smallest;\n            $smallest = $numbers[$i];\n        } else if ($numbers[$i] < $second_smallest) {\n            $second_smallest = $numbers[$i];\n        }\n    }\n    return $second_smallest;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho second_smallest($numbers);",
    "    $smallest = min($numbers);\n    $second_smallest = $smallest;\n    foreach ($numbers as $number) {\n        if ($number < $second_smallest && $number != $smallest) {\n            $second_smallest = $number;\n        }\n    }\n    return $second_smallest;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho second_smallest($numbers);",
    "    $smallest = $numbers[0];\n    $second_smallest = $numbers[1];\n    for ($i = 0; $i < count($numbers); $i++) {\n        if ($numbers[$i] < $smallest) {\n            $second_smallest = $smallest;\n            $smallest = $numbers[$i];\n        } else if ($numbers[$i] < $second_smallest) {\n            $second_smallest = $numbers[$i];\n        }\n    }\n    return $second_smallest;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho second_smallest($numbers);",
    "    $smallest = $numbers[0];\n    $second_smallest = $numbers[0];\n    foreach ($numbers as $number) {\n        if ($number < $smallest) {\n            $second_smallest = $smallest;\n            $smallest = $number;\n        } elseif ($number < $second_smallest) {\n            $second_smallest = $number;\n        }\n    }\n    return $second_smallest;\n}\n\n$numbers = [1, 2, 3, 4, 5];\necho second_smallest($numbers);",
    "    $smallest = $numbers[0];\n    $second_smallest = $numbers[1];\n    for ($i = 0; $i < count($numbers); $i++) {\n        if ($numbers[$i] < $smallest) {\n            $second_smallest = $smallest;\n            $smallest = $numbers[$i];\n        } else if ($numbers[$i] < $second_smallest) {\n            $second_smallest = $numbers[$i];\n        }\n    }\n    return $second_smallest;\n}\n\n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho second_smallest($numbers);",
    "    $smallest = min($numbers);\n    $second_smallest = $smallest;\n    foreach ($numbers as $number) {\n        if ($number < $second_smallest && $number != $smallest) {\n            $second_smallest = $number;\n        }\n    }\n    return $second_smallest;\n}\n",
    "    $smallest = $numbers[0];\n    $second_smallest = $numbers[1];\n    foreach ($numbers as $number) {\n        if ($number < $smallest) {\n            $second_smallest = $smallest;\n            $smallest = $number;\n        } elseif ($number < $second_smallest) {\n            $second_smallest = $number;\n        }\n    }\n    return $second_smallest;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho second_smallest($numbers);",
    "    $smallest = $numbers[0];\n    $second_smallest = $numbers[1];\n    foreach ($numbers as $number) {\n        if ($number < $smallest) {\n            $second_smallest = $smallest;\n            $smallest = $number;\n        } elseif ($number < $second_smallest) {\n            $second_smallest = $number;\n        }\n    }\n    return $second_smallest;\n}\n\n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho second_smallest($numbers);",
    "    $smallest = $numbers[0];\n    $second_smallest = $numbers[1];\n    for ($i = 0; $i < count($numbers); $i++) {\n        if ($numbers[$i] < $smallest) {\n            $second_smallest = $smallest;\n            $smallest = $numbers[$i];\n        } elseif ($numbers[$i] < $second_smallest) {\n            $second_smallest = $numbers[$i];\n        }\n    }\n    return $second_smallest;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho second_smallest($numbers);",
    "    $first = min($numbers);\n    $second = max($numbers);\n    foreach ($numbers as $number) {\n        if ($number < $second && $number != $first) {\n            $second = $number;\n        }\n    }\n    return $second;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho second_smallest($numbers);"
  ]
}
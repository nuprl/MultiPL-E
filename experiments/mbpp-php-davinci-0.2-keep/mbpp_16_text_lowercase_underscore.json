{
  "name": "mbpp_16_text_lowercase_underscore",
  "language": "php",
  "prompt": "<?php\n// Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore($text) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_16_text_lowercase_underscore.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return text_lowercase_underscore(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"aab_cbbbc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aab_Abbbc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Aaab_abbbc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $regex = '/^[a-z]+(_[a-z]+)*$/';\n    return preg_match($regex, $text);\n}\n\necho text_lowercase_underscore('abc_def_ghi') . '<br>';\necho text_lowercase_underscore('abc_def_ghi_') . '<br>';\necho text_lowercase_underscore('abc_def_ghi_123') . '<br>';\necho text_lowercase_underscore('abc_def_ghi_123_456') . '<br>';\necho text_lowercase_underscore('abc_def_ghi_123_456_789') . '<br>';\necho text_lowercase_underscore('abc_def_ghi_123_456_789_abc') . '<br>';\necho text_lowercase_underscore('abc_def_ghi_123_456_789_abc_def') . '<br>';\necho text_lowercase_underscore('abc_def_ghi_123_456_789_abc_def_ghi') . '<br>';\necho text_lowercase_underscore('abc_def_ghi_123_456_789_abc_def_ghi_') . '<br>';\necho text_lowercase_underscore('abc_def_ghi_123_456_789_abc_def_ghi_123') . '<br>';\necho text_lowercase_underscore('abc_def_ghi_123_456_789_abc_def_ghi_123_456') . '<br>';\necho text_lowercase_underscore('abc_def_ghi_123_456_789_abc_def_ghi_123_456_789') . '<br>';\necho text_lowercase_underscore('abc_def_ghi_123_456_789_abc_def_ghi_123_456_789_abc') . '<br>';\necho text_lowercase_underscore('abc_def_ghi_123_456_789_abc_def_ghi_123_456_789_abc_def') . '<",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match('/^[a-z]+_[a-z]+$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\t$pattern = '/^[a-z_]+$/';\n\tif (preg_match($pattern, $text)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    return preg_match($pattern, $text);\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $text = str_split($text);\n    $result = false;\n    for ($i = 0; $i < count($text); $i++) {\n        if (ctype_lower($text[$i]) && $text[$i+1] == '_') {\n            $result = true;\n        }\n    }\n    return $result;\n}\n\necho text_lowercase_underscore('hello_world');\necho '<br>';\necho text_lowercase_underscore('helloWorld');\necho '<br>';\necho text_lowercase_underscore('hello_world_');\necho '<br>';\necho text_lowercase_underscore('hello_world_!');\necho '<br>';\necho text_lowercase_underscore('hello_world_!_');\necho '<br>';\necho text_lowercase_underscore('hello_world_!_1');\necho '<br>';\necho text_lowercase_underscore('hello_world_!_1_');\necho '<br>';\necho text_lowercase_underscore('hello_world_!_1_2');\necho '<br>';\necho text_lowercase_underscore('hello_world_!_1_2_');\necho '<br>';\necho text_lowercase_underscore('hello_world_!_1_2_3');\necho '<br>';\necho text_lowercase_underscore('hello_world_!_1_2_3_');\necho '<br>';\necho text_lowercase_underscore('hello_world_!_1_2_3_4');\necho '<br>';\necho text_lowercase_underscore('hello_world_!_1_2_3_4_');\necho '<br>';\necho text_lowercase_underscore('hello_world_!_1_2_3_4_5');\necho '<br>';\necho text_lowercase_underscore('hello_world_!_1_2_3_4_5_');\necho '<br>';\necho text_lowercase_underscore('hello_world_!_1_2_",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match('/^[a-z]+(_[a-z]+)*$/', $text)) {\n        return true;\n    }\n    return false;\n}\n",
    "    if (preg_match('/^[a-z_]+$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    return preg_match($pattern, $text);\n}\n",
    "  $text = str_split($text);\n  $result = true;\n  $i = 0;\n  while ($i < count($text)) {\n    if (ctype_lower($text[$i])) {\n      $i++;\n    } elseif ($text[$i] == '_') {\n      $i++;\n    } else {\n      $result = false;\n      break;\n    }\n  }\n  return $result;\n}\n",
    "    $pattern = \"/^[a-z_]+$/\";\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $text_array = str_split($text);\n    $text_array_length = count($text_array);\n    $text_array_length_minus_one = $text_array_length - 1;\n    $text_array_length_minus_two = $text_array_length - 2;\n    $text_array_length_minus_three = $text_array_length - 3;\n    $text_array_length_minus_four = $text_array_length - 4;\n    $text_array_length_minus_five = $text_array_length - 5;\n    $text_array_length_minus_six = $text_array_length - 6;\n    $text_array_length_minus_seven = $text_array_length - 7;\n    $text_array_length_minus_eight = $text_array_length - 8;\n    $text_array_length_minus_nine = $text_array_length - 9;\n    $text_array_length_minus_ten = $text_array_length - 10;\n    $text_array_length_minus_eleven = $text_array_length - 11;\n    $text_array_length_minus_twelve = $text_array_length - 12;\n    $text_array_length_minus_thirteen = $text_array_length - 13;\n    $text_array_length_minus_fourteen = $text_array_length - 14;\n    $text_array_length_minus_fifteen = $text_array_length - 15;\n    $text_array_length_minus_sixteen = $text_array_length - 16;\n    $text_array_length_minus_seventeen = $text_array_length - 17;\n    $text_array_length_minus_eighteen = $text_array_length - 18;\n    $text_array_length_minus_nineteen = $text_array_length - 19;\n    $text_array_length_minus_twenty = $text_array_length - 20;\n    $text_array_length_minus_twentyone = $text_array_length - 21;\n    $text_array_length_",
    "\t$text = strtolower($text);\n\t$text = str_replace(\"_\", \"\", $text);\n\tif ($text == $text) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho text_lowercase_underscore(\"hello_world\") . \"\\n\";\necho text_lowercase_underscore(\"helloWorld\") . \"\\n\";\necho text_lowercase_underscore(\"hello_world_\") . \"\\n\";\necho text_lowercase_underscore(\"hello_world_!\") . \"\\n\";\necho text_lowercase_underscore(\"hello_world_123\") . \"\\n\";\necho text_lowercase_underscore(\"hello_world_123!\") . \"\\n\";\necho text_lowercase_underscore(\"hello_world_123_!\") . \"\\n\";\necho text_lowercase_underscore(\"hello_world_123_!_\") . \"\\n\";\necho text_lowercase_underscore(\"hello_world_123_!_456\") . \"\\n\";\necho text_lowercase_underscore(\"hello_world_123_!_456!\") . \"\\n\";\necho text_lowercase_underscore(\"hello_world_123_!_456!_\") . \"\\n\";\necho text_lowercase_underscore(\"hello_world_123_!_456!_789\") . \"\\n\";\necho text_lowercase_underscore(\"hello_world_123_!_456!_789!\") . \"\\n\";\necho text_lowercase_underscore(\"hello_world_123_!_456!_789!_\") . \"\\n\";\necho text_lowercase_underscore(\"hello_world_123_!_456!_789!_0\") . \"\\n\";\necho text_lowercase_underscore(\"hello_world_123_!_456!_789!_0!\") . \"\\n\";\necho text_lowercase_underscore(\"hello_world_123_!_456!_789!_0!_\") . \"\\n\";\necho text_lowercase_underscore(\"hello_world_123_!_456!_789!_0!_1\") . \"\\n\";\necho text_lowercase",
    "    $text = str_replace('_', '', $text);\n    if (ctype_lower($text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $text = str_split($text);\n    $result = true;\n    for ($i = 0; $i < count($text); $i++) {\n        if ($text[$i] == \"_\") {\n            if (!ctype_lower($text[$i - 1]) || !ctype_lower($text[$i + 1])) {\n                $result = false;\n            }\n        }\n    }\n    return $result;\n}\n\necho text_lowercase_underscore(\"this_is_a_text\") . \"<br>\";\necho text_lowercase_underscore(\"this_is_a_text_\") . \"<br>\";\necho text_lowercase_underscore(\"this_is_a_text_2\") . \"<br>\";\necho text_lowercase_underscore(\"this_is_a_text_2_\") . \"<br>\";\necho text_lowercase_underscore(\"this_is_a_text_2_3\") . \"<br>\";\necho text_lowercase_underscore(\"this_is_a_text_2_3_\") . \"<br>\";\necho text_lowercase_underscore(\"this_is_a_text_2_3_4\") . \"<br>\";\necho text_lowercase_underscore(\"this_is_a_text_2_3_4_\") . \"<br>\";\necho text_lowercase_underscore(\"this_is_a_text_2_3_4_5\") . \"<br>\";\necho text_lowercase_underscore(\"this_is_a_text_2_3_4_5_\") . \"<br>\";\necho text_lowercase_underscore(\"this_is_a_text_2_3_4_5_6\") . \"<br>\";\necho text_lowercase_underscore(\"this_is_a_text_2_3_4_5_6_\") . \"<br>\";\necho text_lowercase_underscore(\"this_is_a_text_2_3_4_5_6_7\") . \"<br>\";\necho text_lowercase_underscore(\"this_is_a_text_2_3_4_5_6_",
    "    if (preg_match(\"/^[a-z_]+$/\", $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    return preg_match(\"/^[a-z_]+$/\", $text);\n}\n",
    "    return preg_match('/^[a-z]+(_[a-z]+)*$/', $text);\n}\n",
    "    $text = str_split($text);\n    $count = 0;\n    $result = false;\n    foreach ($text as $char) {\n        if ($char == '_') {\n            $count++;\n        }\n    }\n    if ($count > 0) {\n        $result = true;\n    }\n    return $result;\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $text = str_replace('_', '', $text);\n    $text = str_replace(' ', '', $text);\n    if (ctype_lower($text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\t$pattern = '/^[a-z]+(_[a-z]+)*$/';\n\tif (preg_match($pattern, $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho text_lowercase_underscore('hello_world');\necho '<br>';\necho text_lowercase_underscore('hello_world_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_3');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_3_');\necho '",
    "    $text = strtolower($text);\n    $text = str_replace('_', '', $text);\n    if ($text == str_replace('_', '', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho text_lowercase_underscore('hello_world');\necho '<br>';\necho text_lowercase_underscore('hello_world_');\necho '<br>';\necho text_lowercase_underscore('hello_world_!');\necho '<br>';\necho text_lowercase_underscore('hello_world_!');\necho '<br>';\necho text_lowercase_underscore('hello_world_!_');\necho '<br>';\necho text_lowercase_underscore('hello_world_!_!');\necho '<br>';\necho text_lowercase_underscore('hello_world_!_!_');\necho '<br>';\necho text_lowercase_underscore('hello_world_!_!_!');\necho '<br>';\necho text_lowercase_underscore('hello_world_!_!_!_');\necho '<br>';\necho text_lowercase_underscore('hello_world_!_!_!_!');\necho '<br>';\necho text_lowercase_underscore('hello_world_!_!_!_!_');\necho '<br>';\necho text_lowercase_underscore('hello_world_!_!_!_!_!');\necho '<br>';\necho text_lowercase_underscore('hello_world_!_!_!_!_!_');\necho '<br>';\necho text_lowercase_underscore('hello_world_!_!_!_!_!_!');\necho '<br>';\necho text_lowercase_underscore('hello_world_!_!_!_!_!_!_');\necho '<br>';\necho text_lowercase_underscore('hello_world_!_!_!_!_!_!_!');\necho '<br>';\necho",
    "    return preg_match('/^[a-z]+(_[a-z]+)*$/', $text);\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    }\n    return false;\n}\n",
    "    $text = str_split($text);\n    $result = true;\n    $count = 0;\n    foreach ($text as $key => $value) {\n        if ($value == \"_\") {\n            $count++;\n        }\n    }\n    if ($count > 1) {\n        $result = false;\n    }\n    return $result;\n}\n\necho text_lowercase_underscore(\"hello_world\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world__\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_hello\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_hello_world\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_hello_world_\");\necho \"<br>\";\necho text_lowercase_underscore(\"_hello_world_hello_world\");\necho \"<br>\";\necho text_lowercase_underscore(\"_hello_world_hello_world_\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_hello_world_hello\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_hello_world_hello_\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_hello_world_hello_world\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_hello_world_hello_world_\");\necho \"<br>\";\necho text_lowercase_underscore(\"_hello_world_hello_world_hello_world\");\necho \"<br>\";\necho text_lowercase_underscore(\"_hello_world_hello_world_hello_world_\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_hello_world_hello_world_hello\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_hello_world_hello_world_hello_\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    }\n    return false;\n}\n",
    "\t$text = str_replace('_', '', $text);\n\t$text = str_replace(' ', '', $text);\n\tif (ctype_lower($text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\t$text = str_split($text);\n\t$text_length = count($text);\n\t$text_lowercase_underscore = false;\n\tfor ($i = 0; $i < $text_length; $i++) {\n\t\tif (ctype_lower($text[$i]) && $text[$i+1] == '_') {\n\t\t\t$text_lowercase_underscore = true;\n\t\t}\n\t}\n\treturn $text_lowercase_underscore;\n}\n\necho text_lowercase_underscore('this_is_a_string');\necho text_lowercase_underscore('this is a string');",
    "\t$pattern = '/^[a-z]+(_[a-z]+)*$/';\n\treturn preg_match($pattern, $text);\n}\n",
    "    $text = str_split($text);\n    $flag = false;\n    $flag1 = false;\n    $flag2 = false;\n    $flag3 = false;\n    foreach ($text as $key => $value) {\n        if (ctype_lower($value)) {\n            $flag = true;\n        }\n        if ($value == '_') {\n            $flag1 = true;\n        }\n        if ($flag && $flag1) {\n            $flag2 = true;\n        }\n        if ($flag2 && ctype_lower($value)) {\n            $flag3 = true;\n        }\n    }\n    if ($flag3) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $regex = '/^[a-z]+(_[a-z]+)*$/';\n    return preg_match($regex, $text);\n}\n",
    "\t$pattern = '/^[a-z_]+$/';\n\treturn preg_match($pattern, $text);\n}\n",
    "    $text = str_replace('_', '', $text);\n    if (ctype_lower($text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\tif (preg_match('/^[a-z]+_[a-z]+$/', $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    return preg_match($pattern, $text);\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho text_lowercase_underscore('hello_world_123');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_HELLO');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_hello');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_hello_world');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_hello_world_');\necho '<br>';\necho text_lowercase_underscore('_hello_world_123_hello_world');\necho '<br>';\necho text_lowercase_underscore('_hello_world_123_hello_world_');\necho '<br>';\necho text_lowercase_underscore('_hello_world_123_hello_world_123');\necho '<br>';\necho text_lowercase_underscore('_hello_world_123_hello_world_123_');\necho '<br>';\necho text_lowercase_underscore('_hello_world_123_hello_world_123_HELLO');\necho '<br>';\necho text_lowercase_underscore('_hello_world_123_hello_world_123_hello');\necho '<br>';\necho text_lowercase_underscore('_hello_world_123_hello_world_123_hello_world');\necho '<br>';\necho text_lowercase_underscore('_hello_world_123_hello_world_123_hello_world_');\necho '<br>';\necho text_lowercase_underscore('_hello_world_123_hello_world_123_hello_world_123');\necho '<br>';\necho text_lowercase_underscore('_",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    }\n    return false;\n}\n",
    "    $text = str_replace(\"_\", \"\", $text);\n    if (ctype_lower($text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    return preg_match('/^[a-z_]+$/', $text);\n}\n",
    "\t$text_array = str_split($text);\n\t$underscore_count = 0;\n\t$lowercase_count = 0;\n\tforeach ($text_array as $char) {\n\t\tif ($char == '_') {\n\t\t\t$underscore_count++;\n\t\t}\n\t\tif (ctype_lower($char)) {\n\t\t\t$lowercase_count++;\n\t\t}\n\t}\n\tif ($underscore_count == $lowercase_count - 1) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match('/^[a-z_]+$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "  if (preg_match('/^[a-z]+(_[a-z]+)*$/', $text)) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\necho text_lowercase_underscore('this_is_a_string') . \"\\n\";\necho text_lowercase_underscore('thisisastring') . \"\\n\";\necho text_lowercase_underscore('thisIsAString') . \"\\n\";\necho text_lowercase_underscore('this_Is_A_String') . \"\\n\";\n",
    "    return preg_match('/^[a-z]+(_[a-z]+)*$/', $text);\n}\n",
    "    $pattern = \"/^[a-z_]+$/\";\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho text_lowercase_underscore(\"hello_world\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_!\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123!\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123!_\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123!_456\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123!_456!\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123!_456!_\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123!_456!_789\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123!_456!_789!\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123!_456!_789!_\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123!_456!_789!_000\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123!_456!_789!_000!\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123!_456!_789!_000!_\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123!_456!_789!_000!_111\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123!_456!_789!_000!_111!\");\necho \"<br",
    "    $regex = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($regex, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $text = str_replace('_', '', $text);\n    if (ctype_lower($text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\t$pattern = '/^[a-z]+(_[a-z]+)*$/';\n\tif (preg_match($pattern, $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    return preg_match($pattern, $text);\n}\n",
    "    $text_array = str_split($text);\n    $count = 0;\n    $count_underscore = 0;\n    $count_lowercase = 0;\n    foreach ($text_array as $value) {\n        if ($value == '_') {\n            $count_underscore++;\n        }\n        if (ctype_lower($value)) {\n            $count_lowercase++;\n        }\n        $count++;\n    }\n    if ($count_underscore == 0) {\n        return false;\n    }\n    if ($count_underscore == $count_lowercase) {\n        return true;\n    }\n    return false;\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $text = str_split($text);\n    $result = false;\n    $count = 0;\n    foreach ($text as $char) {\n        if (ctype_lower($char)) {\n            $count++;\n        } elseif ($char == '_') {\n            $count = 0;\n        } else {\n            $count = 0;\n            break;\n        }\n    }\n    if ($count > 1) {\n        $result = true;\n    }\n    return $result;\n}\n",
    "    $pattern = '/^[a-z]+_[a-z]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\t$pattern = \"/^[a-z]+(_[a-z]+)*$/\";\n\tif (preg_match($pattern, $text)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n",
    "\t$text = str_split($text);\n\t$text_lowercase = array_filter($text, function($letter) {\n\t\treturn ctype_lower($letter);\n\t});\n\t$text_underscore = array_filter($text, function($letter) {\n\t\treturn $letter === '_';\n\t});\n\treturn count($text_lowercase) + count($text_underscore) === count($text);\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match('/^[a-z]+(_[a-z]+)*$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\t$text = str_split($text);\n\t$text_length = count($text);\n\t$text_lowercase_underscore = false;\n\tfor ($i = 0; $i < $text_length; $i++) {\n\t\tif (ctype_lower($text[$i])) {\n\t\t\tif ($text[$i + 1] == '_') {\n\t\t\t\t$text_lowercase_underscore = true;\n\t\t\t}\n\t\t}\n\t}\n\treturn $text_lowercase_underscore;\n}\n\necho text_lowercase_underscore('this_is_a_string');\necho text_lowercase_underscore('this is a string');",
    "    $text = str_replace('_', '', $text);\n    $text = str_replace(' ', '', $text);\n    if (ctype_lower($text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho text_lowercase_underscore('this_is_a_string') . PHP_EOL;\necho text_lowercase_underscore('this_is_a_string_with_underscores') . PHP_EOL;\necho text_lowercase_underscore('this_is_a_string_with_underscores_and_CAPS') . PHP_EOL;\necho text_lowercase_underscore('this_is_a_string_with_underscores_and_numbers_123') . PHP_EOL;\necho text_lowercase_underscore('this_is_a_string_with_underscores_and_numbers_123_and_CAPS') . PHP_EOL;\necho text_lowercase_underscore('this_is_a_string_with_underscores_and_numbers_123_and_CAPS_and_spaces') . PHP_EOL;",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match(\"/^[a-z]+_[a-z]+$/\", $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho text_lowercase_underscore(\"hello_world\") . \"\\n\";\necho text_lowercase_underscore(\"hello_World\") . \"\\n\";\necho text_lowercase_underscore(\"helloWorld\") . \"\\n\";\necho text_lowercase_underscore(\"hello_world_\") . \"\\n\";\necho text_lowercase_underscore(\"_hello_world\") . \"\\n\";\necho text_lowercase_underscore(\"hello_world_123\") . \"\\n\";\necho text_lowercase_underscore(\"hello_world_123_\") . \"\\n\";\necho text_lowercase_underscore(\"_hello_world_123\") . \"\\n\";\necho text_lowercase_underscore(\"_hello_world_123_\") . \"\\n\";\necho text_lowercase_underscore(\"hello_world_123_456\") . \"\\n\";\necho text_lowercase_underscore(\"hello_world_123_456_\") . \"\\n\";\necho text_lowercase_underscore(\"_hello_world_123_456\") . \"\\n\";\necho text_lowercase_underscore(\"_hello_world_123_456_\") . \"\\n\";\necho text_lowercase_underscore(\"hello_world_123_456_789\") . \"\\n\";\necho text_lowercase_underscore(\"hello_world_123_456_789_\") . \"\\n\";\necho text_lowercase_underscore(\"_hello_world_123_456_789\") . \"\\n\";\necho text_lowercase_underscore(\"_hello_world_123_456_789_\") . \"\\n\";\necho text_lowercase_underscore(\"hello_world_123_456_789_000\") . \"\\n\";\necho text_lowercase_underscore(\"hello_world_123_456_789_000_\") . \"\\n\";\necho text_lowercase_underscore(\"_hello_world_123_456_789_000\") . \"\\n\";\necho text_lowercase_underscore(\"_hello_world_",
    "    if (preg_match(\"/^[a-z]+_[a-z]+$/\", $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    return preg_match($pattern, $text);\n}\n",
    "\tif(preg_match(\"/^[a-z]+(_[a-z]+)*$/\", $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    return preg_match('/^[a-z]+(_[a-z]+)*$/', $text);\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match('/^[a-z]+(_[a-z]+)+$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\t$pattern = '/^[a-z_]+$/';\n\tif (preg_match($pattern, $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    if (preg_match('/^[a-z_]+$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    return preg_match('/^[a-z]+(_[a-z]+)*$/', $text);\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match('/^[a-z]+(_[a-z]+)*$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = \"/^[a-z_]+$/\";\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$text = \"a_b_c\";\necho text_lowercase_underscore($text);",
    "\treturn preg_match(\"/^[a-z_]+$/\", $text);\n}\n",
    "    if (preg_match('/^[a-z_]+$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match('/^[a-z]+(_[a-z]+)*$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = \"/^[a-z_]+$/\";\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    return preg_match('/^[a-z_]+$/', $text);\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\t$pattern = '/^[a-z]+(_[a-z]+)*$/';\n\tif (preg_match($pattern, $text)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    return preg_match('/^[a-z]+(_[a-z]+)*$/', $text);\n}\n",
    "\treturn preg_match('/^[a-z]+(_[a-z]+)*$/', $text);\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+_[a-z]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = \"/^[a-z_]+$/\";\n    return preg_match($pattern, $text);\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\t$text = strtolower($text);\n\t$text = str_replace(' ', '_', $text);\n\treturn $text;\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)+$/';\n    return preg_match($pattern, $text);\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\tif (preg_match('/^[a-z]+(_[a-z]+)*$/', $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    $text = str_split($text);\n    $result = [];\n    $i = 0;\n    $j = 0;\n    foreach ($text as $char) {\n        if (ctype_lower($char)) {\n            $result[$i][$j] = $char;\n            $j++;\n        } else {\n            $i++;\n            $j = 0;\n        }\n    }\n    foreach ($result as $item) {\n        if (count($item) > 1) {\n            return true;\n        }\n    }\n    return false;\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match('/^[a-z]+(_[a-z]+)*$/', $text)) {\n        return true;\n    }\n    return false;\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $text = str_split($text);\n    $result = true;\n    for ($i = 0; $i < count($text); $i++) {\n        if ($text[$i] == '_') {\n            if (!ctype_lower($text[$i - 1]) || !ctype_lower($text[$i + 1])) {\n                $result = false;\n                break;\n            }\n        }\n    }\n    return $result;\n}\n",
    "\t$pattern = '/^[a-z_]+$/';\n\tif (preg_match($pattern, $text)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = \"/^[a-z]+(_[a-z]+)*$/\";\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "  if (preg_match('/^[a-z]+(_[a-z]+)+$/', $text)) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\necho text_lowercase_underscore('hello_world');\necho text_lowercase_underscore('hello_world_');\necho text_lowercase_underscore('hello_world_!');\necho text_lowercase_underscore('hello_world_123');\necho text_lowercase_underscore('hello_world_123!');\necho text_lowercase_underscore('hello_world_123_!');\necho text_lowercase_underscore('hello_world_123_!_');\necho text_lowercase_underscore('hello_world_123_!_456');\necho text_lowercase_underscore('hello_world_123_!_456_');\necho text_lowercase_underscore('hello_world_123_!_456_!');\necho text_lowercase_underscore('hello_world_123_!_456_!_');\necho text_lowercase_underscore('hello_world_123_!_456_!_789');\necho text_lowercase_underscore('hello_world_123_!_456_!_789_');\necho text_lowercase_underscore('hello_world_123_!_456_!_789_!');\necho text_lowercase_underscore('hello_world_123_!_456_!_789_!_');\necho text_lowercase_underscore('hello_world_123_!_456_!_789_!_000');\necho text_lowercase_underscore('hello_world_123_!_456_!_789_!_000_');\necho text_lowercase_underscore('hello_world_123_!_456_!_789_!_000_!');\necho text_lowercase_underscore('hello_world_123_!_456_!_789_!_000_!_');\necho text_lowercase_underscore('hello_world_123_!_456_!_789_!_000_!_111');\necho text_lowercase_",
    "    if (preg_match('/^[a-z]+(_[a-z]+)*$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = \"/^[a-z_]+$/\";\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $text_array = str_split($text);\n    $count = count($text_array);\n    $flag = 0;\n    for ($i = 0; $i < $count; $i++) {\n        if (ctype_lower($text_array[$i])) {\n            $flag = 1;\n        } elseif ($text_array[$i] == '_') {\n            $flag = 1;\n        } else {\n            $flag = 0;\n            break;\n        }\n    }\n    if ($flag == 1) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    return preg_match($pattern, $text);\n}\n",
    "\treturn preg_match('/^[a-z]+(_[a-z]+)*$/', $text);\n}\n",
    "  $pattern = \"/^[a-z]+(_[a-z]+)*$/\";\n  if (preg_match($pattern, $text)) {\n    return true;\n  } else {\n    return false;\n  }\n}\n",
    "    return preg_match(\"/^[a-z]+(_[a-z]+)*$/\", $text);\n}\n",
    "  if (preg_match('/^[a-z]+(_[a-z]+)+$/', $text)) {\n    return true;\n  }\n  return false;\n}\n",
    "    $text_array = str_split($text);\n    $text_length = count($text_array);\n    $text_lowercase = false;\n    $text_underscore = false;\n    for ($i = 0; $i < $text_length; $i++) {\n        if (ctype_lower($text_array[$i])) {\n            $text_lowercase = true;\n        }\n        if ($text_array[$i] == '_') {\n            $text_underscore = true;\n        }\n    }\n    if ($text_lowercase && $text_underscore) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = \"/^[a-z_]+$/\";\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $text = str_split($text);\n    $result = false;\n    foreach ($text as $key => $value) {\n        if (ctype_lower($value)) {\n            $result = true;\n        } elseif ($value == '_') {\n            $result = true;\n        } else {\n            $result = false;\n            break;\n        }\n    }\n    return $result;\n}\n",
    "  $pattern = '/^[a-z]+(_[a-z]+)*$/';\n  if (preg_match($pattern, $text)) {\n    return true;\n  } else {\n    return false;\n  }\n}\n",
    "\t$pattern = '/^[a-z_]+$/';\n\treturn preg_match($pattern, $text);\n}\n",
    "\tif (preg_match('/^[a-z_]+$/', $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    $text = str_replace('_', '', $text);\n    $text = str_replace(' ', '', $text);\n    if (ctype_lower($text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho text_lowercase_underscore('hello_world');\necho '<br>';\necho text_lowercase_underscore('hello world');\necho '<br>';\necho text_lowercase_underscore('hello_World');\necho '<br>';\necho text_lowercase_underscore('hello_world_');\necho '<br>';\necho text_lowercase_underscore('_hello_world');\necho '<br>';\necho text_lowercase_underscore('hello_world_');\necho '<br>';\necho text_lowercase_underscore('hello_world_hello_world');\necho '<br>';\necho text_lowercase_underscore('hello_world_hello_world_');\necho '<br>';\necho text_lowercase_underscore('_hello_world_hello_world');\necho '<br>';\necho text_lowercase_underscore('_hello_world_hello_world_');\necho '<br>';\necho text_lowercase_underscore('hello_world_hello_world_hello_world');\necho '<br>';\necho text_lowercase_underscore('hello_world_hello_world_hello_world_');\necho '<br>';\necho text_lowercase_underscore('_hello_world_hello_world_hello_world');\necho '<br>';\necho text_lowercase_underscore('_hello_world_hello_world_hello_world_');\necho '<br>';\necho text_lowercase_underscore('_hello_world_hello_world_hello_world_hello_world');\necho '<br>';\necho text_lowercase_underscore('_hello_world_hello_world_hello_world_hello_world_');\necho '<br>';\necho text_lowercase_underscore('hello_world_hello_world_hello_world_hello_world_hello",
    "  $pattern = '/^[a-z]+(_[a-z]+)+$/';\n  return preg_match($pattern, $text);\n}\n",
    "\t$text = str_replace('_', '', $text);\n\tif (ctype_lower($text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho text_lowercase_underscore('text_lowercase_underscore');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text_');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_text');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_text_');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_text_lowercase_unders",
    "    if (preg_match(\"/^[a-z_]+$/\", $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $text = str_replace('_', '', $text);\n    if (ctype_lower($text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\t$text = str_replace('_', '', $text);\n\tif (ctype_lower($text)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n",
    "    if (preg_match('/^[a-z]+_[a-z]+$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $text = str_replace(\"_\", \"\", $text);\n    if (ctype_lower($text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho text_lowercase_underscore(\"hello_world\");\necho \"<br>\";\necho text_lowercase_underscore(\"helloWorld\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123_\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123_456\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123_456_\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123_456_789\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123_456_789_\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123_456_789_0\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123_456_789_0_\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123_456_789_0_1\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123_456_789_0_1_\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123_456_789_0_1_2\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123_456_789_0_1_2_\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123_456_789_0_1_2_3\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123_456_789_0_1_2_3_\");\necho \"<br>\";\necho text_",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\t$pattern = '/^[a-z]+(_[a-z]+)*$/';\n\treturn preg_match($pattern, $text);\n}\n",
    "    if (preg_match('/^[a-z]+_[a-z]+$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match(\"/^[a-z_]+$/\", $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho text_lowercase_underscore(\"hello_world\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_!\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123!\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123!_\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123!_456\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123!_456!\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123!_456!_\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123!_456!_789\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123!_456!_789!\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123!_456!_789!_\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123!_456!_789!_0\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123!_456!_789!_0!\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123!_456!_789!_0!_\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123!_456!_789!_0!_1\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123!_456!_789!_0!_1!\");\necho \"<br>\";\necho text_lower",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    }\n    return false;\n}\n",
    "    if (preg_match('/^[a-z_]+$/', $text)) {\n        return true;\n    }\n    return false;\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho text_lowercase_underscore('hello_world');\necho '<br>';\necho text_lowercase_underscore('hello_world_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_3');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_3_');\necho '<br>';\necho text_",
    "    if (preg_match('/^[a-z]+(_[a-z]+)*$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    return preg_match($pattern, $text);\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    return preg_match($pattern, $text);\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    return preg_match($pattern, $text);\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\tif (preg_match('/^[a-z]+_[a-z]+$/', $text)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\necho text_lowercase_underscore('hello_world');\necho '<br>';\necho text_lowercase_underscore('hello_world_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_');\necho '<br>';\necho text_lowercase_underscore('_hello_world_123_456_');\necho '<br>';\necho text_lowercase_underscore('_hello_world_123_456_789');\necho '<br>';\necho text_lowercase_underscore('_hello_world_123_456_789_');\necho '<br>';\necho text_lowercase_underscore('_hello_world_123_456_789_0');\necho '<br>';\necho text_lowercase_underscore('_hello_world_123_456_789_0_');\necho '<br>';\necho text_lowercase_underscore('_hello_world_123_456_789_0_1');\necho '<br>';\necho text_lowercase_underscore('_hello_world_123_456_789_0_1_');\necho '<br>';\necho text_lowercase_underscore('_hello_world_123_456_789_0_1_2');\necho '<br>';\necho text_lowercase_underscore('_hello_world_123_456_789_0_1_2_');\necho '<br>';\necho text_lowercase_underscore('_hello_world_123_456_789_0_1_2_3');\necho '<br>';\necho text_lower",
    "    $text = str_replace(' ', '', $text);\n    $text = str_replace('_', '', $text);\n    $text = str_replace('-', '', $text);\n    $text = str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n    $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n    $text = str_replace(';', '', $text);\n    $text = str_replace(':', '', $text);\n    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n    $text = str_replace('/', '', $text);\n    $text = str_replace('\\\\', '', $text);\n    $text = str_replace('|', '', $text);\n    $text = str_replace('\"', '', $text);\n    $text = str_replace('\\'', '', $text);\n    $text = str_replace('`', '', $text);\n    $text = str_replace('~', '', $text);\n    $text = str_replace('@', '', $text);\n    $text = str_replace('#', '', $text);\n    $text = str_replace('$', '', $text);\n    $text = str_replace('%', '', $text);\n    $text = str_replace('^', '', $text);\n    $text = str_replace('&', '', $text);\n    $text = str_replace('*', '', $text);\n    $text = str_replace('+', '', $text);\n    $text = str_replace('=', '', $text);\n    $text = str_replace('<', '', $text);\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    return preg_match($pattern, $text);\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    }\n    return false;\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    }\n    return false;\n}\n\necho text_lowercase_underscore('abc_def_ghi') . \"\\n\";\necho text_lowercase_underscore('abc_def_ghi_') . \"\\n\";\necho text_lowercase_underscore('abc_def_ghi_j') . \"\\n\";\necho text_lowercase_underscore('abc_def_ghi_j_') . \"\\n\";\necho text_lowercase_underscore('_abc_def_ghi') . \"\\n\";\necho text_lowercase_underscore('abc_def_ghi_jkl_') . \"\\n\";\necho text_lowercase_underscore('abc_def_ghi_jkl_mno') . \"\\n\";\necho text_lowercase_underscore('abc_def_ghi_jkl_mno_') . \"\\n\";\necho text_lowercase_underscore('abc_def_ghi_jkl_mno_pqr') . \"\\n\";\necho text_lowercase_underscore('abc_def_ghi_jkl_mno_pqr_') . \"\\n\";\necho text_lowercase_underscore('abc_def_ghi_jkl_mno_pqr_stu') . \"\\n\";\necho text_lowercase_underscore('abc_def_ghi_jkl_mno_pqr_stu_') . \"\\n\";\necho text_lowercase_underscore('abc_def_ghi_jkl_mno_pqr_stu_vwx') . \"\\n\";\necho text_lowercase_underscore('abc_def_ghi_jkl_mno_pqr_stu_vwx_') . \"\\n\";\necho text_lowercase_underscore('abc_def_ghi_jkl_mno_pqr_stu_vwx_yz') . \"\\n\";\necho text_lowercase_underscore('abc_def_ghi_jkl_m",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match('/^[a-z]+_[a-z]+$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\t$text_array = str_split($text);\n\t$text_array_length = count($text_array);\n\t$text_lowercase_underscore = true;\n\tfor ($i = 0; $i < $text_array_length; $i++) {\n\t\tif (!ctype_lower($text_array[$i]) && !($text_array[$i] == '_')) {\n\t\t\t$text_lowercase_underscore = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn $text_lowercase_underscore;\n}\n",
    "    $text = str_replace(\"_\", \"\", $text);\n    if (ctype_lower($text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\t$text = str_replace(\"_\", \"\", $text);\n\tif (ctype_lower($text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "\tif (preg_match('/^[a-z]+(_[a-z]+)*$/', $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    $text_array = str_split($text);\n    $result = true;\n    foreach ($text_array as $key => $value) {\n        if ($value === \"_\") {\n            if (!ctype_lower($text_array[$key - 1]) || !ctype_lower($text_array[$key + 1])) {\n                $result = false;\n            }\n        }\n    }\n    return $result;\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    return preg_match($pattern, $text);\n}\n\necho text_lowercase_underscore('hello_world');\necho text_lowercase_underscore('hello_world_');\necho text_lowercase_underscore('hello_world_!');\necho text_lowercase_underscore('hello_world_123');\necho text_lowercase_underscore('hello_world_123_');\necho text_lowercase_underscore('hello_world_123_!');\necho text_lowercase_underscore('hello_world_123_!_');\necho text_lowercase_underscore('hello_world_123_!_!');\necho text_lowercase_underscore('hello_world_123_!_!_');\necho text_lowercase_underscore('hello_world_123_!_!_!');\necho text_lowercase_underscore('hello_world_123_!_!_!_');\necho text_lowercase_underscore('hello_world_123_!_!_!_!');\necho text_lowercase_underscore('hello_world_123_!_!_!_!_');\necho text_lowercase_underscore('hello_world_123_!_!_!_!_!');\necho text_lowercase_underscore('hello_world_123_!_!_!_!_!_');\necho text_lowercase_underscore('hello_world_123_!_!_!_!_!_!');\necho text_lowercase_underscore('hello_world_123_!_!_!_!_!_!_');\necho text_lowercase_underscore('hello_world_123_!_!_!_!_!_!_!');\necho text_lowercase_underscore('hello_world_123_!_!_!_!_!_!_!_');\necho text_lowercase_underscore('hello_world_123_!_!_!_!_!_!_!_!');\necho text_lowercase_underscore('hello_world_123_!_!_!",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    return preg_match($pattern, $text);\n}\n",
    "    $text = str_split($text);\n    $result = true;\n    for ($i = 0; $i < count($text); $i++) {\n        if ($text[$i] == '_') {\n            if (!ctype_lower($text[$i - 1]) || !ctype_lower($text[$i + 1])) {\n                $result = false;\n            }\n        }\n    }\n    return $result;\n}\n",
    "\t$pattern = '/^[a-z]+(_[a-z]+)*$/';\n\treturn preg_match($pattern, $text);\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $text = str_replace(' ', '', $text);\n    $text = str_replace('_', '', $text);\n    $text = strtolower($text);\n    $text = str_split($text);\n    $text = array_unique($text);\n    $text = implode($text);\n    if ($text == 'abcdefghijklmnopqrstuvwxyz') {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho text_lowercase_underscore('abc_def_ghi_jkl_mno_pqr_stu_vwx_yz');\necho '<br>';\necho text_lowercase_underscore('abc_def_ghi_jkl_mno_pqr_stu_vwx_yz_');\necho '<br>';\necho text_lowercase_underscore('abc_def_ghi_jkl_mno_pqr_stu_vwx_yz_123');\necho '<br>';\necho text_lowercase_underscore('abc_def_ghi_jkl_mno_pqr_stu_vwx_yz_ABC');\necho '<br>';\necho text_lowercase_underscore('abc_def_ghi_jkl_mno_pqr_stu_vwx_yz_ABC_123');\necho '<br>';\necho text_lowercase_underscore('abc_def_ghi_jkl_mno_pqr_stu_vwx_yz_ABC_123_');\necho '<br>';\necho text_lowercase_underscore('abc_def_ghi_jkl_mno_pqr_stu_vwx_yz_ABC_123_456');\necho '<br>';\necho text_lowercase_underscore('abc_def_ghi_jkl_mno_pqr_stu_vwx_yz_ABC_123_456_');\necho '<br>';\necho text_lowercase_underscore('abc_def_ghi_jkl_mno_pqr_stu_",
    "    $text = str_split($text);\n    $result = false;\n    $i = 0;\n    $count = count($text);\n    while ($i < $count) {\n        if (ctype_lower($text[$i])) {\n            $result = true;\n            $i++;\n            while ($i < $count && $text[$i] == '_') {\n                $result = true;\n                $i++;\n                if ($i < $count && ctype_lower($text[$i])) {\n                    $result = true;\n                    $i++;\n                } else {\n                    $result = false;\n                    break;\n                }\n            }\n        } else {\n            $result = false;\n            break;\n        }\n    }\n    return $result;\n}\n",
    "\treturn preg_match('/^[a-z_]+$/', $text);\n}\n",
    "    if (preg_match('/^[a-z]+(_[a-z]+)*$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "  $pattern = '/[a-z]_[a-z]/';\n  if (preg_match($pattern, $text)) {\n    return true;\n  }\n  return false;\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "  return preg_match('/^[a-z_]+$/', $text);\n}\n",
    "    if (preg_match('/^[a-z]+(_[a-z]+)*$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    return preg_match($pattern, $text);\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    return preg_match($pattern, $text);\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    return preg_match($pattern, $text);\n}\n",
    "\t$text = str_replace('_', '', $text);\n\t$text = str_replace(' ', '', $text);\n\tif (ctype_lower($text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    $text_array = str_split($text);\n    $text_length = count($text_array);\n    $text_lowercase = 0;\n    $text_underscore = 0;\n    for ($i = 0; $i < $text_length; $i++) {\n        if (ctype_lower($text_array[$i])) {\n            $text_lowercase++;\n        }\n        if ($text_array[$i] == \"_\") {\n            $text_underscore++;\n        }\n    }\n    if ($text_lowercase == $text_length - $text_underscore) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $text = strtolower($text);\n    $text = str_replace(\"_\", \"\", $text);\n    if (ctype_lower($text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "  $text = str_split($text);\n  $result = true;\n  foreach ($text as $key => $value) {\n    if ($value == '_') {\n      if ($text[$key-1] == '_' || $text[$key+1] == '_') {\n        $result = false;\n      }\n    }\n    if ($value == strtoupper($value)) {\n      $result = false;\n    }\n  }\n  return $result;\n}\n\necho text_lowercase_underscore('hello_world');\necho '<br>';\necho text_lowercase_underscore('hello_World');\necho '<br>';\necho text_lowercase_underscore('hello_World_');\necho '<br>';\necho text_lowercase_underscore('hello_world_');\necho '<br>';\necho text_lowercase_underscore('hello_world__');\necho '<br>';\necho text_lowercase_underscore('hello_world_hello_world');\necho '<br>';\necho text_lowercase_underscore('hello_world_hello_world_');\necho '<br>';\necho text_lowercase_underscore('hello_world_hello_world_hello_world');\necho '<br>';\necho text_lowercase_underscore('hello_world_hello_world_hello_world_');\necho '<br>';\necho text_lowercase_underscore('hello_world_hello_world_hello_world_hello_world');\necho '<br>';\necho text_lowercase_underscore('hello_world_hello_world_hello_world_hello_world_');\necho '<br>';\necho text_lowercase_underscore('hello_world_hello_world_hello_world_hello_world_hello_world');\necho '<br>';\necho text_lowercase_underscore('hello_world_hello_world_hello_world_hello_world_hello_world_');\necho '<br>';\necho text_lowercase_underscore('hello_world_hello_world_hello_world_hello_world_hello_world_hello_",
    "    return preg_match('/^[a-z_]+$/', $text);\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\t$text = str_replace('_', '', $text);\n\tif (ctype_lower($text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "  $text_array = str_split($text);\n  $text_array_length = count($text_array);\n  $text_array_length_minus_1 = $text_array_length - 1;\n  $text_array_length_minus_2 = $text_array_length - 2;\n  $text_array_length_minus_3 = $text_array_length - 3;\n  $text_array_length_minus_4 = $text_array_length - 4;\n  $text_array_length_minus_5 = $text_array_length - 5;\n  $text_array_length_minus_6 = $text_array_length - 6;\n  $text_array_length_minus_7 = $text_array_length - 7;\n  $text_array_length_minus_8 = $text_array_length - 8;\n  $text_array_length_minus_9 = $text_array_length - 9;\n  $text_array_length_minus_10 = $text_array_length - 10;\n  $text_array_length_minus_11 = $text_array_length - 11;\n  $text_array_length_minus_12 = $text_array_length - 12;\n  $text_array_length_minus_13 = $text_array_length - 13;\n  $text_array_length_minus_14 = $text_array_length - 14;\n  $text_array_length_minus_15 = $text_array_length - 15;\n  $text_array_length_minus_16 = $text_array_length - 16;\n  $text_array_length_minus_17 = $text_array_length - 17;\n  $text_array_length_minus_18 = $text_array_length - 18;\n  $text_array_length_minus_19 = $text_array_length - 19;\n  $text_array_length_minus_20 = $text_array_length - 20;\n  $text_array_length_minus_21 = $text_array_length - 21;\n  $text_array_length_minus_22 = $text_array_length - 22;",
    "\tif (preg_match('/^[a-z]+_[a-z]+$/', $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    $text = str_split($text);\n    $result = false;\n    foreach ($text as $key => $value) {\n        if (ctype_lower($value) || $value == '_') {\n            $result = true;\n        } else {\n            $result = false;\n            break;\n        }\n    }\n    return $result;\n}\n",
    "    if (preg_match(\"/^[a-z]+_[a-z]+$/\", $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match(\"/^[a-z_]+$/\", $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    return preg_match($pattern, $text);\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    return preg_match($pattern, $text);\n}\n",
    "    $text = str_replace('_', '', $text);\n    if (ctype_lower($text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "  $result = preg_match(\"/^[a-z]+(_[a-z]+)*$/\", $text);\n  if ($result) {\n    return true;\n  } else {\n    return false;\n  }\n}\n",
    "    $pattern = \"/^[a-z_]+$/\";\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n"
  ]
}
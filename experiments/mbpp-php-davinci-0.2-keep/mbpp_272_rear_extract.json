{
  "name": "mbpp_272_rear_extract",
  "language": "php",
  "prompt": "<?php\n// Write a function that takes in a list of tuples and returns a list containing the rear element of each tuple.\nfunction rear_extract($test_list) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_272_rear_extract.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return rear_extract(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1, \"Rash\", 21), array(2, \"Varsha\", 20), array(3, \"Kil\", 19))) !== array(21, 20, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, \"Sai\", 36), array(2, \"Ayesha\", 25), array(3, \"Salman\", 45))) !== array(36, 25, 45)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, \"Sudeep\", 14), array(2, \"Vandana\", 36), array(3, \"Dawood\", 56))) !== array(14, 36, 56)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10),\n    array(11, 12),\n    array(13, 14),\n    array(15, 16),\n    array(17, 18),\n    array(19, 20),\n);\n\nprint_r(rear_extract($test_list));",
    "    $rear_list = array();\n    foreach ($test_list as $tuple) {\n        $rear_list[] = $tuple[1];\n    }\n    return $rear_list;\n}\n",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\tarray_push($result, $tuple[1]);\n\t}\n\treturn $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10),\n    array(11, 12),\n    array(13, 14),\n    array(15, 16),\n    array(17, 18),\n    array(19, 20),\n);\n\nprint_r(rear_extract($test_list));\n",
    "\t$result = array();\n\tforeach($test_list as $tuple) {\n\t\tarray_push($result, $tuple[1]);\n\t}\n\treturn $result;\n}\n",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n",
    "    $new_list = array();\n    foreach ($test_list as $tuple) {\n        array_push($new_list, $tuple[1]);\n    }\n    return $new_list;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10)\n);\n\nprint_r(rear_extract($test_list));",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10),\n    array(11, 12),\n);\n\nprint_r(rear_extract($test_list));",
    "  $result = array();\n  foreach ($test_list as $tuple) {\n    $result[] = $tuple[1];\n  }\n  return $result;\n}\n",
    "  $result = array();\n  foreach ($test_list as $tuple) {\n    $result[] = $tuple[1];\n  }\n  return $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10)\n);\n\nprint_r(rear_extract($test_list));",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n",
    "    $rear_list = array();\n    foreach ($test_list as $tuple) {\n        $rear_list[] = $tuple[1];\n    }\n    return $rear_list;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10)\n);\n\nprint_r(rear_extract($test_list));",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10),\n    array(11, 12),\n    array(13, 14),\n    array(15, 16),\n    array(17, 18),\n    array(19, 20),\n);\n\nprint_r(rear_extract($test_list));\n",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10),\n);\n\nprint_r(rear_extract($test_list));",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $item) {\n        $result[] = $item[1];\n    }\n    return $result;\n}\n",
    "    $rear_list = array();\n    foreach ($test_list as $tuple) {\n        array_push($rear_list, $tuple[1]);\n    }\n    return $rear_list;\n}\n",
    "    $new_list = array();\n    foreach ($test_list as $tuple) {\n        $new_list[] = $tuple[1];\n    }\n    return $new_list;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10),\n);\n\nprint_r(rear_extract($test_list));\n",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\tarray_push($result, $tuple[1]);\n\t}\n\treturn $result;\n}\n\n$test_list = array(\n\tarray(1, 2),\n\tarray(3, 4),\n\tarray(5, 6)\n);\n\nprint_r(rear_extract($test_list));",
    "    $result = [];\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = [[1, 2], [3, 4], [5, 6]];\nprint_r(rear_extract($test_list));\n",
    "    $result = [];\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = [[1, 2], [3, 4], [5, 6]];\nprint_r(rear_extract($test_list));\n",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6)\n);\n\n$result = rear_extract($test_list);\n\nprint_r($result);",
    "    $new_list = array();\n    foreach ($test_list as $tuple) {\n        $new_list[] = $tuple[1];\n    }\n    return $new_list;\n}\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10),\n);\nprint_r(rear_extract($test_list));",
    "    $new_list = array();\n    foreach ($test_list as $tuple) {\n        $new_list[] = $tuple[1];\n    }\n    return $new_list;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10),\n);\n\nprint_r(rear_extract($test_list));\n",
    "    $new_list = array();\n    foreach ($test_list as $tuple) {\n        $new_list[] = $tuple[1];\n    }\n    return $new_list;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10),\n);\n\nprint_r(rear_extract($test_list));\n",
    "    $result = array();\n    foreach($test_list as $tuple) {\n        array_push($result, $tuple[1]);\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10)\n);\n\nprint_r(rear_extract($test_list));\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10),\n    array(11, 12),\n    array(13, 14),\n    array(15, 16),\n    array(17, 18),\n    array(19, 20),\n);\n\nprint_r(rear_extract($test_list));\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10)\n);\n\n$result = rear_extract($test_list);\n\nprint_r($result);\n",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10)\n);\n\n$result = rear_extract($test_list);\nprint_r($result);",
    "\t$new_list = array();\n\tforeach ($test_list as $tuple) {\n\t\t$new_list[] = $tuple[1];\n\t}\n\treturn $new_list;\n}\n\n$test_list = array(array(1, 2), array(3, 4), array(5, 6));\nprint_r(rear_extract($test_list));",
    "\t$new_list = array();\n\tforeach($test_list as $tuple) {\n\t\t$new_list[] = $tuple[1];\n\t}\n\treturn $new_list;\n}\n\n$test_list = array(\n\tarray(1, 2),\n\tarray(3, 4),\n\tarray(5, 6)\n);\nprint_r(rear_extract($test_list));",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10),\n    array(11, 12),\n    array(13, 14),\n    array(15, 16),\n    array(17, 18),\n    array(19, 20),\n);\n\n$result = rear_extract($test_list);\n\necho \"rear_extract({$test_list[0][0]}, {$test_list[0][1]}, {$test_list[1][0]}, {$test_list[1][1]}, {$test_list[2][0]}, {$test_list[2][1]}, {$test_list[3][0]}, {$test_list[3][1]}, {$test_list[4][0]}, {$test_list[4][1]}, {$test_list[5][0]}, {$test_list[5][1]}, {$test_list[6][0]}, {$test_list[6][1]}, {$test_list[7][0]}, {$test_list[7][1]}, {$test_list[8][0]}, {$test_list[8][1]}, {$test_list[9][0]}, {$test_list[9][1]}) = {$result[0]}, {$result[1]}, {$result[2]}, {$result[3]}, {$result[4]}, {$result[5]}, {$result[6]}, {$result[7]}, {$result[8]}, {$result[9]}\";",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2), array(3, 4), array(5, 6));\nprint_r(rear_extract($test_list));",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n",
    "\t$result_list = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result_list[] = $tuple[1];\n\t}\n\treturn $result_list;\n}\n",
    "    $result = [];\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = [[1, 2], [3, 4], [5, 6]];\nprint_r(rear_extract($test_list));",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10)\n);\n\n$result = rear_extract($test_list);\n\nprint_r($result);",
    "    $new_list = array();\n    foreach ($test_list as $tuple) {\n        $new_list[] = $tuple[1];\n    }\n    return $new_list;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10),\n);\n\nprint_r(rear_extract($test_list));\n",
    "    $new_list = array();\n    foreach($test_list as $tuple) {\n        $new_list[] = $tuple[1];\n    }\n    return $new_list;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6)\n);\n\nprint_r(rear_extract($test_list));\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10),\n);\n\nprint_r(rear_extract($test_list));",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6)\n);\n\nprint_r(rear_extract($test_list));",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $item) {\n        $result[] = $item[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n);\n\nprint_r(rear_extract($test_list));",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        array_push($result, $tuple[1]);\n    }\n    return $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10)\n);\n\n$result = rear_extract($test_list);\nprint_r($result);\n",
    "    $result = array();\n    foreach ($test_list as $item) {\n        $result[] = $item[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n);\n\nprint_r(rear_extract($test_list));\n",
    "\t$rear_list = array();\n\tforeach ($test_list as $tuple) {\n\t\t$rear_list[] = $tuple[1];\n\t}\n\treturn $rear_list;\n}\n",
    "    $result = array();\n    foreach($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n",
    "\t$new_list = array();\n\tforeach ($test_list as $tuple) {\n\t\t$new_list[] = $tuple[1];\n\t}\n\treturn $new_list;\n}\n\n$test_list = array(\n\tarray(1, 2),\n\tarray(3, 4),\n\tarray(5, 6),\n\tarray(7, 8),\n\tarray(9, 10)\n);\n\n$result = rear_extract($test_list);\n\necho \"The result is: \";\nprint_r($result);",
    "  $result = array();\n  foreach ($test_list as $tuple) {\n    $result[] = $tuple[1];\n  }\n  return $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        array_push($result, $tuple[1]);\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10)\n);\n\nprint_r(rear_extract($test_list));\n",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10),\n    array(11, 12),\n    array(13, 14),\n    array(15, 16),\n    array(17, 18),\n    array(19, 20),\n    array(21, 22),\n    array(23, 24),\n    array(25, 26),\n    array(27, 28),\n    array(29, 30),\n    array(31, 32),\n    array(33, 34),\n    array(35, 36),\n    array(37, 38),\n    array(39, 40),\n    array(41, 42),\n    array(43, 44),\n    array(45, 46),\n    array(47, 48),\n    array(49, 50),\n    array(51, 52),\n    array(53, 54),\n    array(55, 56),\n    array(57, 58),\n    array(59, 60),\n    array(61, 62),\n    array(63, 64),\n    array(65, 66),\n    array(67, 68),\n    array(69, 70),\n    array(71, 72),\n    array(73, 74),\n    array(75, 76),\n    array(77, 78),\n    array(79, 80),\n    array(81, 82),\n    array(83, 84),\n    array(85, 86),\n    array(87, 88),\n    array(89, 90),\n    array(91, 92),\n    array(93, 94),\n    array(95, 96),\n    array(97, 98),\n    array(99, 100),\n    array(101, 102),\n    array(103, 104),\n    array(105, 106),\n    array(107, 108),\n    array(109, 110),\n    array(111, 112),\n    array(113, 114),\n    array",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10),\n);\n\nprint_r(rear_extract($test_list));",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n",
    "    $new_list = array();\n    foreach ($test_list as $tuple) {\n        $new_list[] = $tuple[1];\n    }\n    return $new_list;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10),\n    array(11, 12),\n    array(13, 14),\n    array(15, 16),\n    array(17, 18),\n    array(19, 20),\n);\n\n$result = rear_extract($test_list);\necho \"Result: \";\nprint_r($result);\necho \"\\n\";",
    "\t$result = [];\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n",
    "    $new_list = array();\n    foreach ($test_list as $tuple) {\n        $new_list[] = $tuple[1];\n    }\n    return $new_list;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6)\n);\n\nprint_r(rear_extract($test_list));\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10)\n);\n\n$result = rear_extract($test_list);\n\nprint_r($result);\n",
    "    $rear_list = array();\n    foreach ($test_list as $tuple) {\n        array_push($rear_list, array_pop($tuple));\n    }\n    return $rear_list;\n}\n\n$test_list = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(rear_extract($test_list));",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n",
    "  $new_list = array();\n  foreach ($test_list as $tuple) {\n    array_push($new_list, $tuple[1]);\n  }\n  return $new_list;\n}\n\n$test_list = array(\n  array(1, 2),\n  array(3, 4),\n  array(5, 6),\n  array(7, 8),\n  array(9, 10),\n);\n\n$result = rear_extract($test_list);\nprint_r($result);",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10),\n);\n\nprint_r(rear_extract($test_list));",
    "    $result = [];\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n",
    "    $rear_list = array();\n    foreach ($test_list as $tuple) {\n        $rear_list[] = $tuple[1];\n    }\n    return $rear_list;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n);\n\nprint_r(rear_extract($test_list));",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\tarray_push($result, $tuple[1]);\n\t}\n\treturn $result;\n}\n\n$test_list = array(\n\tarray(1, 2),\n\tarray(3, 4),\n\tarray(5, 6),\n\tarray(7, 8),\n\tarray(9, 10),\n\tarray(11, 12)\n);\n\nprint_r(rear_extract($test_list));",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n",
    "\t$new_list = array();\n\tforeach ($test_list as $tuple) {\n\t\t$new_list[] = $tuple[1];\n\t}\n\treturn $new_list;\n}\n",
    "    $result = [];\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n$test_list = [[1, 2], [3, 4], [5, 6]];\nprint_r(rear_extract($test_list));\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10)\n);\n\nprint_r(rear_extract($test_list));\n",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n\n$test_list = array(\n\tarray(1, 2),\n\tarray(3, 4),\n\tarray(5, 6),\n);\n\nprint_r(rear_extract($test_list));",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10)\n);\n\nprint_r(rear_extract($test_list));\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[count($tuple) - 1];\n    }\n    return $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        array_push($result, $tuple[1]);\n    }\n    return $result;\n}\n",
    "    $result = [];\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = [[1, 2], [3, 4], [5, 6]];\nprint_r(rear_extract($test_list));\n",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n\n$test_list = array(\n\tarray(1, 2),\n\tarray(3, 4),\n\tarray(5, 6),\n\tarray(7, 8),\n\tarray(9, 10),\n\tarray(11, 12),\n\tarray(13, 14),\n\tarray(15, 16),\n\tarray(17, 18),\n\tarray(19, 20),\n\tarray(21, 22),\n\tarray(23, 24),\n\tarray(25, 26),\n\tarray(27, 28),\n\tarray(29, 30),\n\tarray(31, 32),\n\tarray(33, 34),\n\tarray(35, 36),\n\tarray(37, 38),\n\tarray(39, 40),\n\tarray(41, 42),\n\tarray(43, 44),\n\tarray(45, 46),\n\tarray(47, 48),\n\tarray(49, 50),\n\tarray(51, 52),\n\tarray(53, 54),\n\tarray(55, 56),\n\tarray(57, 58),\n\tarray(59, 60),\n\tarray(61, 62),\n\tarray(63, 64),\n\tarray(65, 66),\n\tarray(67, 68),\n\tarray(69, 70),\n\tarray(71, 72),\n\tarray(73, 74),\n\tarray(75, 76),\n\tarray(77, 78),\n\tarray(79, 80),\n\tarray(81, 82),\n\tarray(83, 84),\n\tarray(85, 86),\n\tarray(87, 88),\n\tarray(89, 90),\n\tarray(91, 92),\n\tarray(93, 94),\n\tarray(95, 96),\n\tarray(97, 98),\n\tarray(99, 100),\n\tarray(101, 102),\n\tarray(103, 104),\n\tarray(105, 106),\n\tarray(107, 108),\n\tarray(109, 110),\n\tarray(111, 112),\n\tarray(113, 114),\n\t",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n\n$test_list = array(\n\tarray(1, 2),\n\tarray(3, 4),\n\tarray(5, 6),\n\tarray(7, 8),\n\tarray(9, 10)\n);\n\nprint_r(rear_extract($test_list));\n",
    "    $result_list = array();\n    foreach ($test_list as $tuple) {\n        array_push($result_list, $tuple[1]);\n    }\n    return $result_list;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10)\n);\n\n$result_list = rear_extract($test_list);\nprint_r($result_list);",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n\n$test_list = array(\n\tarray(1, 2),\n\tarray(3, 4),\n\tarray(5, 6),\n\tarray(7, 8)\n);\n\nprint_r(rear_extract($test_list));\n",
    "\t$rear_list = array();\n\tforeach ($test_list as $tuple) {\n\t\t$rear_list[] = $tuple[1];\n\t}\n\treturn $rear_list;\n}\n\n$test_list = array(\n\tarray(1, 2),\n\tarray(3, 4),\n\tarray(5, 6),\n\tarray(7, 8),\n\tarray(9, 10),\n\tarray(11, 12),\n\tarray(13, 14),\n\tarray(15, 16),\n\tarray(17, 18),\n\tarray(19, 20),\n);\n\nprint_r(rear_extract($test_list));\n",
    "\t$rear_list = array();\n\tforeach ($test_list as $tuple) {\n\t\t$rear_list[] = $tuple[1];\n\t}\n\treturn $rear_list;\n}\n\n$test_list = array(\n\tarray(1, 2),\n\tarray(3, 4),\n\tarray(5, 6),\n\tarray(7, 8),\n\tarray(9, 10),\n\tarray(11, 12),\n\tarray(13, 14),\n\tarray(15, 16),\n\tarray(17, 18),\n\tarray(19, 20),\n);\n\nprint_r(rear_extract($test_list));",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\tarray_push($result, $tuple[1]);\n\t}\n\treturn $result;\n}\n\n$test_list = array(\n\tarray(1, 2),\n\tarray(3, 4),\n\tarray(5, 6),\n\tarray(7, 8),\n\tarray(9, 10),\n\tarray(11, 12),\n\tarray(13, 14),\n\tarray(15, 16),\n\tarray(17, 18),\n\tarray(19, 20),\n\tarray(21, 22),\n\tarray(23, 24),\n\tarray(25, 26),\n\tarray(27, 28),\n\tarray(29, 30),\n\tarray(31, 32),\n\tarray(33, 34),\n\tarray(35, 36),\n\tarray(37, 38),\n\tarray(39, 40),\n\tarray(41, 42),\n\tarray(43, 44),\n\tarray(45, 46),\n\tarray(47, 48),\n\tarray(49, 50),\n\tarray(51, 52),\n\tarray(53, 54),\n\tarray(55, 56),\n\tarray(57, 58),\n\tarray(59, 60),\n\tarray(61, 62),\n\tarray(63, 64),\n\tarray(65, 66),\n\tarray(67, 68),\n\tarray(69, 70),\n\tarray(71, 72),\n\tarray(73, 74),\n\tarray(75, 76),\n\tarray(77, 78),\n\tarray(79, 80),\n\tarray(81, 82),\n\tarray(83, 84),\n\tarray(85, 86),\n\tarray(87, 88),\n\tarray(89, 90),\n\tarray(91, 92),\n\tarray(93, 94),\n\tarray(95, 96),\n\tarray(97, 98),\n\tarray(99, 100),\n\tarray(101, 102),\n\tarray(103, 104),\n\tarray(105, 106),\n\tarray(107, 108),\n\tarray(109, 110),\n\tarray(111, 112),\n\tarray(113, 114),",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n\n$test_list = array(\n\tarray(1, 2),\n\tarray(3, 4),\n\tarray(5, 6),\n\tarray(7, 8),\n\tarray(9, 10)\n);\n\nprint_r(rear_extract($test_list));\n",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n",
    "    // Write your code here\n    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        array_push($result, $tuple[1]);\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2), array(3, 4), array(5, 6));\nprint_r(rear_extract($test_list));\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10),\n);\n\nprint_r(rear_extract($test_list));",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10)\n);\n\nprint_r(rear_extract($test_list));",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10)\n);\n\nprint_r(rear_extract($test_list));",
    "  $result = array();\n  foreach ($test_list as $tuple) {\n    $result[] = $tuple[1];\n  }\n  return $result;\n}\n\n$test_list = array(\n  array(1, 2),\n  array(3, 4),\n  array(5, 6),\n);\n\nprint_r(rear_extract($test_list));\n",
    "    $result = array();\n    foreach ($test_list as $item) {\n        $result[] = $item[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10),\n);\n\nprint_r(rear_extract($test_list));\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10)\n);\n\nprint_r(rear_extract($test_list));",
    "\t$new_list = array();\n\tforeach ($test_list as $tuple) {\n\t\t$new_list[] = $tuple[1];\n\t}\n\treturn $new_list;\n}\n\n$test_list = array(\n\tarray(1, 2),\n\tarray(3, 4),\n\tarray(5, 6),\n);\n\nprint_r(rear_extract($test_list));",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\tarray_push($result, $tuple[1]);\n\t}\n\treturn $result;\n}\n",
    "  $result_list = array();\n  foreach ($test_list as $tuple) {\n    $result_list[] = $tuple[1];\n  }\n  return $result_list;\n}\n\n$test_list = array(\n  array(1, 2),\n  array(3, 4),\n  array(5, 6),\n  array(7, 8),\n  array(9, 10),\n);\n\nprint_r(rear_extract($test_list));\n",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n\n$test_list = array(\n\tarray(1, 2),\n\tarray(3, 4),\n\tarray(5, 6),\n\tarray(7, 8),\n\tarray(9, 10),\n\tarray(11, 12),\n\tarray(13, 14),\n\tarray(15, 16),\n\tarray(17, 18),\n\tarray(19, 20),\n\tarray(21, 22),\n\tarray(23, 24),\n\tarray(25, 26),\n\tarray(27, 28),\n\tarray(29, 30),\n\tarray(31, 32),\n\tarray(33, 34),\n\tarray(35, 36),\n\tarray(37, 38),\n\tarray(39, 40),\n\tarray(41, 42),\n\tarray(43, 44),\n\tarray(45, 46),\n\tarray(47, 48),\n\tarray(49, 50),\n\tarray(51, 52),\n\tarray(53, 54),\n\tarray(55, 56),\n\tarray(57, 58),\n\tarray(59, 60),\n\tarray(61, 62),\n\tarray(63, 64),\n\tarray(65, 66),\n\tarray(67, 68),\n\tarray(69, 70),\n\tarray(71, 72),\n\tarray(73, 74),\n\tarray(75, 76),\n\tarray(77, 78),\n\tarray(79, 80),\n\tarray(81, 82),\n\tarray(83, 84),\n\tarray(85, 86),\n\tarray(87, 88),\n\tarray(89, 90),\n\tarray(91, 92),\n\tarray(93, 94),\n\tarray(95, 96),\n\tarray(97, 98),\n\tarray(99, 100),\n\tarray(101, 102),\n\tarray(103, 104),\n\tarray(105, 106),\n\tarray(107, 108),\n\tarray(109, 110),\n\tarray(111, 112),\n\tarray(113, 114),\n\t",
    "    $result_list = array();\n    foreach ($test_list as $tuple) {\n        array_push($result_list, $tuple[1]);\n    }\n    return $result_list;\n}\n",
    "    $rear_list = array();\n    foreach ($test_list as $tuple) {\n        $rear_list[] = $tuple[1];\n    }\n    return $rear_list;\n}\n",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\tarray_push($result, $tuple[1]);\n\t}\n\treturn $result;\n}\n\n$test_list = array(\n\tarray(1, 2),\n\tarray(3, 4),\n\tarray(5, 6),\n\tarray(7, 8)\n);\n\n$result = rear_extract($test_list);\nprint_r($result);",
    "    $result = [];\n    foreach ($test_list as $tuple) {\n        array_push($result, $tuple[1]);\n    }\n    return $result;\n}\n\n$test_list = [[1, 2], [3, 4], [5, 6]];\nprint_r(rear_extract($test_list));\n",
    "    $rear_list = array();\n    foreach ($test_list as $tuple) {\n        array_push($rear_list, $tuple[1]);\n    }\n    return $rear_list;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n",
    "    $result = array();\n    foreach($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10)\n);\n\nprint_r(rear_extract($test_list));",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = end($tuple);\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9),\n    array(10, 11, 12)\n);\n\n$result = rear_extract($test_list);\nprint_r($result);",
    "    $result = array();\n    foreach ($test_list as $item) {\n        $result[] = $item[1];\n    }\n    return $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $item) {\n        $result[] = $item[1];\n    }\n    return $result;\n}\n",
    "\t$new_list = array();\n\tforeach ($test_list as $tuple) {\n\t\t$new_list[] = $tuple[1];\n\t}\n\treturn $new_list;\n}\n\n$test_list = array(\n\tarray(1, 2),\n\tarray(3, 4),\n\tarray(5, 6),\n\tarray(7, 8),\n\tarray(9, 10)\n);\n\nprint_r(rear_extract($test_list));\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        array_push($result, $tuple[1]);\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(\"a\", \"b\"),\n    array(\"c\", \"d\"),\n    array(\"e\", \"f\"),\n    array(\"g\", \"h\"),\n    array(\"i\", \"j\"),\n    array(\"k\", \"l\"),\n    array(\"m\", \"n\"),\n    array(\"o\", \"p\"),\n    array(\"q\", \"r\"),\n    array(\"s\", \"t\"),\n    array(\"u\", \"v\"),\n    array(\"w\", \"x\"),\n    array(\"y\", \"z\")\n);\n\nprint_r(rear_extract($test_list));",
    "\t$new_list = array();\n\tforeach ($test_list as $tuple) {\n\t\t$new_list[] = $tuple[1];\n\t}\n\treturn $new_list;\n}\n\n$test_list = array(\n\tarray(1, 2),\n\tarray(3, 4),\n\tarray(5, 6),\n\tarray(7, 8),\n\tarray(9, 10)\n);\n\nprint_r(rear_extract($test_list));\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        array_push($result, $tuple[1]);\n    }\n    return $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n\n$test_list = array(\n\tarray(1, 2),\n\tarray(3, 4),\n\tarray(5, 6),\n\tarray(7, 8),\n\tarray(9, 10),\n\tarray(11, 12),\n\tarray(13, 14),\n\tarray(15, 16),\n\tarray(17, 18),\n\tarray(19, 20),\n\tarray(21, 22),\n\tarray(23, 24),\n\tarray(25, 26),\n\tarray(27, 28),\n\tarray(29, 30),\n\tarray(31, 32),\n\tarray(33, 34),\n\tarray(35, 36),\n\tarray(37, 38),\n\tarray(39, 40),\n\tarray(41, 42),\n\tarray(43, 44),\n\tarray(45, 46),\n\tarray(47, 48),\n\tarray(49, 50),\n\tarray(51, 52),\n\tarray(53, 54),\n\tarray(55, 56),\n\tarray(57, 58),\n\tarray(59, 60),\n\tarray(61, 62),\n\tarray(63, 64),\n\tarray(65, 66),\n\tarray(67, 68),\n\tarray(69, 70),\n\tarray(71, 72),\n\tarray(73, 74),\n\tarray(75, 76),\n\tarray(77, 78),\n\tarray(79, 80),\n\tarray(81, 82),\n\tarray(83, 84),\n\tarray(85, 86),\n\tarray(87, 88),\n\tarray(89, 90),\n\tarray(91, 92),\n\tarray(93, 94),\n\tarray(95, 96),\n\tarray(97, 98),\n\tarray(99, 100),\n\tarray(101, 102),\n\tarray(103, 104),\n\tarray(105, 106),\n\tarray(107, 108),\n\tarray(109, 110),\n\tarray(111, 112),\n\tarray(113, 114),\n\t",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10)\n);\n\nprint_r(rear_extract($test_list));",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n\n$test_list = array(array(1, 2), array(3, 4), array(5, 6));\nprint_r(rear_extract($test_list));\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n",
    "    $result = [];\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10),\n);\n\nprint_r(rear_extract($test_list));\n",
    "    $rear_list = [];\n    foreach ($test_list as $tuple) {\n        $rear_list[] = $tuple[1];\n    }\n    return $rear_list;\n}\n\n$test_list = [[1, 2], [3, 4], [5, 6]];\nprint_r(rear_extract($test_list));\n",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\tarray_push($result, array_pop($tuple));\n\t}\n\treturn $result;\n}\n\n$test_list = array(\n\tarray(1, 2, 3),\n\tarray(4, 5, 6),\n\tarray(7, 8, 9)\n);\n\nprint_r(rear_extract($test_list));",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        array_push($result, $tuple[1]);\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2), array(3, 4), array(5, 6));\nprint_r(rear_extract($test_list));",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n",
    "\t$new_list = array();\n\tforeach ($test_list as $tuple) {\n\t\t$new_list[] = $tuple[1];\n\t}\n\treturn $new_list;\n}\n\n$test_list = array(\n\tarray(1, 2),\n\tarray(3, 4),\n\tarray(5, 6)\n);\n\nprint_r(rear_extract($test_list));\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10),\n);\n\nprint_r(rear_extract($test_list));\n",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8)\n);\nprint_r(rear_extract($test_list));",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n",
    "    $result_list = array();\n    foreach ($test_list as $tuple) {\n        $result_list[] = $tuple[1];\n    }\n    return $result_list;\n}\n\n$test_list = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n\nprint_r(rear_extract($test_list));\n",
    "  $result = array();\n  foreach ($test_list as $tuple) {\n    $result[] = $tuple[1];\n  }\n  return $result;\n}\n\n$test_list = array(\n  array(1, 2),\n  array(3, 4),\n  array(5, 6)\n);\n\nprint_r(rear_extract($test_list));\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        array_push($result, $tuple[1]);\n    }\n    return $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10)\n);\n\nprint_r(rear_extract($test_list));",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\tarray_push($result, $tuple[1]);\n\t}\n\treturn $result;\n}\n\n$test_list = array(\n\tarray(1, 2),\n\tarray(3, 4),\n\tarray(5, 6),\n\tarray(7, 8),\n\tarray(9, 10),\n\tarray(11, 12),\n\tarray(13, 14),\n\tarray(15, 16),\n\tarray(17, 18),\n\tarray(19, 20),\n);\n\n$result = rear_extract($test_list);\nprint_r($result);",
    "    $rear_list = array();\n    foreach($test_list as $tuple) {\n        array_push($rear_list, $tuple[1]);\n    }\n    return $rear_list;\n}\n",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        array_push($result, $tuple[1]);\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10),\n    array(11, 12),\n    array(13, 14),\n    array(15, 16),\n    array(17, 18),\n    array(19, 20),\n    array(21, 22),\n    array(23, 24),\n    array(25, 26),\n    array(27, 28),\n    array(29, 30),\n    array(31, 32),\n    array(33, 34),\n    array(35, 36),\n    array(37, 38),\n    array(39, 40),\n    array(41, 42),\n    array(43, 44),\n    array(45, 46),\n    array(47, 48),\n    array(49, 50),\n    array(51, 52),\n    array(53, 54),\n    array(55, 56),\n    array(57, 58),\n    array(59, 60),\n    array(61, 62),\n    array(63, 64),\n    array(65, 66),\n    array(67, 68),\n    array(69, 70),\n    array(71, 72),\n    array(73, 74),\n    array(75, 76),\n    array(77, 78),\n    array(79, 80),\n    array(81, 82),\n    array(83, 84),\n    array(85, 86),\n    array(87, 88),\n    array(89, 90),\n    array(91, 92),\n    array(93, 94),\n    array(95, 96),\n    array(97, 98),\n    array(99, 100),\n    array(101, 102),\n    array(103, 104),\n    array(105, 106),\n    array(107, 108),\n    array(109, 110),\n    array(111, 112),\n    array(113, 114),\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10)\n);\n\nprint_r(rear_extract($test_list));\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10),\n);\n\nprint_r(rear_extract($test_list));",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n);\n\nprint_r(rear_extract($test_list));\n",
    "    $result = array();\n    foreach ($test_list as $item) {\n        $result[] = $item[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9),\n);\n\nprint_r(rear_extract($test_list));\n",
    "\t$rear_list = array();\n\tforeach ($test_list as $tuple) {\n\t\t$rear_list[] = $tuple[1];\n\t}\n\treturn $rear_list;\n}\n\n$test_list = array(\n\tarray(1, 2),\n\tarray(3, 4),\n\tarray(5, 6),\n\tarray(7, 8),\n\tarray(9, 10)\n);\n\nprint_r(rear_extract($test_list));\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10)\n);\n\nprint_r(rear_extract($test_list));\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n",
    "    $new_list = [];\n    foreach ($test_list as $tuple) {\n        $new_list[] = $tuple[1];\n    }\n    return $new_list;\n}\n\n$test_list = [[1, 2], [3, 4], [5, 6]];\nprint_r(rear_extract($test_list));\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10)\n);\n\nprint_r(rear_extract($test_list));",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10),\n    array(11, 12),\n    array(13, 14),\n    array(15, 16),\n);\n\nprint_r(rear_extract($test_list));",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10)\n);\n\nprint_r(rear_extract($test_list));\n",
    "    $new_list = array();\n    foreach($test_list as $tuple) {\n        array_push($new_list, $tuple[1]);\n    }\n    return $new_list;\n}\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n);\nprint_r(rear_extract($test_list));",
    "  $result = array();\n  foreach ($test_list as $tuple) {\n    $result[] = $tuple[1];\n  }\n  return $result;\n}\n\n$test_list = array(\n  array(1, 2),\n  array(3, 4),\n  array(5, 6),\n  array(7, 8),\n  array(9, 10),\n  array(11, 12),\n);\n\nprint_r(rear_extract($test_list));",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10),\n);\n\nprint_r(rear_extract($test_list));\n",
    "    $rear_list = array();\n    foreach ($test_list as $tuple) {\n        array_push($rear_list, $tuple[1]);\n    }\n    return $rear_list;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10)\n);\n\nprint_r(rear_extract($test_list));",
    "  $rear_list = array();\n  foreach ($test_list as $tuple) {\n    array_push($rear_list, $tuple[1]);\n  }\n  return $rear_list;\n}\n\n$test_list = array(\n  array(1, 2),\n  array(3, 4),\n  array(5, 6),\n  array(7, 8),\n);\n\nprint_r(rear_extract($test_list));",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n",
    "    $rear_list = array();\n    foreach ($test_list as $tuple) {\n        $rear_list[] = $tuple[1];\n    }\n    return $rear_list;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        array_push($result, $tuple[1]);\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10),\n);\n\nprint_r(rear_extract($test_list));",
    "\t$new_list = array();\n\tforeach ($test_list as $tuple) {\n\t\tarray_push($new_list, $tuple[1]);\n\t}\n\treturn $new_list;\n}\n\n$test_list = array(\n\tarray(1, 2),\n\tarray(3, 4),\n\tarray(5, 6),\n\tarray(7, 8),\n\tarray(9, 10)\n);\n\n$result = rear_extract($test_list);\n\nprint_r($result);",
    "\t$new_list = array();\n\tforeach($test_list as $tuple) {\n\t\t$new_list[] = $tuple[1];\n\t}\n\treturn $new_list;\n}\n\n$test_list = array(\n\tarray(1, 2),\n\tarray(3, 4),\n\tarray(5, 6)\n);\n\nprint_r(rear_extract($test_list));\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10)\n);\n\nprint_r(rear_extract($test_list));\n",
    "    $result = array();\n    foreach ($test_list as $item) {\n        $result[] = $item[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n);\n\nprint_r(rear_extract($test_list));",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8)\n);\n\n$result = rear_extract($test_list);\nprint_r($result);",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n    array(7, 8),\n    array(9, 10)\n);\n\nprint_r(rear_extract($test_list));\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\t$result[] = $tuple[1];\n\t}\n\treturn $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        array_push($result, $tuple[1]);\n    }\n    return $result;\n}\n",
    "    $new_list = array();\n    foreach ($test_list as $tuple) {\n        array_push($new_list, $tuple[1]);\n    }\n    return $new_list;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6)\n);\n\n$result = rear_extract($test_list);\nprint_r($result);",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n",
    "\t$result = array();\n\tforeach ($test_list as $tuple) {\n\t\tarray_push($result, $tuple[1]);\n\t}\n\treturn $result;\n}\n\n$test_list = array(\n\tarray(1, 2),\n\tarray(3, 4),\n\tarray(5, 6),\n\tarray(7, 8),\n\tarray(9, 10),\n);\n\nprint_r(rear_extract($test_list));",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $result[] = $tuple[1];\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(5, 6),\n);\n\nprint_r(rear_extract($test_list));\n"
  ]
}
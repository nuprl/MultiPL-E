{
  "name": "mbpp_622_get_median",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_622_get_median.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70t56ar5.php:42\nStack trace:\n#0 /tmp/tmp70t56ar5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp70t56ar5.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70t56ar5.php:42\nStack trace:\n#0 /tmp/tmp70t56ar5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp70t56ar5.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_td0dfa.php:45\nStack trace:\n#0 /tmp/tmpm_td0dfa.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpm_td0dfa.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0mza9lmt.php:41\nStack trace:\n#0 /tmp/tmp0mza9lmt.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp0mza9lmt.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n\t$i = 0;\n\t$j = 0;\n\t$count = 0;\n\t$m1 = -1;\n\t$m2 = -1;\n\twhile ($count < $n + 1) {\n\t\tif ($i == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[0];\n\t\t\tbreak;\n\t\t}\n\t\tif ($j == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[0];\n\t\t\tbreak;\n\t\t}\n\t\tif ($arr1[$i] < $arr2[$j]) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[$i];\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[$j];\n\t\t\t$j++;\n\t\t}\n\t\t$count++;\n\t}\n\treturn ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\n$median = get_median($arr1, $arr2, $n);\necho \"Median is $median\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfdfubwfy.php:44\nStack trace:\n#0 /tmp/tmpfdfubwfy.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpfdfubwfy.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n\t$i = 0;\n\t$j = 0;\n\t$count = 0;\n\t$m1 = -1;\n\t$m2 = -1;\n\twhile ($count < $n+1) {\n\t\tif ($i == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[0];\n\t\t\tbreak;\n\t\t} else if ($j == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[0];\n\t\t\tbreak;\n\t\t}\n\t\tif ($arr1[$i] < $arr2[$j]) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[$i];\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[$j];\n\t\t\t$j++;\n\t\t}\n\t\t$count++;\n\t}\n\treturn ($m1+$m2)/2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqprr03f4.php:42\nStack trace:\n#0 /tmp/tmpqprr03f4.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpqprr03f4.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9enrn_1p.php:40\nStack trace:\n#0 /tmp/tmp9enrn_1p.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp9enrn_1p.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpane6n_20.php:45\nStack trace:\n#0 /tmp/tmpane6n_20.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpane6n_20.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    $count = 0;\n    while ($count < $n) {\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 2, 3, 6];\n$arr2 = [4, 6, 8, 10];\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 3.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd6y4jp47.php:33\nStack trace:\n#0 /tmp/tmpd6y4jp47.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpd6y4jp47.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70t56ar5.php:42\nStack trace:\n#0 /tmp/tmp70t56ar5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp70t56ar5.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjkpxovhl.php:41\nStack trace:\n#0 /tmp/tmpjkpxovhl.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpjkpxovhl.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpane6n_20.php:45\nStack trace:\n#0 /tmp/tmpane6n_20.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpane6n_20.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpane6n_20.php:45\nStack trace:\n#0 /tmp/tmpane6n_20.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpane6n_20.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n\necho get_median($arr1, $arr2, count($arr1));\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe78tyug9.php:45\nStack trace:\n#0 /tmp/tmpe78tyug9.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpe78tyug9.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpane6n_20.php:45\nStack trace:\n#0 /tmp/tmpane6n_20.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpane6n_20.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwerw6gw0.php:40\nStack trace:\n#0 /tmp/tmpwerw6gw0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpwerw6gw0.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = sizeof($arr1);\n$median = get_median($arr1, $arr2, $n);\necho \"Median is \" . $median;\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8mxwt_v6.php:41\nStack trace:\n#0 /tmp/tmp8mxwt_v6.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp8mxwt_v6.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0mza9lmt.php:41\nStack trace:\n#0 /tmp/tmp0mza9lmt.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp0mza9lmt.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\n\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_pmgn1sb.php:51\nStack trace:\n#0 /tmp/tmp_pmgn1sb.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp_pmgn1sb.php on line 51\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n) {\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 2, 3, 6];\n$arr2 = [4, 6, 8, 10];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "3.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmd4d6wo7.php:33\nStack trace:\n#0 /tmp/tmpmd4d6wo7.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpmd4d6wo7.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp781ssppm.php:42\nStack trace:\n#0 /tmp/tmp781ssppm.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp781ssppm.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9enrn_1p.php:40\nStack trace:\n#0 /tmp/tmp9enrn_1p.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp9enrn_1p.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzqiwnlpw.php:47\nStack trace:\n#0 /tmp/tmpzqiwnlpw.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpzqiwnlpw.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = sizeof($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6qr7plke.php:40\nStack trace:\n#0 /tmp/tmp6qr7plke.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp6qr7plke.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70t56ar5.php:42\nStack trace:\n#0 /tmp/tmp70t56ar5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp70t56ar5.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9enrn_1p.php:40\nStack trace:\n#0 /tmp/tmp9enrn_1p.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp9enrn_1p.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpane6n_20.php:45\nStack trace:\n#0 /tmp/tmpane6n_20.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpane6n_20.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n = sizeof($arr1);\n\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn3wj51ds.php:47\nStack trace:\n#0 /tmp/tmpn3wj51ds.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpn3wj51ds.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpane6n_20.php:45\nStack trace:\n#0 /tmp/tmpane6n_20.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpane6n_20.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0mza9lmt.php:41\nStack trace:\n#0 /tmp/tmp0mza9lmt.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp0mza9lmt.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5_rrekmg.php:46\nStack trace:\n#0 /tmp/tmp5_rrekmg.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp5_rrekmg.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc57caui_.php:42\nStack trace:\n#0 /tmp/tmpc57caui_.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpc57caui_.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5_rrekmg.php:46\nStack trace:\n#0 /tmp/tmp5_rrekmg.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp5_rrekmg.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n) {\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = sizeof($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpojp9zkp9.php:33\nStack trace:\n#0 /tmp/tmpojp9zkp9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpojp9zkp9.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70t56ar5.php:42\nStack trace:\n#0 /tmp/tmp70t56ar5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp70t56ar5.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3zgghx1m.php:44\nStack trace:\n#0 /tmp/tmp3zgghx1m.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp3zgghx1m.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70t56ar5.php:42\nStack trace:\n#0 /tmp/tmp70t56ar5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp70t56ar5.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70t56ar5.php:42\nStack trace:\n#0 /tmp/tmp70t56ar5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp70t56ar5.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph9t5sexf.php:42\nStack trace:\n#0 /tmp/tmph9t5sexf.php(47): test()\n#1 {main}\n  thrown in /tmp/tmph9t5sexf.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\n\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn96o1cwc.php:43\nStack trace:\n#0 /tmp/tmpn96o1cwc.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpn96o1cwc.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    $median = get_median($arr1, $arr2, $n1);\n    echo \"Median is $median\\n\";\n} else {\n    echo \"Doesn't work for arrays of unequal size\\n\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb3zw0sjb.php:48\nStack trace:\n#0 /tmp/tmpb3zw0sjb.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpb3zw0sjb.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 2, 3, 6);\n$arr2 = array(4, 6, 8, 10);\n$n = count($arr1);\n\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_qcid94r.php:44\nStack trace:\n#0 /tmp/tmp_qcid94r.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp_qcid94r.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmperwg8p91.php:40\nStack trace:\n#0 /tmp/tmperwg8p91.php(45): test()\n#1 {main}\n  thrown in /tmp/tmperwg8p91.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        }\n        if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_20j90n5.php:43\nStack trace:\n#0 /tmp/tmp_20j90n5.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp_20j90n5.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5_rrekmg.php:46\nStack trace:\n#0 /tmp/tmp5_rrekmg.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp5_rrekmg.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70t56ar5.php:42\nStack trace:\n#0 /tmp/tmp70t56ar5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp70t56ar5.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 2, 3, 6];\n$arr2 = [4, 6, 8, 10];\n$n = count($arr1);\n$result = get_median($arr1, $arr2, $n);\necho $result;\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk0kj8sa0.php:43\nStack trace:\n#0 /tmp/tmpk0kj8sa0.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpk0kj8sa0.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5_rrekmg.php:46\nStack trace:\n#0 /tmp/tmp5_rrekmg.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp5_rrekmg.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxjgqp911.php:40\nStack trace:\n#0 /tmp/tmpxjgqp911.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpxjgqp911.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5_rrekmg.php:46\nStack trace:\n#0 /tmp/tmp5_rrekmg.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp5_rrekmg.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70t56ar5.php:42\nStack trace:\n#0 /tmp/tmp70t56ar5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp70t56ar5.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpane6n_20.php:45\nStack trace:\n#0 /tmp/tmpane6n_20.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpane6n_20.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70t56ar5.php:42\nStack trace:\n#0 /tmp/tmp70t56ar5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp70t56ar5.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1m2ekp2f.php:41\nStack trace:\n#0 /tmp/tmp1m2ekp2f.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp1m2ekp2f.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    if ($n <= 0) {\n        return -1;\n    }\n    if ($n == 1) {\n        return ($arr1[0] + $arr2[0]) / 2;\n    }\n    if ($n == 2) {\n        return ($max($arr1[0], $arr2[0]) + $min($arr1[1], $arr2[1])) / 2;\n    }\n    $m1 = median($arr1, $n);\n    $m2 = median($arr2, $n);\n    if ($m1 == $m2) {\n        return $m1;\n    }\n    if ($m1 < $m2) {\n        if ($n % 2 == 0) {\n            return get_median(array_slice($arr1, $n / 2 - 1), array_slice($arr2, 0, $n / 2 + 1), $n - $n / 2 + 1);\n        } else {\n            return get_median(array_slice($arr1, $n / 2), array_slice($arr2, 0, $n / 2 + 1), $n - $n / 2);\n        }\n    } else {\n        if ($n % 2 == 0) {\n            return get_median(array_slice($arr1, 0, $n / 2 + 1), array_slice($arr2, $n / 2 - 1), $n - $n / 2 + 1);\n        } else {\n            return get_median(array_slice($arr1, 0, $n / 2 + 1), array_slice($arr2, $n / 2), $n - $n / 2);\n        }\n    }\n}\n\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function median() in /tmp/tmptcopguxa.php:13\nStack trace:\n#0 /tmp/tmptcopguxa.php(34): get_median(Array, Array, 5)\n#1 /tmp/tmptcopguxa.php(38): candidate(Array, Array, 5)\n#2 /tmp/tmptcopguxa.php(43): test()\n#3 {main}\n  thrown in /tmp/tmptcopguxa.php on line 13\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\n\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplnwhk40h.php:46\nStack trace:\n#0 /tmp/tmplnwhk40h.php(51): test()\n#1 {main}\n  thrown in /tmp/tmplnwhk40h.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1m2ekp2f.php:41\nStack trace:\n#0 /tmp/tmp1m2ekp2f.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp1m2ekp2f.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\n\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_pmgn1sb.php:51\nStack trace:\n#0 /tmp/tmp_pmgn1sb.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp_pmgn1sb.php on line 51\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\n$median = get_median($arr1, $arr2, $n);\necho \"Median is: \" . $median;\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is: 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzf0n9vkj.php:43\nStack trace:\n#0 /tmp/tmpzf0n9vkj.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpzf0n9vkj.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdilv8y2r.php:43\nStack trace:\n#0 /tmp/tmpdilv8y2r.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpdilv8y2r.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0mza9lmt.php:41\nStack trace:\n#0 /tmp/tmp0mza9lmt.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp0mza9lmt.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj9ffz4c3.php:46\nStack trace:\n#0 /tmp/tmpj9ffz4c3.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpj9ffz4c3.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70t56ar5.php:42\nStack trace:\n#0 /tmp/tmp70t56ar5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp70t56ar5.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1m2ekp2f.php:41\nStack trace:\n#0 /tmp/tmp1m2ekp2f.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp1m2ekp2f.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpane6n_20.php:45\nStack trace:\n#0 /tmp/tmpane6n_20.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpane6n_20.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\n$median = get_median($arr1, $arr2, $n);\necho \"Median is \" . $median;\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprp7pgjn_.php:43\nStack trace:\n#0 /tmp/tmprp7pgjn_.php(48): test()\n#1 {main}\n  thrown in /tmp/tmprp7pgjn_.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\n$median = get_median($arr1, $arr2, $n);\necho \"Median is \" . $median;\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnqeiht1k.php:42\nStack trace:\n#0 /tmp/tmpnqeiht1k.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpnqeiht1k.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Arrays are of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt6mom96w.php:44\nStack trace:\n#0 /tmp/tmpt6mom96w.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpt6mom96w.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        }\n        else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        }\n        else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoxn_k_l4.php:44\nStack trace:\n#0 /tmp/tmpoxn_k_l4.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpoxn_k_l4.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3zgghx1m.php:44\nStack trace:\n#0 /tmp/tmp3zgghx1m.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp3zgghx1m.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = sizeof($arr1);\n\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3m29zzo1.php:44\nStack trace:\n#0 /tmp/tmp3m29zzo1.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp3m29zzo1.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0mza9lmt.php:41\nStack trace:\n#0 /tmp/tmp0mza9lmt.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp0mza9lmt.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw7fpuzmc.php:46\nStack trace:\n#0 /tmp/tmpw7fpuzmc.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpw7fpuzmc.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n\n$n1 = count($arr1);\n$n2 = count($arr2);\n\nif ($n1 == $n2) {\n    $median = get_median($arr1, $arr2, $n1);\n    echo \"Median is \" . $median;\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp532b9acm.php:52\nStack trace:\n#0 /tmp/tmp532b9acm.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp532b9acm.php on line 52\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpane6n_20.php:45\nStack trace:\n#0 /tmp/tmpane6n_20.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpane6n_20.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp781ssppm.php:42\nStack trace:\n#0 /tmp/tmp781ssppm.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp781ssppm.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70t56ar5.php:42\nStack trace:\n#0 /tmp/tmp70t56ar5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp70t56ar5.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9enrn_1p.php:40\nStack trace:\n#0 /tmp/tmp9enrn_1p.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp9enrn_1p.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = sizeof($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvlclu3_o.php:42\nStack trace:\n#0 /tmp/tmpvlclu3_o.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpvlclu3_o.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70t56ar5.php:42\nStack trace:\n#0 /tmp/tmp70t56ar5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp70t56ar5.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3zgghx1m.php:44\nStack trace:\n#0 /tmp/tmp3zgghx1m.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp3zgghx1m.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1m2ekp2f.php:41\nStack trace:\n#0 /tmp/tmp1m2ekp2f.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp1m2ekp2f.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgmyu5h8p.php:46\nStack trace:\n#0 /tmp/tmpgmyu5h8p.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpgmyu5h8p.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp781ssppm.php:42\nStack trace:\n#0 /tmp/tmp781ssppm.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp781ssppm.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\n\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn96o1cwc.php:43\nStack trace:\n#0 /tmp/tmpn96o1cwc.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpn96o1cwc.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp781ssppm.php:42\nStack trace:\n#0 /tmp/tmp781ssppm.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp781ssppm.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median of two sorted arrays is: \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median of two sorted arrays is: 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo5fbba2d.php:40\nStack trace:\n#0 /tmp/tmpo5fbba2d.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpo5fbba2d.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70t56ar5.php:42\nStack trace:\n#0 /tmp/tmp70t56ar5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp70t56ar5.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp07hujmvs.php:42\nStack trace:\n#0 /tmp/tmp07hujmvs.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp07hujmvs.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n) {\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbpeuzq3y.php:33\nStack trace:\n#0 /tmp/tmpbpeuzq3y.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpbpeuzq3y.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = sizeof($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprfh34vgx.php:41\nStack trace:\n#0 /tmp/tmprfh34vgx.php(46): test()\n#1 {main}\n  thrown in /tmp/tmprfh34vgx.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5_rrekmg.php:46\nStack trace:\n#0 /tmp/tmp5_rrekmg.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp5_rrekmg.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp781ssppm.php:42\nStack trace:\n#0 /tmp/tmp781ssppm.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp781ssppm.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    if ($n <= 0) {\n        return -1;\n    }\n    if ($n == 1) {\n        return ($arr1[0] + $arr2[0]) / 2;\n    }\n    if ($n == 2) {\n        return ($max($arr1[0], $arr2[0]) + $min($arr1[1], $arr2[1])) / 2;\n    }\n    $m1 = median($arr1, $n);\n    $m2 = median($arr2, $n);\n    if ($m1 == $m2) {\n        return $m1;\n    }\n    if ($m1 < $m2) {\n        if ($n % 2 == 0) {\n            return get_median(array_slice($arr1, $n / 2 - 1), $arr2, $n - $n / 2 + 1);\n        }\n        return get_median(array_slice($arr1, $n / 2), $arr2, $n - $n / 2);\n    }\n    if ($n % 2 == 0) {\n        return get_median($arr1, array_slice($arr2, $n / 2 - 1), $n - $n / 2 + 1);\n    }\n    return get_median($arr1, array_slice($arr2, $n / 2), $n - $n / 2);\n}\n\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function median() in /tmp/tmpo869ceey.php:13\nStack trace:\n#0 /tmp/tmpo869ceey.php(31): get_median(Array, Array, 5)\n#1 /tmp/tmpo869ceey.php(35): candidate(Array, Array, 5)\n#2 /tmp/tmpo869ceey.php(40): test()\n#3 {main}\n  thrown in /tmp/tmpo869ceey.php on line 13\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n) {\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa8k3aut1.php:33\nStack trace:\n#0 /tmp/tmpa8k3aut1.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpa8k3aut1.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70t56ar5.php:42\nStack trace:\n#0 /tmp/tmp70t56ar5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp70t56ar5.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n\t$i = 0;\n\t$j = 0;\n\t$count = 0;\n\t$m1 = -1;\n\t$m2 = -1;\n\twhile ($count < $n + 1) {\n\t\tif ($i == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[0];\n\t\t\tbreak;\n\t\t} else if ($j == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[0];\n\t\t\tbreak;\n\t\t}\n\t\tif ($arr1[$i] < $arr2[$j]) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[$i];\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[$j];\n\t\t\t$j++;\n\t\t}\n\t\t$count++;\n\t}\n\treturn ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu6f9n4ib.php:42\nStack trace:\n#0 /tmp/tmpu6f9n4ib.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpu6f9n4ib.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeer8t00k.php:40\nStack trace:\n#0 /tmp/tmpeer8t00k.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpeer8t00k.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp781ssppm.php:42\nStack trace:\n#0 /tmp/tmp781ssppm.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp781ssppm.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n\t$i = 0;\n\t$j = 0;\n\t$count;\n\t$m1 = -1;\n\t$m2 = -1;\n\tfor ($count = 0; $count <= $n; $count++) {\n\t\tif ($i == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[0];\n\t\t\tbreak;\n\t\t} else if ($j == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[0];\n\t\t\tbreak;\n\t\t}\n\t\tif ($arr1[$i] < $arr2[$j]) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[$i];\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[$j];\n\t\t\t$j++;\n\t\t}\n\t}\n\treturn ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n\t$median = get_median($arr1, $arr2, $n1);\n\techo \"Median is: \" . $median;\n} else {\n\techo \"Arrays are not of same size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is: 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzar44y3i.php:47\nStack trace:\n#0 /tmp/tmpzar44y3i.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpzar44y3i.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\n\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzk1ouv6.php:42\nStack trace:\n#0 /tmp/tmpuzk1ouv6.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpuzk1ouv6.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp08kbrs_5.php:41\nStack trace:\n#0 /tmp/tmp08kbrs_5.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp08kbrs_5.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\n\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplnwhk40h.php:46\nStack trace:\n#0 /tmp/tmplnwhk40h.php(51): test()\n#1 {main}\n  thrown in /tmp/tmplnwhk40h.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n) {\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbpeuzq3y.php:33\nStack trace:\n#0 /tmp/tmpbpeuzq3y.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpbpeuzq3y.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n\n$n = count($arr1);\n\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplisuq3rh.php:47\nStack trace:\n#0 /tmp/tmplisuq3rh.php(52): test()\n#1 {main}\n  thrown in /tmp/tmplisuq3rh.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\n\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn96o1cwc.php:43\nStack trace:\n#0 /tmp/tmpn96o1cwc.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpn96o1cwc.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho \"Median of two sorted arrays is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median of two sorted arrays is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgvzryv7h.php:42\nStack trace:\n#0 /tmp/tmpgvzryv7h.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpgvzryv7h.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp781ssppm.php:42\nStack trace:\n#0 /tmp/tmp781ssppm.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp781ssppm.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0mza9lmt.php:41\nStack trace:\n#0 /tmp/tmp0mza9lmt.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp0mza9lmt.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        }\n        else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        }\n        else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = sizeof($arr1);\n$n2 = sizeof($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8rbhpz60.php:46\nStack trace:\n#0 /tmp/tmp8rbhpz60.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp8rbhpz60.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0mza9lmt.php:41\nStack trace:\n#0 /tmp/tmp0mza9lmt.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp0mza9lmt.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgmyu5h8p.php:46\nStack trace:\n#0 /tmp/tmpgmyu5h8p.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpgmyu5h8p.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgmyu5h8p.php:46\nStack trace:\n#0 /tmp/tmpgmyu5h8p.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpgmyu5h8p.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70t56ar5.php:42\nStack trace:\n#0 /tmp/tmp70t56ar5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp70t56ar5.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\n\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_pmgn1sb.php:51\nStack trace:\n#0 /tmp/tmp_pmgn1sb.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp_pmgn1sb.php on line 51\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp781ssppm.php:42\nStack trace:\n#0 /tmp/tmp781ssppm.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp781ssppm.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n) {\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe2e34x7p.php:33\nStack trace:\n#0 /tmp/tmpe2e34x7p.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpe2e34x7p.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n\n    while ($count < $n) {\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n\n$n = count($arr1);\n\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpebym7v7l.php:37\nStack trace:\n#0 /tmp/tmpebym7v7l.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpebym7v7l.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n\t$i = 0;\n\t$j = 0;\n\t$count = 0;\n\t$m1 = -1;\n\t$m2 = -1;\n\twhile ($count < $n) {\n\t\tif ($arr1[$i] < $arr2[$j]) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[$i];\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[$j];\n\t\t\t$j++;\n\t\t}\n\t\t$count++;\n\t}\n\treturn ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 2, 3, 6);\n$arr2 = array(4, 6, 8, 10);\n$n = count($arr1);\necho \"Median is: \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is: 3.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp81bueabt.php:33\nStack trace:\n#0 /tmp/tmp81bueabt.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp81bueabt.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp07hujmvs.php:42\nStack trace:\n#0 /tmp/tmp07hujmvs.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp07hujmvs.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp781ssppm.php:42\nStack trace:\n#0 /tmp/tmp781ssppm.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp781ssppm.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n) {\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_u5db0sh.php:33\nStack trace:\n#0 /tmp/tmp_u5db0sh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_u5db0sh.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n\n$n = count($arr1);\n\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnguftwv5.php:43\nStack trace:\n#0 /tmp/tmpnguftwv5.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpnguftwv5.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70t56ar5.php:42\nStack trace:\n#0 /tmp/tmp70t56ar5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp70t56ar5.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70t56ar5.php:42\nStack trace:\n#0 /tmp/tmp70t56ar5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp70t56ar5.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0mza9lmt.php:41\nStack trace:\n#0 /tmp/tmp0mza9lmt.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp0mza9lmt.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyb5l9v_e.php:47\nStack trace:\n#0 /tmp/tmpyb5l9v_e.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpyb5l9v_e.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    $median = get_median($arr1, $arr2, $n1);\n    echo \"Median is $median\\n\";\n} else {\n    echo \"Doesn't work for arrays of unequal size\\n\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb3zw0sjb.php:48\nStack trace:\n#0 /tmp/tmpb3zw0sjb.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpb3zw0sjb.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0mza9lmt.php:41\nStack trace:\n#0 /tmp/tmp0mza9lmt.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp0mza9lmt.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        }\n        else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        }\n        else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    $median = get_median($arr1, $arr2, $n1);\n    echo \"Median is \" . $median;\n}\nelse {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpms66lbes.php:49\nStack trace:\n#0 /tmp/tmpms66lbes.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpms66lbes.php on line 49\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n\n$n = count($arr1);\n\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpun_esxdl.php:45\nStack trace:\n#0 /tmp/tmpun_esxdl.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpun_esxdl.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n\n$n = count($arr1);\n\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplisuq3rh.php:47\nStack trace:\n#0 /tmp/tmplisuq3rh.php(52): test()\n#1 {main}\n  thrown in /tmp/tmplisuq3rh.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\n$median = get_median($arr1, $arr2, $n);\necho \"Median is \" . $median;\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprp7pgjn_.php:43\nStack trace:\n#0 /tmp/tmprp7pgjn_.php(48): test()\n#1 {main}\n  thrown in /tmp/tmprp7pgjn_.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0mza9lmt.php:41\nStack trace:\n#0 /tmp/tmp0mza9lmt.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp0mza9lmt.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpane6n_20.php:45\nStack trace:\n#0 /tmp/tmpane6n_20.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpane6n_20.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70t56ar5.php:42\nStack trace:\n#0 /tmp/tmp70t56ar5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp70t56ar5.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0mza9lmt.php:41\nStack trace:\n#0 /tmp/tmp0mza9lmt.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp0mza9lmt.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp781ssppm.php:42\nStack trace:\n#0 /tmp/tmp781ssppm.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp781ssppm.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgmyu5h8p.php:46\nStack trace:\n#0 /tmp/tmpgmyu5h8p.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpgmyu5h8p.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n = count($arr1);\n\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ynscr2l.php:46\nStack trace:\n#0 /tmp/tmp1ynscr2l.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp1ynscr2l.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5_rrekmg.php:46\nStack trace:\n#0 /tmp/tmp5_rrekmg.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp5_rrekmg.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\n$median = get_median($arr1, $arr2, $n);\necho \"Median is $median\\n\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjm02zc81.php:43\nStack trace:\n#0 /tmp/tmpjm02zc81.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpjm02zc81.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0mza9lmt.php:41\nStack trace:\n#0 /tmp/tmp0mza9lmt.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp0mza9lmt.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median of two sorted arrays is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median of two sorted arrays is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ycu7sf9.php:42\nStack trace:\n#0 /tmp/tmp3ycu7sf9.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp3ycu7sf9.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 2, 3, 6];\n$arr2 = [4, 6, 8, 10];\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkd8mpwx5.php:40\nStack trace:\n#0 /tmp/tmpkd8mpwx5.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpkd8mpwx5.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeer8t00k.php:40\nStack trace:\n#0 /tmp/tmpeer8t00k.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpeer8t00k.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp07hujmvs.php:42\nStack trace:\n#0 /tmp/tmp07hujmvs.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp07hujmvs.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n\t$i = 0;\n\t$j = 0;\n\t$count = 0;\n\t$m1 = -1;\n\t$m2 = -1;\n\twhile ($count < $n+1) {\n\t\tif ($i == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[0];\n\t\t\tbreak;\n\t\t} else if ($j == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[0];\n\t\t\tbreak;\n\t\t}\n\t\tif ($arr1[$i] < $arr2[$j]) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[$i];\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[$j];\n\t\t\t$j++;\n\t\t}\n\t\t$count++;\n\t}\n\treturn ($m1 + $m2)/2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgacmqzbw.php:42\nStack trace:\n#0 /tmp/tmpgacmqzbw.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpgacmqzbw.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n) {\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe2e34x7p.php:33\nStack trace:\n#0 /tmp/tmpe2e34x7p.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpe2e34x7p.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph9t5sexf.php:42\nStack trace:\n#0 /tmp/tmph9t5sexf.php(47): test()\n#1 {main}\n  thrown in /tmp/tmph9t5sexf.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjkpxovhl.php:41\nStack trace:\n#0 /tmp/tmpjkpxovhl.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpjkpxovhl.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = $j = 0;\n    $m1 = $m2 = 0;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        }\n        else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        }\n        else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median of two sorted arrays is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median of two sorted arrays is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf2jo57ck.php:40\nStack trace:\n#0 /tmp/tmpf2jo57ck.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpf2jo57ck.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpane6n_20.php:45\nStack trace:\n#0 /tmp/tmpane6n_20.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpane6n_20.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1m2ekp2f.php:41\nStack trace:\n#0 /tmp/tmp1m2ekp2f.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp1m2ekp2f.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $median = 0;\n    $count = 0;\n    while ($count < $n) {\n        if ($arr1[$i] < $arr2[$j]) {\n            $median = $arr1[$i];\n            $i++;\n        } else {\n            $median = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return $median;\n}\n\n$arr1 = [1, 2, 3, 4, 5];\n$arr2 = [6, 7, 8, 9, 10];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6s07to59.php:30\nStack trace:\n#0 /tmp/tmp6s07to59.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp6s07to59.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpane6n_20.php:45\nStack trace:\n#0 /tmp/tmpane6n_20.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpane6n_20.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw7fpuzmc.php:46\nStack trace:\n#0 /tmp/tmpw7fpuzmc.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpw7fpuzmc.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5_rrekmg.php:46\nStack trace:\n#0 /tmp/tmp5_rrekmg.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp5_rrekmg.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n\n$n = sizeof($arr1);\n\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpohf_6e_j.php:46\nStack trace:\n#0 /tmp/tmpohf_6e_j.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpohf_6e_j.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpane6n_20.php:45\nStack trace:\n#0 /tmp/tmpane6n_20.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpane6n_20.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp781ssppm.php:42\nStack trace:\n#0 /tmp/tmp781ssppm.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp781ssppm.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3zgghx1m.php:44\nStack trace:\n#0 /tmp/tmp3zgghx1m.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp3zgghx1m.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp08kbrs_5.php:41\nStack trace:\n#0 /tmp/tmp08kbrs_5.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp08kbrs_5.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpane6n_20.php:45\nStack trace:\n#0 /tmp/tmpane6n_20.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpane6n_20.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70t56ar5.php:42\nStack trace:\n#0 /tmp/tmp70t56ar5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp70t56ar5.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n) {\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = sizeof($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpojp9zkp9.php:33\nStack trace:\n#0 /tmp/tmpojp9zkp9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpojp9zkp9.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n) {\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = sizeof($arr1);\n$median = get_median($arr1, $arr2, $n);\necho $median;\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfka1ui1.php:34\nStack trace:\n#0 /tmp/tmpqfka1ui1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpqfka1ui1.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgmyu5h8p.php:46\nStack trace:\n#0 /tmp/tmpgmyu5h8p.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpgmyu5h8p.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgmyu5h8p.php:46\nStack trace:\n#0 /tmp/tmpgmyu5h8p.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpgmyu5h8p.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70t56ar5.php:42\nStack trace:\n#0 /tmp/tmp70t56ar5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp70t56ar5.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0mza9lmt.php:41\nStack trace:\n#0 /tmp/tmp0mza9lmt.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp0mza9lmt.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n = count($arr1);\n\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxima531i.php:46\nStack trace:\n#0 /tmp/tmpxima531i.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpxima531i.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0mza9lmt.php:41\nStack trace:\n#0 /tmp/tmp0mza9lmt.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp0mza9lmt.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5_rrekmg.php:46\nStack trace:\n#0 /tmp/tmp5_rrekmg.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp5_rrekmg.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        }\n        if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 2, 3, 6];\n$arr2 = [4, 6, 8, 10];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "3.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl_l2pozm.php:43\nStack trace:\n#0 /tmp/tmpl_l2pozm.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpl_l2pozm.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n\t$i = 0;\n\t$j = 0;\n\t$count;\n\t$m1 = -1;\n\t$m2 = -1;\n\tfor ($count = 0; $count <= $n; $count++) {\n\t\tif ($i == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[0];\n\t\t\tbreak;\n\t\t} else if ($j == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[0];\n\t\t\tbreak;\n\t\t}\n\t\tif ($arr1[$i] < $arr2[$j]) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[$i];\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[$j];\n\t\t\t$j++;\n\t\t}\n\t}\n\treturn ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpetcz96oj.php:41\nStack trace:\n#0 /tmp/tmpetcz96oj.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpetcz96oj.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70t56ar5.php:42\nStack trace:\n#0 /tmp/tmp70t56ar5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp70t56ar5.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1m2ekp2f.php:41\nStack trace:\n#0 /tmp/tmp1m2ekp2f.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp1m2ekp2f.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9enrn_1p.php:40\nStack trace:\n#0 /tmp/tmp9enrn_1p.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp9enrn_1p.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70t56ar5.php:42\nStack trace:\n#0 /tmp/tmp70t56ar5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp70t56ar5.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9enrn_1p.php:40\nStack trace:\n#0 /tmp/tmp9enrn_1p.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp9enrn_1p.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70t56ar5.php:42\nStack trace:\n#0 /tmp/tmp70t56ar5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp70t56ar5.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n\n        $count++;\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n\n$n = count($arr1);\n\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfd2sw9yl.php:48\nStack trace:\n#0 /tmp/tmpfd2sw9yl.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpfd2sw9yl.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0mza9lmt.php:41\nStack trace:\n#0 /tmp/tmp0mza9lmt.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp0mza9lmt.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1m2ekp2f.php:41\nStack trace:\n#0 /tmp/tmp1m2ekp2f.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp1m2ekp2f.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpane6n_20.php:45\nStack trace:\n#0 /tmp/tmpane6n_20.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpane6n_20.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5_rrekmg.php:46\nStack trace:\n#0 /tmp/tmp5_rrekmg.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp5_rrekmg.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph9t5sexf.php:42\nStack trace:\n#0 /tmp/tmph9t5sexf.php(47): test()\n#1 {main}\n  thrown in /tmp/tmph9t5sexf.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n = sizeof($arr1) / sizeof($arr1[0]);\n\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "\nFatal error: Uncaught TypeError: sizeof(): Argument #1 ($value) must be of type Countable|array, int given in /tmp/tmpc0j94mvm.php:38\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpc0j94mvm.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        }\n        if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 2, 3, 6];\n$arr2 = [4, 6, 8, 10];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu2x0delk.php:43\nStack trace:\n#0 /tmp/tmpu2x0delk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpu2x0delk.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70t56ar5.php:42\nStack trace:\n#0 /tmp/tmp70t56ar5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp70t56ar5.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n\n$n = count($arr1);\n\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplisuq3rh.php:47\nStack trace:\n#0 /tmp/tmplisuq3rh.php(52): test()\n#1 {main}\n  thrown in /tmp/tmplisuq3rh.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp781ssppm.php:42\nStack trace:\n#0 /tmp/tmp781ssppm.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp781ssppm.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeer8t00k.php:40\nStack trace:\n#0 /tmp/tmpeer8t00k.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpeer8t00k.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 2, 3, 6];\n$arr2 = [4, 6, 8, 10];\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpthwzen30.php:42\nStack trace:\n#0 /tmp/tmpthwzen30.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpthwzen30.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1m2ekp2f.php:41\nStack trace:\n#0 /tmp/tmp1m2ekp2f.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp1m2ekp2f.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp781ssppm.php:42\nStack trace:\n#0 /tmp/tmp781ssppm.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp781ssppm.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5_rrekmg.php:46\nStack trace:\n#0 /tmp/tmp5_rrekmg.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp5_rrekmg.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_td0dfa.php:45\nStack trace:\n#0 /tmp/tmpm_td0dfa.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpm_td0dfa.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted lists of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123804,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp07hujmvs.php:42\nStack trace:\n#0 /tmp/tmp07hujmvs.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp07hujmvs.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
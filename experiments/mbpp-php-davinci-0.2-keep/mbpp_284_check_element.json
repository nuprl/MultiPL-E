{
  "name": "mbpp_284_check_element",
  "language": "php",
  "prompt": "<?php\n// Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\nfunction check_element($list, $element) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_284_check_element.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return check_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"green\", \"orange\", \"black\", \"white\"), \"blue\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), 7) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"green\", \"green\", \"green\", \"green\"), \"green\") !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    foreach ($list as $item) {\n        if ($item !== $element) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    foreach ($list as $item) {\n        if ($item !== $element) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    foreach ($list as $item) {\n        if ($item != $element) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    $result = true;\n    foreach ($list as $item) {\n        if ($item != $element) {\n            $result = false;\n            break;\n        }\n    }\n    return $result;\n}\n\n$list = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\n$element = 1;\necho check_element($list, $element);\n",
    "\tforeach ($list as $item) {\n\t\tif ($item != $element) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n",
    "    $result = true;\n    foreach ($list as $value) {\n        if ($value != $element) {\n            $result = false;\n        }\n    }\n    return $result;\n}\n",
    "\t$count = 0;\n\tforeach ($list as $item) {\n\t\tif ($item == $element) {\n\t\t\t$count++;\n\t\t}\n\t}\n\tif ($count == count($list)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n$list = array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1);\n$element = 1;\necho check_element($list, $element);\n",
    "    foreach ($list as $item) {\n        if ($item != $element) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    foreach ($list as $item) {\n        if ($item != $element) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$list = array(1, 1, 1, 1, 1, 1, 1);\n$element = 1;\necho check_element($list, $element);",
    "    $result = true;\n    foreach ($list as $item) {\n        if ($item != $element) {\n            $result = false;\n            break;\n        }\n    }\n    return $result;\n}\n",
    "    foreach ($list as $item) {\n        if ($item != $element) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    foreach ($list as $item) {\n        if ($item != $element) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    foreach ($list as $item) {\n        if ($item !== $element) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    foreach ($list as $item) {\n        if ($item != $element) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    foreach ($list as $item) {\n        if ($item != $element) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    foreach ($list as $value) {\n        if ($value != $element) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "\tforeach ($list as $item) {\n\t\tif ($item != $element) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n",
    "    foreach ($list as $item) {\n        if ($item != $element) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "\t$result = true;\n\tforeach ($list as $item) {\n\t\tif ($item != $element) {\n\t\t\t$result = false;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$list = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\n$element = 1;\n\necho check_element($list, $element);\n",
    "    $result = true;\n    foreach ($list as $item) {\n        if ($item != $element) {\n            $result = false;\n        }\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6];\n$element = 1;\necho check_element($list, $element);\n"
  ]
}
{
  "name": "mbpp_558_digit_distance_nums",
  "language": "php",
  "prompt": "<?php\n// Write a python function to find the sum of the per-digit difference between two integers.\nfunction digit_distance_nums($n1, $n2) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_558_digit_distance_nums.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return digit_distance_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 2) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(23, 56) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(123, 256) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $n1 = (string) $n1;\n    $n2 = (string) $n2;\n    $n1 = str_split($n1);\n    $n2 = str_split($n2);\n    $sum = 0;\n    for ($i = 0; $i < count($n1); $i++) {\n        $sum += abs($n1[$i] - $n2[$i]);\n    }\n    return $sum;\n}\n\necho digit_distance_nums(123, 321);\necho \"\\n\";\necho digit_distance_nums(123, 456);\necho \"\\n\";\necho digit_distance_nums(123, 12);\necho \"\\n\";\necho digit_distance_nums(123, 1);\necho \"\\n\";\necho digit_distance_nums(123, 0);\necho \"\\n\";\necho digit_distance_nums(123, -1);\necho \"\\n\";\necho digit_distance_nums(123, -12);\necho \"\\n\";\necho digit_distance_nums(123, -123);\necho \"\\n\";\necho digit_distance_nums(123, -321);\necho \"\\n\";\necho digit_distance_nums(123, -456);\necho \"\\n\";\necho digit_distance_nums(123, -789);\necho \"\\n\";\necho digit_distance_nums(123, -987);\necho \"\\n\";\necho digit_distance_nums(123, -654);\necho \"\\n\";\necho digit_distance_nums(123, -321);\necho \"\\n\";\necho digit_distance_nums(123, -210);\necho \"\\n\";\necho digit_distance_nums(123, -987);\necho \"\\n\";\necho digit_distance_nums(123, -876);\necho \"\\n\";\necho digit_distance_nums(123, -765);\necho \"\\n\";\necho digit_distance_nums(123, -654);\necho \"\\n\";\necho digit_distance_nums(123, -543);\necho \"\\n\";\necho digit_distance_nums(123, -432);\necho \"\\n\";\necho digit",
    "    $n1 = str_split($n1);\n    $n2 = str_split($n2);\n    $sum = 0;\n    for ($i = 0; $i < count($n1); $i++) {\n        $sum += abs($n1[$i] - $n2[$i]);\n    }\n    return $sum;\n}\n\necho digit_distance_nums(123, 321);",
    "  $n1 = str_split($n1);\n  $n2 = str_split($n2);\n  $sum = 0;\n  for ($i = 0; $i < count($n1); $i++) {\n    $sum += abs($n1[$i] - $n2[$i]);\n  }\n  return $sum;\n}\n\necho digit_distance_nums(123, 456);\necho digit_distance_nums(12, 56);\necho digit_distance_nums(12, 56);\necho digit_distance_nums(10, 20);\necho digit_distance_nums(1, 2);\necho digit_distance_nums(1, 1);\necho digit_distance_nums(10, 11);\necho digit_distance_nums(5, 20);\necho digit_distance_nums(92, 17);\necho digit_distance_nums(5, 20);\necho digit_distance_nums(92, 17);\necho digit_distance_nums(5, 20);\necho digit_distance_nums(92, 17);\necho digit_distance_nums(5, 20);\necho digit_distance_nums(92, 17);\necho digit_distance_nums(5, 20);\necho digit_distance_nums(92, 17);\necho digit_distance_nums(5, 20);\necho digit_distance_nums(92, 17);\necho digit_distance_nums(5, 20);\necho digit_distance_nums(92, 17);\necho digit_distance_nums(5, 20);\necho digit_distance_nums(92, 17);\necho digit_distance_nums(5, 20);\necho digit_distance_nums(92, 17);\necho digit_distance_nums(5, 20);\necho digit_distance_nums(92, 17);\necho digit_distance_nums(5, 20);\necho digit_distance_nums(92, 17);\necho digit_distance_nums(5, 20);\necho digit_distance_nums(92, 17);\necho digit_distance_nums(5, 20);\necho digit_distance_nums(",
    "    $n1 = str_split($n1);\n    $n2 = str_split($n2);\n    $sum = 0;\n    for ($i = 0; $i < count($n1); $i++) {\n        $sum += abs($n1[$i] - $n2[$i]);\n    }\n    return $sum;\n}\n\necho digit_distance_nums(121, 599);",
    "    $n1 = str_split($n1);\n    $n2 = str_split($n2);\n    $sum = 0;\n    for ($i = 0; $i < count($n1); $i++) {\n        $sum += abs($n1[$i] - $n2[$i]);\n    }\n    return $sum;\n}\n",
    "    $n1 = str_split($n1);\n    $n2 = str_split($n2);\n    $sum = 0;\n    for ($i = 0; $i < count($n1); $i++) {\n        $sum += abs($n1[$i] - $n2[$i]);\n    }\n    return $sum;\n}\n\necho digit_distance_nums(123, 321);",
    "  $n1 = str_split($n1);\n  $n2 = str_split($n2);\n  $sum = 0;\n  for ($i = 0; $i < count($n1); $i++) {\n    $sum += abs($n1[$i] - $n2[$i]);\n  }\n  return $sum;\n}\n\necho digit_distance_nums(123, 321);\necho \"\\n\";\necho digit_distance_nums(123, 456);\necho \"\\n\";\necho digit_distance_nums(12, 12);\necho \"\\n\";\necho digit_distance_nums(10, 20);\necho \"\\n\";\necho digit_distance_nums(1, 2);\necho \"\\n\";\necho digit_distance_nums(0, 0);\necho \"\\n\";\necho digit_distance_nums(100, 1000);\necho \"\\n\";\necho digit_distance_nums(1234, 4321);\necho \"\\n\";\necho digit_distance_nums(3456, 6543);\necho \"\\n\";\necho digit_distance_nums(1212, 2121);\necho \"\\n\";\necho digit_distance_nums(10, 11);\necho \"\\n\";\necho digit_distance_nums(12, 21);\necho \"\\n\";\necho digit_distance_nums(123, 456);\necho \"\\n\";\necho digit_distance_nums(1, 0);\necho \"\\n\";\necho digit_distance_nums(1, 10);\necho \"\\n\";\necho digit_distance_nums(10, 1);\necho \"\\n\";\necho digit_distance_nums(10, 10);\necho \"\\n\";\necho digit_distance_nums(123, 654);\necho \"\\n\";\necho digit_distance_nums(321, 123);\necho \"\\n\";\necho digit_distance_nums(123, 173);\necho \"\\n\";\necho digit_distance_nums(123456789, 987654321);\necho \"\\n\";\necho digit_distance_nums(123456789, 987654320);\necho \"\\n\";\necho digit_distance_n",
    "    $n1 = str_split($n1);\n    $n2 = str_split($n2);\n    $sum = 0;\n    for ($i = 0; $i < count($n1); $i++) {\n        $sum += abs($n1[$i] - $n2[$i]);\n    }\n    return $sum;\n}\n\necho digit_distance_nums(123, 456);",
    "  $n1 = str_split($n1);\n  $n2 = str_split($n2);\n  $sum = 0;\n  for ($i = 0; $i < count($n1); $i++) {\n    $sum += abs($n1[$i] - $n2[$i]);\n  }\n  return $sum;\n}\n\necho digit_distance_nums(123, 321);\necho \"\\n\";\necho digit_distance_nums(111, 222);\necho \"\\n\";\necho digit_distance_nums(123, 456);\necho \"\\n\";\necho digit_distance_nums(12, 12);\necho \"\\n\";\necho digit_distance_nums(10, 20);\necho \"\\n\";\necho digit_distance_nums(1, 2);\necho \"\\n\";\necho digit_distance_nums(0, 0);\necho \"\\n\";\necho digit_distance_nums(100, 1000);\necho \"\\n\";\necho digit_distance_nums(1234, 4321);\necho \"\\n\";\necho digit_distance_nums(1234567890, 0987654321);\necho \"\\n\";",
    "  $sum = 0;\n  $n1 = str_split($n1);\n  $n2 = str_split($n2);\n  for ($i = 0; $i < count($n1); $i++) {\n    $sum += abs($n1[$i] - $n2[$i]);\n  }\n  return $sum;\n}\n\necho digit_distance_nums(123, 456);\necho \"\\n\";\necho digit_distance_nums(123, 579);\necho \"\\n\";\necho digit_distance_nums(90, 90);\necho \"\\n\";\necho digit_distance_nums(12, 12);\necho \"\\n\";\necho digit_distance_nums(10, 20);\necho \"\\n\";\necho digit_distance_nums(1, 2);\necho \"\\n\";\necho digit_distance_nums(0, 0);\necho \"\\n\";\necho digit_distance_nums(100, 100);\necho \"\\n\";\necho digit_distance_nums(123, 456);\necho \"\\n\";\necho digit_distance_nums(123, 579);\necho \"\\n\";\necho digit_distance_nums(90, 90);\necho \"\\n\";\necho digit_distance_nums(12, 12);\necho \"\\n\";\necho digit_distance_nums(10, 20);\necho \"\\n\";\necho digit_distance_nums(1, 2);\necho \"\\n\";\necho digit_distance_nums(0, 0);\necho \"\\n\";\necho digit_distance_nums(100, 100);\necho \"\\n\";\necho digit_distance_nums(123, 456);\necho \"\\n\";\necho digit_distance_nums(123, 579);\necho \"\\n\";\necho digit_distance_nums(90, 90);\necho \"\\n\";\necho digit_distance_nums(12, 12);\necho \"\\n\";\necho digit_distance_nums(10, 20);\necho \"\\n\";\necho digit_distance_nums(1, 2);\necho \"\\n\";\necho digit_distance_nums(0, 0);\necho \"\\n\";\necho digit_distance_",
    "    $n1 = str_split($n1);\n    $n2 = str_split($n2);\n    $sum = 0;\n    for ($i = 0; $i < count($n1); $i++) {\n        $sum += abs($n1[$i] - $n2[$i]);\n    }\n    return $sum;\n}\n\necho digit_distance_nums(123, 321);\necho digit_distance_nums(123, 456);\necho digit_distance_nums(123, 543);\necho digit_distance_nums(123, 987);\necho digit_distance_nums(123, 876);\necho digit_distance_nums(123, 765);\necho digit_distance_nums(123, 654);\necho digit_distance_nums(123, 321);\necho digit_distance_nums(123, 210);\necho digit_distance_nums(123, 123);\necho digit_distance_nums(123, 987);\necho digit_distance_nums(123, 876);\necho digit_distance_nums(123, 765);\necho digit_distance_nums(123, 654);\necho digit_distance_nums(123, 321);\necho digit_distance_nums(123, 210);\necho digit_distance_nums(123, 123);\necho digit_distance_nums(123, 987);\necho digit_distance_nums(123, 876);\necho digit_distance_nums(123, 765);\necho digit_distance_nums(123, 654);\necho digit_distance_nums(123, 321);\necho digit_distance_nums(123, 210);\necho digit_distance_nums(123, 123);\necho digit_distance_nums(123, 987);\necho digit_distance_nums(123, 876);\necho digit_distance_nums(123, 765);\necho digit_distance_nums(123, 654);\necho digit_distance_nums(123, 321);\necho digit_distance_nums(123, 210);\necho digit_distance_nums(123, 123);\necho digit_distance",
    "    $n1 = str_split($n1);\n    $n2 = str_split($n2);\n    $sum = 0;\n    for ($i = 0; $i < count($n1); $i++) {\n        $sum += abs($n1[$i] - $n2[$i]);\n    }\n    return $sum;\n}\n\necho digit_distance_nums(123, 321);\necho \"\\n\";\necho digit_distance_nums(123, 456);\necho \"\\n\";\necho digit_distance_nums(12, 12);\necho \"\\n\";\necho digit_distance_nums(10, 20);\necho \"\\n\";\necho digit_distance_nums(10, 21);\necho \"\\n\";\necho digit_distance_nums(10, 22);\necho \"\\n\";\necho digit_distance_nums(1, 9);\necho \"\\n\";\necho digit_distance_nums(0, 1);\necho \"\\n\";\necho digit_distance_nums(100, 15);\necho \"\\n\";\necho digit_distance_nums(99, 55);\necho \"\\n\";\necho digit_distance_nums(1, 0);\necho \"\\n\";\necho digit_distance_nums(1, 1);\necho \"\\n\";\necho digit_distance_nums(1, 9);\necho \"\\n\";\necho digit_distance_nums(9, 1);\necho \"\\n\";\necho digit_distance_nums(10, 30);\necho \"\\n\";\necho digit_distance_nums(10, 90);\necho \"\\n\";\necho digit_distance_nums(10, 12);\necho \"\\n\";\necho digit_distance_nums(10, 11);\necho \"\\n\";\necho digit_distance_nums(10, 13);\necho \"\\n\";\necho digit_distance_nums(10, 9);\necho \"\\n\";\necho digit_distance_nums(10, 8);\necho \"\\n\";\necho digit_distance_nums(10, 20);\necho \"\\n\";\necho digit_distance_nums(10, 21);\necho \"\\n\";\necho digit_distance_nums(10,",
    "    $n1 = str_split($n1);\n    $n2 = str_split($n2);\n    $sum = 0;\n    for ($i = 0; $i < count($n1); $i++) {\n        $sum += abs($n1[$i] - $n2[$i]);\n    }\n    return $sum;\n}\n\necho digit_distance_nums(123, 321);",
    "    $n1 = str_split($n1);\n    $n2 = str_split($n2);\n    $sum = 0;\n    for ($i = 0; $i < count($n1); $i++) {\n        $sum += abs($n1[$i] - $n2[$i]);\n    }\n    return $sum;\n}\n\necho digit_distance_nums(123, 456);",
    "    $n1 = str_split($n1);\n    $n2 = str_split($n2);\n    $sum = 0;\n    for ($i = 0; $i < count($n1); $i++) {\n        $sum += abs($n1[$i] - $n2[$i]);\n    }\n    return $sum;\n}\n\necho digit_distance_nums(121, 599);",
    "    $n1 = str_split($n1);\n    $n2 = str_split($n2);\n    $sum = 0;\n    for ($i = 0; $i < count($n1); $i++) {\n        $sum += abs($n1[$i] - $n2[$i]);\n    }\n    return $sum;\n}\n\necho digit_distance_nums(12, 23);",
    "  $n1 = str_split($n1);\n  $n2 = str_split($n2);\n  $sum = 0;\n  for ($i = 0; $i < count($n1); $i++) {\n    $sum += abs($n1[$i] - $n2[$i]);\n  }\n  return $sum;\n}\n\necho digit_distance_nums(1234, 4321);",
    "    $n1 = str_split($n1);\n    $n2 = str_split($n2);\n    $sum = 0;\n    for ($i = 0; $i < count($n1); $i++) {\n        $sum += abs($n1[$i] - $n2[$i]);\n    }\n    return $sum;\n}\n\necho digit_distance_nums(123, 456);",
    "  $n1 = str_split($n1);\n  $n2 = str_split($n2);\n  $sum = 0;\n  for ($i = 0; $i < count($n1); $i++) {\n    $sum += abs($n1[$i] - $n2[$i]);\n  }\n  return $sum;\n}\n\necho digit_distance_nums(123, 321);",
    "    $n1 = str_split($n1);\n    $n2 = str_split($n2);\n    $sum = 0;\n    for ($i = 0; $i < count($n1); $i++) {\n        $sum += abs($n1[$i] - $n2[$i]);\n    }\n    return $sum;\n}\n\necho digit_distance_nums(1234, 4321);"
  ]
}
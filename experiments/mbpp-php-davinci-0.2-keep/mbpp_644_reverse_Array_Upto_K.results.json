{
  "name": "mbpp_644_reverse_Array_Upto_K",
  "language": "php",
  "prompt": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_644_reverse_Array_Upto_K.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $len = count($input);\n    $i = 0;\n    while ($i < $k) {\n        $temp = $input[$i];\n        $input[$i] = $input[$len - 1 - $i];\n        $input[$len - 1 - $i] = $temp;\n        $i++;\n    }\n    return $input;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$result = reverse_Array_Upto_K($input, $k);\nprint_r($result);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpezuywlc7.php:24\nStack trace:\n#0 /tmp/tmpezuywlc7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpezuywlc7.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = [];\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$k = 5;\nprint_r(reverse_Array_Upto_K($input, $k));\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $i = 0;\n    while ($i < $k) {\n        $output[$i] = $input[$k - $i - 1];\n        $i++;\n    }\n    while ($i < count($input)) {\n        $output[$i] = $input[$i];\n        $i++;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $array_length = count($input);\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $array_length; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\necho \"Input Array : \";\nprint_r($input);\necho \"<br>\";\necho \"Output Array : \";\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Input Array : Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n<br>Output Array : Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $len = count($input);\n    $k = $k % $len;\n    $output = array_reverse(array_slice($input, 0, $k));\n    $output = array_merge($output, array_slice($input, $k));\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $len = count($input);\n    if ($k > $len) {\n        return \"Invalid Input\";\n    }\n    $output = array();\n    for ($i = $k - 1; $i >= 0; $i--) {\n        array_push($output, $input[$i]);\n    }\n    for ($i = $k; $i < $len; $i++) {\n        array_push($output, $input[$i]);\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\necho \"Input: \";\nprint_r($input);\necho \"<br>\";\necho \"Output: \";\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Input: Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n<br>Output: Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $len = count($input);\n    $i = 0;\n    $j = $k;\n    while ($i < $j) {\n        $temp = $input[$i];\n        $input[$i] = $input[$j];\n        $input[$j] = $temp;\n        $i++;\n        $j--;\n    }\n    return $input;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 5\n    [2] => 4\n    [3] => 3\n    [4] => 2\n    [5] => 1\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuyflthm0.php:26\nStack trace:\n#0 /tmp/tmpuyflthm0.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpuyflthm0.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $result = array();\n    for ($i = 0; $i < $k; $i++) {\n        $result[] = $input[$i];\n    }\n    $result = array_reverse($result);\n    for ($i = $k; $i < count($input); $i++) {\n        $result[] = $input[$i];\n    }\n    return $result;\n}\n\n$input = array(1, 2, 3, 4, 5);\n$k = 3;\n$result = reverse_Array_Upto_K($input, $k);\nprint_r($result);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $i = 0;\n    while($i < $k) {\n        $output[] = $input[$k - $i - 1];\n        $i++;\n    }\n    while($i < count($input)) {\n        $output[] = $input[$i];\n        $i++;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $i = 0;\n    $j = $k;\n    while ($i < $k) {\n        $output[$i] = $input[$j];\n        $i++;\n        $j--;\n    }\n    $j = count($input) - 1;\n    while ($i < count($input)) {\n        $output[$i] = $input[$j];\n        $i++;\n        $j--;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 6\n    [4] => 5\n    [5] => 4\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd_uxaeo1.php:30\nStack trace:\n#0 /tmp/tmpd_uxaeo1.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpd_uxaeo1.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $len = count($input);\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $len; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4] => 5\n    [5] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\necho \"Input: \";\nprint_r($input);\necho \"<br>\";\necho \"Output: \";\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Input: Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n<br>Output: Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = [];\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$k = 4;\nprint_r(reverse_Array_Upto_K($input, $k));\n\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $i = 0;\n    while ($i < $k) {\n        $output[] = $input[$k - $i - 1];\n        $i++;\n    }\n    while ($i < count($input)) {\n        $output[] = $input[$i];\n        $i++;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $i = 0;\n    $j = $k;\n    while ($i < $k) {\n        $output[$i] = $input[$j];\n        $i++;\n        $j--;\n    }\n    $j = count($input) - 1;\n    while ($i < count($input)) {\n        $output[$i] = $input[$j];\n        $i++;\n        $j--;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 9\n    [5] => 8\n    [6] => 7\n    [7] => 6\n    [8] => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp82tks4p.php:30\nStack trace:\n#0 /tmp/tmpp82tks4p.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpp82tks4p.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $i = 0;\n    while ($i < $k) {\n        $output[] = $input[$k - $i - 1];\n        $i++;\n    }\n    while ($i < count($input)) {\n        $output[] = $input[$i];\n        $i++;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $len = count($input);\n    for ($i = 0; $i < $k; $i++) {\n        $temp = $input[$i];\n        $input[$i] = $input[$len - $k + $i];\n        $input[$len - $k + $i] = $temp;\n    }\n    return $input;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\n\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 7\n    [2] => 8\n    [3] => 9\n    [4] => 5\n    [5] => 1\n    [6] => 2\n    [7] => 3\n    [8] => 4\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpje2h2sko.php:23\nStack trace:\n#0 /tmp/tmpje2h2sko.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpje2h2sko.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $count = 0;\n    for($i = $k; $i >= 0; $i--) {\n        $output[$count] = $input[$i];\n        $count++;\n    }\n    for($i = $k + 1; $i < count($input); $i++) {\n        $output[$count] = $input[$i];\n        $count++;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_rssz_yb.php:26\nStack trace:\n#0 /tmp/tmp_rssz_yb.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp_rssz_yb.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $n = count($input);\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $n; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $array = array();\n    for($i = 0; $i < $k; $i++) {\n        $array[$i] = $input[$i];\n    }\n    $array = array_reverse($array);\n    for($i = $k; $i < count($input); $i++) {\n        $array[$i] = $input[$i];\n    }\n    return $array;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$result = reverse_Array_Upto_K($input, $k);\nprint_r($result);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $result = array();\n    for ($i = 0; $i < $k; $i++) {\n        $result[] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $result[] = $input[$i];\n    }\n    return $result;\n}\n\n$input = array(1, 2, 3, 4, 5, 6);\n$k = 3;\n$result = reverse_Array_Upto_K($input, $k);\nprint_r($result);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4] => 5\n    [5] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $i = 0;\n    while ($i < $k) {\n        $output[] = $input[$i];\n        $i++;\n    }\n    $i = count($input) - 1;\n    while ($i >= $k) {\n        $output[] = $input[$i];\n        $i--;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 9\n    [5] => 8\n    [6] => 7\n    [7] => 6\n    [8] => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdcb6busa.php:27\nStack trace:\n#0 /tmp/tmpdcb6busa.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpdcb6busa.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $len = count($input);\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $len; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $array = array();\n    $array = $input;\n    $i = 0;\n    $j = $k;\n    while ($i < $j) {\n        $temp = $array[$i];\n        $array[$i] = $array[$j];\n        $array[$j] = $temp;\n        $i++;\n        $j--;\n    }\n    return $array;\n}\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 3;\n$result = reverse_Array_Upto_K($input, $k);\necho \"Input Array : \";\nprint_r($input);\necho \"<br>\";\necho \"Output Array : \";\nprint_r($result);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Input Array : Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n<br>Output Array : Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp06qu3o13.php:30\nStack trace:\n#0 /tmp/tmp06qu3o13.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp06qu3o13.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $len = count($input);\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $len; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $i = 0;\n    while ($i < $k) {\n        $output[$i] = $input[$k - $i - 1];\n        $i++;\n    }\n    while ($i < count($input)) {\n        $output[$i] = $input[$i];\n        $i++;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $input_length = count($input);\n    $output = array();\n    for ($i = 0; $i < $input_length; $i++) {\n        if ($i < $k) {\n            $output[$i] = $input[$k - $i - 1];\n        } else {\n            $output[$i] = $input[$i];\n        }\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $j = 0;\n    for($i = $k; $i >= 0; $i--) {\n        $output[$j] = $input[$i];\n        $j++;\n    }\n    for($i = $k+1; $i < count($input); $i++) {\n        $output[$j] = $input[$i];\n        $j++;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp774i7vw_.php:26\nStack trace:\n#0 /tmp/tmp774i7vw_.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp774i7vw_.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $n = count($input);\n    $i = 0;\n    while ($i < $k) {\n        $temp = $input[$i];\n        $input[$i] = $input[$n - 1 - $i];\n        $input[$n - 1 - $i] = $temp;\n        $i++;\n    }\n    return $input;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\necho \"Input Array: \";\nprint_r($input);\necho \"\\n\";\necho \"Output Array: \";\nprint_r($output);\necho \"\\n\";\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Input Array: Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nOutput Array: Array\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2fqx8qlr.php:29\nStack trace:\n#0 /tmp/tmp2fqx8qlr.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp2fqx8qlr.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $len = count($input);\n    $output = [];\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $len; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $n = count($input);\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $n; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $length = count($input);\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $length; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $i = 0;\n    while ($i < $k) {\n        $output[] = $input[$k - $i - 1];\n        $i++;\n    }\n    while ($i < count($input)) {\n        $output[] = $input[$i];\n        $i++;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        array_unshift($output, $input[$i]);\n    }\n    for ($i = $k; $i < sizeof($input); $i++) {\n        array_push($output, $input[$i]);\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\nprint_r(reverse_Array_Upto_K($input, $k));\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = [];\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array_reverse(array_slice($input, 0, $k));\n    $output = array_merge($output, array_slice($input, $k));\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $len = count($input);\n    $i = 0;\n    $j = $k;\n    while ($i < $j) {\n        $temp = $input[$i];\n        $input[$i] = $input[$j];\n        $input[$j] = $temp;\n        $i++;\n        $j--;\n    }\n    return $input;\n}\n\n$input = array(1, 2, 3, 4, 5, 6);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp14fr7jbp.php:26\nStack trace:\n#0 /tmp/tmp14fr7jbp.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp14fr7jbp.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $j = 0;\n    for ($i = $k; $i >= 0; $i--) {\n        $output[$j] = $input[$i];\n        $j++;\n    }\n    for ($i = $k + 1; $i < count($input); $i++) {\n        $output[$j] = $input[$i];\n        $j++;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 5\n    [2] => 4\n    [3] => 3\n    [4] => 2\n    [5] => 1\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1j0_sj9v.php:26\nStack trace:\n#0 /tmp/tmp1j0_sj9v.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp1j0_sj9v.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $i = 0;\n    while ($i < $k) {\n        $output[] = $input[$k - $i - 1];\n        $i++;\n    }\n    while ($i < count($input)) {\n        $output[] = $input[$i];\n        $i++;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $length = count($input);\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $length; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $len = count($input);\n    $output = array();\n    for($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for($i = $k; $i < $len; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $len = count($input);\n    for ($i = $k; $i >= 0; $i--) {\n        $output[] = $input[$i];\n    }\n    for ($i = $k + 1; $i < $len; $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 5\n    [2] => 4\n    [3] => 3\n    [4] => 2\n    [5] => 1\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsspu10r5.php:24\nStack trace:\n#0 /tmp/tmpsspu10r5.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpsspu10r5.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $i = 0;\n    $j = $k;\n    while ($i < $k) {\n        $output[$i] = $input[$j];\n        $i++;\n        $j--;\n    }\n    $j = count($input) - 1;\n    while ($i < count($input)) {\n        $output[$i] = $input[$j];\n        $i++;\n        $j--;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 5\n    [2] => 4\n    [3] => 3\n    [4] => 2\n    [5] => 9\n    [6] => 8\n    [7] => 7\n    [8] => 6\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7sv5vl4b.php:30\nStack trace:\n#0 /tmp/tmp7sv5vl4b.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp7sv5vl4b.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $n = count($input);\n    $i = 0;\n    while ($i < $k) {\n        $temp = $input[$i];\n        $input[$i] = $input[$k];\n        $input[$k] = $temp;\n        $i++;\n        $k--;\n    }\n    return $input;\n}\n\n$input = array(1, 2, 3, 4, 5, 6);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\necho implode(',', $output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "4,3,2,1,5,6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpewmolmx8.php:25\nStack trace:\n#0 /tmp/tmpewmolmx8.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpewmolmx8.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\n\necho \"Input : \";\necho implode(\", \", $input);\necho \"\\n\";\necho \"Output : \";\necho implode(\", \", $output);\necho \"\\n\";\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Input : 1, 2, 3, 4, 5, 6, 7\nOutput : 3, 2, 1, 4, 5, 6, 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = [];\n    $i = 0;\n    while ($i < $k) {\n        $output[] = $input[$k - $i - 1];\n        $i++;\n    }\n    while ($i < count($input)) {\n        $output[] = $input[$i];\n        $i++;\n    }\n    return $output;\n}\n\n$input = [1, 2, 3, 4, 5, 6, 7];\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = $k; $i >= 0; $i--) {\n        $output[] = $input[$i];\n    }\n    for ($i = $k + 1; $i < count($input); $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_epf31ir.php:23\nStack trace:\n#0 /tmp/tmp_epf31ir.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp_epf31ir.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $len = count($input);\n    $output = array();\n    for($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for($i = $k; $i < $len; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[] = $input[$i];\n    }\n    $output = array_reverse($output);\n    for ($i = $k; $i < count($input); $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $len = count($input);\n    if ($k > $len) {\n        $k = $len;\n    }\n    $result = array();\n    for ($i = $k - 1; $i >= 0; $i--) {\n        $result[] = $input[$i];\n    }\n    for ($i = $k; $i < $len; $i++) {\n        $result[] = $input[$i];\n    }\n    return $result;\n}\n\n$input = array(1, 2, 3, 4, 5);\n$k = 3;\n$result = reverse_Array_Upto_K($input, $k);\nprint_r($result);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = $k; $i >= 0; $i--) {\n        array_push($output, $input[$i]);\n    }\n    for ($i = $k + 1; $i < count($input); $i++) {\n        array_push($output, $input[$i]);\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppmi6t2yr.php:23\nStack trace:\n#0 /tmp/tmppmi6t2yr.php(28): test()\n#1 {main}\n  thrown in /tmp/tmppmi6t2yr.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        array_push($output, $input[$k - $i - 1]);\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        array_push($output, $input[$i]);\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $input_length = count($input);\n    if ($input_length < $k) {\n        return $input;\n    } else {\n        for ($i = $k - 1; $i >= 0; $i--) {\n            $output[] = $input[$i];\n        }\n        for ($i = $k; $i < $input_length; $i++) {\n            $output[] = $input[$i];\n        }\n        return $output;\n    }\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\nprint_r(reverse_Array_Upto_K($input, $k));\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $len = count($input);\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $len; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $len = count($input);\n    for($i = $k; $i >= 0; $i--) {\n        $output[] = $input[$i];\n    }\n    for($i = $k+1; $i < $len; $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk7yqb5su.php:24\nStack trace:\n#0 /tmp/tmpk7yqb5su.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpk7yqb5su.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $len = count($input);\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $len; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $result = array();\n    $len = count($input);\n    for ($i = $k; $i >= 0; $i--) {\n        $result[] = $input[$i];\n    }\n    for ($i = $k + 1; $i < $len; $i++) {\n        $result[] = $input[$i];\n    }\n    return $result;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$result = reverse_Array_Upto_K($input, $k);\nprint_r($result);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm6d_8oaq.php:24\nStack trace:\n#0 /tmp/tmpm6d_8oaq.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpm6d_8oaq.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = $k; $i >= 0; $i--) {\n        array_push($output, $input[$i]);\n    }\n    for ($i = count($input) - 1; $i > $k; $i--) {\n        array_push($output, $input[$i]);\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 9\n    [6] => 8\n    [7] => 7\n    [8] => 6\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4rtyspuy.php:23\nStack trace:\n#0 /tmp/tmp4rtyspuy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp4rtyspuy.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $len = count($input);\n    if ($k > $len) {\n        return $input;\n    }\n    $output = array();\n    for ($i = $k - 1; $i >= 0; $i--) {\n        $output[] = $input[$i];\n    }\n    for ($i = $k; $i < $len; $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $i = 0;\n    while ($i < $k) {\n        $output[$i] = $input[$k - $i - 1];\n        $i++;\n    }\n    while ($i < count($input)) {\n        $output[$i] = $input[$i];\n        $i++;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $j = 0;\n    for ($i = $k; $i >= 0; $i--) {\n        $output[$j] = $input[$i];\n        $j++;\n    }\n    for ($i = $k + 1; $i < count($input); $i++) {\n        $output[$j] = $input[$i];\n        $j++;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp5n0weao.php:26\nStack trace:\n#0 /tmp/tmpp5n0weao.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpp5n0weao.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = [];\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $n = count($input);\n    $start = 0;\n    $end = $k;\n    while ($start < $end) {\n        $temp = $input[$start];\n        $input[$start] = $input[$end];\n        $input[$end] = $temp;\n        $start++;\n        $end--;\n    }\n    return $input;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 4;\nprint_r(reverse_Array_Upto_K($input, $k));\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzstvcj9e.php:25\nStack trace:\n#0 /tmp/tmpzstvcj9e.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpzstvcj9e.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $len = count($input);\n    $output = array();\n    for ($i = $k; $i >= 0; $i--) {\n        $output[] = $input[$i];\n    }\n    for ($i = $k + 1; $i < $len; $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqw5i7_4l.php:24\nStack trace:\n#0 /tmp/tmpqw5i7_4l.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpqw5i7_4l.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $output = array_reverse(array_slice($input, 0, $k));\n    $output = array_merge($output, array_slice($input, $k));\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\necho implode(', ', $output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "5, 4, 3, 2, 1, 6, 7, 8, 9, 10",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[] = $input[$i];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmdwrgb8u.php:23\nStack trace:\n#0 /tmp/tmpmdwrgb8u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpmdwrgb8u.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        array_push($output, $input[$i]);\n    }\n    $output = array_reverse($output);\n    for ($i = $k; $i < count($input); $i++) {\n        array_push($output, $input[$i]);\n    }\n    return $output;\n}\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $length = count($input);\n    if ($k > $length) {\n        $k = $length;\n    }\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $length; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[] = $input[$i];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[] = $input[count($input) - $i + $k - 1];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 6\n    [4] => 5\n    [5] => 4\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ai7bb2s.php:23\nStack trace:\n#0 /tmp/tmp_ai7bb2s.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp_ai7bb2s.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = [];\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $n = count($input);\n    $i = 0;\n    while ($i < $k) {\n        $temp = $input[$i];\n        $input[$i] = $input[$n - $k + $i];\n        $input[$n - $k + $i] = $temp;\n        $i++;\n    }\n    return $input;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 7\n    [2] => 8\n    [3] => 9\n    [4] => 10\n    [5] => 1\n    [6] => 2\n    [7] => 3\n    [8] => 4\n    [9] => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphnd1jrdf.php:24\nStack trace:\n#0 /tmp/tmphnd1jrdf.php(29): test()\n#1 {main}\n  thrown in /tmp/tmphnd1jrdf.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\necho implode(',', $output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "5,4,3,2,1,6,7,8,9,10",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $len = count($input);\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $len; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $count = count($input);\n    for ($i = 0; $i < $count; $i++) {\n        if ($i < $k) {\n            $output[$i] = $input[$k - $i - 1];\n        } else {\n            $output[$i] = $input[$i];\n        }\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $j = 0;\n    for ($i = $k; $i >= 0; $i--) {\n        $output[$j] = $input[$i];\n        $j++;\n    }\n    for ($i = $k + 1; $i < count($input); $i++) {\n        $output[$j] = $input[$i];\n        $j++;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 5\n    [2] => 4\n    [3] => 3\n    [4] => 2\n    [5] => 1\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1j0_sj9v.php:26\nStack trace:\n#0 /tmp/tmp1j0_sj9v.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp1j0_sj9v.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        array_push($output, $input[$i]);\n    }\n    $output = array_reverse($output);\n    for ($i = $k; $i < count($input); $i++) {\n        array_push($output, $input[$i]);\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $len = count($input);\n    $output = array();\n    for ($i = 0; $i < $len; $i++) {\n        if ($i < $k) {\n            $output[$i] = $input[$k - $i - 1];\n        } else {\n            $output[$i] = $input[$i];\n        }\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $result = array();\n    for ($i = 0; $i < $k; $i++) {\n        $result[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $result[$i] = $input[$i];\n    }\n    return $result;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$result = reverse_Array_Upto_K($input, $k);\nprint_r($result);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $len = count($input);\n    $output = array();\n    for ($i = 0; $i < $len; $i++) {\n        if ($i < $k) {\n            $output[$i] = $input[$k - $i - 1];\n        } else {\n            $output[$i] = $input[$i];\n        }\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $count = count($input);\n    for ($i = $k; $i >= 0; $i--) {\n        $output[] = $input[$i];\n    }\n    for ($i = $k + 1; $i < $count; $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\necho \"Input : \";\nprint_r($input);\necho \"<br>\";\necho \"Output : \";\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Input : Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n<br>Output : Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpudfyemid.php:28\nStack trace:\n#0 /tmp/tmpudfyemid.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpudfyemid.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\nprint_r(reverse_Array_Upto_K($input, $k));\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $j = 0;\n    for ($i = $k; $i >= 0; $i--) {\n        $output[$j] = $input[$i];\n        $j++;\n    }\n    for ($i = $k + 1; $i < count($input); $i++) {\n        $output[$j] = $input[$i];\n        $j++;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwi2kec29.php:26\nStack trace:\n#0 /tmp/tmpwi2kec29.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpwi2kec29.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = $k; $i >= 0; $i--) {\n        $output[] = $input[$i];\n    }\n    for ($i = $k + 1; $i < count($input); $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 5\n    [2] => 4\n    [3] => 3\n    [4] => 2\n    [5] => 1\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdyn0x4y4.php:23\nStack trace:\n#0 /tmp/tmpdyn0x4y4.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpdyn0x4y4.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $length = count($input);\n    if ($k > $length) {\n        return $input;\n    }\n    $start = 0;\n    $end = $k - 1;\n    while ($start < $end) {\n        $temp = $input[$start];\n        $input[$start] = $input[$end];\n        $input[$end] = $temp;\n        $start++;\n        $end--;\n    }\n    return $input;\n}\n\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $len = count($input);\n    for($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for($i = $k; $i < $len; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $count = count($input);\n    for ($i = $k; $i >= 0; $i--) {\n        $output[] = $input[$i];\n    }\n    for ($i = $k + 1; $i < $count; $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 5\n    [2] => 4\n    [3] => 3\n    [4] => 2\n    [5] => 1\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp95qg7zd5.php:24\nStack trace:\n#0 /tmp/tmp95qg7zd5.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp95qg7zd5.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $count = count($input);\n    for ($i = $k; $i >= 0; $i--) {\n        $output[] = $input[$i];\n    }\n    for ($i = $k + 1; $i < $count; $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp51_w50ac.php:24\nStack trace:\n#0 /tmp/tmp51_w50ac.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp51_w50ac.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $count = count($input);\n    for ($i = 0; $i < $count; $i++) {\n        if ($i < $k) {\n            $output[$i] = $input[$k - $i - 1];\n        } else {\n            $output[$i] = $input[$i];\n        }\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\necho \"Input : \";\nprint_r($input);\necho \"Output : \";\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Input : Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\nOutput : Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $len = count($input);\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $len; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $input_length = count($input);\n    $reverse_array = array();\n    for ($i = 0; $i < $k; $i++) {\n        $reverse_array[$i] = $input[$i];\n    }\n    for ($i = $k; $i < $input_length; $i++) {\n        $reverse_array[$i] = $input[$input_length - $i + $k - 1];\n    }\n    return $reverse_array;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 9\n    [4] => 8\n    [5] => 7\n    [6] => 6\n    [7] => 5\n    [8] => 4\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpawx14tmb.php:24\nStack trace:\n#0 /tmp/tmpawx14tmb.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpawx14tmb.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $size = count($input);\n    for ($i = 0; $i < $k; $i++) {\n        $temp = $input[$i];\n        $input[$i] = $input[$size - $k + $i];\n        $input[$size - $k + $i] = $temp;\n    }\n    return $input;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 7\n    [2] => 8\n    [3] => 4\n    [4] => 5\n    [5] => 1\n    [6] => 2\n    [7] => 3\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp94a5xikr.php:22\nStack trace:\n#0 /tmp/tmp94a5xikr.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp94a5xikr.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n$input = array(1, 2, 3, 4, 5, 6, 7, 8);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $n = count($input);\n    for ($i = 0; $i < $n; $i++) {\n        if ($i < $k) {\n            $output[$i] = $input[$k - $i - 1];\n        } else {\n            $output[$i] = $input[$i];\n        }\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4] => 5\n    [5] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $count = count($input);\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $count; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $len = count($input);\n    if ($k > $len) {\n        return \"Invalid Input\";\n    }\n    $i = 0;\n    $j = $k - 1;\n    while ($i < $j) {\n        $temp = $input[$i];\n        $input[$i] = $input[$j];\n        $input[$j] = $temp;\n        $i++;\n        $j--;\n    }\n    return $input;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$result = reverse_Array_Upto_K($input, $k);\nprint_r($result);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $result = array();\n    for ($i = 0; $i < $k; $i++) {\n        $result[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $result[$i] = $input[$i];\n    }\n    return $result;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$result = reverse_Array_Upto_K($input, $k);\necho \"Input: \";\nprint_r($input);\necho \"Output: \";\nprint_r($result);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Input: Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\nOutput: Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = [];\n    for($i = 0; $i < $k; $i++) {\n        $output[] = $input[$i];\n    }\n    for($i = $k; $i < count($input); $i++) {\n        $output[] = $input[count($input) - $i + $k - 1];\n    }\n    return $output;\n}\n\n$input = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$k = 5;\n\necho implode(', ', reverse_Array_Upto_K($input, $k));\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "1, 2, 3, 4, 5, 9, 8, 7, 6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppjvhi23f.php:23\nStack trace:\n#0 /tmp/tmppjvhi23f.php(28): test()\n#1 {main}\n  thrown in /tmp/tmppjvhi23f.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $j = 0;\n    for ($i = $k; $i >= 0; $i--) {\n        $output[$j] = $input[$i];\n        $j++;\n    }\n    for ($i = $k + 1; $i < count($input); $i++) {\n        $output[$j] = $input[$i];\n        $j++;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 5\n    [2] => 4\n    [3] => 3\n    [4] => 2\n    [5] => 1\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1j0_sj9v.php:26\nStack trace:\n#0 /tmp/tmp1j0_sj9v.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp1j0_sj9v.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $i = 0;\n    $j = $k;\n    while ($i < $k) {\n        $output[$i] = $input[$j];\n        $i++;\n        $j--;\n    }\n    $j = count($input) - 1;\n    while ($i < count($input)) {\n        $output[$i] = $input[$j];\n        $i++;\n        $j--;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 5\n    [2] => 4\n    [3] => 3\n    [4] => 2\n    [5] => 9\n    [6] => 8\n    [7] => 7\n    [8] => 6\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7sv5vl4b.php:30\nStack trace:\n#0 /tmp/tmp7sv5vl4b.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp7sv5vl4b.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = [];\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = [1, 2, 3, 4, 5, 6, 7];\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = $k; $i >= 0; $i--) {\n        array_push($output, $input[$i]);\n    }\n    for ($i = $k + 1; $i < count($input); $i++) {\n        array_push($output, $input[$i]);\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppmi6t2yr.php:23\nStack trace:\n#0 /tmp/tmppmi6t2yr.php(28): test()\n#1 {main}\n  thrown in /tmp/tmppmi6t2yr.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $length = count($input);\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $length; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $n = count($input);\n    $output = [];\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $n; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $i = 0;\n    while ($i < $k) {\n        $output[] = $input[$k - $i - 1];\n        $i++;\n    }\n    while ($i < count($input)) {\n        $output[] = $input[$i];\n        $i++;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $i = 0;\n    while ($i < $k) {\n        $output[$i] = $input[$k - $i - 1];\n        $i++;\n    }\n    while ($i < count($input)) {\n        $output[$i] = $input[$i];\n        $i++;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $result = [];\n    for ($i = 0; $i < $k; $i++) {\n        $result[] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $result[] = $input[$i];\n    }\n    return $result;\n}\n\n$input = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$k = 5;\n$result = reverse_Array_Upto_K($input, $k);\nprint_r($result);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $length = count($input);\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $length; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[] = $input[$i];\n    }\n    $output = array_reverse($output);\n    for ($i = $k; $i < count($input); $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\necho \"Input: \";\nprint_r($input);\necho \"\\nOutput: \";\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Input: Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nOutput: Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $i = 0;\n    $j = $k;\n    while ($i < $k) {\n        $output[$i] = $input[$j];\n        $i++;\n        $j--;\n    }\n    $j = count($input) - 1;\n    while ($i < count($input)) {\n        $output[$i] = $input[$j];\n        $i++;\n        $j--;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 5\n    [2] => 4\n    [3] => 3\n    [4] => 2\n    [5] => 9\n    [6] => 8\n    [7] => 7\n    [8] => 6\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7sv5vl4b.php:30\nStack trace:\n#0 /tmp/tmp7sv5vl4b.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp7sv5vl4b.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $i = 0;\n    $j = 0;\n    while ($i < $k) {\n        $output[$i] = $input[$k - $i - 1];\n        $i++;\n    }\n    while ($i < count($input)) {\n        $output[$i] = $input[$i];\n        $i++;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\nprint_r(reverse_Array_Upto_K($input, $k));\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $count = 0;\n    for ($i = $k; $i >= 0; $i--) {\n        $output[$count] = $input[$i];\n        $count++;\n    }\n    for ($i = $k + 1; $i < count($input); $i++) {\n        $output[$count] = $input[$i];\n        $count++;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\nprint_r(reverse_Array_Upto_K($input, $k));\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29i5qn31.php:25\nStack trace:\n#0 /tmp/tmp29i5qn31.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp29i5qn31.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $length = count($input);\n    $output = array();\n    for ($i = 0; $i < $length; $i++) {\n        if ($i < $k) {\n            $output[$i] = $input[$k - $i - 1];\n        } else {\n            $output[$i] = $input[$i];\n        }\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $count = count($input);\n    if ($k > $count) {\n        return \"k is greater than array size\";\n    }\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $count; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = [];\n    for ($i = 0; $i < $k; $i++) {\n        $output[] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$k = 5;\nprint_r(reverse_Array_Upto_K($input, $k));\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $result = [];\n    $count = count($input);\n    for ($i = 0; $i < $k; $i++) {\n        $result[] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $count; $i++) {\n        $result[] = $input[$i];\n    }\n    return $result;\n}\n\n$input = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$k = 4;\nprint_r(reverse_Array_Upto_K($input, $k));\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4] => 5\n    [5] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $length = count($input);\n    for($i = $k; $i >= 0; $i--) {\n        $output[] = $input[$i];\n    }\n    for($i = $k + 1; $i < $length; $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb30l8p21.php:24\nStack trace:\n#0 /tmp/tmpb30l8p21.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpb30l8p21.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $result = array();\n    for ($i = $k; $i >= 0; $i--) {\n        array_push($result, $input[$i]);\n    }\n    for ($i = $k + 1; $i < count($input); $i++) {\n        array_push($result, $input[$i]);\n    }\n    return $result;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\nprint_r(reverse_Array_Upto_K($input, $k));\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpskf3mjjc.php:22\nStack trace:\n#0 /tmp/tmpskf3mjjc.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpskf3mjjc.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $n = count($input);\n    $i = 0;\n    while ($i < $k) {\n        $temp = $input[$i];\n        $input[$i] = $input[$k];\n        $input[$k] = $temp;\n        $i++;\n        $k--;\n    }\n    return $input;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 3;\nprint_r(reverse_Array_Upto_K($input, $k));\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpso88hxg2.php:24\nStack trace:\n#0 /tmp/tmpso88hxg2.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpso88hxg2.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $n = count($input);\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $n; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $len = count($input);\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $len; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $len = count($input);\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $len; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $i = 0;\n    while ($i < $k) {\n        array_unshift($output, $input[$i]);\n        $i++;\n    }\n    while ($i < count($input)) {\n        array_push($output, $input[$i]);\n        $i++;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n\t$output = array();\n\tfor ($i = 0; $i < $k; $i++) {\n\t\t$output[] = $input[$k - $i - 1];\n\t}\n\tfor ($i = $k; $i < count($input); $i++) {\n\t\t$output[] = $input[$i];\n\t}\n\treturn $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $i = 0;\n    $j = $k;\n    while ($i < $k) {\n        $output[$i] = $input[$j];\n        $i++;\n        $j--;\n    }\n    $j = count($input) - 1;\n    while ($i < count($input)) {\n        $output[$i] = $input[$j];\n        $i++;\n        $j--;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 9\n    [5] => 8\n    [6] => 7\n    [7] => 6\n    [8] => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp82tks4p.php:30\nStack trace:\n#0 /tmp/tmpp82tks4p.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpp82tks4p.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[] = $input[$i];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        array_unshift($output, $input[$i]);\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\necho \"Input: \" . implode(', ', $input) . \"\\n\";\necho \"Output: \" . implode(', ', $output) . \"\\n\";\n\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Input: 1, 2, 3, 4, 5, 6, 7, 8, 9\nOutput: 9, 8, 7, 6, 5, 4, 1, 2, 3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnyq5pzmc.php:25\nStack trace:\n#0 /tmp/tmpnyq5pzmc.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpnyq5pzmc.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = $k; $i >= 0; $i--) {\n        array_push($output, $input[$i]);\n    }\n    for ($i = $k + 1; $i < count($input); $i++) {\n        array_push($output, $input[$i]);\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\necho implode(',', $output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "5,4,3,2,1,6,7,8,9\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg_xd2cjp.php:23\nStack trace:\n#0 /tmp/tmpg_xd2cjp.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpg_xd2cjp.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $j = 0;\n    for ($i = $k; $i >= 0; $i--) {\n        $output[$j] = $input[$i];\n        $j++;\n    }\n    for ($i = $k + 1; $i < count($input); $i++) {\n        $output[$j] = $input[$i];\n        $j++;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp5n0weao.php:26\nStack trace:\n#0 /tmp/tmpp5n0weao.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpp5n0weao.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $len = count($input);\n    $output = array();\n    for($i = 0; $i < $len; $i++) {\n        if($i < $k) {\n            $output[$i] = $input[$k - $i - 1];\n        } else {\n            $output[$i] = $input[$i];\n        }\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4] => 5\n    [5] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = [];\n    for ($i = 0; $i < $k; $i++) {\n        $output[] = $input[$i];\n    }\n    $output = array_reverse($output);\n    for ($i = $k; $i < count($input); $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\necho \"Input Array : \";\nprint_r($input);\necho \"Output Array : \";\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Input Array : Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n)\nOutput Array : Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $i = 0;\n    while ($i < $k) {\n        $output[$i] = $input[$k - $i - 1];\n        $i++;\n    }\n    while ($i < count($input)) {\n        $output[$i] = $input[$i];\n        $i++;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = $k; $i >= 0; $i--) {\n        $output[] = $input[$i];\n    }\n    for ($i = $k + 1; $i < count($input); $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_epf31ir.php:23\nStack trace:\n#0 /tmp/tmp_epf31ir.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp_epf31ir.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $length = count($input);\n    if ($k > $length) {\n        return \"Invalid Input\";\n    }\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $length; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $i = 0;\n    while ($i < $k) {\n        array_push($output, $input[$i]);\n        $i++;\n    }\n    $i = $k - 1;\n    while ($i >= 0) {\n        array_push($output, $input[$i]);\n        $i--;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjmndeu2v.php:27\nStack trace:\n#0 /tmp/tmpjmndeu2v.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpjmndeu2v.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $input_array = str_split($input);\n    $input_array_length = count($input_array);\n    $output_array = array();\n    for($i = 0; $i < $input_array_length; $i++) {\n        if($i < $k) {\n            $output_array[$i] = $input_array[$k - $i - 1];\n        } else {\n            $output_array[$i] = $input_array[$i];\n        }\n    }\n    return implode(\"\", $output_array);\n}\n\n$input = \"abcdefgh\";\n$k = 3;\necho reverse_Array_Upto_K($input, $k);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "cbadefgh\nFatal error: Uncaught TypeError: str_split(): Argument #1 ($string) must be of type string, array given in /tmp/tmpkl0bmztr.php:4\nStack trace:\n#0 /tmp/tmpkl0bmztr.php(4): str_split(Array)\n#1 /tmp/tmpkl0bmztr.php(21): reverse_Array_Upto_K(Array, 4)\n#2 /tmp/tmpkl0bmztr.php(25): candidate(Array, 4)\n#3 /tmp/tmpkl0bmztr.php(30): test()\n#4 {main}\n  thrown in /tmp/tmpkl0bmztr.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $len = count($input);\n    $i = 0;\n    $j = $k;\n    while ($i < $j) {\n        $temp = $input[$i];\n        $input[$i] = $input[$j];\n        $input[$j] = $temp;\n        $i++;\n        $j--;\n    }\n    return $input;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$result = reverse_Array_Upto_K($input, $k);\nprint_r($result);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 5\n    [2] => 4\n    [3] => 3\n    [4] => 2\n    [5] => 1\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbdgqp88c.php:26\nStack trace:\n#0 /tmp/tmpbdgqp88c.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbdgqp88c.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = [];\n    $len = count($input);\n    for ($i = $k; $i >= 0; $i--) {\n        $output[] = $input[$i];\n    }\n    for ($i = $k + 1; $i < $len; $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt0v1v3qu.php:24\nStack trace:\n#0 /tmp/tmpt0v1v3qu.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpt0v1v3qu.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $len = count($input);\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $len; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $len = count($input);\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $len; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n\t$output = array();\n\t$i = 0;\n\twhile ($i < $k) {\n\t\t$output[$i] = $input[$k - $i - 1];\n\t\t$i++;\n\t}\n\twhile ($i < count($input)) {\n\t\t$output[$i] = $input[$i];\n\t\t$i++;\n\t}\n\treturn $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $len = count($input);\n    if ($k > $len) {\n        $k = $len;\n    }\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $len; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $j = 0;\n    for ($i = $k - 1; $i >= 0; $i--) {\n        $output[$j] = $input[$i];\n        $j++;\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$j] = $input[$i];\n        $j++;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $result = array();\n    $count = count($input);\n    for ($i = 0; $i < $count; $i++) {\n        if ($i < $k) {\n            $result[$i] = $input[$k - $i - 1];\n        } else {\n            $result[$i] = $input[$i];\n        }\n    }\n    return $result;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$result = reverse_Array_Upto_K($input, $k);\nprint_r($result);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[] = $input[$i];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5r0zcgk.php:24\nStack trace:\n#0 /tmp/tmpf5r0zcgk.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpf5r0zcgk.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $i = 0;\n    while ($i < $k) {\n        $output[] = $input[$k - $i - 1];\n        $i++;\n    }\n    while ($i < count($input)) {\n        $output[] = $input[$i];\n        $i++;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\nprint_r(reverse_Array_Upto_K($input, $k));\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n\t$result = array();\n\tfor ($i = 0; $i < $k; $i++) {\n\t\t$result[] = $input[$k - $i - 1];\n\t}\n\tfor ($i = $k; $i < count($input); $i++) {\n\t\t$result[] = $input[$i];\n\t}\n\treturn $result;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\nprint_r(reverse_Array_Upto_K($input, $k));\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $j = 0;\n    for ($i = $k; $i >= 0; $i--) {\n        $output[$j] = $input[$i];\n        $j++;\n    }\n    for ($i = $k + 1; $i < count($input); $i++) {\n        $output[$j] = $input[$i];\n        $j++;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 5\n    [2] => 4\n    [3] => 3\n    [4] => 2\n    [5] => 1\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1j0_sj9v.php:26\nStack trace:\n#0 /tmp/tmp1j0_sj9v.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp1j0_sj9v.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $count = count($input);\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $count; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510491,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = [];\n    $i = 0;\n    $j = $k;\n    while ($i < $k) {\n        $output[$i] = $input[$j];\n        $i++;\n        $j--;\n    }\n    $j = count($input) - 1;\n    while ($i < count($input)) {\n        $output[$i] = $input[$j];\n        $i++;\n        $j--;\n    }\n    return $output;\n}\n\n$input = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 5\n    [2] => 4\n    [3] => 3\n    [4] => 2\n    [5] => 10\n    [6] => 9\n    [7] => 8\n    [8] => 7\n    [9] => 6\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdl1w7rgz.php:30\nStack trace:\n#0 /tmp/tmpdl1w7rgz.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdl1w7rgz.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $n = count($input);\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $n; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = $k; $i >= 0; $i--) {\n        array_push($output, $input[$i]);\n    }\n    for ($i = $k + 1; $i < count($input); $i++) {\n        array_push($output, $input[$i]);\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 5\n    [2] => 4\n    [3] => 3\n    [4] => 2\n    [5] => 1\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcc34frq0.php:23\nStack trace:\n#0 /tmp/tmpcc34frq0.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpcc34frq0.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[] = $input[$i];\n    }\n    for ($i = $k; $i < count($input); $i++) {\n        $output[] = $input[count($input) - $i + $k - 1];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 9\n    [4] => 8\n    [5] => 7\n    [6] => 6\n    [7] => 5\n    [8] => 4\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiskvzwf1.php:23\nStack trace:\n#0 /tmp/tmpiskvzwf1.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpiskvzwf1.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = [];\n    $len = count($input);\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $len; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $len = count($input);\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $len; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123607,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $n = count($input);\n    for ($i = 0; $i < $k; $i++) {\n        $temp = $input[$i];\n        $input[$i] = $input[$k];\n        $input[$k] = $temp;\n        $k--;\n    }\n    return $input;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg_3vej1b.php:23\nStack trace:\n#0 /tmp/tmpg_3vej1b.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpg_3vej1b.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $length = count($input);\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $length; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4] => 5\n    [5] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $i = 0;\n    while ($i < $k) {\n        $output[] = $input[$k - $i - 1];\n        $i++;\n    }\n    while ($i < count($input)) {\n        $output[] = $input[$i];\n        $i++;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 3;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $len = count($input);\n    $output = array();\n    for ($i = $k; $i >= 0; $i--) {\n        $output[] = $input[$i];\n    }\n    for ($i = $k + 1; $i < $len; $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf9_5egbd.php:24\nStack trace:\n#0 /tmp/tmpf9_5egbd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpf9_5egbd.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[] = $input[$i];\n    }\n    $output = array_reverse($output);\n    for ($i = $k; $i < count($input); $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 5;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $count = count($input);\n    for ($i = 0; $i < $k; $i++) {\n        $output[] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $count; $i++) {\n        $output[] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\nprint_r(reverse_Array_Upto_K($input, $k));\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $n = count($input);\n    $i = 0;\n    $j = $k;\n    while ($i < $j) {\n        $temp = $input[$i];\n        $input[$i] = $input[$j];\n        $input[$j] = $temp;\n        $i++;\n        $j--;\n    }\n    return $input;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$k = 3;\nprint_r(reverse_Array_Upto_K($input, $k));\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa41hdq56.php:25\nStack trace:\n#0 /tmp/tmpa41hdq56.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpa41hdq56.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $len = count($input);\n    if ($k > $len) {\n        return \"Invalid Position\";\n    }\n    $output = array();\n    for ($i = 0; $i < $k; $i++) {\n        $output[$i] = $input[$k - $i - 1];\n    }\n    for ($i = $k; $i < $len; $i++) {\n        $output[$i] = $input[$i];\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 5;\nprint_r(reverse_Array_Upto_K($input, $k));\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to reverse an array upto a given position.\nfunction reverse_Array_Upto_K($input, $k) {\n    $output = array();\n    $i = 0;\n    $j = $k;\n    while ($i < $k) {\n        $output[$i] = $input[$j];\n        $i++;\n        $j--;\n    }\n    $j = count($input) - 1;\n    while ($i < count($input)) {\n        $output[$i] = $input[$j];\n        $i++;\n        $j--;\n    }\n    return $output;\n}\n\n$input = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$k = 4;\n$output = reverse_Array_Upto_K($input, $k);\nprint_r($output);\nfunction candidate(...$args) {\n    return reverse_Array_Upto_K(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6), 4) !== array(4, 3, 2, 1, 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7), 2) !== array(5, 4, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 7, 6, 5), 3) !== array(7, 8, 9, 6, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123608,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 10\n    [5] => 9\n    [6] => 8\n    [7] => 7\n    [8] => 6\n    [9] => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv12wxqjm.php:30\nStack trace:\n#0 /tmp/tmpv12wxqjm.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv12wxqjm.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
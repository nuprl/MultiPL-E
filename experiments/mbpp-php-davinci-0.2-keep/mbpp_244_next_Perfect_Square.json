{
  "name": "mbpp_244_next_Perfect_Square",
  "language": "php",
  "prompt": "<?php\n// Write a python function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square($N) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_244_next_Perfect_Square.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return next_Perfect_Square(...$args);\n}\n\nfunction test(): void {\n    if (candidate(35) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(12);\necho \"\\n\";\necho next_Perfect_Square(15);\necho \"\\n\";\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(17);\necho \"\\n\";\necho next_Perfect_Square(18);\necho \"\\n\";\necho next_Perfect_Square(19);\necho \"\\n\";\necho next_Perfect_Square(20);\necho \"\\n\";\necho next_Perfect_Square(21);\necho \"\\n\";\necho next_Perfect_Square(22);\necho \"\\n\";\necho next_Perfect_Square(23);\necho \"\\n\";\necho next_Perfect_Square(24);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(26);\necho \"\\n\";\necho next_Perfect_Square(27);\necho \"\\n\";\necho next_Perfect_Square(28);\necho \"\\n\";\necho next_Perfect_Square(29);\necho \"\\n\";\necho next_Perfect_Square(30);\necho \"\\n\";\necho next_Perfect_Square(31);\necho \"\\n\";\necho next_Perfect_Square(32);\necho \"\\n\";\necho next_Perfect_Square(33);\necho \"\\n\";\necho next_Perfect_Square(34);\necho \"\\n\";\necho next_Perfect_Square(35);\necho \"\\n\";\necho next_Perfect_Square(36);\necho \"\\n\";\necho next_Perfect_Square(37);\necho \"\\n\";\necho next_Perfect_Square(38);\necho \"\\n\";\necho next_Perfect_Square(39);\necho \"\\n\";\necho next_Perfect_Square(40);\necho \"\\n\";\necho next_Perfect_Square(41);\necho \"\\n\";\necho next_Perfect_Square(42);\necho \"\\n\";\necho next_Perfect_Square(43);\necho \"\\n\";\necho next_Perfect_Square",
    "    $n = $N;\n    $i = 1;\n    while ($n > 0) {\n        $n -= $i;\n        $i += 2;\n    }\n    return $N + $i - 1;\n}\n\necho next_Perfect_Square(2);\necho next_Perfect_Square(3);\necho next_Perfect_Square(4);\necho next_Perfect_Square(5);\necho next_Perfect_Square(6);\necho next_Perfect_Square(7);\necho next_Perfect_Square(8);\necho next_Perfect_Square(9);\necho next_Perfect_Square(10);\necho next_Perfect_Square(11);\necho next_Perfect_Square(12);\necho next_Perfect_Square(13);\necho next_Perfect_Square(14);\necho next_Perfect_Square(15);\necho next_Perfect_Square(16);\necho next_Perfect_Square(17);\necho next_Perfect_Square(18);\necho next_Perfect_Square(19);\necho next_Perfect_Square(20);\necho next_Perfect_Square(21);\necho next_Perfect_Square(22);\necho next_Perfect_Square(23);\necho next_Perfect_Square(24);\necho next_Perfect_Square(25);\necho next_Perfect_Square(26);\necho next_Perfect_Square(27);\necho next_Perfect_Square(28);\necho next_Perfect_Square(29);\necho next_Perfect_Square(30);\necho next_Perfect_Square(31);\necho next_Perfect_Square(32);\necho next_Perfect_Square(33);\necho next_Perfect_Square(34);\necho next_Perfect_Square(35);\necho next_Perfect_Square(36);\necho next_Perfect_Square(37);\necho next_Perfect_Square(38);\necho next_Perfect_Square(39);\necho next_Perfect_Square(40);\necho next_Perfect_Square(41);\necho next_Perfect_Square(42);\necho next_Perfect_Square(43);\necho next_Perfect_Square(44);\necho next_Perfect_Square(45);\necho next_Perfect_Square(46);\necho next_Perfect_",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(12);\necho \"\\n\";\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(36);\necho \"\\n\";\necho next_Perfect_Square(37);\necho \"\\n\";\necho next_Perfect_Square(38);\necho \"\\n\";\necho next_Perfect_Square(39);\necho \"\\n\";\necho next_Perfect_Square(40);\necho \"\\n\";\necho next_Perfect_Square(41);\necho \"\\n\";\necho next_Perfect_Square(42);\necho \"\\n\";\necho next_Perfect_Square(43);\necho \"\\n\";\necho next_Perfect_Square(44);\necho \"\\n\";\necho next_Perfect_Square(45);\necho \"\\n\";\necho next_Perfect_Square(46);\necho \"\\n\";\necho next_Perfect_Square(47);\necho \"\\n\";\necho next_Perfect_Square(48);\necho \"\\n\";\necho next_Perfect_Square(49);\necho \"\\n\";\necho next_Perfect_Square(50);\necho \"\\n\";\necho next_Perfect_Square(51);\necho \"\\n\";\necho next_Perfect_Square(52);\necho \"\\n\";\necho next_Perfect_Square(53);\necho \"\\n\";\necho next_Perfect_Square(54);\necho \"\\n\";\necho next_Perfect_Square(55);\necho \"\\n\";\necho next_Perfect_Square(56);\necho \"\\n\";\necho next_Perfect_Square(57);\necho \"\\n\";\necho next_Perfect_Square(58);\necho \"\\n\";\necho next_Perfect_Square(59);\necho \"\\n\";\necho next_Perfect_Square(60);\necho \"\\n\";\necho next_Perfect_Square(61);\necho \"\\n\";\necho next_Perfect_Square(62);\necho \"\\n\";\necho next_Perfect_Square",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if($floor == $sqrt) {\n        return ($sqrt+1)*($sqrt+1);\n    } else {\n        return ($floor+1)*($floor+1);\n    }\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return $N;\n    } else {\n        return ($floor + 1) * ($floor + 1);\n    }\n}\n\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(37);\necho \"\\n\";\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(225);\necho \"\\n\";\necho next_Perfect_Square(400);\necho \"\\n\";\necho next_Perfect_Square(0);\necho \"\\n\";",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(25);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    if ($sqrt == floor($sqrt)) {\n        return ($sqrt + 1) * ($sqrt + 1);\n    } else {\n        return ($sqrt + 1) * ($sqrt + 1);\n    }\n}\necho next_Perfect_Square(25);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(25);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(6);\necho \"\\n\";\necho next_Perfect_Square(7);\necho \"\\n\";\necho next_Perfect_Square(8);\necho \"\\n\";\necho next_Perfect_Square(9);\necho \"\\n\";\necho next_Perfect_Square(10);\necho \"\\n\";\necho next_Perfect_Square(11);\necho \"\\n\";\necho next_Perfect_Square(12);\necho \"\\n\";\necho next_Perfect_Square(13);\necho \"\\n\";\necho next_Perfect_Square(14);\necho \"\\n\";\necho next_Perfect_Square(15);\necho \"\\n\";\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(17);\necho \"\\n\";\necho next_Perfect_Square(18);\necho \"\\n\";\necho next_Perfect_Square(19);\necho \"\\n\";\necho next_Perfect_Square(20);\necho \"\\n\";\necho next_Perfect_Square(21);\necho \"\\n\";\necho next_Perfect_Square(22);\necho \"\\n\";\necho next_Perfect_Square(23);\necho \"\\n\";\necho next_Perfect_Square(24);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(26);\necho \"\\n\";\necho next_Perfect_Square(27);\necho \"\\n\";\necho next_Perfect_Square(28);\necho \"\\n\";\necho next_Perfect_Square(29);\necho \"\\n\";\necho next_Perfect_Square(30);\necho \"\\n\";\necho next_Perfect_Square(31);\necho \"\\n\";\necho next_Perfect_Square(32);\necho \"\\n\";\necho next_Perfect_Square(33);\necho \"\\n\";\necho next_Perfect_Square(34);\necho \"\\n\";\necho next_Perfect_Square(35);\necho \"\\n\";\necho next_Perfect_Square",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(10);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(10);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(12);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(6);\necho \"\\n\";\necho next_Perfect_Square(7);\necho \"\\n\";\necho next_Perfect_Square(8);\necho \"\\n\";\necho next_Perfect_Square(9);\necho \"\\n\";\necho next_Perfect_Square(10);\necho \"\\n\";\necho next_Perfect_Square(11);\necho \"\\n\";\necho next_Perfect_Square(12);\necho \"\\n\";\necho next_Perfect_Square(13);\necho \"\\n\";\necho next_Perfect_Square(14);\necho \"\\n\";\necho next_Perfect_Square(15);\necho \"\\n\";\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(17);\necho \"\\n\";\necho next_Perfect_Square(18);\necho \"\\n\";\necho next_Perfect_Square(19);\necho \"\\n\";\necho next_Perfect_Square(20);\necho \"\\n\";\necho next_Perfect_Square(21);\necho \"\\n\";\necho next_Perfect_Square(22);\necho \"\\n\";\necho next_Perfect_Square(23);\necho \"\\n\";\necho next_Perfect_Square(24);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(26);\necho \"\\n\";\necho next_Perfect_Square(27);\necho \"\\n\";\necho next_Perfect_Square(28);\necho \"\\n\";\necho next_Perfect_Square(29);\necho \"\\n\";\necho next_Perfect_Square(30);\necho \"\\n\";\necho next_Perfect_Square(31);\necho \"\\n\";\necho next_Perfect_Square(32);\necho \"\\n\";\necho next_Perfect_Square(33);\necho \"\\n\";\necho next_Perfect_Square(34);\necho \"\\n\";\necho next_Perfect_Square(35);\necho \"\\n\";\necho next_Perfect_Square",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(10);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($N + 1) * ($N + 1);\n    } else {\n        return ($floor + 1) * ($floor + 1);\n    }\n}\n\n$N = 10;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $next_sqrt = ceil($sqrt);\n    $next_perfect_square = $next_sqrt * $next_sqrt;\n    return $next_perfect_square;\n}\n\necho next_Perfect_Square(5);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($N + 1) * ($N + 1);\n    } else {\n        return ($floor + 1) * ($floor + 1);\n    }\n}\n\n$N = intval(trim(fgets(STDIN)));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);",
    "    $x = 1;\n    while($x * $x < $N) {\n        $x++;\n    }\n    return $x * $x;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if($floor == $sqrt) {\n        return ($N+1)*($N+1);\n    } else {\n        return ($floor+1)*($floor+1);\n    }\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    if ($sqrt == floor($sqrt)) {\n        return ($sqrt + 1) * ($sqrt + 1);\n    } else {\n        return ($sqrt + 1) * ($sqrt + 1);\n    }\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(6);\necho \"\\n\";\necho next_Perfect_Square(7);\necho \"\\n\";\necho next_Perfect_Square(8);\necho \"\\n\";\necho next_Perfect_Square(9);\necho \"\\n\";\necho next_Perfect_Square(10);\necho \"\\n\";\necho next_Perfect_Square(11);\necho \"\\n\";\necho next_Perfect_Square(12);\necho \"\\n\";\necho next_Perfect_Square(13);\necho \"\\n\";\necho next_Perfect_Square(14);\necho \"\\n\";\necho next_Perfect_Square(15);\necho \"\\n\";\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(17);\necho \"\\n\";\necho next_Perfect_Square(18);\necho \"\\n\";\necho next_Perfect_Square(19);\necho \"\\n\";\necho next_Perfect_Square(20);\necho \"\\n\";\necho next_Perfect_Square(21);\necho \"\\n\";\necho next_Perfect_Square(22);\necho \"\\n\";\necho next_Perfect_Square(23);\necho \"\\n\";\necho next_Perfect_Square(24);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(26);\necho \"\\n\";\necho next_Perfect_Square(27);\necho \"\\n\";\necho next_Perfect_Square(28);\necho \"\\n\";\necho next_Perfect_Square(29);\necho \"\\n\";\necho next_Perfect_Square(30);\necho \"\\n\";\necho next_Perfect_Square(31);\necho \"\\n\";\necho next_Perfect_Square(32);\necho \"\\n\";\necho next_Perfect_Square(33);\necho \"\\n\";\necho next_Perfect_Square(34);\necho \"\\n\";\necho next_Perfect_Square(35);\necho \"\\n\";\necho next_Perfect_Square",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(6);\necho \"\\n\";\necho next_Perfect_Square(7);\necho \"\\n\";\necho next_Perfect_Square(8);\necho \"\\n\";\necho next_Perfect_Square(9);\necho \"\\n\";\necho next_Perfect_Square(10);\necho \"\\n\";\necho next_Perfect_Square(11);\necho \"\\n\";\necho next_Perfect_Square(12);\necho \"\\n\";\necho next_Perfect_Square(13);\necho \"\\n\";\necho next_Perfect_Square(14);\necho \"\\n\";\necho next_Perfect_Square(15);\necho \"\\n\";\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(17);\necho \"\\n\";\necho next_Perfect_Square(18);\necho \"\\n\";\necho next_Perfect_Square(19);\necho \"\\n\";\necho next_Perfect_Square(20);\necho \"\\n\";\necho next_Perfect_Square(21);\necho \"\\n\";\necho next_Perfect_Square(22);\necho \"\\n\";\necho next_Perfect_Square(23);\necho \"\\n\";\necho next_Perfect_Square(24);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(26);\necho \"\\n\";\necho next_Perfect_Square(27);\necho \"\\n\";\necho next_Perfect_Square(28);\necho \"\\n\";\necho next_Perfect_Square(29);\necho \"\\n\";\necho next_Perfect_Square(30);\necho \"\\n\";\necho next_Perfect_Square(31);\necho \"\\n\";\necho next_Perfect_Square(32);\necho \"\\n\";\necho next_Perfect_Square(33);\necho \"\\n\";\necho next_Perfect_Square(34);\necho \"\\n\";\necho next_Perfect_Square(35);\necho \"\\n\";\necho next_Perfect_Square",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i += 1;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(4);",
    "    $sqrt = sqrt($N);\n    $ceil = ceil($sqrt);\n    $next_perfect_square = $ceil * $ceil;\n    return $next_perfect_square;\n}\n\n$N = 25;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(25);",
    "    $sqrt = sqrt($N);\n    $ceil = ceil($sqrt);\n    $next_perfect_square = $ceil * $ceil;\n    return $next_perfect_square;\n}\n\n$N = 121;\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $next_sqrt = ceil($sqrt);\n    $next_perfect_square = $next_sqrt * $next_sqrt;\n    return $next_perfect_square;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(trim(fgets(STDIN)));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(6);\necho \"\\n\";\necho next_Perfect_Square(7);\necho \"\\n\";\necho next_Perfect_Square(8);\necho \"\\n\";\necho next_Perfect_Square(9);\necho \"\\n\";\necho next_Perfect_Square(10);\necho \"\\n\";\necho next_Perfect_Square(11);\necho \"\\n\";\necho next_Perfect_Square(12);\necho \"\\n\";\necho next_Perfect_Square(13);\necho \"\\n\";\necho next_Perfect_Square(14);\necho \"\\n\";\necho next_Perfect_Square(15);\necho \"\\n\";\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(17);\necho \"\\n\";\necho next_Perfect_Square(18);\necho \"\\n\";\necho next_Perfect_Square(19);\necho \"\\n\";\necho next_Perfect_Square(20);\necho \"\\n\";\necho next_Perfect_Square(21);\necho \"\\n\";\necho next_Perfect_Square(22);\necho \"\\n\";\necho next_Perfect_Square(23);\necho \"\\n\";\necho next_Perfect_Square(24);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(26);\necho \"\\n\";\necho next_Perfect_Square(27);\necho \"\\n\";\necho next_Perfect_Square(28);\necho \"\\n\";\necho next_Perfect_Square(29);\necho \"\\n\";\necho next_Perfect_Square(30);\necho \"\\n\";\necho next_Perfect_Square(31);\necho \"\\n\";\necho next_Perfect_Square(32);\necho \"\\n\";\necho next_Perfect_Square(33);\necho \"\\n\";\necho next_Perfect_Square(34);\necho \"\\n\";\necho next_Perfect_Square(35);\necho \"\\n\";\necho next_Perfect_Square",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "\t$i = 1;\n\twhile ($i * $i < $N) {\n\t\t$i++;\n\t}\n\treturn $i * $i;\n}\n\necho next_Perfect_Square(5);\n",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(8);\necho \"\\n\";\necho next_Perfect_Square(15);\necho \"\\n\";\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(17);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(37);\necho \"\\n\";\necho next_Perfect_Square(45);\necho \"\\n\";\necho next_Perfect_Square(50);\necho \"\\n\";\necho next_Perfect_Square(98);\necho \"\\n\";\necho next_Perfect_Square(99);\necho \"\\n\";\necho next_Perfect_Square(100);\necho \"\\n\";\necho next_Perfect_Square(121);\necho \"\\n\";\necho next_Perfect_Square(125);\necho \"\\n\";\necho next_Perfect_Square(149);\necho \"\\n\";\necho next_Perfect_Square(150);\necho \"\\n\";\necho next_Perfect_Square(151);\necho \"\\n\";\necho next_Perfect_Square(152);\necho \"\\n\";\necho next_Perfect_Square(153);\necho \"\\n\";\necho next_Perfect_Square(154);\necho \"\\n\";\necho next_Perfect_Square(155);\necho \"\\n\";\necho next_Perfect_Square(156);\necho \"\\n\";\necho next_Perfect_Square(157);\necho \"\\n\";\necho next_Perfect_Square(158);\necho \"\\n\";\necho next_Perfect_Square(159);\necho \"\\n\";\necho next_Perfect_Square(160);\necho \"\\n\";\necho next_Perfect_Square(161);\necho \"\\n\";\necho next_Perfect_Square(162);\necho \"\\n\";\necho next_Perfect_Square(163);\necho \"\\n\";\necho next_Perfect_Square(164);\necho \"\\n\";\necho next_Perfect_Square(165);\necho \"\\n\";\necho next_Perfect_Square",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($N + 1) * ($N + 1);\n    } else {\n        return ($floor + 1) * ($floor + 1);\n    }\n}\n\necho next_Perfect_Square(5);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(9);",
    "    $sqrt = sqrt($N);\n    if(is_int($sqrt)) {\n        return ($sqrt + 1) * ($sqrt + 1);\n    } else {\n        return ($sqrt + 1) * ($sqrt + 1);\n    }\n}\n\n$N = 9;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);",
    "    $sqrt = sqrt($N);\n    $next_sqrt = ceil($sqrt);\n    $next_perfect_square = $next_sqrt * $next_sqrt;\n    return $next_perfect_square;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($N + 1) * ($N + 1);\n    } else {\n        return ($floor + 1) * ($floor + 1);\n    }\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $ceil = ceil($sqrt);\n    return $ceil * $ceil;\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $next_sqrt = ceil($sqrt);\n    return $next_sqrt * $next_sqrt;\n}\n\n$N = 9;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\necho next_Perfect_Square(5);",
    "    $sqrt = sqrt($N);\n    $next_sqrt = ceil($sqrt);\n    $next_perfect_square = $next_sqrt*$next_sqrt;\n    return $next_perfect_square;\n}\n\necho next_Perfect_Square(25);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($N + $floor + 1) * ($floor + 1);\n    } else {\n        return ($floor + 1) * ($floor + 1);\n    }\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\necho next_Perfect_Square(25);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        $N = $N + 1;\n    }\n    while (true) {\n        $sqrt = sqrt($N);\n        $floor = floor($sqrt);\n        if ($floor == $sqrt) {\n            return $N;\n        }\n        $N++;\n    }\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $next_sqrt = ceil($sqrt);\n    $next_perfect_square = $next_sqrt * $next_sqrt;\n    return $next_perfect_square;\n}\n\n$N = 9;\necho \"Next Perfect Square of $N is \" . next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(25);",
    "    $sqrt = sqrt($N);\n    $ceil = ceil($sqrt);\n    $next_perfect_square = $ceil * $ceil;\n    return $next_perfect_square;\n}\n\n$N = 9;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(8);\necho \"\\n\";\necho next_Perfect_Square(12);\necho \"\\n\";\necho next_Perfect_Square(15);\necho \"\\n\";\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(17);\necho \"\\n\";\necho next_Perfect_Square(18);\necho \"\\n\";\necho next_Perfect_Square(19);\necho \"\\n\";\necho next_Perfect_Square(20);\necho \"\\n\";\necho next_Perfect_Square(21);\necho \"\\n\";\necho next_Perfect_Square(22);\necho \"\\n\";\necho next_Perfect_Square(23);\necho \"\\n\";\necho next_Perfect_Square(24);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(26);\necho \"\\n\";\necho next_Perfect_Square(27);\necho \"\\n\";\necho next_Perfect_Square(28);\necho \"\\n\";\necho next_Perfect_Square(29);\necho \"\\n\";\necho next_Perfect_Square(30);\necho \"\\n\";\necho next_Perfect_Square(31);\necho \"\\n\";\necho next_Perfect_Square(32);\necho \"\\n\";\necho next_Perfect_Square(33);\necho \"\\n\";\necho next_Perfect_Square(34);\necho \"\\n\";\necho next_Perfect_Square(35);\necho \"\\n\";\necho next_Perfect_Square(36);\necho \"\\n\";\necho next_Perfect_Square(37);\necho \"\\n\";\necho next_Perfect_Square(38);\necho \"\\n\";\necho next_Perfect_Square(39);\necho \"\\n\";\necho next_Perfect_Square(40);\necho \"\\n\";\necho next_Perfect_Square(41);\necho \"\\n\";\necho next_Perfect_Square(42);\necho \"\\n\";\necho next_Perfect_Square",
    "    $sqrt = sqrt($N);\n    if (is_int($sqrt)) {\n        return ($sqrt + 1) * ($sqrt + 1);\n    } else {\n        return ($sqrt + 1) * ($sqrt + 1);\n    }\n}\n\necho next_Perfect_Square(25);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($N + 1) * ($N + 1);\n    } else {\n        return ($floor + 1) * ($floor + 1);\n    }\n}\n\necho next_Perfect_Square(10);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $next_sqrt = ceil($sqrt);\n    $next_perfect_square = $next_sqrt * $next_sqrt;\n    return $next_perfect_square;\n}\n\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(12);\necho \"\\n\";\necho next_Perfect_Square(15);\necho \"\\n\";\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(17);\necho \"\\n\";\necho next_Perfect_Square(18);\necho \"\\n\";\necho next_Perfect_Square(19);\necho \"\\n\";\necho next_Perfect_Square(20);\necho \"\\n\";\necho next_Perfect_Square(21);\necho \"\\n\";\necho next_Perfect_Square(22);\necho \"\\n\";\necho next_Perfect_Square(23);\necho \"\\n\";\necho next_Perfect_Square(24);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(26);\necho \"\\n\";\necho next_Perfect_Square(27);\necho \"\\n\";\necho next_Perfect_Square(28);\necho \"\\n\";\necho next_Perfect_Square(29);\necho \"\\n\";\necho next_Perfect_Square(30);\necho \"\\n\";\necho next_Perfect_Square(31);\necho \"\\n\";\necho next_Perfect_Square(32);\necho \"\\n\";\necho next_Perfect_Square(33);\necho \"\\n\";\necho next_Perfect_Square(34);\necho \"\\n\";\necho next_Perfect_Square(35);\necho \"\\n\";\necho next_Perfect_Square(36);\necho \"\\n\";\necho next_Perfect_Square(37);\necho \"\\n\";\necho next_Perfect_Square(38);\necho \"\\n\";\necho next_Perfect_Square(39);\necho \"\\n\";\necho next_Perfect_Square(40);\necho \"\\n\";\necho next_Perfect_Square(41);\necho \"\\n\";\necho next_Perfect_Square(42);\necho \"\\n\";\necho next",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(15);",
    "    $sqrt = sqrt($N);\n    $next_sqrt = ceil($sqrt);\n    $next_perfect_square = $next_sqrt * $next_sqrt;\n    return $next_perfect_square;\n}\n\n$N = 121;\necho \"The next perfect square greater than $N is \" . next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($N + 1) * ($N + 1);\n    } else {\n        return ($floor + 1) * ($floor + 1);\n    }\n}\n\necho next_Perfect_Square(15);",
    "\t$sqrt = sqrt($N);\n\t$next_sqrt = ceil($sqrt);\n\t$next_perfect_square = $next_sqrt * $next_sqrt;\n\treturn $next_perfect_square;\n}\n\n$N = 9;\n$next_perfect_square = next_Perfect_Square($N);\necho \"Next Perfect Square of $N is $next_perfect_square\";",
    "    $sqrt = sqrt($N);\n    $next_perfect_square = ($sqrt + 1) * ($sqrt + 1);\n    return $next_perfect_square;\n}\n\n$N = 9;\necho next_Perfect_Square($N);",
    "  $i = 1;\n  while ($i * $i <= $N) {\n    $i++;\n  }\n  return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if($floor == $sqrt) {\n        $floor++;\n    }\n    return $floor * $floor;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(10);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(6);\necho \"\\n\";\necho next_Perfect_Square(7);\necho \"\\n\";\necho next_Perfect_Square(8);\necho \"\\n\";\necho next_Perfect_Square(9);\necho \"\\n\";\necho next_Perfect_Square(10);\necho \"\\n\";\necho next_Perfect_Square(11);\necho \"\\n\";\necho next_Perfect_Square(12);\necho \"\\n\";\necho next_Perfect_Square(13);\necho \"\\n\";\necho next_Perfect_Square(14);\necho \"\\n\";\necho next_Perfect_Square(15);\necho \"\\n\";\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(17);\necho \"\\n\";\necho next_Perfect_Square(18);\necho \"\\n\";\necho next_Perfect_Square(19);\necho \"\\n\";\necho next_Perfect_Square(20);\necho \"\\n\";\necho next_Perfect_Square(21);\necho \"\\n\";\necho next_Perfect_Square(22);\necho \"\\n\";\necho next_Perfect_Square(23);\necho \"\\n\";\necho next_Perfect_Square(24);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(26);\necho \"\\n\";\necho next_Perfect_Square(27);\necho \"\\n\";\necho next_Perfect_Square(28);\necho \"\\n\";\necho next_Perfect_Square(29);\necho \"\\n\";\necho next_Perfect_Square(30);\necho \"\\n\";\necho next_Perfect_Square(31);\necho \"\\n\";\necho next_Perfect_Square(32);\necho \"\\n\";\necho next_Perfect_Square(33);\necho \"\\n\";\necho next_Perfect_Square(34);\necho \"\\n\";\necho next_Perfect_Square(35);\necho \"\\n\";\necho next_Perfect_Square",
    "    $sqrt = sqrt($N);\n    $next_perfect_square = ($sqrt + 1) * ($sqrt + 1);\n    return $next_perfect_square;\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n$N = 9;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(25);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(6);\necho \"\\n\";\necho next_Perfect_Square(7);\necho \"\\n\";\necho next_Perfect_Square(8);\necho \"\\n\";\necho next_Perfect_Square(9);\necho \"\\n\";\necho next_Perfect_Square(10);\necho \"\\n\";\necho next_Perfect_Square(11);\necho \"\\n\";\necho next_Perfect_Square(12);\necho \"\\n\";\necho next_Perfect_Square(13);\necho \"\\n\";\necho next_Perfect_Square(14);\necho \"\\n\";\necho next_Perfect_Square(15);\necho \"\\n\";\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(17);\necho \"\\n\";\necho next_Perfect_Square(18);\necho \"\\n\";\necho next_Perfect_Square(19);\necho \"\\n\";\necho next_Perfect_Square(20);\necho \"\\n\";\necho next_Perfect_Square(21);\necho \"\\n\";\necho next_Perfect_Square(22);\necho \"\\n\";\necho next_Perfect_Square(23);\necho \"\\n\";\necho next_Perfect_Square(24);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(26);\necho \"\\n\";\necho next_Perfect_Square(27);\necho \"\\n\";\necho next_Perfect_Square(28);\necho \"\\n\";\necho next_Perfect_Square(29);\necho \"\\n\";\necho next_Perfect_Square(30);\necho \"\\n\";\necho next_Perfect_Square(31);\necho \"\\n\";\necho next_Perfect_Square(32);\necho \"\\n\";\necho next_Perfect_Square(33);\necho \"\\n\";\necho next_Perfect_Square(34);\necho \"\\n\";\necho next_Perfect_Square(35);\necho \"\\n\";\necho next_Perfect_Square",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(8);\necho \"\\n\";\necho next_Perfect_Square(15);\necho \"\\n\";\necho next_Perfect_Square(17);\necho \"\\n\";\necho next_Perfect_Square(24);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(37);\necho \"\\n\";\necho next_Perfect_Square(48);\necho \"\\n\";\necho next_Perfect_Square(50);\necho \"\\n\";\necho next_Perfect_Square(52);\necho \"\\n\";\necho next_Perfect_Square(61);\necho \"\\n\";\necho next_Perfect_Square(75);\necho \"\\n\";\necho next_Perfect_Square(80);\necho \"\\n\";\necho next_Perfect_Square(99);\necho \"\\n\";\necho next_Perfect_Square(100);\necho \"\\n\";\necho next_Perfect_Square(120);\necho \"\\n\";\necho next_Perfect_Square(125);\necho \"\\n\";\necho next_Perfect_Square(133);\necho \"\\n\";\necho next_Perfect_Square(140);\necho \"\\n\";\necho next_Perfect_Square(169);\necho \"\\n\";\necho next_Perfect_Square(171);\necho \"\\n\";\necho next_Perfect_Square(175);\necho \"\\n\";\necho next_Perfect_Square(180);\necho \"\\n\";\necho next_Perfect_Square(199);\necho \"\\n\";\necho next_Perfect_Square(200);\necho \"\\n\";\necho next_Perfect_Square(208);\necho \"\\n\";\necho next_Perfect_Square(225);\necho \"\\n\";\necho next_Perfect_Square(240);\necho \"\\n\";\necho next_Perfect_Square(247);\necho \"\\n\";\necho next_Perfect_Square(250);\necho \"\\n\";\necho next_Perfect_Square(260);\necho \"\\n\";\necho next_Perfect_Square",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($N + 1) * ($N + 1);\n    } else {\n        return ($floor + 1) * ($floor + 1);\n    }\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "\t$i = 1;\n\twhile ($i * $i < $N) {\n\t\t$i++;\n\t}\n\treturn $i * $i;\n}\n\necho next_Perfect_Square(25);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(10);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if($floor == $sqrt) {\n        return ($floor + 1) * ($floor + 1);\n    }\n    return -1;\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(8);\necho \"\\n\";\necho next_Perfect_Square(15);\necho \"\\n\";\necho next_Perfect_Square(17);\necho \"\\n\";\necho next_Perfect_Square(24);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(37);\necho \"\\n\";\necho next_Perfect_Square(40);\necho \"\\n\";\necho next_Perfect_Square(48);\necho \"\\n\";\necho next_Perfect_Square(50);\necho \"\\n\";\necho next_Perfect_Square(52);\necho \"\\n\";\necho next_Perfect_Square(67);\necho \"\\n\";\necho next_Perfect_Square(72);\necho \"\\n\";\necho next_Perfect_Square(80);\necho \"\\n\";\necho next_Perfect_Square(88);\necho \"\\n\";\necho next_Perfect_Square(90);\necho \"\\n\";\necho next_Perfect_Square(99);\necho \"\\n\";\necho next_Perfect_Square(100);\necho \"\\n\";\necho next_Perfect_Square(112);\necho \"\\n\";\necho next_Perfect_Square(121);\necho \"\\n\";\necho next_Perfect_Square(125);\necho \"\\n\";\necho next_Perfect_Square(133);\necho \"\\n\";\necho next_Perfect_Square(140);\necho \"\\n\";\necho next_Perfect_Square(148);\necho \"\\n\";\necho next_Perfect_Square(150);\necho \"\\n\";\necho next_Perfect_Square(160);\necho \"\\n\";\necho next_Perfect_Square(168);\necho \"\\n\";\necho next_Perfect_Square(175);\necho \"\\n\";\necho next_Perfect_Square(180);\necho \"\\n\";\necho next_Perfect_Square(190);\necho \"\\n\";\necho next_Perfect_Square(200);\necho \"\\n\";\necho next_Perfect_Square",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(25);",
    "    $sqrt = sqrt($N);\n    $ceil = ceil($sqrt);\n    $next_perfect_square = $ceil * $ceil;\n    return $next_perfect_square;\n}\n\n$N = 25;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(9);",
    "\t$i = 1;\n\twhile (true) {\n\t\t$square = $i * $i;\n\t\tif ($square > $N) {\n\t\t\treturn $square;\n\t\t}\n\t\t$i++;\n\t}\n}\n\necho next_Perfect_Square(15);",
    "    $sqrt = sqrt($N);\n    $next_sqrt = ceil($sqrt);\n    $next_perfect_square = $next_sqrt * $next_sqrt;\n    return $next_perfect_square;\n}\n\n$N = 25;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\necho next_Perfect_Square(25);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(12);\necho \"\\n\";\necho next_Perfect_Square(15);\necho \"\\n\";\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(17);\necho \"\\n\";\necho next_Perfect_Square(18);\necho \"\\n\";\necho next_Perfect_Square(19);\necho \"\\n\";\necho next_Perfect_Square(20);\necho \"\\n\";\necho next_Perfect_Square(21);\necho \"\\n\";\necho next_Perfect_Square(22);\necho \"\\n\";\necho next_Perfect_Square(23);\necho \"\\n\";\necho next_Perfect_Square(24);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(26);\necho \"\\n\";\necho next_Perfect_Square(27);\necho \"\\n\";\necho next_Perfect_Square(28);\necho \"\\n\";\necho next_Perfect_Square(29);\necho \"\\n\";\necho next_Perfect_Square(30);\necho \"\\n\";\necho next_Perfect_Square(31);\necho \"\\n\";\necho next_Perfect_Square(32);\necho \"\\n\";\necho next_Perfect_Square(33);\necho \"\\n\";\necho next_Perfect_Square(34);\necho \"\\n\";\necho next_Perfect_Square(35);\necho \"\\n\";\necho next_Perfect_Square(36);\necho \"\\n\";\necho next_Perfect_Square(37);\necho \"\\n\";\necho next_Perfect_Square(38);\necho \"\\n\";\necho next_Perfect_Square(39);\necho \"\\n\";\necho next_Perfect_Square(40);\necho \"\\n\";\necho next_Perfect_Square(41);\necho \"\\n\";\necho next_Perfect_Square(42);\necho \"\\n\";\necho next_Perfect_Square(43);\necho \"\\n\";\necho next_Perfect_Square",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(25);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(25);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($N + 1) * ($N + 1);\n    } else {\n        return ($floor + 1) * ($floor + 1);\n    }\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($N+1)*($N+1);\n    } else {\n        return ($floor+1)*($floor+1);\n    }\n}\n\necho next_Perfect_Square(4);\necho \"\\n\";\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(6);\necho \"\\n\";\necho next_Perfect_Square(7);\necho \"\\n\";\necho next_Perfect_Square(8);\necho \"\\n\";\necho next_Perfect_Square(9);\necho \"\\n\";\necho next_Perfect_Square(10);\necho \"\\n\";\necho next_Perfect_Square(11);\necho \"\\n\";\necho next_Perfect_Square(12);\necho \"\\n\";\necho next_Perfect_Square(13);\necho \"\\n\";\necho next_Perfect_Square(14);\necho \"\\n\";\necho next_Perfect_Square(15);\necho \"\\n\";\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(17);\necho \"\\n\";\necho next_Perfect_Square(18);\necho \"\\n\";\necho next_Perfect_Square(19);\necho \"\\n\";\necho next_Perfect_Square(20);\necho \"\\n\";\necho next_Perfect_Square(21);\necho \"\\n\";\necho next_Perfect_Square(22);\necho \"\\n\";\necho next_Perfect_Square(23);\necho \"\\n\";\necho next_Perfect_Square(24);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(26);\necho \"\\n\";\necho next_Perfect_Square(27);\necho \"\\n\";\necho next_Perfect_Square(28);\necho \"\\n\";\necho next_Perfect_Square(29);\necho \"\\n\";\necho next_Perfect_Square(30);\necho \"\\n\";\necho next_Perfect_Square(31);\necho \"\\n\";\necho next_Perfect_Square(32);\necho \"\\n\";\necho next_Perfect_Square(",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $next_sqrt = ceil($sqrt);\n    $next_perfect_square = $next_sqrt * $next_sqrt;\n    return $next_perfect_square;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(36);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(9);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(10);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(25);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(15);",
    "  $i = 1;\n  while ($i * $i <= $N) {\n    $i++;\n  }\n  return $i * $i;\n}\n\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(6);\necho \"\\n\";\necho next_Perfect_Square(7);\necho \"\\n\";\necho next_Perfect_Square(8);\necho \"\\n\";\necho next_Perfect_Square(9);\necho \"\\n\";\necho next_Perfect_Square(10);\necho \"\\n\";\necho next_Perfect_Square(11);\necho \"\\n\";\necho next_Perfect_Square(12);\necho \"\\n\";\necho next_Perfect_Square(13);\necho \"\\n\";\necho next_Perfect_Square(14);\necho \"\\n\";\necho next_Perfect_Square(15);\necho \"\\n\";\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(17);\necho \"\\n\";\necho next_Perfect_Square(18);\necho \"\\n\";\necho next_Perfect_Square(19);\necho \"\\n\";\necho next_Perfect_Square(20);\necho \"\\n\";\necho next_Perfect_Square(21);\necho \"\\n\";\necho next_Perfect_Square(22);\necho \"\\n\";\necho next_Perfect_Square(23);\necho \"\\n\";\necho next_Perfect_Square(24);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(26);\necho \"\\n\";\necho next_Perfect_Square(27);\necho \"\\n\";\necho next_Perfect_Square(28);\necho \"\\n\";\necho next_Perfect_Square(29);\necho \"\\n\";\necho next_Perfect_Square(30);\necho \"\\n\";\necho next_Perfect_Square(31);\necho \"\\n\";\necho next_Perfect_Square(32);\necho \"\\n\";\necho next_Perfect_Square(33);\necho \"\\n\";\necho next_Perfect_Square(34);\necho \"\\n\";\necho next_Perfect_Square(35);\necho \"\\n\";\necho next_Perfect_Square",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(10);",
    "    $i = 1;\n    while($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(10);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(9);",
    "    $sqrt = sqrt($N);\n    $ceil = ceil($sqrt);\n    $next_perfect_square = $ceil * $ceil;\n    return $next_perfect_square;\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    if ($sqrt == floor($sqrt)) {\n        return ($sqrt + 1) * ($sqrt + 1);\n    } else {\n        return ($sqrt + 1) * ($sqrt + 1);\n    }\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $next_perfect_square = ceil($sqrt);\n    return $next_perfect_square * $next_perfect_square;\n}\n\necho next_Perfect_Square(36);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $next_sqrt = ceil($sqrt);\n    $next_perfect_square = $next_sqrt * $next_sqrt;\n    return $next_perfect_square;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $next_sqrt = ceil($sqrt);\n    $next_perfect_square = $next_sqrt * $next_sqrt;\n    return $next_perfect_square;\n}\n\n$N = 9;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);\n",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(10);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(10);",
    "\t$i = 1;\n\twhile ($i * $i < $N) {\n\t\t$i++;\n\t}\n\treturn $i * $i;\n}\n\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(6);\necho \"\\n\";\necho next_Perfect_Square(7);\necho \"\\n\";\necho next_Perfect_Square(8);\necho \"\\n\";\necho next_Perfect_Square(9);\necho \"\\n\";\necho next_Perfect_Square(10);\necho \"\\n\";\necho next_Perfect_Square(11);\necho \"\\n\";\necho next_Perfect_Square(12);\necho \"\\n\";\necho next_Perfect_Square(13);\necho \"\\n\";\necho next_Perfect_Square(14);\necho \"\\n\";\necho next_Perfect_Square(15);\necho \"\\n\";\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(17);\necho \"\\n\";\necho next_Perfect_Square(18);\necho \"\\n\";\necho next_Perfect_Square(19);\necho \"\\n\";\necho next_Perfect_Square(20);\necho \"\\n\";\necho next_Perfect_Square(21);\necho \"\\n\";\necho next_Perfect_Square(22);\necho \"\\n\";\necho next_Perfect_Square(23);\necho \"\\n\";\necho next_Perfect_Square(24);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(26);\necho \"\\n\";\necho next_Perfect_Square(27);\necho \"\\n\";\necho next_Perfect_Square(28);\necho \"\\n\";\necho next_Perfect_Square(29);\necho \"\\n\";\necho next_Perfect_Square(30);\necho \"\\n\";\necho next_Perfect_Square(31);\necho \"\\n\";\necho next_Perfect_Square(32);\necho \"\\n\";\necho next_Perfect_Square(33);\necho \"\\n\";\necho next_Perfect_Square(34);\necho \"\\n\";\necho next_Perfect_Square(35);\necho \"\\n\";\necho next_Perfect_",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(10);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(10);",
    "    $root = sqrt($N);\n    $next_root = ceil($root);\n    $next_perfect_square = $next_root * $next_root;\n    return $next_perfect_square;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($N > 0) {\n        $N -= $i;\n        $i += 2;\n    }\n    return $i - 2;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(25);",
    "    $sqrt = sqrt($N);\n    if (is_int($sqrt)) {\n        return ($sqrt + 1) * ($sqrt + 1);\n    } else {\n        return ($sqrt + 1) * ($sqrt + 1);\n    }\n}\n\necho next_Perfect_Square(10);",
    "\t$i = 1;\n\twhile(true) {\n\t\tif(($i * $i) > $N) {\n\t\t\treturn $i * $i;\n\t\t}\n\t\t$i++;\n\t}\n}\n\necho next_Perfect_Square(5);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(25);",
    "    $sqrt = sqrt($N);\n    $next_sqrt = ceil($sqrt);\n    $next_perfect_square = $next_sqrt * $next_sqrt;\n    return $next_perfect_square;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $next_sqrt = ceil($sqrt);\n    $next_perfect_square = $next_sqrt * $next_sqrt;\n    return $next_perfect_square;\n}\n\n$N = 25;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(9);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($floor + 1) * ($floor + 1);\n    } else {\n        return -1;\n    }\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $next_sqrt = ceil($sqrt);\n    return $next_sqrt * $next_sqrt;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(25);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(25);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(6);\necho \"\\n\";\necho next_Perfect_Square(7);\necho \"\\n\";\necho next_Perfect_Square(8);\necho \"\\n\";\necho next_Perfect_Square(9);\necho \"\\n\";\necho next_Perfect_Square(10);\necho \"\\n\";\necho next_Perfect_Square(11);\necho \"\\n\";\necho next_Perfect_Square(12);\necho \"\\n\";\necho next_Perfect_Square(13);\necho \"\\n\";\necho next_Perfect_Square(14);\necho \"\\n\";\necho next_Perfect_Square(15);\necho \"\\n\";\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(17);\necho \"\\n\";\necho next_Perfect_Square(18);\necho \"\\n\";\necho next_Perfect_Square(19);\necho \"\\n\";\necho next_Perfect_Square(20);\necho \"\\n\";\necho next_Perfect_Square(21);\necho \"\\n\";\necho next_Perfect_Square(22);\necho \"\\n\";\necho next_Perfect_Square(23);\necho \"\\n\";\necho next_Perfect_Square(24);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(26);\necho \"\\n\";\necho next_Perfect_Square(27);\necho \"\\n\";\necho next_Perfect_Square(28);\necho \"\\n\";\necho next_Perfect_Square(29);\necho \"\\n\";\necho next_Perfect_Square(30);\necho \"\\n\";\necho next_Perfect_Square(31);\necho \"\\n\";\necho next_Perfect_Square(32);\necho \"\\n\";\necho next_Perfect_Square(33);\necho \"\\n\";\necho next_Perfect_Square(34);\necho \"\\n\";\necho next_Perfect_Square(35);\necho \"\\n\";\necho next_Perfect_Square",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(37);\necho \"\\n\";\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(225);\necho \"\\n\";\necho next_Perfect_Square(400);\necho \"\\n\";\necho next_Perfect_Square(0);\necho \"\\n\";\necho next_Perfect_Square(1);\necho \"\\n\";\necho next_Perfect_Square(2);\necho \"\\n\";\necho next_Perfect_Square(3);\necho \"\\n\";\necho next_Perfect_Square(4);\necho \"\\n\";\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(6);\necho \"\\n\";\necho next_Perfect_Square(7);\necho \"\\n\";\necho next_Perfect_Square(8);\necho \"\\n\";\necho next_Perfect_Square(9);\necho \"\\n\";\necho next_Perfect_Square(10);\necho \"\\n\";\necho next_Perfect_Square(11);\necho \"\\n\";\necho next_Perfect_Square(12);\necho \"\\n\";\necho next_Perfect_Square(13);\necho \"\\n\";\necho next_Perfect_Square(14);\necho \"\\n\";\necho next_Perfect_Square(15);\necho \"\\n\";\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(17);\necho \"\\n\";\necho next_Perfect_Square(18);\necho \"\\n\";\necho next_Perfect_Square(19);\necho \"\\n\";\necho next_Perfect_Square(20);\necho \"\\n\";\necho next_Perfect_Square(21);\necho \"\\n\";\necho next_Perfect_Square(22);\necho \"\\n\";\necho next_Perfect_Square(23);\necho \"\\n\";\necho next_Perfect_Square(24);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $ceil = ceil($sqrt);\n    $next_perfect_square = $ceil * $ceil;\n    return $next_perfect_square;\n}\n\n$N = 64;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(12);\necho \"\\n\";\necho next_Perfect_Square(15);\necho \"\\n\";\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(17);\necho \"\\n\";\necho next_Perfect_Square(18);\necho \"\\n\";\necho next_Perfect_Square(19);\necho \"\\n\";\necho next_Perfect_Square(20);\necho \"\\n\";\necho next_Perfect_Square(21);\necho \"\\n\";\necho next_Perfect_Square(22);\necho \"\\n\";\necho next_Perfect_Square(23);\necho \"\\n\";\necho next_Perfect_Square(24);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(26);\necho \"\\n\";\necho next_Perfect_Square(27);\necho \"\\n\";\necho next_Perfect_Square(28);\necho \"\\n\";\necho next_Perfect_Square(29);\necho \"\\n\";\necho next_Perfect_Square(30);\necho \"\\n\";\necho next_Perfect_Square(31);\necho \"\\n\";\necho next_Perfect_Square(32);\necho \"\\n\";\necho next_Perfect_Square(33);\necho \"\\n\";\necho next_Perfect_Square(34);\necho \"\\n\";\necho next_Perfect_Square(35);\necho \"\\n\";\necho next_Perfect_Square(36);\necho \"\\n\";\necho next_Perfect_Square(37);\necho \"\\n\";\necho next_Perfect_Square(38);\necho \"\\n\";\necho next_Perfect_Square(39);\necho \"\\n\";\necho next_Perfect_Square(40);\necho \"\\n\";\necho next_Perfect_Square(41);\necho \"\\n\";\necho next_Perfect_Square(42);\necho \"\\n\";\necho next_Perfect_Square(43);\necho \"\\n\";\necho next_Perfect_Square",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(100);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(10);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(6);\necho \"\\n\";\necho next_Perfect_Square(7);\necho \"\\n\";\necho next_Perfect_Square(8);\necho \"\\n\";\necho next_Perfect_Square(9);\necho \"\\n\";\necho next_Perfect_Square(10);\necho \"\\n\";\necho next_Perfect_Square(11);\necho \"\\n\";\necho next_Perfect_Square(12);\necho \"\\n\";\necho next_Perfect_Square(13);\necho \"\\n\";\necho next_Perfect_Square(14);\necho \"\\n\";\necho next_Perfect_Square(15);\necho \"\\n\";\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(17);\necho \"\\n\";\necho next_Perfect_Square(18);\necho \"\\n\";\necho next_Perfect_Square(19);\necho \"\\n\";\necho next_Perfect_Square(20);\necho \"\\n\";\necho next_Perfect_Square(21);\necho \"\\n\";\necho next_Perfect_Square(22);\necho \"\\n\";\necho next_Perfect_Square(23);\necho \"\\n\";\necho next_Perfect_Square(24);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(26);\necho \"\\n\";\necho next_Perfect_Square(27);\necho \"\\n\";\necho next_Perfect_Square(28);\necho \"\\n\";\necho next_Perfect_Square(29);\necho \"\\n\";\necho next_Perfect_Square(30);\necho \"\\n\";\necho next_Perfect_Square(31);\necho \"\\n\";\necho next_Perfect_Square(32);\necho \"\\n\";\necho next_Perfect_Square(33);\necho \"\\n\";\necho next_Perfect_Square(34);\necho \"\\n\";\necho next_Perfect_Square(35);\necho \"\\n\";\necho next_Perfect_Square",
    "    $sqrt = sqrt($N);\n    $ceil = ceil($sqrt);\n    $next_Perfect_Square = $ceil * $ceil;\n    return $next_Perfect_Square;\n}\n$N = 9;\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if($sqrt == $floor) {\n        $result = pow(($floor + 1), 2);\n    } else {\n        $result = -1;\n    }\n    return $result;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $next_sqrt = ceil($sqrt);\n    $next_perfect_square = $next_sqrt * $next_sqrt;\n    return $next_perfect_square;\n}\n\necho next_Perfect_Square(121);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(10);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($N + 1) * ($N + 1);\n    } else {\n        return ($floor + 1) * ($floor + 1);\n    }\n}\n\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(6);\necho \"\\n\";\necho next_Perfect_Square(7);\necho \"\\n\";\necho next_Perfect_Square(8);\necho \"\\n\";\necho next_Perfect_Square(9);\necho \"\\n\";\necho next_Perfect_Square(10);\necho \"\\n\";\necho next_Perfect_Square(11);\necho \"\\n\";\necho next_Perfect_Square(12);\necho \"\\n\";\necho next_Perfect_Square(13);\necho \"\\n\";\necho next_Perfect_Square(14);\necho \"\\n\";\necho next_Perfect_Square(15);\necho \"\\n\";\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(17);\necho \"\\n\";\necho next_Perfect_Square(18);\necho \"\\n\";\necho next_Perfect_Square(19);\necho \"\\n\";\necho next_Perfect_Square(20);\necho \"\\n\";\necho next_Perfect_Square(21);\necho \"\\n\";\necho next_Perfect_Square(22);\necho \"\\n\";\necho next_Perfect_Square(23);\necho \"\\n\";\necho next_Perfect_Square(24);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(26);\necho \"\\n\";\necho next_Perfect_Square(27);\necho \"\\n\";\necho next_Perfect_Square(28);\necho \"\\n\";\necho next_Perfect_Square(29);\necho \"\\n\";\necho next_Perfect_Square(30);\necho \"\\n\";\necho next_Perfect_Square(31);\necho \"\\n\";\necho next_Perfect_Square(32);\necho \"\\n\";\necho next_Perfect_Square(33);\necho \"\\n\";\necho next_Perfect_",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(25);",
    "    $sqrt = sqrt($N);\n    $next_Perfect_Square = ceil($sqrt);\n    $next_Perfect_Square = $next_Perfect_Square * $next_Perfect_Square;\n    return $next_Perfect_Square;\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(100);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($N + 1) * ($N + 1);\n    } else {\n        return ($floor + 1) * ($floor + 1);\n    }\n}\n\necho next_Perfect_Square(16);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(10);",
    "    $sqrt = sqrt($N);\n    if ($sqrt == floor($sqrt)) {\n        return ($sqrt + 1) * ($sqrt + 1);\n    }\n    return ($sqrt + 1) * ($sqrt + 1);\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(9);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if($floor == $sqrt) {\n        return ($N+1)*($N+1);\n    } else {\n        return ($floor+1)*($floor+1);\n    }\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $next_perfect_square = ceil($sqrt);\n    return $next_perfect_square * $next_perfect_square;\n}\n\n$N = 9;\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $next_sqrt = ceil($sqrt);\n    $next_perfect_sqrt = $next_sqrt * $next_sqrt;\n    return $next_perfect_sqrt;\n}\n\n$N = 4;\n$result = next_Perfect_Square($N);\necho $result;",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\necho next_Perfect_Square(10);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($N + 1) * ($N + 1);\n    } else {\n        return ($floor + 1) * ($floor + 1);\n    }\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while(true) {\n        $square = $i * $i;\n        if($square > $N) {\n            return $square;\n        }\n        $i++;\n    }\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);"
  ]
}
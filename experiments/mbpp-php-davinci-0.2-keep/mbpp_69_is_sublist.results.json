{
  "name": "mbpp_69_is_sublist",
  "language": "php",
  "prompt": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_69_is_sublist.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4];\n$s2 = [2, 3, 5];\n\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s2) ? 'true' : 'false';\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510371,
      "stdout": "true\ntrue\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe69u9094.php:25\nStack trace:\n#0 /tmp/tmpe69u9094.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpe69u9094.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($s)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [3, 4, 5];\n\necho is_sublist($l, $s) ? 'true' : 'false';\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510371,
      "stdout": "true\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnrm3eozh.php:30\nStack trace:\n#0 /tmp/tmpnrm3eozh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpnrm3eozh.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(2, 3);\n\nif(is_sublist($l, $s)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\n\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510371,
      "stdout": "Yes\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd10eepgv.php:26\nStack trace:\n#0 /tmp/tmpd10eepgv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpd10eepgv.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        }\n        $i++;\n    }\n    return $j == count($s);\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [1, 2, 3];\n$s2 = [2, 3, 4];\n$s3 = [2, 3, 4, 5, 6];\n$s4 = [2, 3, 4, 5, 6, 7, 8, 9];\n$s5 = [2, 3, 4, 5, 6, 7, 8, 9, 10];\n\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s2) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s3) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s4) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s5) ? 'true' : 'false';\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510371,
      "stdout": "true\ntrue\ntrue\ntrue\nfalse\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp35_xdkat.php:37\nStack trace:\n#0 /tmp/tmp35_xdkat.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp35_xdkat.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 3, 4, 5];\n$s = [2, 3];\n\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5];\n$s = [2, 4];\n\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5];\n$s = [2, 3, 4];\n\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5];\n$s = [2, 3, 4, 5];\n\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5];\n$s = [1, 2, 3, 4, 5];\n\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5];\n$s = [5, 4, 3];\n\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5];\n$s = [3, 4, 2];\n\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5];\n$s = [1, 2, 3, 4, 5, 6];\n\nvar_dump(is_sublist($l, $s));\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510371,
      "stdout": "bool(true)\nbool(true)\nbool(true)\nbool(true)\nbool(true)\nbool(true)\nbool(true)\nbool(false)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg623jwhk.php:56\nStack trace:\n#0 /tmp/tmpg623jwhk.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpg623jwhk.php on line 56\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach ($s as $v) {\n        if (!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 3, 4, 5, 6];\n$s = [2, 3, 4];\n\nif (is_sublist($l, $s)) {\n    echo \"Yes, it is a sublist\\n\";\n} else {\n    echo \"No, it is not a sublist\\n\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510371,
      "stdout": "Yes, it is a sublist\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbp6m7f43.php:25\nStack trace:\n#0 /tmp/tmpbp6m7f43.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbp6m7f43.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $k=>$v) {\n        if($l[$k] != $v) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510371,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprmwdh43z.php:18\nStack trace:\n#0 /tmp/tmprmwdh43z.php(22): test()\n#1 {main}\n  thrown in /tmp/tmprmwdh43z.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(5, 6, 7);\n$s1 = array(5, 6, 7, 8);\n$s2 = array(5, 6, 7, 8, 9);\n$s3 = array(5, 6, 7, 8, 9, 10);\n$s4 = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s5 = array(1, 2, 3, 4, 5, 6, 7, 8);\n$s6 = array(1, 2, 3, 4, 5, 6, 7);\n$s7 = array(1, 2, 3, 4, 5, 6);\n$s8 = array(1, 2, 3, 4, 5);\n$s9 = array(1, 2, 3, 4);\n$s10 = array(1, 2, 3);\n$s11 = array(1, 2);\n$s12 = array(1);\n$s13 = array(2);\n$s14 = array(3);\n$s15 = array(4);\n$s16 = array(5);\n$s17 = array(6);\n$s18 = array(7);\n$s19 = array(8);\n$s20 = array(9);\n$s21 = array(10);\n\necho is_sublist($l, $s) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_sublist($l, $s1) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_sublist($l, $s2) ? \"Yes\"\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510371,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpjaw0_3fv.php on line 52\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == count($s);\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [3, 4, 5];\n\necho is_sublist($l, $s) ? 'true' : 'false';\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510371,
      "stdout": "true",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        $l = array_slice($l, 1);\n        $s = array_slice($s, 1);\n        return is_sublist($l, $s);\n    } else {\n        $l = array_slice($l, 1);\n        return is_sublist($l, $s);\n    }\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [2, 3, 4];\n$s2 = [2, 4, 6];\n$s3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s4 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s2) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s3) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s4) ? 'true' : 'false';\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510371,
      "stdout": "true\ntrue\ntrue\nfalse\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0p08ts5l.php:39\nStack trace:\n#0 /tmp/tmp0p08ts5l.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp0p08ts5l.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        $s_new = array_slice($s, 1);\n        $l_new = array_slice($l, 1);\n        return is_sublist($l_new, $s_new);\n    } else {\n        $l_new = array_slice($l, 1);\n        return is_sublist($l_new, $s);\n    }\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(3, 4, 5);\necho is_sublist($l, $s);\n\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510371,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps86ilxad.php:29\nStack trace:\n#0 /tmp/tmps86ilxad.php(34): test()\n#1 {main}\n  thrown in /tmp/tmps86ilxad.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$s = array(2, 3, 4);\n$s2 = array(2, 3, 4, 5);\n$s3 = array(2, 3, 4, 5, 6);\n$s4 = array(2, 3, 4, 5, 6, 7);\n$s5 = array(2, 3, 4, 5, 6, 7, 8);\n$s6 = array(2, 3, 4, 5, 6, 7, 8, 9);\n$s7 = array(2, 3, 4, 5, 6, 7, 8, 9, 10);\n$s8 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\n\necho is_sublist($l, $s) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s2) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s3) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s4) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s5) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s6) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s7) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s8) ? \"\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510371,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\" in /tmp/tmpz9jg8a0z.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $k=>$v) {\n        if($l[$k] != $v) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510371,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprmwdh43z.php:18\nStack trace:\n#0 /tmp/tmprmwdh43z.php(22): test()\n#1 {main}\n  thrown in /tmp/tmprmwdh43z.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        $s = array_slice($s, 1);\n    }\n    return is_sublist(array_slice($l, 1), $s);\n}\n\nvar_dump(is_sublist([1, 2, 3, 4, 5], [2, 3]));\nvar_dump(is_sublist([1, 2, 3, 4, 5], [2, 4]));\nvar_dump(is_sublist([1, 2, 3, 4, 5], [2, 3, 4]));\nvar_dump(is_sublist([1, 2, 3, 4, 5], [2, 3, 4, 5]));\nvar_dump(is_sublist([1, 2, 3, 4, 5], [2, 3, 4, 5, 6]));\nvar_dump(is_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nvar_dump(is_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]));\nvar_dump(is_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]));\nvar_dump(is_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8]));\nvar_dump(is_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9]));\nvar_dump(is_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nvar_dump(is_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nvar_dump(is_sublist([1, 2, 3, 4\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510371,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmpgfiysze9.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        $sublist = array_slice($l, 0, count($s));\n        return $sublist == $s;\n    }\n    return is_sublist(array_slice($l, 1), $s);\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$s = array(2, 3, 4);\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$s = array(2, 3, 4, 5, 6);\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$s = array(2, 3, 4, 5, 6, 7, 8, 9, 10);\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$s = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$s = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$s = array(1, 2, 3, 4, 5, 6, 7,\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510371,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpprxub6b_.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        $l = array_slice($l, 1);\n        $s = array_slice($s, 1);\n        return is_sublist($l, $s);\n    } else {\n        $l = array_slice($l, 1);\n        return is_sublist($l, $s);\n    }\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(3, 4, 5);\n$s1 = array(3, 4, 5, 6, 7);\n$s2 = array(3, 4, 5, 6, 7, 8, 9);\n$s3 = array(3, 4, 5, 6, 7, 8, 9, 10);\n$s4 = array(3, 4, 5, 6, 7, 8, 9, 10, 11);\n$s5 = array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\n$s6 = array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13);\n$s7 = array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14);\n$s8 = array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n$s9 = array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);\n$s10 = array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17);\n$s11 = array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18);\n$s12 = array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510371,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxq1b5x9m.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [3, 4, 5];\nvar_dump(is_sublist($l, $s));\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510371,
      "stdout": "bool(true)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptaj9cx4v.php:30\nStack trace:\n#0 /tmp/tmptaj9cx4v.php(35): test()\n#1 {main}\n  thrown in /tmp/tmptaj9cx4v.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1,2,3,4,5,6,7,8,9];\n$s = [2,3,4];\n\necho is_sublist($l, $s) ? \"Yes\" : \"No\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510371,
      "stdout": "Yes\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa6e2u9ho.php:21\nStack trace:\n#0 /tmp/tmpa6e2u9ho.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpa6e2u9ho.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == count($s);\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [2, 3, 4];\n$s2 = [2, 4, 3];\n$s3 = [3, 4, 5, 6];\n$s4 = [3, 4, 5, 6, 7, 8, 9, 10];\n$s5 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s6 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\necho is_sublist($l, $s) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s2) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s3) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s4) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s5) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s6) ? \"true\\n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510371,
      "stdout": "true\nfalse\ntrue\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $j == $m;\n}\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(3, 4);\n\necho is_sublist($l, $s) ? \"Yes\" : \"No\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510371,
      "stdout": "Yes\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6hhsdke4.php:28\nStack trace:\n#0 /tmp/tmp6hhsdke4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6hhsdke4.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        }\n        $i++;\n    }\n    return $j == $m;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [1, 2, 3];\n$s2 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s4 = [2, 3, 4];\n$s5 = [3, 4, 5];\n$s6 = [8, 9];\n$s7 = [9];\n$s8 = [10];\n\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s2) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s3) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s4) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s5) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s6) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s7) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s8) ? 'true' : 'false';\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\ntrue\nfalse\ntrue\ntrue\ntrue\ntrue\nfalse\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplmuf5fx6.php:48\nStack trace:\n#0 /tmp/tmplmuf5fx6.php(53): test()\n#1 {main}\n  thrown in /tmp/tmplmuf5fx6.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $sublist = array_slice($l, 0, count($s));\n    return $sublist == $s;\n}\n\n$l = [1, 2, 3, 4, 5];\n$s = [2, 3];\n$s2 = [2, 3, 4];\n\necho is_sublist($l, $s) ? \"true\" : \"false\";\necho \"\\n\";\necho is_sublist($l, $s2) ? \"true\" : \"false\";\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "false\nfalse\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02yytvhr.php:23\nStack trace:\n#0 /tmp/tmp02yytvhr.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp02yytvhr.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [2, 3, 4];\n\nvar_dump(is_sublist($l, $s));\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "bool(true)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvvxk3cdo.php:21\nStack trace:\n#0 /tmp/tmpvvxk3cdo.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpvvxk3cdo.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n\t$len = count($s);\n\t$i = 0;\n\t$j = 0;\n\twhile ($i < count($l) && $j < $len) {\n\t\tif ($l[$i] == $s[$j]) {\n\t\t\t$i++;\n\t\t\t$j++;\n\t\t} else {\n\t\t\t$i = $i - $j + 1;\n\t\t\t$j = 0;\n\t\t}\n\t}\n\tif ($j == $len) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4];\n$s1 = [2, 4, 3];\n$s2 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s3 = [2, 3, 4, 5];\n$s4 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s5 = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1];\n$s6 = [1, 3, 5, 7, 9];\n\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s1) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s2) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s3) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s4) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s5) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s6) ? 'true' : 'false';\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\nfalse\ntrue\ntrue\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $k=>$v) {\n        if($l[$k] != $v) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510371,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprmwdh43z.php:18\nStack trace:\n#0 /tmp/tmprmwdh43z.php(22): test()\n#1 {main}\n  thrown in /tmp/tmprmwdh43z.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach ($s as $v) {\n        if (!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 3, 4, 5];\n$s = [2, 3, 4];\n$s2 = [2, 4, 5];\n\nvar_dump(is_sublist($l, $s));\nvar_dump(is_sublist($l, $s2));\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "bool(true)\nbool(true)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpotm2wt2b.php:23\nStack trace:\n#0 /tmp/tmpotm2wt2b.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpotm2wt2b.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n  $i = 0;\n  $j = 0;\n  $n = count($l);\n  $m = count($s);\n  while ($i < $n && $j < $m) {\n    if ($l[$i] == $s[$j]) {\n      $i++;\n      $j++;\n    } else {\n      $i = $i - $j + 1;\n      $j = 0;\n    }\n  }\n  if ($j == $m) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [2, 3, 4];\n$s2 = [2, 4, 6];\n\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s2) ? 'true' : 'false';\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(2, 3, 4);\n\nif (is_sublist($l, $s)) {\n    echo \"Yes, it is a sublist\";\n} else {\n    echo \"No, it is not a sublist\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "Yes, it is a sublist",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [2, 3, 4, 5, 6];\n\nif (is_sublist($l, $s)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $l_len = count($l);\n    $s_len = count($s);\n    $i = 0;\n    $j = 0;\n    while ($i < $l_len && $j < $s_len) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $j == $s_len;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [2, 3, 4];\n$s2 = [2, 3, 4, 5, 6];\n$s3 = [2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s4 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\necho is_sublist($l, $s) ? \"true\" : \"false\";\necho \"\\n\";\necho is_sublist($l, $s2) ? \"true\" : \"false\";\necho \"\\n\";\necho is_sublist($l, $s3) ? \"true\" : \"false\";\necho \"\\n\";\necho is_sublist($l, $s4) ? \"true\" : \"false\";\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\ntrue\ntrue\nfalse\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_pjpa2dh.php:38\nStack trace:\n#0 /tmp/tmp_pjpa2dh.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp_pjpa2dh.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$s = array(2, 3, 4);\n$s1 = array(2, 4, 3);\n$s2 = array(2, 3, 4, 5);\n$s3 = array(2, 3, 4, 5, 6);\n$s4 = array(2, 3, 4, 5, 6, 7, 8, 9, 10);\n$s5 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\n\necho is_sublist($l, $s) ? \"Yes\\n\" : \"No\\n\";\necho is_sublist($l, $s1) ? \"Yes\\n\" : \"No\\n\";\necho is_sublist($l, $s2) ? \"Yes\\n\" : \"No\\n\";\necho is_sublist($l, $s3) ? \"Yes\\n\" : \"No\\n\";\necho is_sublist($l, $s4) ? \"Yes\\n\" : \"No\\n\";\necho is_sublist($l, $s5) ? \"Yes\\n\" : \"No\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "Yes\nNo\nYes\nYes\nYes\nNo\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $j = 0;\n    for ($i = 0; $i < count($l); $i++) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        if ($j == count($s)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [1, 2, 3];\n$s2 = [3, 4, 5];\n$s3 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s4 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s5 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\necho is_sublist($l, $s) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s2) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s3) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s4) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s5) ? \"true\\n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\ntrue\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $len_l = count($l);\n    $len_s = count($s);\n    if ($len_l < $len_s) {\n        return false;\n    }\n    for ($i = 0; $i < $len_l; $i++) {\n        if ($l[$i] == $s[0]) {\n            $j = 1;\n            while ($j < $len_s && $l[$i + $j] == $s[$j]) {\n                $j++;\n            }\n            if ($j == $len_s) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [1, 2, 3];\n$s1 = [2, 3, 4];\n$s2 = [3, 4, 5];\n$s3 = [4, 5, 6];\n$s4 = [5, 6, 7];\n$s5 = [6, 7, 8];\n$s6 = [7, 8, 9];\n$s7 = [8, 9, 10];\n$s8 = [9, 10, 11];\n$s9 = [10, 11, 12];\n$s10 = [11, 12, 13];\n$s11 = [12, 13, 14];\n$s12 = [13, 14, 15];\n$s13 = [14, 15, 16];\n$s14 = [15, 16, 17];\n$s15 = [16, 17, 18];\n$s16 = [17, 18, 19];\n$s17 = [18, 19, 20];\n$s18 = [19, 20, 21];\n$s19 = [20, 21, 22];\n$s20 = [21, 22, 23];\n$s21 = [22, 23, 24];\n$s22 = [23, 24, 25];\n$s23 = [24, 25, 26];\n$s24 = [25, 26, 27];\n$s25 = [26, 27, 28];\n$s26 = [27, 28, 29];\n$s27 = [28\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmplajbqi6n.php on line 52\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $l = array_values($l);\n    $s = array_values($s);\n    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $j == count($s);\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4, 5];\n\nvar_dump(is_sublist($l, $s));\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "bool(true)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdcqesjwf.php:28\nStack trace:\n#0 /tmp/tmpdcqesjwf.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdcqesjwf.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $k=>$v) {\n        if(!isset($l[$k]) || $l[$k] != $v) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$sublist = array(2, 3, 4);\n\nif(is_sublist($list, $sublist)) {\n    echo \"It's a match!\";\n} else {\n    echo \"It's gone.\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "It's gone.\nFatal error: Uncaught Exception: Test failed! in /tmp/tmper3fp9om.php:26\nStack trace:\n#0 /tmp/tmper3fp9om.php(30): test()\n#1 {main}\n  thrown in /tmp/tmper3fp9om.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        $l = array_slice($l, 1);\n        $s = array_slice($s, 1);\n        return is_sublist($l, $s);\n    }\n    $l = array_slice($l, 1);\n    return is_sublist($l, $s);\n}\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(2, 3);\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(2, 4);\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(2, 3, 4);\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(2, 3, 4, 5);\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(1, 2, 3, 4, 5);\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(1, 2, 3, 4, 5, 6);\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(6);\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\n\n$l = array(1, 2,\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpf1ovr2id.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $k=>$v) {\n        if($l[$k] != $v) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510371,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprmwdh43z.php:18\nStack trace:\n#0 /tmp/tmprmwdh43z.php(22): test()\n#1 {main}\n  thrown in /tmp/tmprmwdh43z.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [1, 2, 3, 4];\n$s2 = [1, 2, 3, 4, 5];\n$s3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s4 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\necho is_sublist($l, $s) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s2) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s3) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s4) ? \"true\\n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\ntrue\ntrue\nfalse\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv9vun490.php:27\nStack trace:\n#0 /tmp/tmpv9vun490.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpv9vun490.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $len = count($s);\n    $i = 0;\n    $j = 0;\n    while ($i < count($l)) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        if ($j == $len) {\n            return true;\n        }\n        $i++;\n    }\n    return false;\n}\n\n$l = [1, 2, 3, 4, 5];\n$s = [2, 3];\necho is_sublist($l, $s) ? \"true\" : \"false\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($s)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [3, 4, 5];\n\nif (is_sublist($l, $s)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "Yes\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg3bscdz0.php:34\nStack trace:\n#0 /tmp/tmpg3bscdz0.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpg3bscdz0.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        return is_sublist(array_slice($l, 1), array_slice($s, 1));\n    }\n    return is_sublist(array_slice($l, 1), $s);\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [2, 3, 4];\n\necho is_sublist($l, $s) ? 'true' : 'false';\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\nFatal error: Uncaught Exception: Test failed! in /tmp/tmputyo4zcs.php:25\nStack trace:\n#0 /tmp/tmputyo4zcs.php(30): test()\n#1 {main}\n  thrown in /tmp/tmputyo4zcs.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach ($s as $k => $v) {\n        if ($l[$k] != $v) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4rqu8noj.php:18\nStack trace:\n#0 /tmp/tmp4rqu8noj.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp4rqu8noj.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach ($s as $v) {\n        if (!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7];\n$s = [2, 3, 4];\n\nvar_dump(is_sublist($l, $s));\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "bool(true)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj9dncf0m.php:21\nStack trace:\n#0 /tmp/tmpj9dncf0m.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpj9dncf0m.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach ($s as $v) {\n        if (!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(1, 2, 3);\n$s2 = array(3, 4, 5);\n$s3 = array(1, 2, 3, 4, 5);\n$s4 = array(1, 2, 3, 4, 5, 6);\n\necho is_sublist($l, $s) ? 'true' : 'false';\necho PHP_EOL;\necho is_sublist($l, $s2) ? 'true' : 'false';\necho PHP_EOL;\necho is_sublist($l, $s3) ? 'true' : 'false';\necho PHP_EOL;\necho is_sublist($l, $s4) ? 'true' : 'false';\necho PHP_EOL;\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\ntrue\ntrue\nfalse\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb6bpiyl5.php:31\nStack trace:\n#0 /tmp/tmpb6bpiyl5.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpb6bpiyl5.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($s)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$s = array(2, 3, 4);\n\nif (is_sublist($l, $s)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "Yes\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcw7788ev.php:34\nStack trace:\n#0 /tmp/tmpcw7788ev.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpcw7788ev.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $sublist = array_slice($l, 0, count($s));\n    return $sublist == $s;\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(2, 3, 4);\n$s2 = array(2, 3, 4, 5, 6);\n\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s2) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, array(1, 2, 3, 4, 5, 6, 7, 8, 9)) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13)) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14)) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15)) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp1w4wlie9.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        $s = array_slice($s, 1);\n    }\n    return is_sublist(array_slice($l, 1), $s);\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [3, 4, 5];\n\necho is_sublist($l, $s) ? 'true' : 'false';\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpezgjfbx7.php:25\nStack trace:\n#0 /tmp/tmpezgjfbx7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpezgjfbx7.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $len = count($s);\n    $i = 0;\n    while ($i < count($l)) {\n        if ($l[$i] == $s[0]) {\n            $j = 0;\n            while ($j < $len) {\n                if ($l[$i + $j] != $s[$j]) {\n                    break;\n                }\n                $j++;\n            }\n            if ($j == $len) {\n                return true;\n            }\n        }\n        $i++;\n    }\n    return false;\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(3, 4, 5);\n$s1 = array(3, 4, 6);\n$s2 = array(3, 4, 5, 6);\n\necho is_sublist($l, $s) ? \"true\" : \"false\";\necho \"\\n\";\necho is_sublist($l, $s1) ? \"true\" : \"false\";\necho \"\\n\";\necho is_sublist($l, $s2) ? \"true\" : \"false\";\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == $m;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4, 5];\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4, 5, 6, 7, 8, 9];\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4, 5\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmpjc20vjxd.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        return is_sublist(array_slice($l, 1), array_slice($s, 1));\n    }\n    return is_sublist(array_slice($l, 1), $s);\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(2, 3, 4);\n\nif (is_sublist($l, $s)) {\n    echo \"It's a match!\";\n} else {\n    echo \"It's gone.\";\n}\n\necho \"\\n\";\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(2, 4, 6);\n\nif (is_sublist($l, $s)) {\n    echo \"It's a match!\";\n} else {\n    echo \"It's gone.\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "It's a match!\nIt's a match!\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfnm4vegi.php:40\nStack trace:\n#0 /tmp/tmpfnm4vegi.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpfnm4vegi.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    foreach ($l as $e) {\n        if ($e == $s[$i]) {\n            $i++;\n            if ($i == count($s)) {\n                return true;\n            }\n        } else {\n            $i = 0;\n        }\n    }\n    return false;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [3, 4, 5];\n\necho is_sublist($l, $s) ? 'true' : 'false';\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = array(1, 2, 3, 4, 5, 6);\n$s = array(2, 3, 4);\n\nif(is_sublist($l, $s)) {\n    echo \"Yes, it is a sublist\";\n} else {\n    echo \"No, it is not a sublist\";\n}\n\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "Yes, it is a sublist\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo7yn0444.php:26\nStack trace:\n#0 /tmp/tmpo7yn0444.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpo7yn0444.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach ($s as $v) {\n        if (!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7];\n$s = [3, 4, 5];\n\nvar_dump(is_sublist($l, $s));\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "bool(true)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfd6phj0m.php:21\nStack trace:\n#0 /tmp/tmpfd6phj0m.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpfd6phj0m.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach ($s as $v) {\n        if (!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [1, 2, 3, 4];\n$s2 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s4 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$s5 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n$s6 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n$s7 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n$s8 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n$s9 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n$s10 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17];\n$s11 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\n$s12 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19];\n$s13 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n$s14 = [1, 2, 3,\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpd8zknp9z.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [2, 3, 4];\n\nvar_dump(is_sublist($l, $s));\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "bool(true)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $len_l = count($l);\n    $len_s = count($s);\n    if ($len_s > $len_l) {\n        return false;\n    }\n    $i = 0;\n    $j = 0;\n    while ($i < $len_l) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        if ($j == $len_s) {\n            return true;\n        }\n        $i++;\n    }\n    return false;\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(2, 3, 4);\n$s1 = array(2, 3, 4, 5);\n$s2 = array(2, 3, 4, 5, 6);\n$s3 = array(2, 3, 4, 5, 6, 7);\n$s4 = array(2, 3, 4, 5, 6, 7, 8);\n$s5 = array(2, 3, 4, 5, 6, 7, 8, 9);\n$s6 = array(2, 3, 4, 5, 6, 7, 8, 9, 10);\n$s7 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\n$s8 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\n$s9 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13);\n$s10 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14);\n$s11 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n$s12 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);\n$s13 = array(2, 3, 4, 5, 6, 7, 8,\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp7dejgedm.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == count($s);\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [2, 3, 4];\n$s2 = [2, 3, 4, 5];\n$s3 = [2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s4 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$s5 = [11, 12, 13];\n\necho is_sublist($l, $s) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s2) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s3) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s4) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s5) ? \"true\\n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\ntrue\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [1, 2, 3, 4, 5];\n$s2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$s3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n$s4 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n$s5 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n$s6 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n$s7 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n$s8 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17];\n$s9 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\n$s10 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19];\n$s11 = [1, 2, 3\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmpbj1vdj5o.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $len_l = count($l);\n    $len_s = count($s);\n    if ($len_s > $len_l) {\n        return false;\n    }\n    for ($i = 0; $i < $len_l; $i++) {\n        if ($l[$i] == $s[0]) {\n            $j = 0;\n            while ($j < $len_s && $l[$i + $j] == $s[$j]) {\n                $j++;\n            }\n            if ($j == $len_s) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7];\n$s = [3, 4, 5];\n$s1 = [3, 4, 6];\n$s2 = [3, 4, 5, 6];\n$s3 = [1, 2, 3, 4, 5, 6, 7];\n$s4 = [1, 2, 3, 4, 5, 6, 7, 8];\n$s5 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s6 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\necho is_sublist($l, $s) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s1) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s2) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s3) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s4) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s5) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s6) ? \"true\\n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\nfalse\ntrue\ntrue\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n\t$i = 0;\n\t$j = 0;\n\t$n = count($l);\n\t$m = count($s);\n\twhile ($i < $n && $j < $m) {\n\t\tif ($l[$i] == $s[$j]) {\n\t\t\t$i++;\n\t\t\t$j++;\n\t\t} else {\n\t\t\t$i = $i - $j + 1;\n\t\t\t$j = 0;\n\t\t}\n\t}\n\tif ($j == $m) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [2, 3, 4];\n$s1 = [2, 4, 3];\n$s2 = [2, 3, 4, 5];\n$s3 = [2, 3, 4, 5, 6];\n$s4 = [2, 3, 4, 5, 6, 7];\n$s5 = [2, 3, 4, 5, 6, 7, 8];\n$s6 = [2, 3, 4, 5, 6, 7, 8, 9];\n$s7 = [2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s8 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$s9 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n$s10 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n$s11 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n$s12 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n$s13 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n$s14 = [2, 3, 4, 5,\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpe4xzdixk.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        $l = array_slice($l, 1);\n        $s = array_slice($s, 1);\n        return is_sublist($l, $s);\n    } else {\n        $l = array_slice($l, 1);\n        return is_sublist($l, $s);\n    }\n}\n\n$l = [1, 2, 3, 4, 5];\n$s = [2, 3];\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5];\n$s = [2, 4];\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5];\n$s = [2, 3, 4];\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5];\n$s = [1, 2, 3, 4, 5];\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5];\n$s = [1, 2, 3, 4, 5, 6];\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5];\n$s = [];\nvar_dump(is_sublist($l, $s));\n\n$l = [];\n$s = [1];\nvar_dump(is_sublist($l, $s));\n\n$l = [];\n$s = [];\nvar_dump(is_sublist($l, $s));\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "bool(true)\nbool(true)\nbool(true)\nbool(true)\nbool(false)\nbool(true)\nbool(false)\nbool(true)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdz4m2jqc.php:56\nStack trace:\n#0 /tmp/tmpdz4m2jqc.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpdz4m2jqc.php on line 56\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4];\n$s1 = [2, 3, 5];\n$s2 = [2, 3, 4, 5];\n$s3 = [2, 3, 4, 5, 6];\n$s4 = [2, 3, 4, 5, 6, 7, 8, 9];\n$s5 = [2, 3, 4, 5, 6, 7, 8, 9, 10];\n\necho is_sublist($l, $s) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s1) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s2) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s3) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s4) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s5) ? \"true\\n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\ntrue\ntrue\ntrue\ntrue\nfalse\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpetkbm9px.php:42\nStack trace:\n#0 /tmp/tmpetkbm9px.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpetkbm9px.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $len = count($s);\n    for ($i = 0; $i < count($l); $i++) {\n        if ($l[$i] == $s[0]) {\n            $found = true;\n            for ($j = 1; $j < $len; $j++) {\n                if ($l[$i + $j] != $s[$j]) {\n                    $found = false;\n                    break;\n                }\n            }\n            if ($found) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$s = array(1, 2, 3);\n$s2 = array(4, 5, 6);\n$s3 = array(7, 8, 9, 10);\n$s4 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$s5 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\n$s6 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\n$s7 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13);\n$s8 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14);\n$s9 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n$s10 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);\n$s11 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17);\n$s12 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpnxc1s3oi.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == count($s);\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [2, 3, 4];\n\necho is_sublist($l, $s);\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == count($s);\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4];\n\nif (is_sublist($l, $s)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach ($s as $k => $v) {\n        if (!isset($l[$k]) || $l[$k] != $v) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4];\n\nvar_dump(is_sublist($l, $s));\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "bool(false)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptgmg_0qg.php:22\nStack trace:\n#0 /tmp/tmptgmg_0qg.php(26): test()\n#1 {main}\n  thrown in /tmp/tmptgmg_0qg.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $len = count($s);\n    for ($i = 0; $i < count($l); $i++) {\n        if ($l[$i] == $s[0]) {\n            $found = true;\n            for ($j = 1; $j < $len; $j++) {\n                if ($l[$i + $j] != $s[$j]) {\n                    $found = false;\n                    break;\n                }\n            }\n            if ($found) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(4, 5, 6);\n\nif (is_sublist($l, $s)) {\n    echo \"Sublist found\";\n} else {\n    echo \"Sublist not found\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "Sublist found",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        }\n        $i++;\n    }\n    return $j == $m;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4];\n\necho is_sublist($l, $s) ? \"Yes\" : \"No\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "Yes\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpysi6b84q.php:26\nStack trace:\n#0 /tmp/tmpysi6b84q.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpysi6b84q.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(2, 3);\n$s2 = array(2, 3, 4);\n$s3 = array(2, 3, 6);\n\necho is_sublist($l, $s) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s2) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s3) ? \"true\\n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\ntrue\nfalse\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6m1cgxjc.php:25\nStack trace:\n#0 /tmp/tmp6m1cgxjc.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp6m1cgxjc.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == count($s);\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [2, 3, 4];\n$s2 = [2, 3, 4, 5, 6];\n$s3 = [2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s4 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$s5 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n$s6 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n$s7 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n$s8 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n$s9 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n$s10 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17];\n$s11 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\n$s12 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19];\n$s13 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmpl0lnp0xc.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $len = count($s);\n    for ($i = 0; $i < count($l); $i++) {\n        if ($l[$i] == $s[0]) {\n            $j = 1;\n            while ($j < $len && $l[$i + $j] == $s[$j]) {\n                $j++;\n            }\n            if ($j == $len) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [3, 4, 5];\n$s1 = [3, 4, 6];\n\necho is_sublist($l, $s) ? \"true\" : \"false\";\necho \"\\n\";\necho is_sublist($l, $s1) ? \"true\" : \"false\";\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $j = 0;\n    for ($i = 0; $i < count($l); $i++) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        if ($j == count($s)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(2, 3, 4);\n$s2 = array(2, 3, 4, 5);\n$s3 = array(2, 3, 4, 5, 6);\n$s4 = array(2, 3, 4, 5, 6, 7);\n$s5 = array(2, 3, 4, 5, 6, 7, 8);\n$s6 = array(2, 3, 4, 5, 6, 7, 8, 9);\n$s7 = array(2, 3, 4, 5, 6, 7, 8, 9, 10);\n\necho is_sublist($l, $s) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s2) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s3) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s4) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s5) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s6) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s7) ? \"true\\n\" : \"false\\n\";\n\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\ntrue\ntrue\ntrue\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [1, 2, 3];\n\nvar_dump(is_sublist($l, $s));\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "bool(true)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjmikad0v.php:21\nStack trace:\n#0 /tmp/tmpjmikad0v.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpjmikad0v.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $sublist = array_slice($l, 0, count($s));\n    return $sublist == $s;\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(2, 3, 4);\n\nif (is_sublist($l, $s)) {\n    echo \"Yes, it is a sublist\";\n} else {\n    echo \"No, it is not a sublist\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "No, it is not a sublist\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2k4bt8_4.php:22\nStack trace:\n#0 /tmp/tmp2k4bt8_4.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp2k4bt8_4.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4];\n$s1 = [2, 4, 3];\n$s2 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s4 = [2, 3, 4, 5, 6];\n$s5 = [2, 3, 4, 5, 6, 7, 8, 9];\n$s6 = [2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s7 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$s8 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$s9 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s1) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s2) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s3) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s4) ? 'true' : 'false';\necho \"\\n\";\necho is\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmpjogayuur.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach ($s as $k => $v) {\n        if ($l[$k] != $v) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4rqu8noj.php:18\nStack trace:\n#0 /tmp/tmp4rqu8noj.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp4rqu8noj.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $len_l = count($l);\n    $len_s = count($s);\n    $i = 0;\n    $j = 0;\n    while ($i < $len_l && $j < $len_s) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $len_s) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [3, 4, 5];\n$s2 = [3, 4, 6];\necho is_sublist($l, $s) ? \"true\" : \"false\";\necho \"\\n\";\necho is_sublist($l, $s2) ? \"true\" : \"false\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\nfalse",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $len = count($s);\n    for ($i = 0; $i < count($l) - $len + 1; $i++) {\n        $sub = array_slice($l, $i, $len);\n        if ($sub == $s) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(2, 3, 4);\n$s2 = array(2, 3, 4, 5);\n$s3 = array(2, 3, 4, 5, 6, 7);\n$s4 = array(2, 3, 4, 5, 6, 7, 8, 9);\n$s5 = array(2, 3, 4, 5, 6, 7, 8, 9, 10);\n$s6 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\n\nprint_r(is_sublist($l, $s));\necho \"\\n\";\nprint_r(is_sublist($l, $s2));\necho \"\\n\";\nprint_r(is_sublist($l, $s3));\necho \"\\n\";\nprint_r(is_sublist($l, $s4));\necho \"\\n\";\nprint_r(is_sublist($l, $s5));\necho \"\\n\";\nprint_r(is_sublist($l, $s6));\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "1\n1\n1\n1\n\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $len_l = count($l);\n    $len_s = count($s);\n    if ($len_l < $len_s) {\n        return false;\n    }\n    for ($i = 0; $i <= $len_l - $len_s; $i++) {\n        if ($l[$i] == $s[0]) {\n            $j = 1;\n            while ($j < $len_s && $l[$i + $j] == $s[$j]) {\n                $j++;\n            }\n            if ($j == $len_s) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(5, 6, 7);\nif (is_sublist($l, $s)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 3, 4, 5];\n$s = [2, 3];\n$r = is_sublist($l, $s);\nvar_dump($r);\n\n$l = [1, 2, 3, 4, 5];\n$s = [2, 4];\n$r = is_sublist($l, $s);\nvar_dump($r);\n\n$l = [1, 2, 3, 4, 5];\n$s = [2, 6];\n$r = is_sublist($l, $s);\nvar_dump($r);\n\n$l = [1, 2, 3, 4, 5];\n$s = [6, 7];\n$r = is_sublist($l, $s);\nvar_dump($r);\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "bool(true)\nbool(true)\nbool(false)\nbool(false)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1q7evvah.php:36\nStack trace:\n#0 /tmp/tmp1q7evvah.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp1q7evvah.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        $sublist = array_slice($l, 0, count($s));\n        return $sublist == $s;\n    }\n    return is_sublist(array_slice($l, 1), $s);\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4];\n$t = [2, 4];\n\necho is_sublist($l, $s) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $t) ? \"true\\n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [1, 2, 3, 4, 5];\n$s2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$s3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n$s4 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n$s5 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n$s6 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n$s7 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n$s8 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17];\n$s9 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\n$s10 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19];\n$s11 = [1, 2, 3\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmpbj1vdj5o.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        $s = array_slice($s, 1);\n    }\n    return is_sublist(array_slice($l, 1), $s);\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8);\n$s = array(3, 4, 5);\n\necho is_sublist($l, $s) ? \"true\" : \"false\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpucpq2bmb.php:25\nStack trace:\n#0 /tmp/tmpucpq2bmb.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpucpq2bmb.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == $m;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [2, 3, 4, 5];\n$s1 = [2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$s4 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n$s5 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n$s6 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n$s7 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n$s8 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n$s9 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17];\n$s10 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\n$s11 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmpf3xhmzkm.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $len_l = count($l);\n    $len_s = count($s);\n    if ($len_s > $len_l) {\n        return false;\n    }\n    for ($i = 0; $i <= $len_l - $len_s; $i++) {\n        $j = 0;\n        while ($j < $len_s && $l[$i + $j] == $s[$j]) {\n            $j++;\n        }\n        if ($j == $len_s) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [3, 4, 5];\n$s2 = [3, 4, 6];\n$s3 = [3, 4, 5, 6, 7, 8, 9, 10];\n$s4 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s5 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s2) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s3) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s4) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s5) ? 'true' : 'false';\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\nfalse\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        return is_sublist(array_slice($l, 1), array_slice($s, 1));\n    }\n    return is_sublist(array_slice($l, 1), $s);\n}\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(2, 3);\n$s2 = array(2, 4);\n$s3 = array(2, 3, 4);\n$s4 = array(1, 2, 3, 4, 5);\n$s5 = array(1, 2, 3, 4, 5, 6);\n$s6 = array(1, 2, 3, 4, 5, 6, 7);\n$s7 = array(1, 2, 3, 4, 5, 6, 7, 8);\n$s8 = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s9 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$s10 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\n$s11 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\n$s12 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13);\n$s13 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14);\n$s14 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n$s15 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);\n$s16 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp67ksv6lk.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(($k = array_search($v, $l)) === false) {\n            return false;\n        }\n        unset($l[$k]);\n    }\n    return true;\n}\n\n$l = array(1, 2, 3, 4, 5, 6);\n$s = array(2, 3, 4);\n\necho is_sublist($l, $s) ? 'Yes' : 'No';\n\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "Yes\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp925ve8py.php:23\nStack trace:\n#0 /tmp/tmp925ve8py.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp925ve8py.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == count($s);\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [4, 5, 6];\n\nif (is_sublist($l, $s)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == count($s);\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [2, 3, 4];\n$s2 = [2, 3, 4, 5];\n$s3 = [2, 3, 4, 5, 6, 7];\n$s4 = [2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s5 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s2) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s3) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s4) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s5) ? 'true' : 'false';\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\ntrue\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(2, 3);\n\necho is_sublist($l, $s) ? 'true' : 'false';\n\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprxc9bx15.php:22\nStack trace:\n#0 /tmp/tmprxc9bx15.php(27): test()\n#1 {main}\n  thrown in /tmp/tmprxc9bx15.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $j == count($s);\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [2, 3, 4];\n\nif (is_sublist($l, $s)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "Yes\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1afivvpq.php:30\nStack trace:\n#0 /tmp/tmp1afivvpq.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1afivvpq.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8);\n$s = array(2, 3, 4);\n$s2 = array(2, 3, 5);\n\necho is_sublist($l, $s) ? \"true\" : \"false\";\necho \"\\n\";\necho is_sublist($l, $s2) ? \"true\" : \"false\";\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $len = count($s);\n    $i = 0;\n    $j = 0;\n    while ($i < count($l)) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        if ($j == $len) {\n            return true;\n        }\n        $i++;\n    }\n    return false;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7];\n$s = [3, 4, 5];\n\nvar_dump(is_sublist($l, $s));\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "bool(true)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $count = 0;\n    $len = count($s);\n    foreach ($l as $item) {\n        if ($item == $s[$count]) {\n            $count++;\n        } else {\n            $count = 0;\n        }\n        if ($count == $len) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [3, 4, 5];\n$s2 = [3, 4, 5, 6];\n$s3 = [3, 4, 5, 6, 7, 8, 9, 10];\n$s4 = [3, 4, 5, 6, 7, 8, 9, 10, 11];\n\necho is_sublist($l, $s) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s2) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s3) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s4) ? \"true\\n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == count($s);\n}\n\n$l = [1,2,3,4,5,6,7,8,9,10];\n$s = [2,3,4];\n$s2 = [2,3,4,5,6];\n$s3 = [2,3,4,5,6,7,8,9,10];\n$s4 = [2,3,4,5,6,7,8,9,10,11];\n$s5 = [2,3,4,5,6,7,8,9,10,1];\n$s6 = [1,2,3,4,5,6,7,8,9,10];\n$s7 = [1,2,3,4,5,6,7,8,9,10,11];\n$s8 = [1,2,3,4,5,6,7,8,9,10,1];\n\nassert(is_sublist($l, $s));\nassert(is_sublist($l, $s2));\nassert(is_sublist($l, $s3));\nassert(!is_sublist($l, $s4));\nassert(!is_sublist($l, $s5));\nassert(is_sublist($l, $s6));\nassert(!is_sublist($l, $s7));\nassert(!is_sublist($l, $s8));\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == count($s);\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [3, 4, 5];\n\necho is_sublist($l, $s) ? \"true\" : \"false\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = array(1,2,3,4,5,6);\n$s = array(1,2,3);\n$s2 = array(1,2,3,4);\n$s3 = array(1,2,3,4,5,6);\n$s4 = array(1,2,3,4,5,6,7);\n\nvar_dump(is_sublist($l, $s));\nvar_dump(is_sublist($l, $s2));\nvar_dump(is_sublist($l, $s3));\nvar_dump(is_sublist($l, $s4));\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "bool(true)\nbool(true)\nbool(true)\nbool(false)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvdzw4a1h.php:27\nStack trace:\n#0 /tmp/tmpvdzw4a1h.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpvdzw4a1h.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        $s = array_slice($s, 1);\n    }\n    $l = array_slice($l, 1);\n    return is_sublist($l, $s);\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s1 = [1, 2, 3, 4, 5, 6, 7, 8];\n$s2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$s4 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n$s5 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n$s6 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n$s7 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n$s8 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n$s9 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17];\n$s10 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\n$s11 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19];\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9vhjf9mw.php:35\nStack trace:\n#0 /tmp/tmp9vhjf9mw.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp9vhjf9mw.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        $s_copy = $s;\n        array_shift($s_copy);\n        return is_sublist($l, $s_copy);\n    } else {\n        array_shift($l);\n        return is_sublist($l, $s);\n    }\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [3, 4, 5];\n$s2 = [3, 4, 6];\n$s3 = [3, 4, 5, 6, 7, 8, 9];\n$s4 = [3, 4, 5, 6, 7, 8, 9, 10];\n\necho is_sublist($l, $s) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s2) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s3) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s4) ? \"true\\n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\ntrue\ntrue\nfalse\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz3d2wu9y.php:35\nStack trace:\n#0 /tmp/tmpz3d2wu9y.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpz3d2wu9y.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $sublist = array_slice($l, 0, count($s));\n    return $sublist == $s;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4];\n\necho is_sublist($l, $s) ? 'true' : 'false';\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "false\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1s5f83_p.php:18\nStack trace:\n#0 /tmp/tmp1s5f83_p.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1s5f83_p.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        $l = array_slice($l, 1);\n        $s = array_slice($s, 1);\n        return is_sublist($l, $s);\n    } else {\n        $l = array_slice($l, 1);\n        return is_sublist($l, $s);\n    }\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [1, 2, 3, 4, 5];\n$s2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$s4 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n$s5 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n$s6 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n$s7 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n$s8 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n$s9 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17];\n$s10 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\n$s11 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmpc2o5g86r.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach ($s as $k => $v) {\n        if ($l[$k] != $v) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4rqu8noj.php:18\nStack trace:\n#0 /tmp/tmp4rqu8noj.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp4rqu8noj.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach ($s as $k => $v) {\n        if (!isset($l[$k]) || $l[$k] !== $v) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$sublist = array(2, 3, 4);\n\nif (is_sublist($list, $sublist)) {\n    echo \"Yes, the list contains the sublist\";\n} else {\n    echo \"No, the list does not contain the sublist\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "No, the list does not contain the sublist\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpej4rro6v.php:26\nStack trace:\n#0 /tmp/tmpej4rro6v.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpej4rro6v.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $len = count($s);\n    $i = 0;\n    foreach ($l as $v) {\n        if ($v == $s[$i]) {\n            $i++;\n            if ($i == $len) {\n                return true;\n            }\n        } else {\n            $i = 0;\n        }\n    }\n    return false;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [3, 4, 5];\n$s2 = [3, 4, 5, 6, 7];\n$s3 = [3, 4, 5, 6, 7, 8, 9];\n$s4 = [3, 4, 5, 6, 7, 8, 9, 10];\n$s5 = [3, 4, 5, 6, 7, 8, 9, 10, 11];\n$s6 = [3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n$s7 = [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n$s8 = [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n$s9 = [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n$s10 = [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n$s11 = [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17];\n$s12 = [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\n$s13 = [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19];\n$s14 = [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == count($s);\n}\n\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach ($s as $v) {\n        if (!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(2, 3);\n\nvar_dump(is_sublist($l, $s));\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(2, 4);\n\nvar_dump(is_sublist($l, $s));\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(6, 7, 8);\n\nvar_dump(is_sublist($l, $s));\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "bool(true)\nbool(true)\nbool(false)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz1f56_bn.php:31\nStack trace:\n#0 /tmp/tmpz1f56_bn.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpz1f56_bn.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [1, 2, 3, 4, 5];\n$s2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$s4 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nvar_dump(is_sublist($l, $s));\nvar_dump(is_sublist($l, $s2));\nvar_dump(is_sublist($l, $s3));\nvar_dump(is_sublist($l, $s4));\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "bool(true)\nbool(true)\nbool(false)\nbool(false)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzp7imxx5.php:27\nStack trace:\n#0 /tmp/tmpzp7imxx5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpzp7imxx5.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        $s = array_slice($s, 1);\n        return is_sublist(array_slice($l, 1), $s);\n    }\n    return is_sublist(array_slice($l, 1), $s);\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [1, 2, 3, 4, 5];\n$s2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$s3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n$s4 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n$s5 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n$s6 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n$s7 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n$s8 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17];\n$s9 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\n$s10 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19];\n$s11 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmphagc4psg.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 3, 4, 5];\n$s = [2, 3];\n\necho is_sublist($l, $s) ? 'true' : 'false';\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yjln01u.php:21\nStack trace:\n#0 /tmp/tmp8yjln01u.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp8yjln01u.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach ($s as $v) {\n        if (!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(2, 3, 4);\n\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\n\n$s = array(2, 3, 10);\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\n\n$s = array(2, 3, 4, 5, 6, 7, 8, 9);\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\n\n$s = array(2, 3, 4, 5, 6, 7, 8, 9, 10);\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\n\n$s = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\n\n$s = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\n\n$s = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\n\n$s = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\n\n$s = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13);\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\nfalse\ntrue\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpilo2rpml.php:54\nStack trace:\n#0 /tmp/tmpilo2rpml.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpilo2rpml.php on line 54\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(2, 3, 4);\n\nif (is_sublist($l, $s)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $len = count($s);\n    for ($i = 0; $i <= count($l) - $len; $i++) {\n        $sub = array_slice($l, $i, $len);\n        if ($sub == $s) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [3, 4, 5];\n\nif (is_sublist($l, $s)) {\n    echo \"It's a match\";\n} else {\n    echo \"It's gone\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "It's a match",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [1, 2, 3];\n$s2 = [3, 4, 5];\n$s3 = [1, 2, 3, 4, 5];\n$s4 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s5 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s6 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s2) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s3) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s4) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s5) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s6) ? 'true' : 'false';\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\ntrue\ntrue\ntrue\nfalse\nfalse\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe3di7doy.php:38\nStack trace:\n#0 /tmp/tmpe3di7doy.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpe3di7doy.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($s)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [2, 3, 4];\necho is_sublist($l, $s) ? \"true\" : \"false\";\necho \"\\n\";\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [2, 3, 4, 5, 6];\necho is_sublist($l, $s) ? \"true\" : \"false\";\necho \"\\n\";\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [2, 3, 4, 5, 6, 7, 8, 9, 10];\necho is_sublist($l, $s) ? \"true\" : \"false\";\necho \"\\n\";\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho is_sublist($l, $s) ? \"true\" : \"false\";\necho \"\\n\";\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\necho is_sublist($l, $s) ? \"true\" : \"false\";\necho \"\\n\";\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [1, 2, 3, 4, 5, 6, 7, 8, 9,\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpwh14qp9d.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4];\n$s1 = [2, 3, 5];\n\nif (is_sublist($l, $s)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\n\necho \"\\n\";\n\nif (is_sublist($l, $s1)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "Yes\nNo",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach ($s as $v) {\n        if (!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [2, 3, 4];\n\necho is_sublist($l, $s) ? 'true' : 'false';\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps8rxut56.php:21\nStack trace:\n#0 /tmp/tmps8rxut56.php(26): test()\n#1 {main}\n  thrown in /tmp/tmps8rxut56.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [2, 3, 4];\n\nif (is_sublist($l, $s)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "Yes\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqzger6wt.php:36\nStack trace:\n#0 /tmp/tmpqzger6wt.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqzger6wt.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        $l = array_slice($l, 1);\n        $s = array_slice($s, 1);\n        return is_sublist($l, $s);\n    } else {\n        $l = array_slice($l, 1);\n        return is_sublist($l, $s);\n    }\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$s = array(1, 2, 3, 4);\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\n$s = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\n$s = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\n$s = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\n$s = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13);\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\n$s = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14);\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\n$s = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\necho is_sublist($l, $s\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpio6shzxg.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(2, 3);\n\nif(is_sublist($l, $s)) {\n    echo \"It's a match\\n\";\n} else {\n    echo \"It's gone\\n\";\n}\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(2, 4);\n\nif(is_sublist($l, $s)) {\n    echo \"It's a match\\n\";\n} else {\n    echo \"It's gone\\n\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "It's a match\nIt's a match\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_4bl5ch4.php:34\nStack trace:\n#0 /tmp/tmp_4bl5ch4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_4bl5ch4.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 3, 4, 5];\n$s = [2, 3];\n\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5];\n$s = [2, 4];\n\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5];\n$s = [2, 6];\n\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5];\n$s = [6, 2];\n\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5];\n$s = [1, 2, 3, 4, 5];\n\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5];\n$s = [1, 2, 3, 4, 5, 6];\n\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5];\n$s = [1, 2, 3, 4, 5, 6];\n\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5];\n$s = [1, 2, 3, 4, 5, 6];\n\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5];\n$s = [1, 2, 3, 4, 5, 6];\n\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5];\n$s = [1, 2, 3, 4, 5, 6];\n\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3,\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp46xr5mzp.php on line 63\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4];\n$s2 = [2, 4, 3];\n$s3 = [2, 3, 4, 5];\n$s4 = [2, 3, 4, 5, 6, 7, 8, 9];\n$s5 = [2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s6 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s7 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s2) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s3) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s4) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s5) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s6) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s7) ? 'true' : 'false';\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\nfalse\ntrue\ntrue\nfalse\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        $s_copy = $s;\n        array_shift($s_copy);\n        return is_sublist($l, $s_copy);\n    } else {\n        array_shift($l);\n        return is_sublist($l, $s);\n    }\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [5, 6, 7];\n$s2 = [5, 6, 7, 8];\n$s3 = [5, 6, 7, 8, 9];\n$s4 = [5, 6, 7, 8, 9, 10];\n$s5 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s6 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s7 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$s8 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n$s9 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n$s10 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n$s11 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n$s12 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n$s13 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17];\n$s14 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpr0w1td_f.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($s)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [1, 2, 3, 4, 5];\n$s2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$s4 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n$s5 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n$s6 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n$s7 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n$s8 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n$s9 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17];\n$s10 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\n$s11 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19];\n$s12 = [1, 2, 3, 4,\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp8ugpl3sg.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $j == count($s);\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [3, 4, 5];\n$s1 = [3, 4, 6];\n$s2 = [3, 4, 5, 6];\n$s3 = [3, 4, 5, 6, 7, 8, 9];\n\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s1) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s2) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s3) ? 'true' : 'false';\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\ntrue\ntrue\ntrue\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbxzqpvk.php:36\nStack trace:\n#0 /tmp/tmpqbxzqpvk.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqbxzqpvk.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        $sublist = array_slice($l, 0, count($s));\n        return $sublist == $s;\n    }\n    return is_sublist(array_slice($l, 1), $s);\n}\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(3, 4);\n$t = array(3, 4, 5);\n$u = array(3, 4, 6);\n\necho is_sublist($l, $s) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $t) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $u) ? \"true\\n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4];\n$s1 = [2, 4, 3];\n$s2 = [2, 3, 4, 5];\n$s3 = [2, 3, 4, 5, 6, 7, 8, 9];\n$s4 = [2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s5 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s1) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s2) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s3) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s4) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s5) ? 'true' : 'false';\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\nfalse\ntrue\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == count($s);\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [2, 3, 4];\n$s1 = [2, 4, 3];\n$s2 = [2, 3, 4, 5];\n$s3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s4 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\necho is_sublist($l, $s) ? \"true\" : \"false\";\necho \"\\n\";\necho is_sublist($l, $s1) ? \"true\" : \"false\";\necho \"\\n\";\necho is_sublist($l, $s2) ? \"true\" : \"false\";\necho \"\\n\";\necho is_sublist($l, $s3) ? \"true\" : \"false\";\necho \"\\n\";\necho is_sublist($l, $s4) ? \"true\" : \"false\";\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\nfalse\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $len = count($s);\n    $i = 0;\n    $j = 0;\n    while ($i < count($l)) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n            if ($j == $len) {\n                return true;\n            }\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return false;\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$s = array(3, 4, 5);\n$s2 = array(3, 4, 6);\n\necho is_sublist($l, $s) ? \"true\" : \"false\";\necho \"\\n\";\necho is_sublist($l, $s2) ? \"true\" : \"false\";\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $j == $m;\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(3, 4, 5);\n\nif (is_sublist($l, $s)) {\n    echo \"Yes, it is a sublist\";\n} else {\n    echo \"No, it is not a sublist\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "Yes, it is a sublist\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjwzb_nro.php:32\nStack trace:\n#0 /tmp/tmpjwzb_nro.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpjwzb_nro.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        }\n        $i++;\n    }\n    return $j == $m;\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(2, 3, 4);\n$s1 = array(2, 4, 3);\n$s2 = array(2, 3, 4, 5);\n$s3 = array(2, 3, 4, 5, 6);\n$s4 = array(2, 3, 4, 5, 6, 7, 8, 9);\n$s5 = array(2, 3, 4, 5, 6, 7, 8, 9, 10);\n$s6 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\n$s7 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\n$s8 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13);\n$s9 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14);\n$s10 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n$s11 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);\n$s12 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17);\n$s13 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18);\n$s14 = array(2, 3, 4, 5, 6, 7\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpsgtuqpid.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(($p = array_search($v, $l)) === false) {\n            return false;\n        }\n        $l = array_slice($l, $p+1);\n    }\n    return true;\n}\n\n$list = array(1, 2, 3, 4, 5);\n$sublist = array(2, 3);\n\nif(is_sublist($list, $sublist)) {\n    echo \"It's a match!\";\n} else {\n    echo \"It's gone.\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "It's a match!\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw054gkb2.php:26\nStack trace:\n#0 /tmp/tmpw054gkb2.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpw054gkb2.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == count($s);\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [2, 3, 4];\necho is_sublist($l, $s) ? 'true' : 'false';\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $len_l = count($l);\n    $len_s = count($s);\n    if ($len_s > $len_l) {\n        return false;\n    }\n    for ($i = 0; $i <= $len_l - $len_s; $i++) {\n        $j = 0;\n        while ($j < $len_s && $l[$i + $j] == $s[$j]) {\n            $j++;\n        }\n        if ($j == $len_s) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [1, 2, 3, 4, 5];\n$s1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$s3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1];\n$s4 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s5 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$s6 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1];\n$s7 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s8 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmppyr319te.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(2, 3);\n\nif (is_sublist($l, $s)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4];\n$s2 = [2, 3, 5];\n\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s2) ? 'true' : 'false';\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510371,
      "stdout": "true\ntrue\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe69u9094.php:25\nStack trace:\n#0 /tmp/tmpe69u9094.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpe69u9094.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 3, 4, 5];\n$s = [2, 3];\n\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5];\n$s = [2, 4];\n\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5];\n$s = [2, 3, 4];\n\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5];\n$s = [2, 4, 6];\n\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5];\n$s = [2, 3, 4, 5];\n\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5];\n$s = [1, 2, 3, 4, 5];\n\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5];\n$s = [5, 4, 3, 2, 1];\n\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5];\n$s = [6, 7, 8, 9, 10];\n\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5];\n$s = [1, 2, 3, 4, 5, 6];\n\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5];\n$s = [];\n\nvar_dump(is_sublist($l, $s));\n\n$l = [];\n$s = [1, 2, 3, 4, 5];\n\nvar_dump(is\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp58j7c204.php on line 66\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7];\n$s = [3, 4, 5];\n\necho is_sublist($l, $s) ? 'true' : 'false';\n\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp13dlgncq.php:22\nStack trace:\n#0 /tmp/tmp13dlgncq.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp13dlgncq.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach ($s as $v) {\n        if (!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7];\n$s = [2, 3, 4];\n\nvar_dump(is_sublist($l, $s));\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "bool(true)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj9dncf0m.php:21\nStack trace:\n#0 /tmp/tmpj9dncf0m.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpj9dncf0m.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [2, 3, 4, 5];\n$s1 = [2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$s4 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n$s5 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n$s6 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n$s7 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n$s8 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n$s9 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17];\n$s10 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\n$s11 = [1\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmp7mk3uurs.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $l = array_values($l);\n    $s = array_values($s);\n    $len = count($s);\n    for ($i = 0; $i <= count($l) - $len; $i++) {\n        $sub = array_slice($l, $i, $len);\n        if ($sub == $s) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [1, 2, 3];\n$s2 = [2, 3, 4];\n$s3 = [5, 6, 7];\n$s4 = [8, 9, 10];\n$s5 = [11, 12, 13];\n\necho is_sublist($l, $s) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s2) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s3) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s4) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s5) ? \"true\\n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\ntrue\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach ($s as $k => $v) {\n        if ($v != $l[$k]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps4ujws6a.php:18\nStack trace:\n#0 /tmp/tmps4ujws6a.php(22): test()\n#1 {main}\n  thrown in /tmp/tmps4ujws6a.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $len = count($s);\n    $i = 0;\n    foreach ($l as $e) {\n        if ($e == $s[$i]) {\n            $i++;\n            if ($i == $len) {\n                return true;\n            }\n        } else {\n            $i = 0;\n        }\n    }\n    return false;\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(3, 4, 5);\n$s2 = array(3, 4, 5, 6);\n$s3 = array(3, 4, 5, 6, 7, 8, 9);\n$s4 = array(3, 4, 5, 6, 7, 8, 9, 10);\n$s5 = array(3, 4, 5, 6, 7, 8, 9, 10, 11);\n\necho is_sublist($l, $s) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s2) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s3) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s4) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s5) ? \"true\\n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\ntrue\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(2, 3);\n\nvar_dump(is_sublist($l, $s));\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(2, 4);\n\nvar_dump(is_sublist($l, $s));\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(6);\n\nvar_dump(is_sublist($l, $s));\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "bool(true)\nbool(true)\nbool(false)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxakr6txd.php:31\nStack trace:\n#0 /tmp/tmpxakr6txd.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxakr6txd.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(2, 3, 4);\n\nif (is_sublist($l, $s)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == count($s);\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [2, 3, 4];\n$s2 = [2, 3, 4, 5];\n$s3 = [2, 3, 4, 5, 6];\n$s4 = [2, 3, 4, 5, 6, 7];\n$s5 = [2, 3, 4, 5, 6, 7, 8];\n$s6 = [2, 3, 4, 5, 6, 7, 8, 9];\n$s7 = [2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s8 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$s9 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n$s10 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n$s11 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n$s12 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n$s13 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n$s14 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17];\n$s15 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\n$s16 = [2\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmp0fpzellr.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        return is_sublist(array_slice($l, 1), array_slice($s, 1));\n    } else {\n        return is_sublist(array_slice($l, 1), $s);\n    }\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [1, 2, 3, 4];\n$s2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$s4 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1];\n$s5 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s2) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s3) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s4) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s5) ? 'true' : 'false';\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7l2qqs4.php:39\nStack trace:\n#0 /tmp/tmph7l2qqs4.php(44): test()\n#1 {main}\n  thrown in /tmp/tmph7l2qqs4.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $l = array_values($l);\n    $s = array_values($s);\n    $l_len = count($l);\n    $s_len = count($s);\n    for ($i = 0; $i < $l_len; $i++) {\n        if ($l[$i] == $s[0]) {\n            $found = true;\n            for ($j = 1; $j < $s_len; $j++) {\n                if ($l[$i + $j] != $s[$j]) {\n                    $found = false;\n                    break;\n                }\n            }\n            if ($found) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [3, 4, 5];\n\nvar_dump(is_sublist($l, $s));\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "bool(true)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($s)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [3, 4, 5];\n$s1 = [3, 4, 5, 6];\n$s2 = [3, 4, 5, 6, 7, 8, 9, 10];\n$s3 = [3, 4, 5, 6, 7, 8, 9, 10, 11];\n$s4 = [3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n$s5 = [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n$s6 = [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n$s7 = [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n$s8 = [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n$s9 = [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17];\n$s10 = [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\n$s11 = [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19];\n$s12 = [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n$\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpqhac0jef.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        $s = array_slice($s, 1);\n    }\n    return is_sublist(array_slice($l, 1), $s);\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4];\nvar_dump(is_sublist($l, $s));\n$s = [2, 4, 3];\nvar_dump(is_sublist($l, $s));\n$s = [2, 3, 4, 5, 6];\nvar_dump(is_sublist($l, $s));\n$s = [2, 3, 4, 5, 6, 7, 8, 9];\nvar_dump(is_sublist($l, $s));\n$s = [2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar_dump(is_sublist($l, $s));\n$s = [2, 3, 4, 5, 6, 7, 8, 9, 1];\nvar_dump(is_sublist($l, $s));\n$s = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nvar_dump(is_sublist($l, $s));\n$s = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar_dump(is_sublist($l, $s));\n$s = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0];\nvar_dump(is_sublist($l, $s));\n$s = [];\nvar_dump(is_sublist($l, $s));\n$s = [0];\nvar_dump(is_sublist($l, $s));\n$s = [10];\nvar_dump(is_sublist($l, $s));\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "bool(true)\nbool(false)\nbool(true)\nbool(true)\nbool(false)\nbool(false)\nbool(true)\nbool(false)\nbool(false)\nbool(true)\nbool(false)\nbool(false)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpekk4buuq.php:46\nStack trace:\n#0 /tmp/tmpekk4buuq.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpekk4buuq.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        $s = array_slice($s, 1);\n    }\n    return is_sublist(array_slice($l, 1), $s);\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [3, 4, 5];\n\necho is_sublist($l, $s) ? 'true' : 'false';\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpezgjfbx7.php:25\nStack trace:\n#0 /tmp/tmpezgjfbx7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpezgjfbx7.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [3, 4, 5];\n\nif (is_sublist($l, $s)) {\n    echo \"Sublist found\";\n} else {\n    echo \"Sublist not found\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "Sublist found",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 3, 4, 5];\n$s = [2, 3];\n\nvar_dump(is_sublist($l, $s));\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "bool(true)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8d5jakov.php:21\nStack trace:\n#0 /tmp/tmp8d5jakov.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp8d5jakov.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n  foreach ($s as $v) {\n    if (!in_array($v, $l)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$s = array(1, 2, 3);\n$s2 = array(2, 3, 4);\n$s3 = array(3, 4, 5);\n$s4 = array(1, 2, 3, 4, 5);\n$s5 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$s6 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\n\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s2) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s3) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s4) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s5) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s6) ? 'true' : 'false';\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\ntrue\ntrue\ntrue\ntrue\nfalse\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkia7mjlf.php:37\nStack trace:\n#0 /tmp/tmpkia7mjlf.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpkia7mjlf.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $result = true;\n    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j < count($s)) {\n        $result = false;\n    }\n    return $result;\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(2, 3, 4);\n\nif (is_sublist($l, $s)) {\n    echo \"Yes, it is a sublist\";\n} else {\n    echo \"No, it is not a sublist\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "Yes, it is a sublist\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprl65uebm.php:34\nStack trace:\n#0 /tmp/tmprl65uebm.php(39): test()\n#1 {main}\n  thrown in /tmp/tmprl65uebm.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [1, 2, 3, 4, 5];\n$s2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$s3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n$s4 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n$s5 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n$s6 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n$s7 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n$s8 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17];\n$s9 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\n$s10 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19];\n$s11 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n$s12 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21];\n$s13 = [1, 2\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmpnu1t9abk.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach ($s as $v) {\n        if (!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(3, 4, 5);\n\nif (is_sublist($l, $s)) {\n    echo 'Yes';\n} else {\n    echo 'No';\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "Yes\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy0wpi8em.php:25\nStack trace:\n#0 /tmp/tmpy0wpi8em.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpy0wpi8em.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $l_len = count($l);\n    $s_len = count($s);\n    if ($s_len > $l_len) {\n        return false;\n    }\n    for ($i = 0; $i < $l_len; $i++) {\n        if ($l[$i] == $s[0]) {\n            $found = true;\n            for ($j = 1; $j < $s_len; $j++) {\n                if ($l[$i+$j] != $s[$j]) {\n                    $found = false;\n                    break;\n                }\n            }\n            if ($found) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4];\n$s2 = [2, 3, 5];\n$s3 = [2, 3, 4, 5];\n$s4 = [2, 3, 4, 5, 6, 7, 8, 9];\n\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s2) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s3) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s4) ? 'true' : 'false';\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\nfalse\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $len = count($s);\n    $i = 0;\n    foreach ($l as $e) {\n        if ($e == $s[$i]) {\n            $i++;\n        } else {\n            $i = 0;\n        }\n        if ($i == $len) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(2, 3, 4);\n$s2 = array(2, 4, 6);\n\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s2) ? 'true' : 'false';\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [2, 3, 4];\n$s1 = [2, 3, 4, 5];\n$s2 = [2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s3 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$s4 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n$s5 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n$s6 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n$s7 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n$s8 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n$s9 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17];\n$s10 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\n$s11 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmpbxiuvjl9.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        $s = array_slice($s, 1);\n    }\n    return is_sublist(array_slice($l, 1), $s);\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s1 = [1, 2, 3, 4, 5, 6, 7, 8];\n$s2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$s4 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n$s5 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n$s6 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n$s7 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n$s8 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n$s9 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17];\n$s10 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\n$s11 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19];\n$s12 = [1\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmp5h9uzk1s.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == count($s);\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(3, 4, 5);\n\nif (is_sublist($l, $s)) {\n    echo \"Yes, it is a sublist\";\n} else {\n    echo \"No, it is not a sublist\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "Yes, it is a sublist",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4];\n\nvar_dump(is_sublist($l, $s));\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 5];\n\nvar_dump(is_sublist($l, $s));\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "bool(true)\nbool(true)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplukb1vsx.php:26\nStack trace:\n#0 /tmp/tmplukb1vsx.php(31): test()\n#1 {main}\n  thrown in /tmp/tmplukb1vsx.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(2, 3, 4);\n\nif (is_sublist($l, $s)) {\n    echo \"Yes, the list contains the sublist\";\n} else {\n    echo \"No, the list does not contain the sublist\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "Yes, the list contains the sublist\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv_6t6nst.php:36\nStack trace:\n#0 /tmp/tmpv_6t6nst.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpv_6t6nst.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $l = array_values($l);\n    $s = array_values($s);\n    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    if ($j == count($s)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$sublist = array(3, 4, 5);\n\nif (is_sublist($list, $sublist)) {\n    echo \"Sublist is present in the list\";\n} else {\n    echo \"Sublist is not present in the list\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "Sublist is present in the list",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n\t$i = 0;\n\t$j = 0;\n\twhile ($i < count($l) && $j < count($s)) {\n\t\tif ($l[$i] == $s[$j]) {\n\t\t\t$i++;\n\t\t\t$j++;\n\t\t} else {\n\t\t\t$i++;\n\t\t}\n\t}\n\tif ($j == count($s)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(2, 3, 4);\n$s1 = array(2, 3, 4, 5);\n$s2 = array(2, 3, 4, 5, 6);\n$s3 = array(2, 3, 4, 5, 6, 7);\n$s4 = array(2, 3, 4, 5, 6, 7, 8);\n$s5 = array(2, 3, 4, 5, 6, 7, 8, 9);\n$s6 = array(2, 3, 4, 5, 6, 7, 8, 9, 10);\n$s7 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\n$s8 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\n$s9 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13);\n$s10 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14);\n$s11 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n$s12 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);\n$s13 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17);\n$s14 = array\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmp3gaxuf9s.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(3, 4, 5);\n$s2 = array(3, 4, 6);\n\nif (is_sublist($l, $s)) {\n    echo \"Yes, the list contains the sublist\";\n} else {\n    echo \"No, the list does not contain the sublist\";\n}\n\necho \"<br>\";\n\nif (is_sublist($l, $s2)) {\n    echo \"Yes, the list contains the sublist\";\n} else {\n    echo \"No, the list does not contain the sublist\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "Yes, the list contains the sublist<br>No, the list does not contain the sublist",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $j == count($s);\n}\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(2, 3);\n\necho is_sublist($l, $s) ? \"true\" : \"false\";\necho \"\\n\";\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(2, 4);\n\necho is_sublist($l, $s) ? \"true\" : \"false\";\necho \"\\n\";\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(6);\n\necho is_sublist($l, $s) ? \"true\" : \"false\";\necho \"\\n\";\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(1, 2, 3, 4, 5);\n\necho is_sublist($l, $s) ? \"true\" : \"false\";\necho \"\\n\";\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(1, 2, 3, 4, 5, 6);\n\necho is_sublist($l, $s) ? \"true\" : \"false\";\necho \"\\n\";\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(5, 4, 3, 2, 1);\n\necho is_sublist($l, $s) ? \"true\" : \"false\";\necho \"\\n\";\n\n$l = array(1, 2, 3, 4, 5);\n$s = array();\n\necho is_sublist($l, $s) ? \"true\" : \"false\";\necho \"\\n\";\n\n$l = array();\n$s = array(1, 2, 3, 4, 5);\n\necho is_sublist($l, $s) ? \"true\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\" in /tmp/tmpv6ygqlda.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        $l = array_slice($l, 1);\n        $s = array_slice($s, 1);\n        return is_sublist($l, $s);\n    } else {\n        $l = array_slice($l, 1);\n        return is_sublist($l, $s);\n    }\n}\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(2, 3);\n$s2 = array(2, 4);\n\necho is_sublist($l, $s) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s2) ? \"true\\n\" : \"false\\n\";\n\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\ntrue\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppg93mcjq.php:32\nStack trace:\n#0 /tmp/tmppg93mcjq.php(37): test()\n#1 {main}\n  thrown in /tmp/tmppg93mcjq.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $len = count($s);\n    $i = 0;\n    foreach ($l as $item) {\n        if ($item === $s[$i]) {\n            $i++;\n        } else {\n            $i = 0;\n        }\n        if ($i === $len) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [2, 3, 4];\n$s2 = [2, 3, 4, 5];\n$s3 = [2, 3, 4, 5, 6];\n$s4 = [2, 3, 4, 5, 6, 7];\n$s5 = [2, 3, 4, 5, 6, 7, 8];\n$s6 = [2, 3, 4, 5, 6, 7, 8, 9];\n$s7 = [2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s8 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$s9 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n$s10 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n$s11 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n$s12 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n$s13 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n$s14 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17];\n$s15 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\n$s16 = [2, 3\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmp_gwu7g3z.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach ($s as $v) {\n        if (!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 3, 4, 5];\n$s = [2, 3];\n\nvar_dump(is_sublist($l, $s));\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "bool(true)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa9z9voa8.php:21\nStack trace:\n#0 /tmp/tmpa9z9voa8.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpa9z9voa8.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == count($s);\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4];\n$s1 = [2, 4, 3];\n$s2 = [2, 3, 4, 5];\n$s3 = [2, 3, 4, 5, 6, 7, 8, 9];\n$s4 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s5 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s6 = [2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s7 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$s8 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s1) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s2) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s3) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s4) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s5) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s6) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s7) ? 'true' : 'false';\necho \"\\n\";\necho is\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmplcv7yqi8.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        return is_sublist(array_slice($l, 1), array_slice($s, 1));\n    }\n    return is_sublist(array_slice($l, 1), $s);\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(2, 3, 4);\n$s2 = array(2, 3, 4, 5);\n$s3 = array(2, 3, 4, 5, 6);\n$s4 = array(2, 3, 4, 5, 6, 7);\n$s5 = array(2, 3, 4, 5, 6, 7, 8);\n$s6 = array(2, 3, 4, 5, 6, 7, 8, 9);\n$s7 = array(2, 3, 4, 5, 6, 7, 8, 9, 10);\n$s8 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\n$s9 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\n$s10 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13);\n$s11 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14);\n$s12 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n$s13 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);\n$s14 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17);\n$s15 = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpud1aujqb.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        return is_sublist(array_slice($l, 1), array_slice($s, 1));\n    }\n    return is_sublist(array_slice($l, 1), $s);\n}\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(2, 3);\n$s2 = array(2, 4);\n$s3 = array(1, 2, 3, 4, 5);\n$s4 = array(1, 2, 3, 4, 5, 6);\n\necho is_sublist($l, $s) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s2) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s3) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s4) ? \"true\\n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "true\ntrue\ntrue\nfalse\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1glnrags.php:31\nStack trace:\n#0 /tmp/tmp1glnrags.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp1glnrags.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4];\n\nvar_dump(is_sublist($l, $s));\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123268,
      "stdout": "bool(true)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3snjgj_9.php:21\nStack trace:\n#0 /tmp/tmp3snjgj_9.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp3snjgj_9.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == $m;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [3, 4, 5];\n$s1 = [3, 4, 5, 6, 7];\n$s2 = [3, 4, 5, 6, 7, 8, 9];\n$s3 = [3, 4, 5, 6, 7, 8, 9, 10];\n\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s1) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s2) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s3) ? 'true' : 'false';\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123268,
      "stdout": "true\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    // if the sublist is longer than the list, it can't be a sublist\n    if (count($s) > count($l)) {\n        return false;\n    }\n\n    // if the sublist is empty, it's a sublist\n    if (empty($s)) {\n        return true;\n    }\n\n    // if the first element of the sublist is not in the list, it can't be a sublist\n    if (!in_array($s[0], $l)) {\n        return false;\n    }\n\n    // if the first element of the sublist is in the list,\n    // check if the rest of the sublist is a sublist of the list after the first element\n    $index = array_search($s[0], $l);\n    return is_sublist(array_slice($l, $index + 1), array_slice($s, 1));\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [3, 4, 5];\n\necho is_sublist($l, $s) ? \"true\" : \"false\";\necho \"\\n\";\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [3, 4, 5, 6, 7];\n\necho is_sublist($l, $s) ? \"true\" : \"false\";\necho \"\\n\";\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [3, 4, 5, 6, 7, 11];\n\necho is_sublist($l, $s) ? \"true\" : \"false\";\necho \"\\n\";\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [];\n\necho is_sublist($l, $s) ? \"true\" : \"false\";\necho \"\\n\";\n\n$l = [];\n$s = [1, 2, 3];\n\necho is_sublist($l, $s) ? \"true\" : \"false\";\necho \"\\n\";\n\n$l = [1,\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123268,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp18fi0nrx.php on line 56\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $sublist = array_slice($l, 0, count($s));\n    return $sublist == $s;\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(2, 3, 4);\n\nif (is_sublist($l, $s)) {\n    echo \"Yes, it is a sublist\";\n} else {\n    echo \"No, it is not a sublist\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123267,
      "stdout": "No, it is not a sublist\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2k4bt8_4.php:22\nStack trace:\n#0 /tmp/tmp2k4bt8_4.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp2k4bt8_4.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $len = count($s);\n    $i = 0;\n    foreach ($l as $item) {\n        if ($item == $s[$i]) {\n            $i++;\n        } else {\n            $i = 0;\n        }\n        if ($i == $len) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [2, 3, 4];\nvar_dump(is_sublist($l, $s));\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123268,
      "stdout": "bool(true)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(2, 3, 4, 5);\n\nif (is_sublist($l, $s)) {\n    echo \"Yes, it is a sublist.\";\n} else {\n    echo \"No, it is not a sublist.\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123268,
      "stdout": "Yes, it is a sublist.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        return is_sublist(array_slice($l, 1), array_slice($s, 1));\n    }\n    return is_sublist(array_slice($l, 1), $s);\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(2, 3, 4);\n$s2 = array(2, 3, 4, 5);\n$s3 = array(2, 3, 4, 5, 6, 7);\n$s4 = array(2, 3, 4, 5, 6, 7, 8, 9);\n$s5 = array(2, 3, 4, 5, 6, 7, 8, 9, 10);\n$s6 = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s7 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n\necho is_sublist($l, $s) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s2) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s3) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s4) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s5) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s6) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s7) ? \"true\\n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123268,
      "stdout": "true\ntrue\ntrue\ntrue\nfalse\ntrue\nfalse\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ukj1hxf.php:37\nStack trace:\n#0 /tmp/tmp8ukj1hxf.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp8ukj1hxf.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach ($s as $v) {\n        if (!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 3, 4, 5];\n$s = [2, 3];\n$s2 = [2, 3, 4];\n$s3 = [2, 3, 4, 5];\n$s4 = [2, 3, 4, 5, 6];\n\necho is_sublist($l, $s) ? \"true\" : \"false\";\necho \"\\n\";\necho is_sublist($l, $s2) ? \"true\" : \"false\";\necho \"\\n\";\necho is_sublist($l, $s3) ? \"true\" : \"false\";\necho \"\\n\";\necho is_sublist($l, $s4) ? \"true\" : \"false\";\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123268,
      "stdout": "true\ntrue\ntrue\nfalse\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplktm41hx.php:31\nStack trace:\n#0 /tmp/tmplktm41hx.php(36): test()\n#1 {main}\n  thrown in /tmp/tmplktm41hx.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach ($s as $v) {\n        if (!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4];\n$s2 = [2, 3, 5];\n\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s2) ? 'true' : 'false';\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123268,
      "stdout": "true\ntrue\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2jesd5yq.php:25\nStack trace:\n#0 /tmp/tmp2jesd5yq.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp2jesd5yq.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$s = array(1, 2, 3);\n$s2 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$s3 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\n\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s2) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s3) ? 'true' : 'false';\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123268,
      "stdout": "true\ntrue\nfalse\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcqpxq481.php:28\nStack trace:\n#0 /tmp/tmpcqpxq481.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpcqpxq481.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach ($s as $v) {\n        if (!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4];\n\nif (is_sublist($l, $s)) {\n    echo \"It's a match!\\n\";\n} else {\n    echo \"It's gone.\\n\";\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 4, 3];\n\nif (is_sublist($l, $s)) {\n    echo \"It's a match!\\n\";\n} else {\n    echo \"It's gone.\\n\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123268,
      "stdout": "It's a match!\nIt's a match!\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdoi7l8r0.php:34\nStack trace:\n#0 /tmp/tmpdoi7l8r0.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdoi7l8r0.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == $m;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4];\necho is_sublist($l, $s) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 4, 6];\necho is_sublist($l, $s) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4, 5, 6];\necho is_sublist($l, $s) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4, 5, 6, 7, 8, 9];\necho is_sublist($l, $s) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4, 5, 6, 7, 8, 9, 10];\necho is_sublist($l, $s) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [1, 2, 3, 4, 5, 6, 7, 8, 9];\necho is_sublist($l, $s) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$l = [1, 2,\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123268,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmppgpdm7uq.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $len = count($s);\n    for ($i = 0; $i < count($l); $i++) {\n        if ($l[$i] == $s[0]) {\n            $found = true;\n            for ($j = 1; $j < $len; $j++) {\n                if ($l[$i + $j] != $s[$j]) {\n                    $found = false;\n                    break;\n                }\n            }\n            if ($found) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(2, 3, 4);\n$s2 = array(2, 4, 6);\n\necho is_sublist($l, $s) ? \"true\" : \"false\";\necho \"\\n\";\necho is_sublist($l, $s2) ? \"true\" : \"false\";\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123268,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach ($s as $k => $v) {\n        if (!isset($l[$k]) || $l[$k] != $v) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(3, 4);\n\nvar_dump(is_sublist($l, $s));\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(3, 4, 5);\n\nvar_dump(is_sublist($l, $s));\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(3, 4, 6);\n\nvar_dump(is_sublist($l, $s));\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(3, 4, 5, 6);\n\nvar_dump(is_sublist($l, $s));\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(1, 2, 3, 4, 5);\n\nvar_dump(is_sublist($l, $s));\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(1, 2, 3, 4, 5, 6);\n\nvar_dump(is_sublist($l, $s));\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(1, 2, 3, 4, 5, 6, 7);\n\nvar_dump(is_sublist($l, $s));\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(1, 2, 3, 4, 5, 6, 7, 8);\n\nvar_dump(is_sublist($l, $s));\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n\nvar_dump(is_sublist($l, $s));\n\n$l = array(1, 2,\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123268,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmprqv1wf6s.php on line 58\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(($p = array_search($v, $l)) === false) {\n            return false;\n        }\n        $l = array_slice($l, $p+1);\n    }\n    return true;\n}\n\n$l = array(1,2,3,4,5,6,7,8,9);\n$s = array(2,3,4);\n\nif(is_sublist($l, $s)) {\n    echo \"Sublist found\";\n} else {\n    echo \"Sublist not found\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123268,
      "stdout": "Sublist found\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_j6qsz_f.php:26\nStack trace:\n#0 /tmp/tmp_j6qsz_f.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp_j6qsz_f.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $len = count($s);\n    for ($i = 0; $i <= count($l) - $len; $i++) {\n        $sub = array_slice($l, $i, $len);\n        if ($sub == $s) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$s = array(3, 4, 5);\n\nif (is_sublist($l, $s)) {\n    echo \"Yes, it is a sublist\";\n} else {\n    echo \"No, it is not a sublist\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123268,
      "stdout": "Yes, it is a sublist",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4];\n$s2 = [2, 3, 4, 5];\n$s3 = [2, 3, 4, 5, 6, 7, 8, 9];\n$s4 = [2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s5 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$s6 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n$s7 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n$s8 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n$s9 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n$s10 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n$s11 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17];\n$s12 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\n$s13 = [2, 3, 4, 5, 6, 7\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123268,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmpr4g2ewan.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        $l = array_slice($l, 1);\n        $s = array_slice($s, 1);\n        return is_sublist($l, $s);\n    }\n    $l = array_slice($l, 1);\n    return is_sublist($l, $s);\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [2, 3, 4];\n$s2 = [2, 4];\n$s3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s4 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\necho is_sublist($l, $s) ? 'true' : 'false';\necho PHP_EOL;\necho is_sublist($l, $s2) ? 'true' : 'false';\necho PHP_EOL;\necho is_sublist($l, $s3) ? 'true' : 'false';\necho PHP_EOL;\necho is_sublist($l, $s4) ? 'true' : 'false';\necho PHP_EOL;\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123268,
      "stdout": "true\ntrue\ntrue\nfalse\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpziwtd_vh.php:38\nStack trace:\n#0 /tmp/tmpziwtd_vh.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpziwtd_vh.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(($p = array_search($v, $l)) === false) {\n            return false;\n        }\n        $l = array_slice($l, $p+1);\n    }\n    return true;\n}\n\n$l = array(1,2,3,4,5,6,7,8,9);\n$s = array(2,3,4);\n\necho is_sublist($l, $s) ? 'true' : 'false';\n\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123268,
      "stdout": "true\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp50p06th5.php:23\nStack trace:\n#0 /tmp/tmp50p06th5.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp50p06th5.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $l_len = count($l);\n    $s_len = count($s);\n    if ($l_len < $s_len) {\n        return false;\n    }\n    for ($i = 0; $i < $l_len; $i++) {\n        if ($l[$i] == $s[0]) {\n            $match = true;\n            for ($j = 1; $j < $s_len; $j++) {\n                if ($l[$i + $j] != $s[$j]) {\n                    $match = false;\n                    break;\n                }\n            }\n            if ($match) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [3, 4, 5];\n$s2 = [3, 4, 6];\n\necho is_sublist($l, $s) ? \"true\" : \"false\";\necho \"\\n\";\necho is_sublist($l, $s2) ? \"true\" : \"false\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123268,
      "stdout": "true\nfalse",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        $s2 = array_slice($s, 1);\n        return is_sublist(array_slice($l, 1), $s2);\n    } else {\n        return is_sublist(array_slice($l, 1), $s);\n    }\n}\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(3, 4);\n$s2 = array(3, 4, 5);\n$s3 = array(3, 4, 6);\n$s4 = array(3, 4, 5, 6);\n$s5 = array(3, 4, 5, 6, 7);\n$s6 = array();\n$s7 = array(1, 2, 3, 4, 5);\n$s8 = array(1, 2, 3, 4, 5, 6);\n\necho is_sublist($l, $s) . \"\\n\";\necho is_sublist($l, $s2) . \"\\n\";\necho is_sublist($l, $s3) . \"\\n\";\necho is_sublist($l, $s4) . \"\\n\";\necho is_sublist($l, $s5) . \"\\n\";\necho is_sublist($l, $s6) . \"\\n\";\necho is_sublist($l, $s7) . \"\\n\";\necho is_sublist($l, $s8) . \"\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123268,
      "stdout": "1\n1\n\n\n\n1\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpopnkjrhk.php:41\nStack trace:\n#0 /tmp/tmpopnkjrhk.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpopnkjrhk.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($s)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$s = array(3, 4, 5);\n\nif (is_sublist($l, $s)) {\n    echo \"Yes, it is a sublist\";\n} else {\n    echo \"No, it is not a sublist\";\n}\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123268,
      "stdout": "Yes, it is a sublist\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk5ndz1b0.php:34\nStack trace:\n#0 /tmp/tmpk5ndz1b0.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpk5ndz1b0.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach ($s as $v) {\n        if (!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [3, 4, 5];\n$s2 = [3, 4, 6];\n\necho is_sublist($l, $s) ? 'true' : 'false';\necho \"\\n\";\necho is_sublist($l, $s2) ? 'true' : 'false';\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123268,
      "stdout": "true\ntrue\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa5opgz45.php:25\nStack trace:\n#0 /tmp/tmpa5opgz45.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpa5opgz45.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach ($s as $k => $v) {\n        if (!isset($l[$k]) || $l[$k] != $v) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$list = array(\n    array('a', 'b', 'c'),\n    array('d', 'e', 'f'),\n    array('g', 'h', 'i'),\n);\n\n$sublist = array(\n    array('d', 'e', 'f'),\n    array('g', 'h', 'i'),\n);\n\nif (is_sublist($list, $sublist)) {\n    echo 'Yes';\n} else {\n    echo 'No';\n}\n\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123268,
      "stdout": "No\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp66na29tp.php:35\nStack trace:\n#0 /tmp/tmp66na29tp.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp66na29tp.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [2, 3, 4];\n$s1 = [2, 3, 5];\n$s2 = [2, 3, 4, 5];\n$s3 = [2, 3, 4, 5, 6];\n$s4 = [2, 3, 4, 5, 6, 7];\n$s5 = [2, 3, 4, 5, 6, 7, 8];\n$s6 = [2, 3, 4, 5, 6, 7, 8, 9];\n$s7 = [2, 3, 4, 5, 6, 7, 8, 9, 10];\n\necho is_sublist($l, $s) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s1) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s2) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s3) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s4) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s5) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s6) ? \"true\\n\" : \"false\\n\";\necho is_sublist($l, $s7) ? \"true\\n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123268,
      "stdout": "true\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\nfalse\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgjjwhga5.php:46\nStack trace:\n#0 /tmp/tmpgjjwhga5.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpgjjwhga5.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$s = [3, 4, 5, 6];\n\necho is_sublist($l, $s);\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123268,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist($l, $s) {\n    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(2, 3, 4);\n\necho is_sublist($l, $s) ? 'true' : 'false';\n\nfunction candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123268,
      "stdout": "true\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf4eevyng.php:22\nStack trace:\n#0 /tmp/tmpf4eevyng.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpf4eevyng.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
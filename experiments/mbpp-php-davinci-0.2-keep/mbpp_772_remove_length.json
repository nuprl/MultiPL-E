{
  "name": "mbpp_772_remove_length",
  "language": "php",
  "prompt": "<?php\n// Write a function to remove all the words with k length in the given string.\nfunction remove_length($test_str, $K) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_772_remove_length.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return remove_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"The person is most value tet\", 3) !== \"person is most value\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"If you told me about this ok\", 4) !== \"If you me about ok\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Forces of darkeness is come into the play\", 4) !== \"Forces of darkeness is the\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $arr = explode(\" \", $test_str);\n    $arr_len = count($arr);\n    $new_arr = array();\n    for ($i = 0; $i < $arr_len; $i++) {\n        if (strlen($arr[$i]) != $K) {\n            array_push($new_arr, $arr[$i]);\n        }\n    }\n    $new_str = implode(\" \", $new_arr);\n    return $new_str;\n}\n\n$test_str = \"geeks for geeks\";\n$K = 4;\necho remove_length($test_str, $K);",
    "    $arr = explode(\" \", $test_str);\n    $result = \"\";\n    foreach ($arr as $word) {\n        if (strlen($word) != $K) {\n            $result .= $word . \" \";\n        }\n    }\n    return $result;\n}\n\necho remove_length(\"The quick brown fox jumps over the lazy dog\", 5);",
    "    $arr = explode(\" \", $test_str);\n    $arr1 = array();\n    foreach ($arr as $word) {\n        if (strlen($word) != $K) {\n            $arr1[] = $word;\n        }\n    }\n    return implode(\" \", $arr1);\n}\n\necho remove_length(\"The quick brown fox jumps over the lazy dog\", 5);",
    "    $test_arr = explode(\" \", $test_str);\n    $result = \"\";\n    foreach ($test_arr as $word) {\n        if (strlen($word) != $K) {\n            $result .= $word . \" \";\n        }\n    }\n    return $result;\n}\n",
    "    $arr = explode(\" \", $test_str);\n    $arr_len = count($arr);\n    $new_arr = array();\n    for ($i = 0; $i < $arr_len; $i++) {\n        if (strlen($arr[$i]) != $K) {\n            $new_arr[] = $arr[$i];\n        }\n    }\n    $new_str = implode(\" \", $new_arr);\n    return $new_str;\n}\n\necho remove_length(\"The quick brown fox jumps over the lazy dog\", 5);",
    "    $arr = explode(\" \", $test_str);\n    $str = \"\";\n    for ($i = 0; $i < sizeof($arr); $i++) {\n        if (strlen($arr[$i]) != $K) {\n            $str = $str . $arr[$i] . \" \";\n        }\n    }\n    return $str;\n}\n\necho remove_length(\"The quick brown fox jumps over the lazy dog\", 5);",
    "    $arr = explode(\" \", $test_str);\n    $arr_len = count($arr);\n    for ($i = 0; $i < $arr_len; $i++) {\n        if (strlen($arr[$i]) == $K) {\n            unset($arr[$i]);\n        }\n    }\n    $test_str = implode(\" \", $arr);\n    return $test_str;\n}\n$test_str = \"geeks for geeks\";\n$K = 4;\necho remove_length($test_str, $K);",
    "    $arr = explode(\" \", $test_str);\n    $arr1 = array();\n    foreach ($arr as $word) {\n        if (strlen($word) != $K) {\n            $arr1[] = $word;\n        }\n    }\n    return implode(\" \", $arr1);\n}\necho remove_length(\"The quick brown fox jumps over the lazy dog\", 5);",
    "    $arr = explode(\" \", $test_str);\n    $result = array();\n    foreach ($arr as $word) {\n        if (strlen($word) != $K) {\n            array_push($result, $word);\n        }\n    }\n    return implode(\" \", $result);\n}\n\necho remove_length(\"The quick brown fox jumps over the lazy dog\", 5);",
    "    $arr = explode(\" \", $test_str);\n    $arr_len = count($arr);\n    $new_arr = array();\n    for ($i = 0; $i < $arr_len; $i++) {\n        if (strlen($arr[$i]) != $K) {\n            array_push($new_arr, $arr[$i]);\n        }\n    }\n    $new_str = implode(\" \", $new_arr);\n    return $new_str;\n}\necho remove_length(\"The quick brown fox jumps over the lazy dog\", 5);",
    "    $arr = explode(\" \", $test_str);\n    $arr1 = array();\n    foreach ($arr as $word) {\n        if (strlen($word) != $K) {\n            $arr1[] = $word;\n        }\n    }\n    return implode(\" \", $arr1);\n}\n\necho remove_length(\"The quick brown fox jumps over the lazy dog\", 5);",
    "    $arr = explode(\" \", $test_str);\n    $result = array();\n    foreach ($arr as $word) {\n        if (strlen($word) != $K) {\n            $result[] = $word;\n        }\n    }\n    return implode(\" \", $result);\n}\n\necho remove_length(\"The quick brown fox jumps over the lazy dog\", 5);",
    "    $test_arr = explode(\" \", $test_str);\n    $result_arr = array();\n    foreach ($test_arr as $word) {\n        if (strlen($word) != $K) {\n            $result_arr[] = $word;\n        }\n    }\n    return implode(\" \", $result_arr);\n}\necho remove_length(\"The quick brown fox jumps over the lazy dog\", 5);\necho \"\\n\";\necho remove_length(\"The quick brown fox jumps over the lazy dog\", 4);\necho \"\\n\";\necho remove_length(\"The quick brown fox jumps over the lazy dog\", 3);\necho \"\\n\";\necho remove_length(\"The quick brown fox jumps over the lazy dog\", 2);\necho \"\\n\";",
    "    $arr = explode(\" \", $test_str);\n    $result = array();\n    foreach ($arr as $word) {\n        if (strlen($word) != $K) {\n            array_push($result, $word);\n        }\n    }\n    return implode(\" \", $result);\n}\n\necho remove_length(\"The quick brown fox jumps over the lazy dog\", 5);",
    "    $arr = explode(\" \", $test_str);\n    $arr1 = array();\n    foreach ($arr as $word) {\n        if (strlen($word) != $K) {\n            $arr1[] = $word;\n        }\n    }\n    $str = implode(\" \", $arr1);\n    return $str;\n}\necho remove_length(\"The quick brown fox jumps over the lazy dog\", 5);",
    "    $arr = explode(\" \", $test_str);\n    $arr1 = array();\n    foreach ($arr as $key => $value) {\n        if (strlen($value) != $K) {\n            array_push($arr1, $value);\n        }\n    }\n    $str = implode(\" \", $arr1);\n    return $str;\n}\n\n$test_str = \"geeks for geeks\";\n$K = 4;\necho remove_length($test_str, $K);",
    "    $arr = explode(\" \", $test_str);\n    $arr1 = array();\n    foreach ($arr as $word) {\n        if (strlen($word) != $K) {\n            array_push($arr1, $word);\n        }\n    }\n    $str = implode(\" \", $arr1);\n    return $str;\n}\necho remove_length(\"The quick brown fox jumps over the lazy dog\", 5);",
    "    $arr = explode(\" \", $test_str);\n    $arr1 = array();\n    foreach ($arr as $word) {\n        if (strlen($word) != $K) {\n            $arr1[] = $word;\n        }\n    }\n    return implode(\" \", $arr1);\n}\n\necho remove_length(\"The quick brown fox jumps over the lazy dog\", 5);",
    "    $test_arr = explode(\" \", $test_str);\n    $result = array();\n    foreach ($test_arr as $word) {\n        if (strlen($word) != $K) {\n            array_push($result, $word);\n        }\n    }\n    return implode(\" \", $result);\n}\n\necho remove_length(\"The quick brown fox jumps over the lazy dog\", 5);",
    "    $arr = explode(\" \", $test_str);\n    $result = array();\n    foreach ($arr as $value) {\n        if (strlen($value) != $K) {\n            $result[] = $value;\n        }\n    }\n    return implode(\" \", $result);\n}\necho remove_length(\"The quick brown fox jumps over the lazy dog\", 5);"
  ]
}
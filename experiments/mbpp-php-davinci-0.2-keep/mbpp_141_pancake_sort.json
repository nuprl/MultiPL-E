{
  "name": "mbpp_141_pancake_sort",
  "language": "php",
  "prompt": "<?php\n// Write a function to sort a list of elements.\nfunction pancake_sort($nums) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_141_pancake_sort.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return pancake_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15, 79, 25, 38, 69)) !== array(15, 25, 38, 69, 79)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(98, 12, 54, 36, 85)) !== array(12, 36, 54, 85, 98)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(41, 42, 32, 12, 23)) !== array(12, 23, 32, 41, 42)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = find_max_index($nums, $i);\n        if ($max_index != $i - 1) {\n            flip($nums, $max_index);\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max_index = $i;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index !== $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max = $nums[0];\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $max) {\n                $max = $nums[$j];\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            if ($max_index != 0) {\n                $nums = flip($nums, $max_index);\n            }\n            $nums = flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i >= 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index == $i) {\n            continue;\n        }\n        if ($max_index != 0) {\n            flip($nums, $max_index);\n        }\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i - 1) {\n            flip($nums, $max_index);\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size - 1; $i > 0; $i--) {\n        $max_index = find_max_index($nums, $i);\n        if ($max_index != $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i > 0; $i--) {\n        $max_index = $i;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i >= 1; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i - 1);\n    }\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max = 0;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max]) {\n                $max = $j;\n            }\n        }\n        flip($nums, $max);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i - 1);\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max_index = array_search(max($nums), $nums);\n        if ($max_index == $i - 1) {\n            continue;\n        }\n        if ($max_index > 0) {\n            $nums = flip($nums, $max_index);\n        }\n        $nums = flip($nums, $i - 1);\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = find_max_index($nums, $i);\n        if ($max_index != $i - 1) {\n            flip($nums, $max_index);\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max = $i;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max]) {\n                $max = $j;\n            }\n        }\n        if ($max != $i) {\n            flip($nums, $max);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = $i - 1;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i - 1) {\n            flip($nums, $max_index);\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max = $i;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max]) {\n                $max = $j;\n            }\n        }\n        if ($max != $i) {\n            flip($nums, $max);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = array_search(max($nums), $nums);\n        if ($max_index == $i - 1) {\n            continue;\n        }\n        if ($max_index > 0) {\n            $nums = flip($nums, $max_index + 1);\n        }\n        $nums = flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = 0; $i < $n; $i++) {\n        $max_index = find_max_index($nums, $n - $i);\n        flip($nums, $max_index);\n        flip($nums, $n - $i - 1);\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i - 1) {\n            if ($max_index != 0) {\n                $nums = flip($nums, $max_index);\n            }\n            $nums = flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i - 1);\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i - 1) {\n            flip($nums, $max_index);\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i - 1) {\n            // Flip the max element to the first position.\n            flip($nums, $max_index);\n            // Flip the max element to the last position.\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = array_search(max($nums), $nums);\n        if ($max_index != $i - 1) {\n            if ($max_index != 0) {\n                flip($nums, $max_index);\n            }\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max_index = find_max_index($nums, $i);\n        if ($max_index != $i - 1) {\n            flip($nums, $max_index);\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i >= 1; $i--) {\n        $max = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max]) {\n                $max = $j;\n            }\n        }\n        if ($max != $i) {\n            flip($nums, $max);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i >= 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i >= 0; $i--) {\n        $max_index = $i;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max = $i;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max]) {\n                $max = $j;\n            }\n        }\n        if ($max != $i) {\n            flip($nums, $max);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max_index = $i;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i - 1);\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max = $nums[0];\n        $max_index = 0;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $max) {\n                $max = $nums[$j];\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            if ($max_index != 0) {\n                flip($nums, $max_index);\n            }\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i >= 0; $i--) {\n        $max_index = $i;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            pancake_flip($nums, $max_index);\n            pancake_flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max = 0;\n        for ($j = 1; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max]) {\n                $max = $j;\n            }\n        }\n        if ($max != $i - 1) {\n            if ($max != 0) {\n                flip($nums, $max);\n            }\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i >= 0; $i--) {\n        $max = $i;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max]) {\n                $max = $j;\n            }\n        }\n        flip($nums, $max);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = find_max_index($nums, $i);\n        if ($max_index != $i - 1) {\n            flip($nums, $max_index);\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max]) {\n                $max = $j;\n            }\n        }\n        if ($max != $i - 1) {\n            flip($nums, $max);\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i - 1) {\n            if ($max_index != 0) {\n                $nums = flip($nums, $max_index);\n            }\n            $nums = flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i - 1) {\n            flip($nums, $max_index);\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i - 1);\n    }\n    return $nums;\n}\n",
    "    $count = count($nums);\n    for ($i = $count - 1; $i > 0; $i--) {\n        $max = $nums[0];\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $max) {\n                $max = $nums[$j];\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            if ($max_index != 0) {\n                flip($nums, $max_index);\n            }\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i - 1) {\n            flip($nums, $max_index);\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = 0; $i < $n; $i++) {\n        $max = 0;\n        for ($j = 0; $j < $n - $i; $j++) {\n            if ($nums[$j] > $nums[$max]) {\n                $max = $j;\n            }\n        }\n        flip($nums, $max);\n        flip($nums, $n - $i - 1);\n    }\n    return $nums;\n}\n",
    "    $length = count($nums);\n    for ($i = $length - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i - 1) {\n            flip($nums, $max_index);\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max_index = find_max_index($nums, $i);\n        if ($max_index != $i - 1) {\n            flip($nums, $max_index);\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max = $nums[0];\n        $max_index = 0;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $max) {\n                $max = $nums[$j];\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            if ($max_index != 0) {\n                $nums = flip($nums, $max_index);\n            }\n            $nums = flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = 0; $i < $n; $i++) {\n        $max = max($nums);\n        $max_index = array_search($max, $nums);\n        array_splice($nums, 0, 0, array_splice($nums, $max_index, 1));\n        array_splice($nums, 0, 0, array_splice($nums, $n - $i - 1, 1));\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = find_max_index($nums, $i);\n        if ($max_index != $i - 1) {\n            flip($nums, $max_index);\n            flip($nums, $i - 1);\n        }\n    }\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i >= 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n}\n",
    "    $len = count($nums);\n    for ($i = $len; $i > 1; $i--) {\n        $max_pos = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_pos]) {\n                $max_pos = $j;\n            }\n        }\n        if ($max_pos != $i - 1) {\n            flip($nums, $max_pos);\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max_index = find_max_index($nums, $i);\n        if ($max_index != $i - 1) {\n            flip($nums, $max_index);\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i - 1) {\n            if ($max_index != 0) {\n                flip($nums, $max_index);\n            }\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len; $i > 1; $i--) {\n        $max = max($nums, 0, $i);\n        if ($max != $i - 1) {\n            $nums = flip($nums, $max);\n            $nums = flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i - 1) {\n            flip($nums, $max_index);\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max]) {\n                $max = $j;\n            }\n        }\n        if ($max != $i) {\n            flip($nums, $max);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i - 1) {\n            if ($max_index != 0) {\n                $nums = flip($nums, $max_index + 1);\n            }\n            $nums = flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = 0; $i < $len; $i++) {\n        $max = $i;\n        for ($j = $i + 1; $j < $len; $j++) {\n            if ($nums[$j] > $nums[$max]) {\n                $max = $j;\n            }\n        }\n        if ($max != $i) {\n            $nums = flip($nums, $max);\n            $nums = flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max_index = find_max_index($nums, $i);\n        if ($max_index != $i - 1) {\n            flip($nums, $max_index);\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i - 1) {\n            flip($nums, $max_index);\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = 0; $i < $len; $i++) {\n        $max = $nums[0];\n        $max_index = 0;\n        for ($j = 1; $j < $len - $i; $j++) {\n            if ($nums[$j] > $max) {\n                $max = $nums[$j];\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $len - $i - 1) {\n            if ($max_index != 0) {\n                $nums = flip($nums, $max_index);\n            }\n            $nums = flip($nums, $len - $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i >= 1; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = 0; $i < $n; $i++) {\n        $max = $i;\n        for ($j = $i + 1; $j < $n; $j++) {\n            if ($nums[$j] > $nums[$max]) {\n                $max = $j;\n            }\n        }\n        if ($max != $i) {\n            $nums = flip($nums, $max);\n            $nums = flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i - 1) {\n            if ($max_index != 0) {\n                flip($nums, $max_index);\n            }\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i - 1);\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max_index = find_max_index($nums, $i);\n        flip($nums, $max_index);\n        flip($nums, $i - 1);\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size - 1; $i > 0; $i--) {\n        $max = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max]) {\n                $max = $j;\n            }\n        }\n        flip($nums, $max);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $length = count($nums);\n    for ($i = $length - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i - 1) {\n            flip($nums, $max_index);\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $length = count($nums);\n    for ($i = $length - 1; $i >= 1; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max]) {\n                $max = $j;\n            }\n        }\n        if ($max != $i) {\n            flip($nums, $max);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max_index = find_max_index($nums, $i);\n        flip($nums, $max_index);\n        flip($nums, $i - 1);\n    }\n    return $nums;\n}\n",
    "    $length = count($nums);\n    for ($i = $length - 1; $i > 0; $i--) {\n        $max_index = find_max_index($nums, $i);\n        if ($max_index != $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i - 1) {\n            flip($nums, $max_index);\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i - 1) {\n            flip($nums, $max_index);\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max = $nums[0];\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $max) {\n                $max = $nums[$j];\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i > 0; $i--) {\n        $max_index = $i;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max = $i;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max]) {\n                $max = $j;\n            }\n        }\n        if ($max != $i) {\n            flip($nums, $max);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max]) {\n                $max = $j;\n            }\n        }\n        if ($max != $i) {\n            flip($nums, $max);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i - 1);\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = 0; $i < $n; $i++) {\n        $max = $nums[0];\n        $max_index = 0;\n        for ($j = 0; $j < $n - $i; $j++) {\n            if ($nums[$j] > $max) {\n                $max = $nums[$j];\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $n - $i - 1) {\n            flip($nums, $max_index);\n            flip($nums, $n - $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size - 1; $i >= 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i - 1) {\n            flip($nums, $max_index);\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i >= 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i - 1) {\n            if ($max_index != 0) {\n                $nums = flip($nums, $max_index);\n            }\n            $nums = flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = 0; $i < $len; $i++) {\n        $max = max($nums);\n        $max_index = array_search($max, $nums);\n        $nums = array_merge(array_slice($nums, 0, $max_index + 1), array_reverse(array_slice($nums, $max_index + 1)));\n        $nums = array_reverse($nums);\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = array_search(max($nums), $nums);\n        if ($max_index != $i - 1) {\n            if ($max_index != 0) {\n                $nums = flip($nums, $max_index);\n            }\n            $nums = flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i >= 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len; $i > 1; $i--) {\n        $max = 0;\n        for ($j = 1; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max]) {\n                $max = $j;\n            }\n        }\n        if ($max != $i - 1) {\n            flip($nums, $max);\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i > 0; $i--) {\n        $max_index = $i;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i >= 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i >= 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size - 1; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index == $i - 1) {\n            continue;\n        }\n        if ($max_index > 0) {\n            $nums = flip($nums, $max_index);\n        }\n        $nums = flip($nums, $i - 1);\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max = 0;\n        for ($j = 1; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max]) {\n                $max = $j;\n            }\n        }\n        if ($max != $i - 1) {\n            if ($max != 0) {\n                $nums = flip($nums, $max);\n            }\n            $nums = flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i - 1) {\n            if ($max_index != 0) {\n                flip($nums, $max_index);\n            }\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max_index = find_max($nums, $i);\n        if ($max_index != $i - 1) {\n            flip($nums, $max_index);\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max_index = $i;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max_index = $i - 1;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i - 1);\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max_index = find_max_index($nums, $i);\n        if ($max_index != $i - 1) {\n            flip($nums, $max_index);\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i - 1) {\n            if ($max_index != 0) {\n                flip($nums, $max_index);\n            }\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i >= 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index == $i - 1) {\n            continue;\n        }\n        if ($max_index > 0) {\n            $nums = flip($nums, $max_index);\n        }\n        $nums = flip($nums, $i - 1);\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i - 1);\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max = $i;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max]) {\n                $max = $j;\n            }\n        }\n        if ($max != $i) {\n            flip($nums, $max);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i >= 1; $i--) {\n        $max_index = find_max_index($nums, $i);\n        if ($max_index != $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i >= 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max = $i;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max]) {\n                $max = $j;\n            }\n        }\n        if ($max != $i) {\n            flip($nums, $max);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i - 1) {\n            if ($max_index != 0) {\n                $nums = flip($nums, $max_index);\n            }\n            $nums = flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i - 1) {\n            if ($max_index != 0) {\n                flip($nums, $max_index);\n            }\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i - 1);\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i - 1) {\n            if ($max_index != 0) {\n                flip($nums, $max_index);\n            }\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i - 1);\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = array_search(max($nums), $nums);\n        if ($max_index == $i - 1) {\n            continue;\n        }\n        if ($max_index > 0) {\n            flip($nums, $max_index);\n        }\n        flip($nums, $i - 1);\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i - 1);\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size - 1; $i > 0; $i--) {\n        $max_index = $i;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i - 1);\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i - 1);\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max = 0;\n        for ($j = 1; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max]) {\n                $max = $j;\n            }\n        }\n        if ($max != $i - 1) {\n            flip($nums, $max);\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max]) {\n                $max = $j;\n            }\n        }\n        if ($max != $i) {\n            flip($nums, $max);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index == $i - 1) {\n            continue;\n        }\n        if ($max_index != 0) {\n            $nums = flip($nums, $max_index);\n        }\n        $nums = flip($nums, $i - 1);\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max = $i;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max]) {\n                $max = $j;\n            }\n        }\n        if ($max != $i) {\n            $nums = flip($nums, $max);\n            $nums = flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max]) {\n                $max = $j;\n            }\n        }\n        flip($nums, $max);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i - 1);\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index == $i - 1) {\n            continue;\n        }\n        if ($max_index != 0) {\n            $nums = flip($nums, $max_index);\n        }\n        $nums = flip($nums, $i - 1);\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size - 1; $i > 0; $i--) {\n        $max = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max]) {\n                $max = $j;\n            }\n        }\n        flip($nums, $max);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = 0; $i < $len; $i++) {\n        $max = max($nums);\n        $max_index = array_search($max, $nums);\n        $nums = array_merge(array_slice($nums, 0, $max_index + 1), array_reverse(array_slice($nums, $max_index + 1)));\n        $nums = array_reverse($nums);\n    }\n    return $nums;\n}\n\n$nums = [5, 4, 3, 2, 1];\nprint_r(pancake_sort($nums));\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i >= 1; $i--) {\n        $max_idx = $i;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_idx]) {\n                $max_idx = $j;\n            }\n        }\n        if ($max_idx != $i) {\n            $nums = flip($nums, $max_idx);\n            $nums = flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size - 1; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max_index = find_max_index($nums, $i);\n        if ($max_index != $i - 1) {\n            flip($nums, $max_index);\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i >= 1; $i--) {\n        $max = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max]) {\n                $max = $j;\n            }\n        }\n        if ($max != $i) {\n            flip($nums, $max);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = array_search(max($nums), $nums);\n        if ($max_index == $i - 1) {\n            continue;\n        }\n        if ($max_index > 0) {\n            $nums = flip($nums, $max_index + 1);\n        }\n        $nums = flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $length = count($nums);\n    for ($i = $length - 1; $i > 0; $i--) {\n        $max = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max]) {\n                $max = $j;\n            }\n        }\n        flip($nums, $max);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $i = 0;\n    $j = count($nums) - 1;\n    while ($i < $j) {\n        $k = array_search(max($nums), $nums);\n        if ($k == $j) {\n            $i++;\n            $j--;\n        } else {\n            if ($k != 0) {\n                $nums = flip($nums, $k);\n            }\n            $nums = flip($nums, $j);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    $k = $n;\n    while ($k > 1) {\n        $max = 0;\n        for ($i = 1; $i < $k; $i++) {\n            if ($nums[$i] > $nums[$max]) {\n                $max = $i;\n            }\n        }\n        if ($max != $k - 1) {\n            if ($max != 0) {\n                $nums = flip($nums, $max);\n            }\n            $nums = flip($nums, $k - 1);\n        }\n        $k--;\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max_index = find_max_index($nums, $i);\n        if ($max_index != $i - 1) {\n            flip($nums, $max_index);\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i - 1);\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len; $i > 1; $i--) {\n        $max_index = $i - 1;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index == $i - 1) {\n            continue;\n        }\n        if ($max_index != 0) {\n            $nums = flip($nums, $max_index);\n        }\n        $nums = flip($nums, $i - 1);\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len; $i > 1; $i--) {\n        $max_index = array_search(max($nums), $nums);\n        if ($max_index != $i - 1) {\n            if ($max_index != 0) {\n                $nums = array_reverse($nums, 0, $max_index + 1);\n            }\n            $nums = array_reverse($nums, 0, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i > 0; $i--) {\n        $max_index = $i;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i - 1) {\n            if ($max_index != 0) {\n                $nums = flip($nums, $max_index);\n            }\n            $nums = flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = 0; $i < $len; $i++) {\n        $max = $nums[0];\n        $max_index = 0;\n        for ($j = 0; $j < $len - $i; $j++) {\n            if ($nums[$j] > $max) {\n                $max = $nums[$j];\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $len - $i - 1) {\n            if ($max_index != 0) {\n                flip($nums, $max_index);\n            }\n            flip($nums, $len - $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i - 1);\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max]) {\n                $max = $j;\n            }\n        }\n        if ($max != $i) {\n            flip($nums, $max);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i - 1);\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    $max_index = $len - 1;\n    while ($max_index > 0) {\n        $max_index = find_max_index($nums, $max_index);\n        flip($nums, $max_index);\n        flip($nums, $len - 1);\n        $len--;\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max = max($nums, 0, $i);\n        if ($max != $i - 1) {\n            $nums = flip($nums, $max);\n            $nums = flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max_index = find_max($nums, $i);\n        if ($max_index != $i - 1) {\n            flip($nums, $max_index);\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max_idx = $i;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_idx]) {\n                $max_idx = $j;\n            }\n        }\n        if ($max_idx != $i) {\n            flip($nums, $max_idx);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max = 0;\n        for ($j = 1; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max]) {\n                $max = $j;\n            }\n        }\n        flip($nums, $max);\n        flip($nums, $i - 1);\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size; $i > 1; $i--) {\n        $max_index = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i - 1);\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = find_max_index($nums, $i);\n        if ($max_index != $i - 1) {\n            flip($nums, $max_index);\n            flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $size = count($nums);\n    for ($i = $size - 1; $i > 0; $i--) {\n        $max_index = $i;\n        for ($j = 0; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = 0; $i < $n; $i++) {\n        $max = $nums[0];\n        $max_index = 0;\n        for ($j = 0; $j < $n - $i; $j++) {\n            if ($nums[$j] > $max) {\n                $max = $nums[$j];\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $n - $i - 1) {\n            if ($max_index != 0) {\n                $nums = flip($nums, $max_index);\n            }\n            $nums = flip($nums, $n - $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n; $i > 1; $i--) {\n        $max_index = array_search(max($nums), $nums);\n        if ($max_index != $i - 1) {\n            if ($max_index != 0) {\n                $nums = flip($nums, $max_index + 1);\n            }\n            $nums = flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len - 1; $i > 0; $i--) {\n        $max = $nums[0];\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $max) {\n                $max = $nums[$j];\n                $max_index = $j;\n            }\n        }\n        if ($max_index != $i) {\n            flip($nums, $max_index);\n            flip($nums, $i);\n        }\n    }\n    return $nums;\n}\n",
    "    $len = count($nums);\n    for ($i = $len; $i > 1; $i--) {\n        $max = 0;\n        for ($j = 1; $j < $i; $j++) {\n            if ($nums[$j] > $nums[$max]) {\n                $max = $j;\n            }\n        }\n        if ($max != $i - 1) {\n            if ($max != 0) {\n                $nums = flip($nums, $max);\n            }\n            $nums = flip($nums, $i - 1);\n        }\n    }\n    return $nums;\n}\n",
    "    $n = count($nums);\n    for ($i = $n - 1; $i > 0; $i--) {\n        $max_index = 0;\n        for ($j = 1; $j <= $i; $j++) {\n            if ($nums[$j] > $nums[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        flip($nums, $max_index);\n        flip($nums, $i);\n    }\n    return $nums;\n}\n"
  ]
}
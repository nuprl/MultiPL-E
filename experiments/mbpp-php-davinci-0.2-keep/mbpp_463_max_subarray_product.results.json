{
  "name": "mbpp_463_max_subarray_product",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_463_max_subarray_product.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $tmp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $tmp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n\t$max_ending_here = 1;\n\t$min_ending_here = 1;\n\t$max_so_far = 1;\n\n\tfor ($i=0; $i < sizeof($arr); $i++) { \n\t\tif ($arr[$i] > 0) {\n\t\t\t$max_ending_here = $max_ending_here * $arr[$i];\n\t\t\t$min_ending_here = min($min_ending_here * $arr[$i], 1);\n\t\t} else if ($arr[$i] == 0) {\n\t\t\t$max_ending_here = 1;\n\t\t\t$min_ending_here = 1;\n\t\t} else {\n\t\t\t$temp = $max_ending_here;\n\t\t\t$max_ending_here = max($min_ending_here * $arr[$i], 1);\n\t\t\t$min_ending_here = $temp * $arr[$i];\n\t\t}\n\n\t\tif ($max_so_far < $max_ending_here) {\n\t\t\t$max_so_far = $max_ending_here;\n\t\t}\n\t}\n\n\treturn $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = array(-2, -3, 0, -2, -40);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "80",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_product = $arr[0];\n    $min_product = $arr[0];\n    $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        $temp = $max_product;\n        $max_product = max($max_product * $arr[$i], $min_product * $arr[$i], $arr[$i]);\n        $min_product = min($temp * $arr[$i], $min_product * $arr[$i], $arr[$i]);\n        $max_so_far = max($max_so_far, $max_product);\n    }\n    return $max_so_far;\n}\n\n$arr = array(2, 3, -2, 4);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_so_far = 1;\n    $min_so_far = 1;\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $size = count($arr);\n    for ($i = 0; $i < $size; $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here *= $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_so_far = 1;\n    $min_so_far = 1;\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $size = count($arr);\n    for ($i = 0; $i < $size; $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [2, 3, -2, 4];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_so_far = $arr[0];\n    $min_so_far = $arr[0];\n    $max_product = $arr[0];\n    $size = sizeof($arr);\n    for ($i = 1; $i < $size; $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_so_far;\n            $max_so_far = max($min_so_far * $arr[$i], $arr[$i]);\n            $min_so_far = min($temp * $arr[$i], $arr[$i]);\n        } else {\n            $max_so_far = max($max_so_far * $arr[$i], $arr[$i]);\n            $min_so_far = min($min_so_far * $arr[$i], $arr[$i]);\n        }\n        $max_product = max($max_so_far, $max_product);\n    }\n    return $max_product;\n}\n\n$arr = [-2, -3, 0, -2, -40];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "80",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [-1, -3, -10, 0, 60];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123133,
      "stdout": "60",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_product = $arr[0];\n    $min_product = $arr[0];\n    $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_product;\n            $max_product = $min_product;\n            $min_product = $temp;\n        }\n        $max_product = max($arr[$i], $max_product * $arr[$i]);\n        $min_product = min($arr[$i], $min_product * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_product);\n    }\n    return $max_so_far;\n}\n\n$arr = [2, 3, -2, 4];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_so_far = 1;\n    $min_so_far = 1;\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $size = count($arr);\n    for ($i = 0; $i < $size; $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [-2, -3, 0, -2, -40];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "80",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = [-2, -3, 0, -2, -40];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "80",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max = $min = $result = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max;\n            $max = $min;\n            $min = $temp;\n        }\n        $max = max($arr[$i], $max * $arr[$i]);\n        $min = min($arr[$i], $min * $arr[$i]);\n        $result = max($result, $max);\n    }\n    return $result;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_product = $arr[0];\n    $min_product = $arr[0];\n    $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_product;\n            $max_product = $min_product;\n            $min_product = $temp;\n        }\n        $max_product = max($arr[$i], $max_product * $arr[$i]);\n        $min_product = min($arr[$i], $min_product * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_product);\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr) . PHP_EOL;\n$arr = array(-1, -3, -10, 0, 60);\necho max_subarray_product($arr) . PHP_EOL;\n$arr = array(-2, -3, 0, -2, -40);\necho max_subarray_product($arr) . PHP_EOL;\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123133,
      "stdout": "180\n60\n80\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n\t$max_so_far = 1;\n\t$min_so_far = 1;\n\t$max_ending_here = 1;\n\t$min_ending_here = 1;\n\t$size = count($arr);\n\tfor ($i = 0; $i < $size; $i++) {\n\t\tif ($arr[$i] > 0) {\n\t\t\t$max_ending_here = $max_ending_here * $arr[$i];\n\t\t\t$min_ending_here = min($min_ending_here * $arr[$i], 1);\n\t\t} else if ($arr[$i] == 0) {\n\t\t\t$max_ending_here = 1;\n\t\t\t$min_ending_here = 1;\n\t\t} else {\n\t\t\t$temp = $max_ending_here;\n\t\t\t$max_ending_here = max($min_ending_here * $arr[$i], 1);\n\t\t\t$min_ending_here = $temp * $arr[$i];\n\t\t}\n\t\tif ($max_so_far < $max_ending_here) {\n\t\t\t$max_so_far = $max_ending_here;\n\t\t}\n\t}\n\treturn $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123133,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here *= $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here *= $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\n\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123133,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_product = $arr[0];\n    $min_product = $arr[0];\n    $result = $arr[0];\n\n    for ($i = 1; $i < count($arr); $i++) {\n        $curr = $arr[$i];\n\n        $max_product = max($curr, $max_product * $curr, $min_product * $curr);\n        $min_product = min($curr, $max_product * $curr, $min_product * $curr);\n\n        $result = max($result, $max_product);\n    }\n\n    return $result;\n}\n\n$arr = [2, 3, -2, 4];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123133,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpemat59nh.php:27\nStack trace:\n#0 /tmp/tmpemat59nh.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpemat59nh.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [-2, -3, 0, -2, -40];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "80",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n  $max_ending_here = 1;\n  $min_ending_here = 1;\n  $max_so_far = 1;\n  for ($i = 0; $i < count($arr); $i++) {\n    if ($arr[$i] > 0) {\n      $max_ending_here *= $arr[$i];\n      $min_ending_here = min($min_ending_here * $arr[$i], 1);\n    } else if ($arr[$i] == 0) {\n      $max_ending_here = 1;\n      $min_ending_here = 1;\n    } else {\n      $temp = $max_ending_here;\n      $max_ending_here = max($min_ending_here * $arr[$i], 1);\n      $min_ending_here = $temp * $arr[$i];\n    }\n    if ($max_so_far < $max_ending_here) {\n      $max_so_far = $max_ending_here;\n    }\n  }\n  return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123133,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n\n    return $max_so_far;\n}\n\n$arr = [6, -3, -10, 0, 2];\necho max_subarray_product($arr);\n\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_so_far = $arr[0];\n    $min_so_far = $arr[0];\n    $max_product = $arr[0];\n    for ($i=1; $i < count($arr); $i++) { \n        $temp = $max_so_far;\n        $max_so_far = max($arr[$i], $max_so_far * $arr[$i], $min_so_far * $arr[$i]);\n        $min_so_far = min($arr[$i], $temp * $arr[$i], $min_so_far * $arr[$i]);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}\n\n$arr = [6, -3, -10, 0, 2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [6, -3, -10, 0, 2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here *= $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max = $min = $result = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max;\n            $max = $min;\n            $min = $temp;\n        }\n        $max = max($arr[$i], $max * $arr[$i]);\n        $min = min($arr[$i], $min * $arr[$i]);\n        $result = max($result, $max);\n    }\n    return $result;\n}\n\n$arr = [2, 3, -2, 4];\necho max_subarray_product($arr);\n\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123133,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_so_far = 1;\n    $min_so_far = 1;\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $size = count($arr);\n    for ($i = 0; $i < $size; $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_product = $arr[0];\n    $min_product = $arr[0];\n    $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        $temp = $max_product;\n        $max_product = max($arr[$i], $max_product * $arr[$i], $min_product * $arr[$i]);\n        $min_product = min($arr[$i], $temp * $arr[$i], $min_product * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_product);\n    }\n    return $max_so_far;\n}\n\n$arr = [2, 3, -2, 4];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_so_far = $arr[0];\n    $min_so_far = $arr[0];\n    $max_product = $arr[0];\n    for($i=1; $i<count($arr); $i++) {\n        $temp = $max_so_far;\n        $max_so_far = max($arr[$i], max($max_so_far*$arr[$i], $min_so_far*$arr[$i]));\n        $min_so_far = min($arr[$i], min($temp*$arr[$i], $min_so_far*$arr[$i]));\n        $max_product = max($max_so_far, $max_product);\n    }\n    return $max_product;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here *= $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_product = $arr[0];\n    $min_product = $arr[0];\n    $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_product;\n            $max_product = $min_product;\n            $min_product = $temp;\n        }\n        $max_product = max($arr[$i], $max_product * $arr[$i]);\n        $min_product = min($arr[$i], $min_product * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_product);\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_product = $arr[0];\n    $min_product = $arr[0];\n    $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        $temp = $max_product;\n        $max_product = max($max_product * $arr[$i], $min_product * $arr[$i], $arr[$i]);\n        $min_product = min($temp * $arr[$i], $min_product * $arr[$i], $arr[$i]);\n        $max_so_far = max($max_so_far, $max_product);\n    }\n    return $max_so_far;\n}\n\n$arr = [2, 3, -2, 4];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [-2, -3, 0, -2, -40];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "80",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n\t$max_ending_here = 1;\n\t$min_ending_here = 1;\n\t$max_so_far = 1;\n\tfor ($i = 0; $i < count($arr); $i++) {\n\t\tif ($arr[$i] > 0) {\n\t\t\t$max_ending_here = $max_ending_here * $arr[$i];\n\t\t\t$min_ending_here = min($min_ending_here * $arr[$i], 1);\n\t\t} else if ($arr[$i] == 0) {\n\t\t\t$max_ending_here = 1;\n\t\t\t$min_ending_here = 1;\n\t\t} else {\n\t\t\t$temp = $max_ending_here;\n\t\t\t$max_ending_here = max($min_ending_here * $arr[$i], 1);\n\t\t\t$min_ending_here = $temp * $arr[$i];\n\t\t}\n\t\tif ($max_so_far < $max_ending_here) {\n\t\t\t$max_so_far = $max_ending_here;\n\t\t}\n\t}\n\treturn $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [6, -3, -10, 0, 2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max = $min = $result = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max;\n            $max = $min;\n            $min = $temp;\n        }\n        $max = max($arr[$i], $max * $arr[$i]);\n        $min = min($arr[$i], $min * $arr[$i]);\n        $result = max($result, $max);\n    }\n    return $result;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [-2, -3, 0, -2, -40];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "80",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_product = $arr[0];\n    $min_product = $arr[0];\n    $result = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        $curr = $arr[$i];\n        $temp_max = max($curr, $max_product * $curr, $min_product * $curr);\n        $min_product = min($curr, $max_product * $curr, $min_product * $curr);\n        $max_product = $temp_max;\n        $result = max($result, $max_product);\n    }\n    return $result;\n}\n\n$arr = [2, 3, -2, 4];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_product = $arr[0];\n    $min_product = $arr[0];\n    $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        $temp = $max_product;\n        $max_product = max($arr[$i], $max_product * $arr[$i], $min_product * $arr[$i]);\n        $min_product = min($arr[$i], $temp * $arr[$i], $min_product * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_product);\n    }\n    return $max_so_far;\n}\n\n$arr = [6, -3, -10, 0, 2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [2, 3, -2, 4];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_so_far = 1;\n    $min_so_far = 1;\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $size = count($arr);\n    for($i = 0; $i < $size; $i++) {\n        if($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < sizeof($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123133,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(-1, -3, -10, 0, 60);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "60",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [2, 3, -2, 4];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < sizeof($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123133,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [6, -3, -10, 0, 2];\necho max_subarray_product($arr);\necho \"\\n\";\n$arr = [-1, -3, -10, 0, 60];\necho max_subarray_product($arr);\necho \"\\n\";\n$arr = [-2, -3, 0, -2, -40];\necho max_subarray_product($arr);\necho \"\\n\";\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "180\n60\n80\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(-1, -3, -10, 0, 60);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "60",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [2, 3, -2, 4];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here *= $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\necho \"\\n\";\n$arr = array(-1, -3, -10, 0, 60);\necho max_subarray_product($arr);\necho \"\\n\";\n$arr = array(-2, -3, 0, -2, -40);\necho max_subarray_product($arr);\necho \"\\n\";\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "180\n60\n80\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [6, -3, -10, 0, 2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < sizeof($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123133,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n  $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n  for ($i = 1; $i < count($arr); $i++) {\n    if ($arr[$i] < 0) {\n      $temp = $max_ending_here;\n      $max_ending_here = $min_ending_here;\n      $min_ending_here = $temp;\n    }\n    $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n    $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n    $max_so_far = max($max_so_far, $max_ending_here);\n  }\n  return $max_so_far;\n}\n\n$arr = [-2, -3, 0, -2, -40];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "80",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\necho \"\\n\";\n\n$arr = array(-1, -3, -10, 0, 60);\necho max_subarray_product($arr);\necho \"\\n\";\n\n$arr = array(-2, -3, 0, -2, -40);\necho max_subarray_product($arr);\necho \"\\n\";\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "180\n60\n80\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [6, -3, -10, 0, 2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [-2, -3, 0, -2, -40];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "80",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here *= $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n\n    return $max_so_far;\n}\n\n$arr = [6, -3, -10, 0, 2];\necho max_subarray_product($arr);\n\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_so_far = 1;\n    $min_so_far = 1;\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $size = count($arr);\n    for ($i = 0; $i < $size; $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_product = $arr[0];\n    $min_product = $arr[0];\n    $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        $temp = $max_product;\n        $max_product = max($max_product * $arr[$i], $min_product * $arr[$i], $arr[$i]);\n        $min_product = min($temp * $arr[$i], $min_product * $arr[$i], $arr[$i]);\n        $max_so_far = max($max_so_far, $max_product);\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [6, -3, -10, 0, 2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = array(-1, -3, -10, 0, 60);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "60",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n\t$max_ending_here = 1;\n\t$min_ending_here = 1;\n\t$max_so_far = 1;\n\tfor ($i = 0; $i < count($arr); $i++) {\n\t\tif ($arr[$i] > 0) {\n\t\t\t$max_ending_here = $max_ending_here * $arr[$i];\n\t\t\t$min_ending_here = min($min_ending_here * $arr[$i], 1);\n\t\t} else if ($arr[$i] == 0) {\n\t\t\t$max_ending_here = 1;\n\t\t\t$min_ending_here = 1;\n\t\t} else {\n\t\t\t$temp = $max_ending_here;\n\t\t\t$max_ending_here = max($min_ending_here * $arr[$i], 1);\n\t\t\t$min_ending_here = $temp * $arr[$i];\n\t\t}\n\t\tif ($max_so_far < $max_ending_here) {\n\t\t\t$max_so_far = $max_ending_here;\n\t\t}\n\t}\n\treturn $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max = $min = $result = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max;\n            $max = $min;\n            $min = $temp;\n        }\n        $max = max($arr[$i], $max * $arr[$i]);\n        $min = min($arr[$i], $min * $arr[$i]);\n        $result = max($result, $max);\n    }\n    return $result;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n\t$max_product = $arr[0];\n\t$min_product = $arr[0];\n\t$max_so_far = $arr[0];\n\tfor ($i = 1; $i < count($arr); $i++) {\n\t\t$temp = $max_product;\n\t\t$max_product = max($max_product * $arr[$i], $min_product * $arr[$i], $arr[$i]);\n\t\t$min_product = min($temp * $arr[$i], $min_product * $arr[$i], $arr[$i]);\n\t\t$max_so_far = max($max_so_far, $max_product);\n\t}\n\treturn $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max = $arr[0];\n    $min = $arr[0];\n    $result = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        $temp = $max;\n        $max = max($max * $arr[$i], $min * $arr[$i], $arr[$i]);\n        $min = min($temp * $arr[$i], $min * $arr[$i], $arr[$i]);\n        $result = max($max, $result);\n    }\n    return $result;\n}\n\n$arr = [2, 3, -2, 4];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [2, 3, -2, 4];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < sizeof($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123133,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [6, -3, -10, 0, 2];\necho max_subarray_product($arr);\necho \"\\n\";\n\n$arr = [-1, -3, -10, 0, 60];\necho max_subarray_product($arr);\necho \"\\n\";\n\n$arr = [-2, -3, 0, -2, -40];\necho max_subarray_product($arr);\necho \"\\n\";\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "180\n60\n80\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_product = $arr[0];\n    $min_product = $arr[0];\n    $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        $temp_max = $max_product;\n        $temp_min = $min_product;\n        $max_product = max($temp_max * $arr[$i], $temp_min * $arr[$i], $arr[$i]);\n        $min_product = min($temp_max * $arr[$i], $temp_min * $arr[$i], $arr[$i]);\n        $max_so_far = max($max_so_far, $max_product);\n    }\n    return $max_so_far;\n}\n\n$arr = [2, 3, -2, 4];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [6, -3, -10, 0, 2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here *= $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\n\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123133,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_so_far = 1;\n    $min_so_far = 1;\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $size = count($arr);\n    for ($i = 0; $i < $size; $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here *= $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [6, -3, -10, 0, 2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < sizeof($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [6, -3, -10, 0, 2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < sizeof($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123133,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_product = $arr[0];\n    $min_product = $arr[0];\n    $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_product;\n            $max_product = $min_product;\n            $min_product = $temp;\n        }\n        $max_product = max($arr[$i], $max_product * $arr[$i]);\n        $min_product = min($arr[$i], $min_product * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_product);\n    }\n    return $max_so_far;\n}\n\n$arr = [6, -3, -10, 0, 2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    for ($i=0; $i < count($arr); $i++) { \n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n\n    for ($i = 0; $i < sizeof($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_so_far = 1;\n    $min_so_far = 1;\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $size = count($arr);\n    for ($i = 0; $i < $size; $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = array(-1, -3, -10, 0, 60);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "60",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_so_far = 1;\n    $min_so_far = 1;\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $size = count($arr);\n    for ($i = 0; $i < $size; $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [6, -3, -10, 0, 2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n\n    for ($i = 0; $i < sizeof($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\n\n$arr = array(-1, -3, -10, 0, 60);\necho max_subarray_product($arr);\n\n$arr = array(-2, -3, 0, -2, -40);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "1806080",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < sizeof($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123133,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_product = $arr[0];\n    $min_product = $arr[0];\n    $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        $temp = $max_product;\n        $max_product = max($arr[$i], $max_product * $arr[$i], $min_product * $arr[$i]);\n        $min_product = min($arr[$i], $temp * $arr[$i], $min_product * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_product);\n    }\n    return $max_so_far;\n}\n\n$arr = [2, 3, -2, 4];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n  $max_product = $arr[0];\n  $min_product = $arr[0];\n  $max_so_far = $arr[0];\n  for ($i = 1; $i < count($arr); $i++) {\n    $temp = $max_product;\n    $max_product = max($arr[$i], $max_product * $arr[$i], $min_product * $arr[$i]);\n    $min_product = min($arr[$i], $temp * $arr[$i], $min_product * $arr[$i]);\n    $max_so_far = max($max_so_far, $max_product);\n  }\n  return $max_so_far;\n}\n\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(-1, -3, -10, 0, 60);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "60",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max = $min = $result = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max;\n            $max = $min;\n            $min = $temp;\n        }\n        $max = max($arr[$i], $max * $arr[$i]);\n        $min = min($arr[$i], $min * $arr[$i]);\n        $result = max($result, $max);\n    }\n    return $result;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_so_far = 1;\n    $min_so_far = 1;\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $size = count($arr);\n    for ($i = 0; $i < $size; $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [-1, -3, -10, 0, 60];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123133,
      "stdout": "60",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_so_far = 1;\n    $min_so_far = 1;\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $size = count($arr);\n    for ($i = 0; $i < $size; $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < sizeof($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(-2, -3, 0, -2, -40);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "80",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = [6, -3, -10, 0, 2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_product = $arr[0];\n    $min_product = $arr[0];\n    $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_product;\n            $max_product = $min_product;\n            $min_product = $temp;\n        }\n        $max_product = max($arr[$i], $max_product * $arr[$i]);\n        $min_product = min($arr[$i], $min_product * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_product);\n    }\n    return $max_so_far;\n}\n\n$arr = array(-2, -3, 0, -2, -40);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "80",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here *= $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $size = count($arr);\n    for ($i = 0; $i < $size; $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max = $min = $result = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $tmp = $max;\n            $max = $min;\n            $min = $tmp;\n        }\n        $max = max($arr[$i], $max * $arr[$i]);\n        $min = min($arr[$i], $min * $arr[$i]);\n        $result = max($result, $max);\n    }\n    return $result;\n}\n\n$arr = [2, 3, -2, 4];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < sizeof($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123133,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here)\n            $max_so_far = $max_ending_here;\n    }\n    if ($flag == 0 && $max_so_far == 1)\n        return 0;\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [6, -3, -10, 0, 2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_product = $arr[0];\n    $min_product = $arr[0];\n    $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        $temp = $max_product;\n        $max_product = max($arr[$i], $max_product * $arr[$i], $min_product * $arr[$i]);\n        $min_product = min($arr[$i], $temp * $arr[$i], $min_product * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_product);\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n            $flag = 1;\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($flag == 0 && $max_so_far == 1) {\n        return 0;\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [6, -3, -10, 0, 2];\necho max_subarray_product($arr);\n\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n  $max_product = $arr[0];\n  $min_product = $arr[0];\n  $max_so_far = $arr[0];\n\n  for ($i = 1; $i < count($arr); $i++) {\n    $temp = $max_product;\n    $max_product = max($arr[$i], $max_product * $arr[$i], $min_product * $arr[$i]);\n    $min_product = min($arr[$i], $temp * $arr[$i], $min_product * $arr[$i]);\n    $max_so_far = max($max_so_far, $max_product);\n  }\n\n  return $max_so_far;\n}\n\n$arr = [-1, -3, -10, 0, 60];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "60",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_product = $arr[0];\n    $min_product = $arr[0];\n    $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        $temp = $max_product;\n        $max_product = max($max_product * $arr[$i], $min_product * $arr[$i], $arr[$i]);\n        $min_product = min($temp * $arr[$i], $min_product * $arr[$i], $arr[$i]);\n        $max_so_far = max($max_so_far, $max_product);\n    }\n    return $max_so_far;\n}\n\n$arr = [2, 3, -2, 4];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [6, -3, -10, 0, 2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_product = $arr[0];\n    $min_product = $arr[0];\n    $max_so_far = $arr[0];\n\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_product;\n            $max_product = $min_product;\n            $min_product = $temp;\n        }\n\n        $max_product = max($arr[$i], $max_product * $arr[$i]);\n        $min_product = min($arr[$i], $min_product * $arr[$i]);\n\n        $max_so_far = max($max_so_far, $max_product);\n    }\n\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123134,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [6, -3, -10, 0, 2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123132,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_so_far = 1;\n    $min_so_far = 1;\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $size = count($arr);\n    for ($i = 0; $i < $size; $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $max_so_far = 1;\n    $size = count($arr);\n    for ($i = 0; $i < $size; $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_so_far = 1;\n    $min_so_far = 1;\n    $max_ending_here = 1;\n    $min_ending_here = 1;\n    $size = count($arr);\n    for ($i = 0; $i < $size; $i++) {\n        if ($arr[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr[$i];\n            $min_ending_here = min($min_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr[$i], 1);\n            $min_ending_here = $temp * $arr[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}\n\n$arr = array(6, -3, -10, 0, 2);\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "180",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum product subarray of the given array.\nfunction max_subarray_product($arr) {\n    $max_ending_here = $min_ending_here = $max_so_far = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max_ending_here;\n            $max_ending_here = $min_ending_here;\n            $min_ending_here = $temp;\n        }\n        $max_ending_here = max($arr[$i], $max_ending_here * $arr[$i]);\n        $min_ending_here = min($arr[$i], $min_ending_here * $arr[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_subarray_product($arr);\nfunction candidate(...$args) {\n    return max_subarray_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 0, 7, -8, -2)) !== 112) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, -3, -10, 0, 2)) !== 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -40, 0, -2, -3)) !== 80) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510250,
      "stdout": "112",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
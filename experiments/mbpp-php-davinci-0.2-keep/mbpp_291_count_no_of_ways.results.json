{
  "name": "mbpp_291_count_no_of_ways",
  "language": "php",
  "prompt": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_291_count_no_of_ways.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n  $same = 0;\n  $diff = k;\n  for ($i = 2; $i <= $n; $i++) {\n    $temp = $diff;\n    $diff = ($same + $diff) * ($k - 1);\n    $same = $temp;\n  }\n  return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmptedj5vej.php:5\nStack trace:\n#0 /tmp/tmptedj5vej.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmptedj5vej.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    if ($n == 2) {\n        return $k * $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 2; $i < $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\n$n = 3;\n$k = 2;\necho count_no_of_ways($n, $k);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 1) {\n        return $k;\n    }\n    if ($n == 2) {\n        return $k * $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $dp = array_fill(0, $n, 0);\n    $dp[0] = $k;\n    $dp[1] = $k * $k;\n    for ($i = 2; $i < $n; $i++) {\n        $dp[$i] = ($k - 1) * ($dp[$i - 1] + $dp[$i - 2]);\n    }\n    return $dp[$n - 1];\n}\n\n$n = 3;\n$k = 2;\necho count_no_of_ways($n, $k);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 1) {\n        return $k;\n    }\n    if ($n == 2) {\n        return $k * $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 3);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "24",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) return 0;\n    if ($n == 1) return $k;\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 2; $i < $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 1) {\n        return $k;\n    }\n    if ($n == 2) {\n        return $k * $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $dp = array_fill(0, $n, 0);\n    $dp[0] = $k;\n    $dp[1] = $k * $k;\n    for ($i = 2; $i < $n; $i++) {\n        $dp[$i] = ($k - 1) * ($dp[$i - 1] + $dp[$i - 2]);\n    }\n    return $dp[$n - 1];\n}\n\n$n = 3;\n$k = 2;\necho count_no_of_ways($n, $k);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n\tif ($n == 0 || $k == 0) {\n\t\treturn 0;\n\t}\n\tif ($n == 1) {\n\t\treturn $k;\n\t}\n\t$same = $k;\n\t$diff = $k * ($k - 1);\n\tfor ($i = 3; $i <= $n; $i++) {\n\t\t$prev_diff = $diff;\n\t\t$diff = ($same + $diff) * ($k - 1);\n\t\t$same = $prev_diff;\n\t}\n\treturn $same + $diff;\n}\n\necho count_no_of_ways(2, 4);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "16",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n  $same = 0;\n  $diff = k;\n  for ($i = 2; $i <= $n; $i++) {\n    $temp = $diff;\n    $diff = ($same + $diff) * ($k - 1);\n    $same = $temp;\n  }\n  return $same + $diff;\n}\n\necho count_no_of_ways(2, 4);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpx29t7jah.php:5\nStack trace:\n#0 /tmp/tmpx29t7jah.php(14): count_no_of_ways(2, 4)\n#1 {main}\n  thrown in /tmp/tmpx29t7jah.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    if ($n == 2) {\n        return $k * $k;\n    }\n    $diff = $k * ($k - 1);\n    $same = $k;\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = $diff * ($k - 1) + $same * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $diff + $same;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n\t$same = 0;\n\t$diff = k;\n\tfor ($i=1; $i < $n; $i++) { \n\t\t$prev_same = $same;\n\t\t$same = $diff;\n\t\t$diff = ($prev_same + $diff) * ($k-1);\n\t}\n\treturn $same + $diff;\n}\n\necho count_no_of_ways(2, 4);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpldwhku8l.php:5\nStack trace:\n#0 /tmp/tmpldwhku8l.php(14): count_no_of_ways(2, 4)\n#1 {main}\n  thrown in /tmp/tmpldwhku8l.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\n$n = 3;\n$k = 2;\necho count_no_of_ways($n, $k);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122947,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 1) {\n        return $k;\n    }\n    if ($n == 2) {\n        return $k * $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $dp = array();\n    $dp[0] = $k;\n    $dp[1] = $k * $k;\n    for ($i = 2; $i < $n; $i++) {\n        $dp[$i] = ($k - 1) * ($dp[$i - 1] + $dp[$i - 2]);\n    }\n    return $dp[$n - 1];\n}\n\n$n = 3;\n$k = 2;\necho count_no_of_ways($n, $k);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122947,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n\n    for ($i = 2; $i < $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpjjcgn799.php:5\nStack trace:\n#0 /tmp/tmpjjcgn799.php(16): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpjjcgn799.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n\t$same = 0;\n\t$diff = k;\n\tfor ($i=2; $i <= $n; $i++) { \n\t\t$temp = $diff;\n\t\t$diff = ($same + $diff) * ($k-1);\n\t\t$same = $temp;\n\t}\n\treturn $same + $diff;\n}\n\n$n = 3;\n$k = 2;\necho count_no_of_ways($n, $k);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpsqa5f61p.php:5\nStack trace:\n#0 /tmp/tmpsqa5f61p.php(16): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpsqa5f61p.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpn_4gm4na.php:5\nStack trace:\n#0 /tmp/tmpn_4gm4na.php(15): count_no_of_ways(2, 4)\n#1 /tmp/tmpn_4gm4na.php(19): candidate(2, 4)\n#2 /tmp/tmpn_4gm4na.php(24): test()\n#3 {main}\n  thrown in /tmp/tmpn_4gm4na.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 1) {\n        return $k;\n    }\n    if ($n == 2) {\n        return $k * $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n  $total = $k;\n  $same = 0;\n  $diff = $k;\n  for ($i = 2; $i <= $n; $i++) {\n    $same = $diff;\n    $diff = $total * ($k - 1);\n    $total = $same + $diff;\n  }\n  return $total;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\necho \"\\n\";\necho count_no_of_ways(2, 4);\necho \"\\n\";\necho count_no_of_ways(4, 5);\necho \"\\n\";\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpl69bol29.php:5\nStack trace:\n#0 /tmp/tmpl69bol29.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpl69bol29.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    if ($n == 2) {\n        return $k * $k;\n    }\n    $diff = $k * ($k - 1);\n    $same = $k;\n    for ($i = 3; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($diff + $same) * ($k - 1);\n        $same = $temp;\n    }\n    return $diff + $same;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 1) {\n        return $k;\n    }\n    if ($n == 2) {\n        return $k * $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 1) {\n        return $k;\n    }\n    if ($n == 2) {\n        return $k * $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\n$n = 2;\n$k = 4;\necho count_no_of_ways($n, $k);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122947,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmp4yfahi2n.php:5\nStack trace:\n#0 /tmp/tmp4yfahi2n.php(16): count_no_of_ways(2, 4)\n#1 {main}\n  thrown in /tmp/tmp4yfahi2n.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n\t$same = 0;\n\t$diff = k;\n\tfor ($i = 2; $i <= $n; $i++) {\n\t\t$temp = $diff;\n\t\t$diff = ($same + $diff) * ($k - 1);\n\t\t$same = $temp;\n\t}\n\treturn $same + $diff;\n}\n\necho count_no_of_ways(2, 3);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmp9vl9iwu3.php:5\nStack trace:\n#0 /tmp/tmp9vl9iwu3.php(14): count_no_of_ways(2, 3)\n#1 {main}\n  thrown in /tmp/tmp9vl9iwu3.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n  $dp = array();\n  $dp[0] = 0;\n  $dp[1] = $k;\n  $dp[2] = $k * $k;\n  for ($i = 3; $i <= $n; $i++) {\n    $dp[$i] = ($k - 1) * ($dp[$i - 1] + $dp[$i - 2]);\n  }\n  return $dp[$n];\n}\n\necho count_no_of_ways(3, 2) . PHP_EOL;\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) return 0;\n    if ($n == 1) return $k;\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(4, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "10",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 1) {\n        return $k;\n    }\n    if ($n == 2) {\n        return $k * $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\necho count_no_of_ways(1, 2) . \"\\n\";\necho count_no_of_ways(2, 2) . \"\\n\";\necho count_no_of_ways(3, 2) . \"\\n\";\necho count_no_of_ways(4, 2) . \"\\n\";\necho count_no_of_ways(5, 2) . \"\\n\";\necho count_no_of_ways(6, 2) . \"\\n\";\necho count_no_of_ways(7, 2) . \"\\n\";\necho count_no_of_ways(8, 2) . \"\\n\";\necho count_no_of_ways(9, 2) . \"\\n\";\necho count_no_of_ways(10, 2) . \"\\n\";\necho count_no_of_ways(11, 2) . \"\\n\";\necho count_no_of_ways(12, 2) . \"\\n\";\necho count_no_of_ways(13, 2) . \"\\n\";\necho count_no_of_ways(14, 2) . \"\\n\";\necho count_no_of_ways(15, 2) . \"\\n\";\necho count_no_of_ways(16, 2) . \"\\n\";\necho count_no_of_ways(17, 2) . \"\\n\";\necho count_no_of_ways(18, 2) . \"\\n\";\necho count_no_of_ways(19, 2) . \"\\n\";\necho count_no_of_ways(20, 2) . \"\\n\";\necho count_no_of_ways(21, 2) . \"\\n\";\necho count_no_of_ways(22, 2\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp5l6tqtq6.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n  if ($n == 0) {\n    return 0;\n  }\n  if ($n == 1) {\n    return $k;\n  }\n  $same = $k;\n  $diff = $k * ($k - 1);\n  for ($i = 3; $i <= $n; $i++) {\n    $prev_diff = $diff;\n    $diff = ($same + $diff) * ($k - 1);\n    $same = $prev_diff;\n  }\n  return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 1; $i < $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122947,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpyff19dqc.php:5\nStack trace:\n#0 /tmp/tmpyff19dqc.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpyff19dqc.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $dp = array();\n    $dp[0] = $k;\n    $dp[1] = $k * $k;\n    for ($i = 2; $i < $n; $i++) {\n        $dp[$i] = ($k - 1) * ($dp[$i - 1] + $dp[$i - 2]);\n    }\n    return $dp[$n - 1];\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(2, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpx3w2d7p0.php:5\nStack trace:\n#0 /tmp/tmpx3w2d7p0.php(14): count_no_of_ways(2, 2)\n#1 {main}\n  thrown in /tmp/tmpx3w2d7p0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 1) {\n        return $k;\n    }\n    if ($n == 2) {\n        return $k * $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 3);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "24",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i < $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(4, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122947,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmp0xiujo2r.php:5\nStack trace:\n#0 /tmp/tmp0xiujo2r.php(14): count_no_of_ways(4, 2)\n#1 {main}\n  thrown in /tmp/tmp0xiujo2r.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2) . \"\\n\";\necho count_no_of_ways(2, 4) . \"\\n\";\necho count_no_of_ways(6, 3) . \"\\n\";\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpb6ljb8ek.php:5\nStack trace:\n#0 /tmp/tmpb6ljb8ek.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpb6ljb8ek.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 1) return $k;\n    if ($n == 2) return $k * $k;\n\n    $same = $k;\n    $diff = $k * ($k - 1);\n\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n\t$same = 0;\n\t$diff = k;\n\tfor ($i = 2; $i <= $n; $i++) {\n\t\t$temp = $diff;\n\t\t$diff = ($same + $diff) * ($k - 1);\n\t\t$same = $temp;\n\t}\n\treturn $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpcvw2q6d7.php:5\nStack trace:\n#0 /tmp/tmpcvw2q6d7.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpcvw2q6d7.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmp_za5bs8r.php:5\nStack trace:\n#0 /tmp/tmp_za5bs8r.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmp_za5bs8r.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $dp = array_fill(0, $n, 0);\n    $dp[0] = $k;\n    $dp[1] = $k * $k;\n    for ($i = 2; $i < $n; $i++) {\n        $dp[$i] = ($k - 1) * ($dp[$i - 1] + $dp[$i - 2]);\n    }\n    return $dp[$n - 1];\n}\n\n$n = 3;\n$k = 2;\necho count_no_of_ways($n, $k);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if($n == 1) {\n        return $k;\n    }\n    if($n == 2) {\n        return $k * $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for($i = 3; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(2, 4);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmphgecyajs.php:5\nStack trace:\n#0 /tmp/tmphgecyajs.php(14): count_no_of_ways(2, 4)\n#1 {main}\n  thrown in /tmp/tmphgecyajs.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = $diff = $total = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i > 1) {\n            $total = ($same + $diff) * ($k - 1);\n            $same = $diff;\n            $diff = $total;\n        } else if ($i == 1) {\n            $same = $k;\n            $diff = $k * ($k - 1);\n        } else {\n            $same = $diff = $k;\n        }\n    }\n    return $same + $diff;\n}\n\n$n = 2;\n$k = 4;\necho count_no_of_ways($n, $k);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "16",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n  $same = 0;\n  $diff = k;\n\n  for ($i=2; $i <= $n; $i++) {\n    $prev_same = $same;\n    $prev_diff = $diff;\n\n    $same = $prev_diff;\n    $diff = ($prev_same + $prev_diff) * ($k - 1);\n  }\n\n  return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpon_9xuix.php:5\nStack trace:\n#0 /tmp/tmpon_9xuix.php(18): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpon_9xuix.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $dp = array_fill(0, $n, 0);\n    $dp[0] = $k;\n    $dp[1] = $k * $k;\n    for ($i = 2; $i < $n; $i++) {\n        $dp[$i] = ($k - 1) * ($dp[$i - 1] + $dp[$i - 2]);\n    }\n    return $dp[$n - 1];\n}\n\n$n = 3;\n$k = 2;\necho count_no_of_ways($n, $k);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpn_4gm4na.php:5\nStack trace:\n#0 /tmp/tmpn_4gm4na.php(15): count_no_of_ways(2, 4)\n#1 /tmp/tmpn_4gm4na.php(19): candidate(2, 4)\n#2 /tmp/tmpn_4gm4na.php(24): test()\n#3 {main}\n  thrown in /tmp/tmpn_4gm4na.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    if ($n == 2) {\n        return $k * $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122947,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n  $same = $diff = $k;\n  for ($i = 2; $i <= $n; $i++) {\n    $temp = $diff;\n    $diff = ($same + $diff) * ($k - 1);\n    $same = $temp;\n  }\n  return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr0p82ft9.php:19\nStack trace:\n#0 /tmp/tmpr0p82ft9.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpr0p82ft9.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n\t$dp = array();\n\t$dp[0] = $k;\n\t$dp[1] = $k * $k;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\t$dp[$i] = ($k - 1) * ($dp[$i - 1] + $dp[$i - 2]);\n\t}\n\treturn $dp[$n - 1];\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n\tif ($n == 1) {\n\t\treturn $k;\n\t}\n\tif ($n == 2) {\n\t\treturn $k * $k;\n\t}\n\t$same = $k;\n\t$diff = $k * ($k - 1);\n\tfor ($i = 3; $i <= $n; $i++) {\n\t\t$temp = $diff;\n\t\t$diff = ($same + $diff) * ($k - 1);\n\t\t$same = $temp;\n\t}\n\treturn $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i=2; $i <= $n; $i++) { \n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k-1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpcsmzirf1.php:5\nStack trace:\n#0 /tmp/tmpcsmzirf1.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpcsmzirf1.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 1) {\n        return $k;\n    }\n    if ($n == 2) {\n        return $k * $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n\t$same = 0;\n\t$diff = k;\n\tfor ($i=2; $i <= $n; $i++) { \n\t\t$temp = $diff;\n\t\t$diff = ($same + $diff) * ($k-1);\n\t\t$same = $temp;\n\t}\n\treturn $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpni08tpj_.php:5\nStack trace:\n#0 /tmp/tmpni08tpj_.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpni08tpj_.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n\tif($n == 0) {\n\t\treturn 0;\n\t}\n\tif($n == 1) {\n\t\treturn $k;\n\t}\n\tif($n == 2) {\n\t\treturn $k*$k;\n\t}\n\t$diff = $k*($k-1);\n\t$same = $k;\n\tfor($i=3; $i<=$n; $i++) {\n\t\t$temp = $diff;\n\t\t$diff = ($diff + $same)*($k-1);\n\t\t$same = $temp;\n\t}\n\treturn $diff + $same;\n}\n\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n\t$same = 0;\n\t$diff = k;\n\tfor ($i = 2; $i <= $n; $i++) {\n\t\t$temp = $diff;\n\t\t$diff = ($same + $diff) * ($k - 1);\n\t\t$same = $temp;\n\t}\n\treturn $same + $diff;\n}\n\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpy91b2wcs.php:5\nStack trace:\n#0 /tmp/tmpy91b2wcs.php(15): count_no_of_ways(2, 4)\n#1 /tmp/tmpy91b2wcs.php(19): candidate(2, 4)\n#2 /tmp/tmpy91b2wcs.php(24): test()\n#3 {main}\n  thrown in /tmp/tmpy91b2wcs.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n\t$same = 0;\n\t$diff = k;\n\tfor ($i = 2; $i <= $n; $i++) {\n\t\t$temp = $diff;\n\t\t$diff = ($same + $diff) * ($k - 1);\n\t\t$same = $temp;\n\t}\n\treturn $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpcvw2q6d7.php:5\nStack trace:\n#0 /tmp/tmpcvw2q6d7.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpcvw2q6d7.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 1; $i < $n; $i++) {\n        $prev_same = $same;\n        $same = $diff;\n        $diff = ($prev_same + $diff) * ($k - 1);\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(2, 3);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmp3ysfxqnn.php:5\nStack trace:\n#0 /tmp/tmp3ysfxqnn.php(14): count_no_of_ways(2, 3)\n#1 {main}\n  thrown in /tmp/tmp3ysfxqnn.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(4, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122947,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmphvf3c9lm.php:5\nStack trace:\n#0 /tmp/tmphvf3c9lm.php(14): count_no_of_ways(4, 2)\n#1 {main}\n  thrown in /tmp/tmphvf3c9lm.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0)\n        return 0;\n    if ($n == 1)\n        return $k;\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 2; $i < $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(2, 4);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmphgecyajs.php:5\nStack trace:\n#0 /tmp/tmphgecyajs.php(14): count_no_of_ways(2, 4)\n#1 {main}\n  thrown in /tmp/tmphgecyajs.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $diff = $k * ($k - 1);\n    $same = $k;\n    for ($i = 2; $i < $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($diff + $same) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $diff + $same;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n\n    for ($i = 2; $i <= $n; $i++) {\n        $prev_same = $same;\n        $prev_diff = $diff;\n\n        $same = $prev_diff;\n        $diff = ($prev_same + $prev_diff) * ($k - 1);\n    }\n\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpca6g4sju.php:5\nStack trace:\n#0 /tmp/tmpca6g4sju.php(18): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpca6g4sju.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\n$n = 3;\n$k = 2;\necho count_no_of_ways($n, $k);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122947,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\n$n = 3;\n$k = 2;\necho count_no_of_ways($n, $k);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n\t$same = 0;\n\t$diff = k;\n\tfor($i=2; $i<=$n; $i++) {\n\t\t$temp = $diff;\n\t\t$diff = ($same + $diff) * ($k-1);\n\t\t$same = $temp;\n\t}\n\treturn $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmp6txms_ur.php:5\nStack trace:\n#0 /tmp/tmp6txms_ur.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmp6txms_ur.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(2, 4);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmphgecyajs.php:5\nStack trace:\n#0 /tmp/tmphgecyajs.php(14): count_no_of_ways(2, 4)\n#1 {main}\n  thrown in /tmp/tmphgecyajs.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(2, 3);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmprdhybqa6.php:5\nStack trace:\n#0 /tmp/tmprdhybqa6.php(14): count_no_of_ways(2, 3)\n#1 {main}\n  thrown in /tmp/tmprdhybqa6.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n\tif ($n == 1) {\n\t\treturn $k;\n\t}\n\tif ($n == 2) {\n\t\treturn $k * $k;\n\t}\n\t$same = $k;\n\t$diff = $k * ($k - 1);\n\tfor ($i = 3; $i <= $n; $i++) {\n\t\t$temp = $diff;\n\t\t$diff = ($same + $diff) * ($k - 1);\n\t\t$same = $temp;\n\t}\n\treturn $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n\tif ($n == 0) {\n\t\treturn 0;\n\t}\n\tif ($n == 1) {\n\t\treturn $k;\n\t}\n\tif ($n == 2) {\n\t\treturn $k * $k;\n\t}\n\t$same = $k;\n\t$diff = $k * ($k - 1);\n\tfor ($i = 3; $i <= $n; $i++) {\n\t\t$prev_diff = $diff;\n\t\t$diff = ($same + $diff) * ($k - 1);\n\t\t$same = $prev_diff;\n\t}\n\treturn $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122947,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\n$n = 3;\n$k = 2;\necho count_no_of_ways($n, $k);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122947,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0 || $k == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    if ($n == 2) {\n        return $k * $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n\t$same = 0;\n\t$diff = k;\n\tfor ($i=2; $i <= $n; $i++) { \n\t\t$temp = $diff;\n\t\t$diff = ($same + $diff) * ($k-1);\n\t\t$same = $temp;\n\t}\n\treturn $same + $diff;\n}\n\necho count_no_of_ways(2, 4);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpemn1n3qr.php:5\nStack trace:\n#0 /tmp/tmpemn1n3qr.php(14): count_no_of_ways(2, 4)\n#1 {main}\n  thrown in /tmp/tmpemn1n3qr.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    if ($n == 2) {\n        return $k * $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\n$n = 3;\n$k = 2;\n$result = count_no_of_ways($n, $k);\necho \"Total number of ways: \" . $result . \"\\n\";\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "Total number of ways: 6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpm7798dlr.php:5\nStack trace:\n#0 /tmp/tmpm7798dlr.php(16): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpm7798dlr.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n\t$dp = array();\n\t$dp[0] = $k;\n\t$dp[1] = $k * $k;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\t$dp[$i] = ($k - 1) * ($dp[$i - 1] + $dp[$i - 2]);\n\t}\n\treturn $dp[$n - 1];\n}\n\n$n = 5;\n$k = 2;\necho count_no_of_ways($n, $k);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "16",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 1) {\n        return $k;\n    }\n    if ($n == 2) {\n        return $k * $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0 || $k == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $diff_color_count = $k * ($k - 1);\n    $same_color_count = $k;\n    for ($i = 2; $i < $n; $i++) {\n        $temp = $diff_color_count;\n        $diff_color_count = ($diff_color_count + $same_color_count) * ($k - 1);\n        $same_color_count = $temp;\n    }\n    return $diff_color_count + $same_color_count;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 1) {\n        return $k;\n    }\n    if ($n == 2) {\n        return $k * $k;\n    }\n    $diff = $k * ($k - 1);\n    $same = $k;\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = $diff * ($k - 1) + $same * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $diff + $same;\n}\n\necho count_no_of_ways(4, 2);\n\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "10",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(4, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122947,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmphvf3c9lm.php:5\nStack trace:\n#0 /tmp/tmphvf3c9lm.php(14): count_no_of_ways(4, 2)\n#1 {main}\n  thrown in /tmp/tmphvf3c9lm.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 1) {\n        return $k;\n    }\n    if ($n == 2) {\n        return $k * $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i=1; $i < $n; $i++) { \n        $prev_diff = $diff;\n        $diff = $same * ($k - 1) + $diff * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpo2q4grvt.php:5\nStack trace:\n#0 /tmp/tmpo2q4grvt.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpo2q4grvt.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(2, 4);\necho \"\\n\";\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122947,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpsj4f0ged.php:5\nStack trace:\n#0 /tmp/tmpsj4f0ged.php(14): count_no_of_ways(2, 4)\n#1 {main}\n  thrown in /tmp/tmpsj4f0ged.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 1) {\n        return $k;\n    }\n    if ($n == 2) {\n        return $k * $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    if ($n == 2) {\n        return $k * $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122947,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for($i=2; $i<=$n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k-1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmp03aqb2vd.php:5\nStack trace:\n#0 /tmp/tmp03aqb2vd.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmp03aqb2vd.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 1) {\n        return $k;\n    }\n    if ($n == 2) {\n        return $k * $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $dp = array();\n    $dp[0] = 0;\n    $dp[1] = $k;\n    $dp[2] = $k * $k;\n    for ($i = 3; $i <= $n; $i++) {\n        $dp[$i] = ($k - 1) * ($dp[$i - 1] + $dp[$i - 2]);\n    }\n    return $dp[$n];\n}\n\n$n = 3;\n$k = 2;\necho count_no_of_ways($n, $k);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122947,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 1; $i < n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * (k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpr0hawxhe.php:5\nStack trace:\n#0 /tmp/tmpr0hawxhe.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpr0hawxhe.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\necho \"\\n\";\necho count_no_of_ways(2, 4);\necho \"\\n\";\necho count_no_of_ways(4, 2);\necho \"\\n\";\necho count_no_of_ways(5, 2);\necho \"\\n\";\necho count_no_of_ways(6, 2);\necho \"\\n\";\necho count_no_of_ways(7, 2);\necho \"\\n\";\necho count_no_of_ways(8, 2);\necho \"\\n\";\necho count_no_of_ways(9, 2);\necho \"\\n\";\necho count_no_of_ways(10, 2);\necho \"\\n\";\necho count_no_of_ways(11, 2);\necho \"\\n\";\necho count_no_of_ways(12, 2);\necho \"\\n\";\necho count_no_of_ways(13, 2);\necho \"\\n\";\necho count_no_of_ways(14, 2);\necho \"\\n\";\necho count_no_of_ways(15, 2);\necho \"\\n\";\necho count_no_of_ways(16, 2);\necho \"\\n\";\necho count_no_of_ways(17, 2);\necho \"\\n\";\necho count_no_of_ways(18, 2);\necho \"\\n\";\necho count_no_of_ways(19, 2);\necho \"\\n\";\necho count_no_of_ways(20, 2);\necho \"\\n\";\necho count_no_of_ways(21, 2);\necho \"\\n\";\necho count_no_of_ways(22, 2);\necho \"\\n\";\necho count_no_of_ways(23, 2);\necho \"\\n\";\necho count_no_of_ways(24, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpjr24z1ge.php:5\nStack trace:\n#0 /tmp/tmpjr24z1ge.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpjr24z1ge.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = $diff = $total = $k;\n    for ($i = 2; $i <= $n; $i++) {\n        $same = $diff;\n        $diff = $total * ($k - 1);\n        $total = $same + $diff;\n    }\n    return $total;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n\t$same = 0;\n\t$diff = k;\n\tfor ($i=2; $i <= $n; $i++) { \n\t\t$temp = $diff;\n\t\t$diff = ($same + $diff) * ($k-1);\n\t\t$same = $temp;\n\t}\n\treturn $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpni08tpj_.php:5\nStack trace:\n#0 /tmp/tmpni08tpj_.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpni08tpj_.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $dp = array();\n    $dp[1] = $k;\n    $dp[2] = $k * $k;\n    for ($i = 3; $i <= $n; $i++) {\n        $dp[$i] = ($k - 1) * ($dp[$i - 1] + $dp[$i - 2]);\n    }\n    return $dp[$n];\n}\n\n$n = 3;\n$k = 2;\necho count_no_of_ways($n, $k);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    if ($n == 2) {\n        return $k * $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122947,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 1) {\n        return $k;\n    }\n    if ($n == 2) {\n        return $k * $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $dp = array_fill(0, $n, 0);\n    $dp[0] = $k;\n    $dp[1] = $k * $k;\n    for ($i = 2; $i < $n; $i++) {\n        $dp[$i] = ($k - 1) * ($dp[$i - 1] + $dp[$i - 2]);\n    }\n    return $dp[$n - 1];\n}\n\n$n = 3;\n$k = 2;\necho count_no_of_ways($n, $k);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = $same * ($k - 1) + $diff * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\n$n = 2;\n$k = 4;\necho count_no_of_ways($n, $k);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpa72a6x_b.php:5\nStack trace:\n#0 /tmp/tmpa72a6x_b.php(16): count_no_of_ways(2, 4)\n#1 {main}\n  thrown in /tmp/tmpa72a6x_b.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\n$n = 3;\n$k = 2;\necho count_no_of_ways($n, $k);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122947,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmps8khkk4z.php:5\nStack trace:\n#0 /tmp/tmps8khkk4z.php(16): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmps8khkk4z.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n\tif ($n == 0) {\n\t\treturn 0;\n\t}\n\tif ($n == 1) {\n\t\treturn $k;\n\t}\n\tif ($n == 2) {\n\t\treturn $k * $k;\n\t}\n\t$same = $k;\n\t$diff = $k * ($k - 1);\n\tfor ($i = 3; $i <= $n; $i++) {\n\t\t$temp = $diff;\n\t\t$diff = ($same + $diff) * ($k - 1);\n\t\t$same = $temp;\n\t}\n\treturn $same + $diff;\n}\n\necho count_no_of_ways(3, 2) . PHP_EOL;\necho count_no_of_ways(4, 2) . PHP_EOL;\necho count_no_of_ways(5, 2) . PHP_EOL;\necho count_no_of_ways(6, 2) . PHP_EOL;\necho count_no_of_ways(7, 2) . PHP_EOL;\necho count_no_of_ways(8, 2) . PHP_EOL;\necho count_no_of_ways(9, 2) . PHP_EOL;\necho count_no_of_ways(10, 2) . PHP_EOL;\necho count_no_of_ways(11, 2) . PHP_EOL;\necho count_no_of_ways(12, 2) . PHP_EOL;\necho count_no_of_ways(13, 2) . PHP_EOL;\necho count_no_of_ways(14, 2) . PHP_EOL;\necho count_no_of_ways(15, 2) . PHP_EOL;\necho count_no_of_ways(16, 2) . PHP_EOL;\necho count_no_of_ways(17, 2) . PHP_EOL;\necho count_no_of_ways(18, 2) . PHP_EOL;\necho count_no_of_ways(19, 2) . PHP_EOL;\necho count_no_of_ways(20, 2) . PHP_EOL;\necho count\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmpaq0p0rvw.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $total = $k;\n    $same = 0;\n    $diff = $k;\n    for ($i = 2; $i <= $n; $i++) {\n        $same = $diff;\n        $diff = $total * ($k - 1);\n        $total = $same + $diff;\n    }\n    return $total;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122947,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $dp = array_fill(0, $n, 0);\n    $dp[0] = $k;\n    $dp[1] = $k * $k;\n    for ($i = 2; $i < $n; $i++) {\n        $dp[$i] = ($k - 1) * ($dp[$i - 1] + $dp[$i - 2]);\n    }\n    return $dp[$n - 1];\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(2, 4);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmphgecyajs.php:5\nStack trace:\n#0 /tmp/tmphgecyajs.php(14): count_no_of_ways(2, 4)\n#1 {main}\n  thrown in /tmp/tmphgecyajs.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n  $dp = array();\n  $dp[0] = 0;\n  $dp[1] = $k;\n  $dp[2] = $k * $k;\n  for ($i = 3; $i <= $n; $i++) {\n    $dp[$i] = ($k - 1) * ($dp[$i - 1] + $dp[$i - 2]);\n  }\n  return $dp[$n];\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n\t$same = 0;\n\t$diff = k;\n\tfor ($i = 1; $i < $n; $i++) {\n\t\t$temp = $diff;\n\t\t$diff = ($same + $diff) * ($k - 1);\n\t\t$same = $temp;\n\t}\n\treturn $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpo3hj63co.php:5\nStack trace:\n#0 /tmp/tmpo3hj63co.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpo3hj63co.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(4, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122947,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmphvf3c9lm.php:5\nStack trace:\n#0 /tmp/tmphvf3c9lm.php(14): count_no_of_ways(4, 2)\n#1 {main}\n  thrown in /tmp/tmphvf3c9lm.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\n$n = 2;\n$k = 4;\necho count_no_of_ways($n, $k);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122947,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmp4yfahi2n.php:5\nStack trace:\n#0 /tmp/tmp4yfahi2n.php(16): count_no_of_ways(2, 4)\n#1 {main}\n  thrown in /tmp/tmp4yfahi2n.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(4, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122947,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmphvf3c9lm.php:5\nStack trace:\n#0 /tmp/tmphvf3c9lm.php(14): count_no_of_ways(4, 2)\n#1 {main}\n  thrown in /tmp/tmphvf3c9lm.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n  $same = 0;\n  $diff = k;\n  for ($i=1; $i < $n; $i++) {\n    $prev_same = $same;\n    $same = $diff;\n    $diff = ($prev_same + $diff) * ($k-1);\n  }\n  return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmp2ccmpap8.php:5\nStack trace:\n#0 /tmp/tmp2ccmpap8.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmp2ccmpap8.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(2, 4);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmphgecyajs.php:5\nStack trace:\n#0 /tmp/tmphgecyajs.php(14): count_no_of_ways(2, 4)\n#1 {main}\n  thrown in /tmp/tmphgecyajs.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(2, 4);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmphgecyajs.php:5\nStack trace:\n#0 /tmp/tmphgecyajs.php(14): count_no_of_ways(2, 4)\n#1 {main}\n  thrown in /tmp/tmphgecyajs.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n\t$same = 0;\n\t$diff = k;\n\tfor ($i = 2; $i <= $n; $i++) {\n\t\t$temp = $diff;\n\t\t$diff = ($same + $diff) * ($k - 1);\n\t\t$same = $temp;\n\t}\n\treturn $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpcvw2q6d7.php:5\nStack trace:\n#0 /tmp/tmpcvw2q6d7.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpcvw2q6d7.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n\t$same = 0;\n\t$diff = k;\n\tfor ($i = 2; $i <= $n; $i++) {\n\t\t$temp = $diff;\n\t\t$diff = ($same + $diff) * ($k - 1);\n\t\t$same = $temp;\n\t}\n\treturn $same + $diff;\n}\n\necho count_no_of_ways(2, 4);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmplldp_hf9.php:5\nStack trace:\n#0 /tmp/tmplldp_hf9.php(14): count_no_of_ways(2, 4)\n#1 {main}\n  thrown in /tmp/tmplldp_hf9.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    if ($n == 2) {\n        return $k * $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122947,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\n$n = 4;\n$k = 2;\necho count_no_of_ways($n, $k);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "10",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * (k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpwzbp88gb.php:5\nStack trace:\n#0 /tmp/tmpwzbp88gb.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpwzbp88gb.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 1) {\n        return $k;\n    }\n    if ($n == 2) {\n        return $k * $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 3);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "24",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $dp = array_fill(0, $n, 0);\n    $dp[0] = $k;\n    $dp[1] = $k * $k;\n    for ($i = 2; $i < $n; $i++) {\n        $dp[$i] = ($k - 1) * ($dp[$i - 1] + $dp[$i - 2]);\n    }\n    return $dp[$n - 1];\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpn_4gm4na.php:5\nStack trace:\n#0 /tmp/tmpn_4gm4na.php(15): count_no_of_ways(2, 4)\n#1 /tmp/tmpn_4gm4na.php(19): candidate(2, 4)\n#2 /tmp/tmpn_4gm4na.php(24): test()\n#3 {main}\n  thrown in /tmp/tmpn_4gm4na.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n\t$same = 0;\n\t$diff = k;\n\tfor ($i=2; $i <= $n; $i++) { \n\t\t$temp = $diff;\n\t\t$diff = ($same + $diff) * ($k-1);\n\t\t$same = $temp;\n\t}\n\treturn $same + $diff;\n}\n\necho count_no_of_ways(4, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpk_bi_baw.php:5\nStack trace:\n#0 /tmp/tmpk_bi_baw.php(14): count_no_of_ways(4, 2)\n#1 {main}\n  thrown in /tmp/tmpk_bi_baw.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\n$n = 2;\n$k = 3;\necho count_no_of_ways($n, $k);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "9",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n  if ($n == 0) {\n    return 0;\n  }\n  if ($n == 1) {\n    return $k;\n  }\n  $same = $k;\n  $diff = $k * ($k - 1);\n  for ($i = 3; $i <= $n; $i++) {\n    $prev_diff = $diff;\n    $diff = ($same + $diff) * ($k - 1);\n    $same = $prev_diff;\n  }\n  return $same + $diff;\n}\n\necho count_no_of_ways(2, 3);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "9",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n  $same = 0;\n  $diff = k;\n  for ($i = 1; $i < $n; $i++) {\n    $temp = $diff;\n    $diff = ($same + $diff) * ($k - 1);\n    $same = $temp;\n  }\n  return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpp6qo00q3.php:5\nStack trace:\n#0 /tmp/tmpp6qo00q3.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpp6qo00q3.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    if ($n == 2) {\n        return $k * $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2) . \"\\n\";\necho count_no_of_ways(2, 4) . \"\\n\";\necho count_no_of_ways(4, 2) . \"\\n\";\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "6\n16\n10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(4, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122947,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmphvf3c9lm.php:5\nStack trace:\n#0 /tmp/tmphvf3c9lm.php(14): count_no_of_ways(4, 2)\n#1 {main}\n  thrown in /tmp/tmphvf3c9lm.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 1) {\n        return $k;\n    }\n    if ($n == 2) {\n        return $k * $k;\n    }\n    $diff = $k * ($k - 1);\n    $same = $k;\n    $total = $diff + $same;\n    for ($i = 3; $i <= $n; $i++) {\n        $diff = $total * ($k - 1);\n        $same = $total - $diff;\n        $total = $diff + $same;\n    }\n    return $total;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp19k5d1lo.php:28\nStack trace:\n#0 /tmp/tmp19k5d1lo.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp19k5d1lo.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n\t$same = 0;\n\t$diff = k;\n\tfor ($i=2; $i <= $n; $i++) { \n\t\t$temp = $diff;\n\t\t$diff = ($same + $diff) * ($k-1);\n\t\t$same = $temp;\n\t}\n\treturn $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpni08tpj_.php:5\nStack trace:\n#0 /tmp/tmpni08tpj_.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpni08tpj_.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n  $same = 0;\n  $diff = k;\n  for ($i = 1; $i < $n; $i++) {\n    $temp = $diff;\n    $diff = ($same + $diff) * ($k - 1);\n    $same = $temp;\n  }\n  return $same + $diff;\n}\n\necho count_no_of_ways(2, 3);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmp58651hhr.php:5\nStack trace:\n#0 /tmp/tmp58651hhr.php(14): count_no_of_ways(2, 3)\n#1 {main}\n  thrown in /tmp/tmp58651hhr.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) return 0;\n    if ($n == 1) return $k;\n    if ($n == 2) return $k * $k;\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n\t$same = 0;\n\t$diff = k;\n\tfor ($i = 2; $i <= $n; $i++) {\n\t\t$temp = $diff;\n\t\t$diff = ($same + $diff) * ($k - 1);\n\t\t$same = $temp;\n\t}\n\treturn $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpcvw2q6d7.php:5\nStack trace:\n#0 /tmp/tmpcvw2q6d7.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpcvw2q6d7.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 1) {\n        return $k;\n    }\n    if ($n == 2) {\n        return $k * $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n\t$dp = array();\n\t$dp[0] = 0;\n\t$dp[1] = $k;\n\t$dp[2] = $k * $k;\n\tfor ($i=3; $i <= $n; $i++) { \n\t\t$dp[$i] = ($k - 1) * ($dp[$i-1] + $dp[$i-2]);\n\t}\n\treturn $dp[$n];\n}\n\necho count_no_of_ways(3, 2);\n\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\n$n = 3;\n$k = 2;\necho count_no_of_ways($n, $k);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122947,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n  $same = 0;\n  $diff = k;\n  for ($i = 2; $i <= $n; $i++) {\n    $prev_diff = $diff;\n    $diff = $same * ($k - 1) + $diff * ($k - 1);\n    $same = $prev_diff;\n  }\n  return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpgpfprz5k.php:5\nStack trace:\n#0 /tmp/tmpgpfprz5k.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpgpfprz5k.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n\t$dp = array();\n\t$dp[0] = $k;\n\t$dp[1] = $k * $k;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\t$dp[$i] = ($k - 1) * ($dp[$i - 1] + $dp[$i - 2]);\n\t}\n\treturn $dp[$n - 1];\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $total = $k;\n    $same = 0;\n    $diff = $k;\n    for ($i = 2; $i <= $n; $i++) {\n        $same = $diff;\n        $diff = $total * ($k - 1);\n        $total = $same + $diff;\n    }\n    return $total;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122947,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmpj2j8fwb0.php:5\nStack trace:\n#0 /tmp/tmpj2j8fwb0.php(14): count_no_of_ways(3, 2)\n#1 {main}\n  thrown in /tmp/tmpj2j8fwb0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(2, 3);\nfunction candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517436,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"k\" in /tmp/tmprdhybqa6.php:5\nStack trace:\n#0 /tmp/tmprdhybqa6.php(14): count_no_of_ways(2, 3)\n#1 {main}\n  thrown in /tmp/tmprdhybqa6.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
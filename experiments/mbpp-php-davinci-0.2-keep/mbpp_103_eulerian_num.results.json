{
  "name": "mbpp_103_eulerian_num",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_103_eulerian_num.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($m == 0) {\n        return 1;\n    }\n    if ($n == 0) {\n        return 0;\n    }\n    return ($m + 1) * eulerian_num($n - 1, $m) + ($n - $m) * eulerian_num($n - 1, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510568,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $eulerian[$i][0] = 1;\n    }\n    for ($j = 0; $j <= $m; $j++) {\n        $eulerian[0][$j] = 1;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = 1; $j <= $m; $j++) {\n            $eulerian[$i][$j] = $eulerian[$i - 1][$j - 1] + ($i + 1) * $eulerian[$i][$j - 1];\n        }\n    }\n    return $eulerian[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510568,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbshb5zj2.php:24\nStack trace:\n#0 /tmp/tmpbshb5zj2.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpbshb5zj2.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    if ($n == 1 || $m == 1) {\n        return $n;\n    }\n    if ($n < $m) {\n        return 0;\n    }\n    return eulerian_num($n - 1, $m - 1) + ($n - 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510568,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr21lvytp.php:21\nStack trace:\n#0 /tmp/tmpr21lvytp.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpr21lvytp.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510568,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp99ttrbdx.php:15\nStack trace:\n#0 /tmp/tmp99ttrbdx.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp99ttrbdx.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n\tif ($m == 0) {\n\t\treturn 1;\n\t}\n\tif ($n == 0) {\n\t\treturn 0;\n\t}\n\treturn ($m + 1) * eulerian_num($n - 1, $m) + ($n - $m) * eulerian_num($n - 1, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510568,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian_num = 0;\n    $eulerian_num = $eulerian_num + (factorial($n + $m) / (factorial($n) * factorial($m)));\n    return $eulerian_num;\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510568,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function factorial() in /tmp/tmpieilfg20.php:5\nStack trace:\n#0 /tmp/tmpieilfg20.php(10): eulerian_num(3, 1)\n#1 /tmp/tmpieilfg20.php(14): candidate(3, 1)\n#2 /tmp/tmpieilfg20.php(19): test()\n#3 {main}\n  thrown in /tmp/tmpieilfg20.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    if ($n < $m) {\n        return 0;\n    }\n    return eulerian_num($n - 1, $m - 1) + ($n - 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510568,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasts5xq7.php:18\nStack trace:\n#0 /tmp/tmpasts5xq7.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpasts5xq7.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 && $m == 0) {\n        return 1;\n    }\n    if ($n == 0 || $m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n - 1, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510568,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4t9l2q54.php:19\nStack trace:\n#0 /tmp/tmp4t9l2q54.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4t9l2q54.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    } else if ($m == 0) {\n        return 0;\n    } else if ($m > $n) {\n        return 0;\n    } else {\n        return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n    }\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510568,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmpz1tw8d8y.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    if ($n == 1) {\n        return $m + 1;\n    }\n    if ($m == 1) {\n        return $n + 1;\n    }\n    return $n * eulerian_num($n - 1, $m) + $m * eulerian_num($n, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510568,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9zp0u0pb.php:22\nStack trace:\n#0 /tmp/tmp9zp0u0pb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp9zp0u0pb.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    if ($n == 1) {\n        return $m + 1;\n    }\n    if ($m == 1) {\n        return $n + 1;\n    }\n    return eulerian_num($n - 1, $m) + $m * eulerian_num($n, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510568,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0e4120x0.php:22\nStack trace:\n#0 /tmp/tmp0e4120x0.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp0e4120x0.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    if ($n == 1 || $m == 1) {\n        return $n + $m - 1;\n    }\n    return ($n - $m + 1) * eulerian_num($n - 1, $m - 1) + ($m + 1) * eulerian_num($n, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510568,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnuoae9i5.php:18\nStack trace:\n#0 /tmp/tmpnuoae9i5.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpnuoae9i5.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    if ($m > $n) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510568,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmpl9p1nfsh.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy5olxhpx.php:18\nStack trace:\n#0 /tmp/tmpy5olxhpx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpy5olxhpx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    if ($m > $n) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510568,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmpavwyktv0.php on line 13\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n < $m) {\n        return 0;\n    }\n    if ($n == $m || $m == 0) {\n        return 1;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510568,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmp1dz073cq.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n < 0 || $m < 0) {\n        return 0;\n    }\n    if ($m == 0) {\n        return 1;\n    }\n    if ($n == 0) {\n        return 0;\n    }\n    return ($m + 1) * eulerian_num($n - 1, $m) + ($n - $m) * eulerian_num($n - 1, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510568,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($m > $n) {\n        return 0;\n    }\n    if ($m == 0) {\n        return 1;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510568,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmpo8o7u04h.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $eulerian[$i][0] = 1;\n    }\n    for ($i = 1; $i <= $m; $i++) {\n        $eulerian[0][$i] = 0;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = 1; $j <= $m; $j++) {\n            $eulerian[$i][$j] = $eulerian[$i - 1][$j - 1] + ($i + 1) * $eulerian[$i][$j - 1];\n        }\n    }\n    return $eulerian[$n][$m];\n}\n\necho eulerian_num(5, 3);\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510568,
      "stdout": "323\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk1fkt2tb.php:25\nStack trace:\n#0 /tmp/tmpk1fkt2tb.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpk1fkt2tb.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmptltx2mnr.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    } else {\n        return ($n + $m - 1) * eulerian_num($n - 1, $m) + ($n - $m) * eulerian_num($n, $m - 1);\n    }\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsazy0tlo.php:16\nStack trace:\n#0 /tmp/tmpsazy0tlo.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpsazy0tlo.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    return ($n + $m - 1) * eulerian_num($n - 1, $m) + ($n - 1) * eulerian_num($n, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmuzr8jtc.php:15\nStack trace:\n#0 /tmp/tmpmuzr8jtc.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpmuzr8jtc.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $eulerian[$i][0] = 1;\n    }\n    for ($i = 1; $i <= $m; $i++) {\n        $eulerian[0][$i] = 0;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = 1; $j <= $m; $j++) {\n            $eulerian[$i][$j] = ($i - $j) * $eulerian[$i - 1][$j] + $eulerian[$i - 1][$j - 1];\n        }\n    }\n    return $eulerian[$n][$m];\n}\n\n$n = 5;\n$m = 3;\necho eulerian_num($n, $m);\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "19\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd7yvn0xi.php:27\nStack trace:\n#0 /tmp/tmpd7yvn0xi.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpd7yvn0xi.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    return ($n + $m - 1) * eulerian_num($n - 1, $m) + ($n - $m) * eulerian_num($n, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2qst2tjh.php:15\nStack trace:\n#0 /tmp/tmp2qst2tjh.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp2qst2tjh.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) return 1;\n    if ($n == 1 || $m == 1) return $n + $m;\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2nbl5n2a.php:15\nStack trace:\n#0 /tmp/tmp2nbl5n2a.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp2nbl5n2a.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n < $m) {\n        return 0;\n    }\n    if ($m == 0) {\n        return 1;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmpj5fxryqo.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    if ($n == $m) {\n        return 1;\n    }\n    return eulerian_num($n - 1, $m - 1) + ($n + 1) * eulerian_num($n, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0wrkm556.php:18\nStack trace:\n#0 /tmp/tmp0wrkm556.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp0wrkm556.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    if ($n < $m) {\n        return 0;\n    }\n    return eulerian_num($n - 1, $m - 1) + ($n - 1) * eulerian_num($n - 1, $m);\n}\n\necho eulerian_num(5, 3);\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "45\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpboszzlzw.php:19\nStack trace:\n#0 /tmp/tmpboszzlzw.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpboszzlzw.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    return ($n + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpffuef_q4.php:15\nStack trace:\n#0 /tmp/tmpffuef_q4.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpffuef_q4.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    if ($n == 1) {\n        return $m + 1;\n    }\n    if ($m == 1) {\n        return $n + 1;\n    }\n    return ($n + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpspug0_u6.php:22\nStack trace:\n#0 /tmp/tmpspug0_u6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpspug0_u6.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    } else if ($m == 0) {\n        return 0;\n    } else if ($n == $m) {\n        return 1;\n    } else {\n        return eulerian_num($n - 1, $m - 1) + ($n + 1) * eulerian_num($n, $m - 1);\n    }\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbxc3b_lw.php:20\nStack trace:\n#0 /tmp/tmpbxc3b_lw.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpbxc3b_lw.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian_num = array();\n    for ($i = 0; $i <= $n; $i++) {\n        for ($j = 0; $j <= $m; $j++) {\n            if ($i == 0 || $j == 0) {\n                $eulerian_num[$i][$j] = 1;\n            } else {\n                $eulerian_num[$i][$j] = $eulerian_num[$i - 1][$j - 1] + ($i + 1) * $eulerian_num[$i][$j - 1];\n            }\n        }\n    }\n    return $eulerian_num[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcj5szphc.php:22\nStack trace:\n#0 /tmp/tmpcj5szphc.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpcj5szphc.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($m > $n) {\n        return 0;\n    }\n    if ($m == 0) {\n        return 1;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510568,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmpo8o7u04h.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmptltx2mnr.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy5olxhpx.php:18\nStack trace:\n#0 /tmp/tmpy5olxhpx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpy5olxhpx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmptltx2mnr.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 && $m == 0) {\n        return 1;\n    }\n    if ($n == 0 || $m == 0) {\n        return 0;\n    }\n    return ($n - $m) * eulerian_num($n - 1, $m) + ($m + 1) * eulerian_num($n - 1, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4z2fq4n8.php:19\nStack trace:\n#0 /tmp/tmp4z2fq4n8.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4z2fq4n8.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    } else {\n        return ($n + $m - 1) * eulerian_num($n - 1, $m) + ($n - $m) * eulerian_num($n, $m - 1);\n    }\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsazy0tlo.php:16\nStack trace:\n#0 /tmp/tmpsazy0tlo.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpsazy0tlo.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    return ($n + $m - 1) * eulerian_num($n - 1, $m) + ($n + $m - 1) * eulerian_num($n, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphm5zj4ls.php:15\nStack trace:\n#0 /tmp/tmphm5zj4ls.php(20): test()\n#1 {main}\n  thrown in /tmp/tmphm5zj4ls.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmptltx2mnr.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $eulerian[$i][0] = 1;\n    }\n    for ($i = 1; $i <= $m; $i++) {\n        $eulerian[0][$i] = 0;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = 1; $j <= $m; $j++) {\n            $eulerian[$i][$j] = $eulerian[$i - 1][$j - 1] + ($i + 1) * $eulerian[$i][$j - 1];\n        }\n    }\n    return $eulerian[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw8_mpwgk.php:24\nStack trace:\n#0 /tmp/tmpw8_mpwgk.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpw8_mpwgk.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian_num = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $eulerian_num[$i][0] = 1;\n    }\n    for ($i = 1; $i <= $m; $i++) {\n        $eulerian_num[0][$i] = 0;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = 1; $j <= $m; $j++) {\n            $eulerian_num[$i][$j] = ($i - $j) * $eulerian_num[$i - 1][$j - 1] + ($j + 1) * $eulerian_num[$i - 1][$j];\n        }\n    }\n    return $eulerian_num[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    } else {\n        return ($n + $m - 1) * eulerian_num($n - 1, $m) + ($n + $m - 1) * eulerian_num($n, $m - 1);\n    }\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpycfdg1ux.php:16\nStack trace:\n#0 /tmp/tmpycfdg1ux.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpycfdg1ux.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    return ($n + $m - 1) * eulerian_num($n - 1, $m) + ($n - 1) * eulerian_num($n, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmuzr8jtc.php:15\nStack trace:\n#0 /tmp/tmpmuzr8jtc.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpmuzr8jtc.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($m == 0 || $n == $m) {\n        return 1;\n    }\n    return eulerian_num($n - 1, $m - 1) + ($n - 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzxsree6e.php:15\nStack trace:\n#0 /tmp/tmpzxsree6e.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpzxsree6e.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    if ($n == 1 || $m == 1) {\n        return $n + $m;\n    }\n    return ($n + $m - 1) * eulerian_num($n - 1, $m) + ($n + $m - 1) * eulerian_num($n, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps4xundwv.php:19\nStack trace:\n#0 /tmp/tmps4xundwv.php(23): test()\n#1 {main}\n  thrown in /tmp/tmps4xundwv.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    return ($n + $m - 1) * eulerian_num($n - 1, $m) + ($n - 1) * eulerian_num($n, $m - 1);\n}\n\necho eulerian_num(5, 5);\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "1402579\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf_tjhqka.php:16\nStack trace:\n#0 /tmp/tmpf_tjhqka.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpf_tjhqka.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian_num = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $eulerian_num[$i][0] = 1;\n        $eulerian_num[$i][$i] = 1;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = 1; $j < $i; $j++) {\n            $eulerian_num[$i][$j] = $eulerian_num[$i - 1][$j - 1] + ($i - 1) * $eulerian_num[$i - 1][$j];\n        }\n    }\n    return $eulerian_num[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt6mc1dke.php:22\nStack trace:\n#0 /tmp/tmpt6mc1dke.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpt6mc1dke.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    if ($n == 1 || $m == 1) {\n        return $n + $m - 1;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz16vh2fs.php:18\nStack trace:\n#0 /tmp/tmpz16vh2fs.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpz16vh2fs.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    if ($n == 1) {\n        return $m + 1;\n    }\n    if ($m == 1) {\n        return $n + 1;\n    }\n    return ($n + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpspug0_u6.php:22\nStack trace:\n#0 /tmp/tmpspug0_u6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpspug0_u6.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    if ($n == 1 || $m == 1) {\n        return $n + $m;\n    }\n    return ($n + $m - 1) * eulerian_num($n - 1, $m) + ($n + $m - 1) * eulerian_num($n, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps4xundwv.php:19\nStack trace:\n#0 /tmp/tmps4xundwv.php(23): test()\n#1 {main}\n  thrown in /tmp/tmps4xundwv.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    } else if ($m == 0) {\n        return 0;\n    } else {\n        return ($n - $m + 1) * eulerian_num($n - 1, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n    }\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ig65p_0.php:18\nStack trace:\n#0 /tmp/tmp9ig65p_0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp9ig65p_0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $a = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $a[$i] = array();\n        for ($j = 0; $j <= $m; $j++) {\n            $a[$i][$j] = 0;\n        }\n    }\n    $a[0][0] = 1;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = 1; $j <= $m; $j++) {\n            $a[$i][$j] = ($a[$i - 1][$j - 1] + ($i - 1) * $a[$i - 1][$j]) / $j;\n        }\n    }\n    return $a[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpotmgvmrj.php:25\nStack trace:\n#0 /tmp/tmpotmgvmrj.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpotmgvmrj.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmptltx2mnr.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    if ($n == 1) {\n        return $m + 1;\n    }\n    if ($m == 1) {\n        return $n + 1;\n    }\n    return eulerian_num($n - 1, $m) + eulerian_num($n, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz7u2q3rr.php:22\nStack trace:\n#0 /tmp/tmpz7u2q3rr.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpz7u2q3rr.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n < 0 || $m < 0) {\n        return 0;\n    }\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m) * eulerian_num($n - 1, $m) + ($m + 1) * eulerian_num($n - 1, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdryhoy3e.php:22\nStack trace:\n#0 /tmp/tmpdryhoy3e.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdryhoy3e.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian_num = 1;\n    for ($i = 1; $i <= $m; $i++) {\n        $eulerian_num *= ($n - $i + 1) / $i;\n    }\n    return $eulerian_num;\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyba8pe0r.php:16\nStack trace:\n#0 /tmp/tmpyba8pe0r.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpyba8pe0r.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($m == 0 || $n == $m) {\n        return 1;\n    }\n    return ($m * eulerian_num($n - 1, $m)) + ($n - $m + 1) * eulerian_num($n - 1, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoo0hb9bl.php:15\nStack trace:\n#0 /tmp/tmpoo0hb9bl.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpoo0hb9bl.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n < 0 || $m < 0 || $n < $m) {\n        return 0;\n    }\n    if ($n == 0 && $m == 0) {\n        return 1;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4k464fe3.php:18\nStack trace:\n#0 /tmp/tmp4k464fe3.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4k464fe3.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $eulerian[$i][0] = 1;\n    }\n    for ($i = 1; $i <= $m; $i++) {\n        $eulerian[0][$i] = 0;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = 1; $j <= $m; $j++) {\n            $eulerian[$i][$j] = $eulerian[$i - 1][$j - 1] + ($i + 1) * $eulerian[$i][$j - 1];\n        }\n    }\n    return $eulerian[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw8_mpwgk.php:24\nStack trace:\n#0 /tmp/tmpw8_mpwgk.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpw8_mpwgk.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    } else if ($m == 0) {\n        return 0;\n    } else if ($n == $m) {\n        return 1;\n    } else {\n        return eulerian_num($n - 1, $m - 1) + ($n + 1) * eulerian_num($n, $m - 1);\n    }\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbxc3b_lw.php:20\nStack trace:\n#0 /tmp/tmpbxc3b_lw.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpbxc3b_lw.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) return 1;\n    if ($m == 0) return 0;\n    return ($n - $m + 1) * eulerian_num($n - 1, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsdjvhe2b.php:14\nStack trace:\n#0 /tmp/tmpsdjvhe2b.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpsdjvhe2b.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    if ($n < $m) {\n        return 0;\n    }\n    return eulerian_num($n - 1, $m - 1) + ($n - 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510568,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasts5xq7.php:18\nStack trace:\n#0 /tmp/tmpasts5xq7.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpasts5xq7.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    return ($n + 1 - $m) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6b5tdt7s.php:15\nStack trace:\n#0 /tmp/tmp6b5tdt7s.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp6b5tdt7s.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    if ($n == 1 || $m == 1) {\n        return $n;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbo1rwnjm.php:18\nStack trace:\n#0 /tmp/tmpbo1rwnjm.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpbo1rwnjm.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian_num = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $eulerian_num[$i][0] = 1;\n    }\n    for ($i = 1; $i <= $m; $i++) {\n        $eulerian_num[0][$i] = 0;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = 1; $j <= $m; $j++) {\n            $eulerian_num[$i][$j] = ($i - $j) * $eulerian_num[$i - 1][$j] + $eulerian_num[$i - 1][$j - 1];\n        }\n    }\n    return $eulerian_num[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0xskgxsc.php:24\nStack trace:\n#0 /tmp/tmp0xskgxsc.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp0xskgxsc.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmptltx2mnr.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian_num = array();\n    for ($i = 0; $i <= $n; $i++) {\n        for ($j = 0; $j <= $m; $j++) {\n            if ($i == 0) {\n                $eulerian_num[$i][$j] = 1;\n            } elseif ($j == 0) {\n                $eulerian_num[$i][$j] = 0;\n            } else {\n                $eulerian_num[$i][$j] = ($eulerian_num[$i - 1][$j - 1] + ($i + 1) * $eulerian_num[$i][$j - 1]);\n            }\n        }\n    }\n    return $eulerian_num[$n][$m];\n}\n\necho eulerian_num(5, 3);\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsl7ef2ra.php:25\nStack trace:\n#0 /tmp/tmpsl7ef2ra.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsl7ef2ra.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n < $m) {\n        return 0;\n    }\n    if ($n == $m) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmpaxvtd3u9.php on line 13\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $eulerian[$i][0] = 1;\n    }\n    for ($i = 1; $i <= $m; $i++) {\n        $eulerian[0][$i] = 0;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = 1; $j <= $m; $j++) {\n            $eulerian[$i][$j] = $eulerian[$i - 1][$j - 1] + ($i + 1) * $eulerian[$i][$j - 1];\n        }\n    }\n    return $eulerian[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw8_mpwgk.php:24\nStack trace:\n#0 /tmp/tmpw8_mpwgk.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpw8_mpwgk.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $eulerian[$i][0] = 1;\n    }\n    for ($i = 1; $i <= $m; $i++) {\n        $eulerian[0][$i] = 0;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = 1; $j <= $m; $j++) {\n            $eulerian[$i][$j] = $eulerian[$i - 1][$j - 1] + ($i + 1) * $eulerian[$i][$j - 1];\n        }\n    }\n    return $eulerian[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw8_mpwgk.php:24\nStack trace:\n#0 /tmp/tmpw8_mpwgk.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpw8_mpwgk.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n < $m) return 0;\n    if ($m == 0) return 1;\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmp7d6yrf85.php on line 6\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian_num = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $eulerian_num[$i][0] = 1;\n    }\n    for ($i = 1; $i <= $m; $i++) {\n        $eulerian_num[0][$i] = 0;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = 1; $j <= $m; $j++) {\n            $eulerian_num[$i][$j] = ($i - $j) * $eulerian_num[$i - 1][$j] + $eulerian_num[$i - 1][$j - 1];\n        }\n    }\n    return $eulerian_num[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0xskgxsc.php:24\nStack trace:\n#0 /tmp/tmp0xskgxsc.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp0xskgxsc.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($m == 0 || $n == $m) {\n        return 1;\n    }\n    return eulerian_num($n - 1, $m - 1) + ($n - $m) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfa7c4ora.php:15\nStack trace:\n#0 /tmp/tmpfa7c4ora.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpfa7c4ora.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 && $m == 0) {\n        return 1;\n    }\n    if ($n == 0 || $m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n - 1, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510568,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4t9l2q54.php:19\nStack trace:\n#0 /tmp/tmp4t9l2q54.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4t9l2q54.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($m == 0 || $n == $m) {\n        return 1;\n    }\n    if ($m == 1) {\n        return $n;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm1_noc7s.php:18\nStack trace:\n#0 /tmp/tmpm1_noc7s.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpm1_noc7s.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian_num = array();\n    $eulerian_num[0][0] = 1;\n    for ($i = 1; $i <= $n; $i++) {\n        $eulerian_num[$i][0] = $eulerian_num[$i - 1][$i - 1] / $i;\n        for ($j = 1; $j <= $i; $j++) {\n            $eulerian_num[$i][$j] = ($eulerian_num[$i - 1][$j - 1] + $eulerian_num[$i][$j - 1]) / $i;\n        }\n    }\n    return $eulerian_num[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5yvucjty.php:20\nStack trace:\n#0 /tmp/tmp5yvucjty.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp5yvucjty.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n\tif ($n == 0) {\n\t\treturn 1;\n\t}\n\tif ($m == 0) {\n\t\treturn 0;\n\t}\n\treturn ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmp56p5lvep.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $eulerian[$i][0] = 1;\n    }\n    for ($i = 1; $i <= $m; $i++) {\n        $eulerian[0][$i] = 0;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = 1; $j <= $m; $j++) {\n            $eulerian[$i][$j] = ($i - $j) * $eulerian[$i - 1][$j] + $eulerian[$i - 1][$j - 1];\n        }\n    }\n    return $eulerian[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp78y9x462.php:24\nStack trace:\n#0 /tmp/tmp78y9x462.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp78y9x462.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n < 0 || $m < 0) {\n        return 0;\n    }\n    if ($n == 0 && $m == 0) {\n        return 1;\n    }\n    return ($n + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpora6y13x.php:18\nStack trace:\n#0 /tmp/tmpora6y13x.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpora6y13x.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    } else if ($m == 0) {\n        return 0;\n    } else {\n        return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n    }\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_62z59s0.php:18\nStack trace:\n#0 /tmp/tmp_62z59s0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp_62z59s0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian_num = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $eulerian_num[$i][0] = 1;\n    }\n    for ($i = 1; $i <= $m; $i++) {\n        $eulerian_num[0][$i] = 0;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = 1; $j <= $m; $j++) {\n            $eulerian_num[$i][$j] = ($i - $j) * $eulerian_num[$i - 1][$j] + $eulerian_num[$i - 1][$j - 1];\n        }\n    }\n    return $eulerian_num[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0xskgxsc.php:24\nStack trace:\n#0 /tmp/tmp0xskgxsc.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp0xskgxsc.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($m > $n) {\n        return 0;\n    }\n    if ($m == 0) {\n        return 1;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510568,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmpo8o7u04h.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmptltx2mnr.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    } elseif ($m == 0) {\n        return 0;\n    } else {\n        return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n    }\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvgnks697.php:18\nStack trace:\n#0 /tmp/tmpvgnks697.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpvgnks697.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n  if ($m == 0 || $m == $n) {\n    return 1;\n  }\n  return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmp5gz6u70n.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($m > $n) {\n        return 0;\n    }\n    if ($m == 0) {\n        return 1;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510568,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmpo8o7u04h.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $eulerian[$i][0] = 1;\n    }\n    for ($i = 1; $i <= $m; $i++) {\n        $eulerian[0][$i] = 0;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = 1; $j <= $m; $j++) {\n            $eulerian[$i][$j] = $eulerian[$i - 1][$j - 1] + ($i + 1) * $eulerian[$i][$j - 1];\n        }\n    }\n    return $eulerian[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw8_mpwgk.php:24\nStack trace:\n#0 /tmp/tmpw8_mpwgk.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpw8_mpwgk.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian_num = array();\n    for ($i = 0; $i <= $n; $i++) {\n        for ($j = 0; $j <= $m; $j++) {\n            if ($i == 0 && $j == 0) {\n                $eulerian_num[$i][$j] = 1;\n            } elseif ($i == 0) {\n                $eulerian_num[$i][$j] = 0;\n            } elseif ($j == 0) {\n                $eulerian_num[$i][$j] = 1;\n            } else {\n                $eulerian_num[$i][$j] = ($i - $j + 1) * $eulerian_num[$i - 1][$j - 1] + $j * $eulerian_num[$i - 1][$j];\n            }\n        }\n    }\n    return $eulerian_num[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwr_8ocsa.php:26\nStack trace:\n#0 /tmp/tmpwr_8ocsa.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpwr_8ocsa.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    return ($n + 1 - $m) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6b5tdt7s.php:15\nStack trace:\n#0 /tmp/tmp6b5tdt7s.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp6b5tdt7s.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    } else if ($m == 0) {\n        return 0;\n    } else if ($n == $m) {\n        return 1;\n    } else {\n        return eulerian_num($n - 1, $m - 1) + ($n + 1) * eulerian_num($n, $m - 1);\n    }\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbxc3b_lw.php:20\nStack trace:\n#0 /tmp/tmpbxc3b_lw.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpbxc3b_lw.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n < $m) {\n        return 0;\n    }\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    return ($n - $m) * eulerian_num($n - 1, $m) + ($m + 1) * eulerian_num($n - 1, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfigdv1kv.php:18\nStack trace:\n#0 /tmp/tmpfigdv1kv.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpfigdv1kv.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n < 0 || $m < 0 || $n < $m) {\n        return 0;\n    }\n    if ($n == 0 && $m == 0) {\n        return 1;\n    }\n    return ($n - $m) * eulerian_num($n - 1, $m) + ($m + 1) * eulerian_num($n - 1, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ygf9qt4.php:18\nStack trace:\n#0 /tmp/tmp0ygf9qt4.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp0ygf9qt4.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    return ($n + 1 - $m) * eulerian_num($n - 1, $m) + $m * eulerian_num($n - 1, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns3ldd08.php:15\nStack trace:\n#0 /tmp/tmpns3ldd08.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpns3ldd08.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0 || $n < $m) {\n        return 0;\n    } elseif ($n == $m) {\n        return 1;\n    } else {\n        return ($n - $m) * eulerian_num($n - 1, $m) + ($m + 1) * eulerian_num($n - 1, $m - 1);\n    }\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4krbdcnm.php:18\nStack trace:\n#0 /tmp/tmp4krbdcnm.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4krbdcnm.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy5olxhpx.php:18\nStack trace:\n#0 /tmp/tmpy5olxhpx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpy5olxhpx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $eulerian[$i][0] = 1;\n    }\n    for ($i = 1; $i <= $m; $i++) {\n        $eulerian[0][$i] = 0;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = 1; $j <= $m; $j++) {\n            $eulerian[$i][$j] = ($i - $j) * $eulerian[$i - 1][$j] + $eulerian[$i - 1][$j - 1];\n        }\n    }\n    return $eulerian[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp78y9x462.php:24\nStack trace:\n#0 /tmp/tmp78y9x462.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp78y9x462.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    if ($n == 1 || $m == 1) {\n        return $n + $m - 1;\n    }\n    return ($n - $m) * eulerian_num($n - 1, $m) + ($m + 1) * eulerian_num($n, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi61qkvs1.php:18\nStack trace:\n#0 /tmp/tmpi61qkvs1.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpi61qkvs1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian = array();\n    for ($i = 0; $i <= $n; $i++) {\n        for ($j = 0; $j <= $m; $j++) {\n            if ($i == 0) {\n                $eulerian[$i][$j] = 1;\n            } else {\n                if ($j == 0) {\n                    $eulerian[$i][$j] = 0;\n                } else {\n                    $eulerian[$i][$j] = ($eulerian[$i - 1][$j - 1] + ($i + 1) * $eulerian[$i][$j - 1]);\n                }\n            }\n        }\n    }\n    return $eulerian[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpme4pqrsv.php:26\nStack trace:\n#0 /tmp/tmpme4pqrsv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpme4pqrsv.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy5olxhpx.php:18\nStack trace:\n#0 /tmp/tmpy5olxhpx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpy5olxhpx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    } else if ($m == 0) {\n        return 0;\n    } else {\n        return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n    }\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_62z59s0.php:18\nStack trace:\n#0 /tmp/tmp_62z59s0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp_62z59s0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmptltx2mnr.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmptltx2mnr.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    if ($n < $m) {\n        return 0;\n    }\n    return eulerian_num($n - 1, $m - 1) + ($n - 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510568,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasts5xq7.php:18\nStack trace:\n#0 /tmp/tmpasts5xq7.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpasts5xq7.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    return ($n + 1 - $m) * eulerian_num($n - 1, $m) + $m * eulerian_num($n - 1, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns3ldd08.php:15\nStack trace:\n#0 /tmp/tmpns3ldd08.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpns3ldd08.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($m == 0 || $m == $n) {\n        return 1;\n    }\n    return eulerian_num($n - 1, $m - 1) + ($n - $m) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6xzndy3t.php:15\nStack trace:\n#0 /tmp/tmp6xzndy3t.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp6xzndy3t.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy5olxhpx.php:18\nStack trace:\n#0 /tmp/tmpy5olxhpx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpy5olxhpx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n\tif ($n == 0 || $m == 0) {\n\t\treturn 1;\n\t}\n\treturn ($n + $m - 1) * eulerian_num($n - 1, $m) + ($n - 1) * eulerian_num($n, $m - 1);\n}\n\necho eulerian_num(3, 2);\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "58\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj32yb6y.php:16\nStack trace:\n#0 /tmp/tmpgj32yb6y.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpgj32yb6y.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian_num = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $eulerian_num[$i][0] = 1;\n    }\n    for ($i = 1; $i <= $m; $i++) {\n        $eulerian_num[0][$i] = 0;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = 1; $j <= $m; $j++) {\n            $eulerian_num[$i][$j] = ($eulerian_num[$i - 1][$j - 1] + ($i - 1) * $eulerian_num[$i - 1][$j]);\n        }\n    }\n    return $eulerian_num[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp89_uarcq.php:24\nStack trace:\n#0 /tmp/tmp89_uarcq.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp89_uarcq.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    } elseif ($m == 0) {\n        return 0;\n    } else {\n        return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n    }\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvgnks697.php:18\nStack trace:\n#0 /tmp/tmpvgnks697.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpvgnks697.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian_num = array();\n    for ($i = 0; $i <= $n; $i++) {\n        for ($j = 0; $j <= $m; $j++) {\n            if ($i == 0) {\n                $eulerian_num[$i][$j] = 1;\n            } else if ($j == 0) {\n                $eulerian_num[$i][$j] = 0;\n            } else {\n                $eulerian_num[$i][$j] = ($i - $j + 1) * $eulerian_num[$i - 1][$j] + $j * $eulerian_num[$i - 1][$j - 1];\n            }\n        }\n    }\n    return $eulerian_num[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5hzcwmgt.php:24\nStack trace:\n#0 /tmp/tmp5hzcwmgt.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp5hzcwmgt.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($m == 0 || $n == $m) {\n        return 1;\n    }\n    return eulerian_num($n - 1, $m - 1) + ($n - $m) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfa7c4ora.php:15\nStack trace:\n#0 /tmp/tmpfa7c4ora.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpfa7c4ora.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmptltx2mnr.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    } else {\n        return ($n + $m - 1) * eulerian_num($n - 1, $m) + ($n - $m) * eulerian_num($n, $m - 1);\n    }\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsazy0tlo.php:16\nStack trace:\n#0 /tmp/tmpsazy0tlo.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpsazy0tlo.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n < 0 || $m < 0) {\n        return 0;\n    }\n    if ($n == 0 && $m == 0) {\n        return 1;\n    }\n    if ($n == 0 || $m == 0) {\n        return 0;\n    }\n    return ($n - $m) * eulerian_num($n - 1, $m) + ($m + 1) * eulerian_num($n - 1, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ue4_v6w.php:22\nStack trace:\n#0 /tmp/tmp6ue4_v6w.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6ue4_v6w.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    return ($n + $m - 1) * eulerian_num($n - 1, $m) + ($n + $m - 1) * eulerian_num($n, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphm5zj4ls.php:15\nStack trace:\n#0 /tmp/tmphm5zj4ls.php(20): test()\n#1 {main}\n  thrown in /tmp/tmphm5zj4ls.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n < $m) {\n        return 0;\n    }\n    if ($n == $m) {\n        return 1;\n    }\n    return ($n - $m) * eulerian_num($n - 1, $m) + ($m + 1) * eulerian_num($n - 1, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmpfuix2rx9.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmptltx2mnr.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    } else {\n        return ($n + $m - 1) * eulerian_num($n - 1, $m) + ($n - $m) * eulerian_num($n, $m - 1);\n    }\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsazy0tlo.php:16\nStack trace:\n#0 /tmp/tmpsazy0tlo.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpsazy0tlo.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n < 0 || $m < 0) {\n        return 0;\n    }\n    if ($n == 0 && $m == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n + 1 - $m) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpawpwpun2.php:21\nStack trace:\n#0 /tmp/tmpawpwpun2.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpawpwpun2.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    if ($n == 1 || $m == 1) {\n        return $n;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbo1rwnjm.php:18\nStack trace:\n#0 /tmp/tmpbo1rwnjm.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpbo1rwnjm.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $eulerian[$i][0] = 1;\n    }\n    for ($i = 1; $i <= $m; $i++) {\n        $eulerian[0][$i] = 0;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = 1; $j <= $m; $j++) {\n            $eulerian[$i][$j] = $eulerian[$i - 1][$j - 1] + ($i + 1) * $eulerian[$i][$j - 1];\n        }\n    }\n    return $eulerian[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw8_mpwgk.php:24\nStack trace:\n#0 /tmp/tmpw8_mpwgk.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpw8_mpwgk.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    } else {\n        return ($n + $m - 1) * eulerian_num($n - 1, $m) + ($n + $m - 1) * eulerian_num($n, $m - 1);\n    }\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpycfdg1ux.php:16\nStack trace:\n#0 /tmp/tmpycfdg1ux.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpycfdg1ux.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian_num = 1;\n    for ($i = 1; $i <= $m; $i++) {\n        $eulerian_num *= ($n + 1 - $i);\n        $eulerian_num /= $i;\n    }\n    return $eulerian_num;\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxcgeinn5.php:17\nStack trace:\n#0 /tmp/tmpxcgeinn5.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpxcgeinn5.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    } else {\n        return ($n + $m - 1) * eulerian_num($n - 1, $m) + ($n - $m) * eulerian_num($n, $m - 1);\n    }\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsazy0tlo.php:16\nStack trace:\n#0 /tmp/tmpsazy0tlo.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpsazy0tlo.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian_num = array();\n    for ($i = 0; $i <= $n; $i++) {\n        for ($j = 0; $j <= $m; $j++) {\n            if ($i == 0 || $j == 0) {\n                $eulerian_num[$i][$j] = 1;\n            } else {\n                $eulerian_num[$i][$j] = $eulerian_num[$i - 1][$j - 1] + ($i + 1) * $eulerian_num[$i][$j - 1];\n            }\n        }\n    }\n    return $eulerian_num[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcj5szphc.php:22\nStack trace:\n#0 /tmp/tmpcj5szphc.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpcj5szphc.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian_num = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $eulerian_num[$i][0] = 1;\n    }\n    for ($i = 1; $i <= $m; $i++) {\n        $eulerian_num[0][$i] = 0;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = 1; $j <= $m; $j++) {\n            $eulerian_num[$i][$j] = $eulerian_num[$i - 1][$j - 1] + ($i + 1) * $eulerian_num[$i][$j - 1];\n        }\n    }\n    return $eulerian_num[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5gfxau66.php:24\nStack trace:\n#0 /tmp/tmp5gfxau66.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp5gfxau66.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $eulerian[$i][0] = 1;\n        for ($j = 1; $j <= $m; $j++) {\n            $eulerian[$i][$j] = $eulerian[$i][$j - 1] * ($n - $i + $j) / $j;\n        }\n    }\n    return $eulerian[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb0pcdr62.php:19\nStack trace:\n#0 /tmp/tmpb0pcdr62.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpb0pcdr62.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($m > $n) {\n        return 0;\n    }\n    if ($m == 0 || $m == $n) {\n        return 1;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmp0o32l1_0.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmptltx2mnr.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmptltx2mnr.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($m == 0 || $n == $m) {\n        return 1;\n    }\n    return ($n + 1 - $m) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmpvv9mk2m2.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian_num = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $eulerian_num[$i][0] = 1;\n        $eulerian_num[$i][$i] = 1;\n    }\n    for ($i = 2; $i <= $n; $i++) {\n        for ($j = 1; $j < $i; $j++) {\n            $eulerian_num[$i][$j] = $eulerian_num[$i - 1][$j - 1] + ($i - 1) * $eulerian_num[$i - 1][$j];\n        }\n    }\n    return $eulerian_num[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkye75q_b.php:22\nStack trace:\n#0 /tmp/tmpkye75q_b.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpkye75q_b.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $result = 1;\n    for ($i = 1; $i <= $m; $i++) {\n        $result *= $n - $i + 1;\n        $result /= $i;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkyh3ucra.php:17\nStack trace:\n#0 /tmp/tmpkyh3ucra.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpkyh3ucra.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    if ($n == $m) {\n        return 1;\n    }\n    return eulerian_num($n - 1, $m - 1) + ($n + 1) * eulerian_num($n, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0wrkm556.php:18\nStack trace:\n#0 /tmp/tmp0wrkm556.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp0wrkm556.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($m == 0 || $m == $n) {\n        return 1;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmpsxkd3hv0.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    if ($n == 1) {\n        return $m + 1;\n    }\n    if ($m == 1) {\n        return $n + 1;\n    }\n    return $n * eulerian_num($n - 1, $m) + $m * eulerian_num($n, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510568,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9zp0u0pb.php:22\nStack trace:\n#0 /tmp/tmp9zp0u0pb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp9zp0u0pb.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy5olxhpx.php:18\nStack trace:\n#0 /tmp/tmpy5olxhpx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpy5olxhpx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy5olxhpx.php:18\nStack trace:\n#0 /tmp/tmpy5olxhpx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpy5olxhpx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n < 0 || $m < 0 || $n < $m) {\n        return 0;\n    }\n    if ($n == 0 && $m == 0) {\n        return 1;\n    }\n    return ($n - $m + 1) * eulerian_num($n - 1, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4pxqm66_.php:18\nStack trace:\n#0 /tmp/tmp4pxqm66_.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4pxqm66_.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $eulerian[$i][0] = 1;\n    }\n    for ($i = 1; $i <= $m; $i++) {\n        $eulerian[0][$i] = 0;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = 1; $j <= $m; $j++) {\n            $eulerian[$i][$j] = $eulerian[$i - 1][$j - 1] + ($i + 1) * $eulerian[$i][$j - 1];\n        }\n    }\n    return $eulerian[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw8_mpwgk.php:24\nStack trace:\n#0 /tmp/tmpw8_mpwgk.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpw8_mpwgk.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    return ($n + 1 - $m) * eulerian_num($n - 1, $m) + $m * eulerian_num($n - 1, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns3ldd08.php:15\nStack trace:\n#0 /tmp/tmpns3ldd08.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpns3ldd08.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy5olxhpx.php:18\nStack trace:\n#0 /tmp/tmpy5olxhpx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpy5olxhpx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $arr = array();\n    for ($i = 0; $i <= $n; $i++) {\n        for ($j = 0; $j <= $m; $j++) {\n            if ($i == 0 || $j == 0) {\n                $arr[$i][$j] = 1;\n            } else {\n                $arr[$i][$j] = $arr[$i - 1][$j - 1] + $arr[$i][$j - 1];\n            }\n        }\n    }\n    return $arr[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbd8r5bwb.php:22\nStack trace:\n#0 /tmp/tmpbd8r5bwb.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpbd8r5bwb.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmptltx2mnr.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    } elseif ($m == 0) {\n        return 0;\n    } elseif ($m == 1) {\n        return 1;\n    } elseif ($m > $n) {\n        return 0;\n    } else {\n        return eulerian_num($n - 1, $m - 1) + ($n + 1) * eulerian_num($n - 1, $m);\n    }\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpztbxt5q5.php:22\nStack trace:\n#0 /tmp/tmpztbxt5q5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpztbxt5q5.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    if ($n == 1 || $m == 1) {\n        return $n + $m - 1;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz16vh2fs.php:18\nStack trace:\n#0 /tmp/tmpz16vh2fs.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpz16vh2fs.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    } else if ($m == 0) {\n        return 0;\n    } else if ($n == $m) {\n        return 1;\n    } else {\n        return eulerian_num($n - 1, $m - 1) + ($n + 1) * eulerian_num($n, $m - 1);\n    }\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbxc3b_lw.php:20\nStack trace:\n#0 /tmp/tmpbxc3b_lw.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpbxc3b_lw.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    } else if ($m == 0) {\n        return 0;\n    } else {\n        return ($n - $m + 1) * eulerian_num($n - 1, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n    }\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ig65p_0.php:18\nStack trace:\n#0 /tmp/tmp9ig65p_0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp9ig65p_0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n < 0 || $m < 0 || $n < $m) {\n        return 0;\n    }\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    return ($n - $m + 1) * eulerian_num($n - 1, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4n70h_sa.php:18\nStack trace:\n#0 /tmp/tmp4n70h_sa.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4n70h_sa.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian_num = 1;\n    for ($i = 1; $i <= $m; $i++) {\n        $eulerian_num *= ($n + 1 - $i) / $i;\n    }\n    return $eulerian_num;\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9gs2n7nz.php:16\nStack trace:\n#0 /tmp/tmp9gs2n7nz.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp9gs2n7nz.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($m == 0 || $m == $n) {\n        return 1;\n    }\n    return eulerian_num($n - 1, $m - 1) + ($n - $m) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6xzndy3t.php:15\nStack trace:\n#0 /tmp/tmp6xzndy3t.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp6xzndy3t.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    return ($n + 1 - $m) * eulerian_num($n - 1, $m) + $m * eulerian_num($n - 1, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns3ldd08.php:15\nStack trace:\n#0 /tmp/tmpns3ldd08.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpns3ldd08.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($m > $n) {\n        return 0;\n    }\n    if ($m == 0) {\n        return 1;\n    }\n    if ($m == 1) {\n        return $n;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m - 2);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp07qgb1iv.php:21\nStack trace:\n#0 /tmp/tmp07qgb1iv.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp07qgb1iv.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $eulerian[$i][0] = 1;\n        $eulerian[0][$i] = 1;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = 1; $j <= $m; $j++) {\n            $eulerian[$i][$j] = $eulerian[$i - 1][$j - 1] + ($i + 1) * $eulerian[$i][$j - 1];\n        }\n    }\n    return $eulerian[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj8y1yamt.php:22\nStack trace:\n#0 /tmp/tmpj8y1yamt.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpj8y1yamt.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmptltx2mnr.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian_num = 0;\n    for ($k = 0; $k <= $m; $k++) {\n        $eulerian_num += (-1) ** ($k + $m) * binomial_coefficient($m, $k) * binomial_coefficient($n + $k, $n);\n    }\n    return $eulerian_num;\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function binomial_coefficient() in /tmp/tmphzwwk1nm.php:6\nStack trace:\n#0 /tmp/tmphzwwk1nm.php(12): eulerian_num(3, 1)\n#1 /tmp/tmphzwwk1nm.php(16): candidate(3, 1)\n#2 /tmp/tmphzwwk1nm.php(21): test()\n#3 {main}\n  thrown in /tmp/tmphzwwk1nm.php on line 6\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 && $m == 0) {\n        return 1;\n    } else if ($n == 0 || $m == 0) {\n        return 0;\n    } else {\n        return ($n - $m + 1) * eulerian_num($n - 1, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n    }\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppp57ig0d.php:19\nStack trace:\n#0 /tmp/tmppp57ig0d.php(23): test()\n#1 {main}\n  thrown in /tmp/tmppp57ig0d.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $eulerian[$i][0] = 1;\n        $eulerian[$i][$i] = 1;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = 1; $j < $i; $j++) {\n            $eulerian[$i][$j] = $eulerian[$i - 1][$j - 1] + ($i - 1) * $eulerian[$i - 1][$j];\n        }\n    }\n    return $eulerian[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvc2y7029.php:22\nStack trace:\n#0 /tmp/tmpvc2y7029.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpvc2y7029.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmptltx2mnr.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $eulerian[$i][0] = 1;\n    }\n    for ($i = 1; $i <= $m; $i++) {\n        $eulerian[0][$i] = 0;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = 1; $j <= $m; $j++) {\n            $eulerian[$i][$j] = $eulerian[$i - 1][$j - 1] + ($i + 1) * $eulerian[$i][$j - 1];\n        }\n    }\n    return $eulerian[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw8_mpwgk.php:24\nStack trace:\n#0 /tmp/tmpw8_mpwgk.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpw8_mpwgk.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $result = 0;\n    for ($i = 0; $i <= $m; $i++) {\n        $result += pow(-1, $i) * binomial_coefficient($m, $i) * binomial_coefficient($n + $i, $n);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function binomial_coefficient() in /tmp/tmpxafebrgl.php:6\nStack trace:\n#0 /tmp/tmpxafebrgl.php(12): eulerian_num(3, 1)\n#1 /tmp/tmpxafebrgl.php(16): candidate(3, 1)\n#2 /tmp/tmpxafebrgl.php(21): test()\n#3 {main}\n  thrown in /tmp/tmpxafebrgl.php on line 6\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    if ($n < $m) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj4evphhg.php:18\nStack trace:\n#0 /tmp/tmpj4evphhg.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpj4evphhg.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    if ($n < $m) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n - 1, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn1u9vfz4.php:18\nStack trace:\n#0 /tmp/tmpn1u9vfz4.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpn1u9vfz4.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($m > $n) {\n        return 0;\n    }\n    if ($m == 0 || $m == $n) {\n        return 1;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmp0o32l1_0.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    if ($n == 1) {\n        return $m + 1;\n    }\n    if ($m == 1) {\n        return $n + 1;\n    }\n    return eulerian_num($n - 1, $m) + $m * eulerian_num($n, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510568,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0e4120x0.php:22\nStack trace:\n#0 /tmp/tmp0e4120x0.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp0e4120x0.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n\tif ($n < 0 || $m < 0 || $n < $m) {\n\t\treturn 0;\n\t}\n\tif ($n == 0 || $m == 0) {\n\t\treturn 1;\n\t}\n\treturn ($n - $m + 1) * eulerian_num($n - 1, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphv4inbjx.php:18\nStack trace:\n#0 /tmp/tmphv4inbjx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmphv4inbjx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    return ($n + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpffuef_q4.php:15\nStack trace:\n#0 /tmp/tmpffuef_q4.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpffuef_q4.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian_num = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $eulerian_num[$i][0] = 1;\n        $eulerian_num[$i][$i + 1] = 1;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = 1; $j <= $i; $j++) {\n            $eulerian_num[$i][$j] = $eulerian_num[$i - 1][$j - 1] + ($i + 1 - $j) * $eulerian_num[$i - 1][$j];\n        }\n    }\n    return $eulerian_num[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo52knoaj.php:22\nStack trace:\n#0 /tmp/tmpo52knoaj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpo52knoaj.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    return ($n + $m - 1) * eulerian_num($n - 1, $m) + ($n - 1) * eulerian_num($n, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmuzr8jtc.php:15\nStack trace:\n#0 /tmp/tmpmuzr8jtc.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpmuzr8jtc.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($m == 0) {\n        return 1;\n    } else if ($n == 0) {\n        return 0;\n    } else {\n        return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n    }\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgnf_v0si.php:18\nStack trace:\n#0 /tmp/tmpgnf_v0si.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpgnf_v0si.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmptltx2mnr.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    if ($n == $m) {\n        return 1;\n    }\n    return ($n - $m + 1) * eulerian_num($n - 1, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg2nikil9.php:22\nStack trace:\n#0 /tmp/tmpg2nikil9.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpg2nikil9.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($m > $n) {\n        return 0;\n    }\n    if ($m == 0 || $m == $n) {\n        return 1;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmp0o32l1_0.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $eulerian[$i] = array();\n        for ($j = 0; $j <= $m; $j++) {\n            if ($i == 0) {\n                $eulerian[$i][$j] = 1;\n            } elseif ($j == 0) {\n                $eulerian[$i][$j] = 0;\n            } else {\n                $eulerian[$i][$j] = $eulerian[$i - 1][$j - 1] + ($i + 1) * $eulerian[$i][$j - 1];\n            }\n        }\n    }\n    return $eulerian[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvf08o5pu.php:25\nStack trace:\n#0 /tmp/tmpvf08o5pu.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpvf08o5pu.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $eulerian[$i][0] = 1;\n    }\n    for ($i = 1; $i <= $m; $i++) {\n        $eulerian[0][$i] = 0;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = 1; $j <= $m; $j++) {\n            $eulerian[$i][$j] = ($i - $j) * $eulerian[$i - 1][$j] + $eulerian[$i - 1][$j - 1];\n        }\n    }\n    return $eulerian[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp78y9x462.php:24\nStack trace:\n#0 /tmp/tmp78y9x462.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp78y9x462.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian = array();\n    for ($i = 0; $i <= $n; $i++) {\n        for ($j = 0; $j <= $m; $j++) {\n            if ($i == 0) {\n                $eulerian[$i][$j] = 1;\n            } elseif ($j == 0) {\n                $eulerian[$i][$j] = 0;\n            } else {\n                $eulerian[$i][$j] = ($i - $j + 1) * $eulerian[$i - 1][$j] + $j * $eulerian[$i - 1][$j - 1];\n            }\n        }\n    }\n    return $eulerian[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmgiefolc.php:24\nStack trace:\n#0 /tmp/tmpmgiefolc.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpmgiefolc.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmptltx2mnr.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy5olxhpx.php:18\nStack trace:\n#0 /tmp/tmpy5olxhpx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpy5olxhpx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n < $m) {\n        return 0;\n    }\n    if ($n == $m) {\n        return 1;\n    }\n    return ($n - $m) * eulerian_num($n - 1, $m) + ($m + 1) * eulerian_num($n - 1, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmpfuix2rx9.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($m == 0 || $n == $m) {\n        return 1;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmp7zmkrrxi.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    if ($n == 1) {\n        return $m + 1;\n    }\n    if ($m == 1) {\n        return $n + 1;\n    }\n    return ($n - 1) * eulerian_num($n, $m - 1) + ($m - 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbuj5qu5c.php:22\nStack trace:\n#0 /tmp/tmpbuj5qu5c.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpbuj5qu5c.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    if ($n == 1 || $m == 1) {\n        return $n + $m - 1;\n    }\n    return ($n - 1) * eulerian_num($n, $m - 1) + ($m - 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplb_x5tl2.php:18\nStack trace:\n#0 /tmp/tmplb_x5tl2.php(23): test()\n#1 {main}\n  thrown in /tmp/tmplb_x5tl2.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian_num = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $eulerian_num[$i][0] = 1;\n    }\n    for ($j = 1; $j <= $m; $j++) {\n        $eulerian_num[0][$j] = 0;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = 1; $j <= $m; $j++) {\n            $eulerian_num[$i][$j] = ($eulerian_num[$i - 1][$j - 1] + ($i - 1) * $eulerian_num[$i - 1][$j]);\n        }\n    }\n    return $eulerian_num[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppi83qqjm.php:24\nStack trace:\n#0 /tmp/tmppi83qqjm.php(29): test()\n#1 {main}\n  thrown in /tmp/tmppi83qqjm.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n < 0 || $m < 0 || $n < $m) {\n        return 0;\n    }\n    if ($n == 0 && $m == 0) {\n        return 1;\n    }\n    return ($n - $m) * eulerian_num($n - 1, $m) + ($m + 1) * eulerian_num($n - 1, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ygf9qt4.php:18\nStack trace:\n#0 /tmp/tmp0ygf9qt4.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp0ygf9qt4.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    if ($n == $m) {\n        return 1;\n    }\n    return eulerian_num($n - 1, $m - 1) + ($n + 1) * eulerian_num($n, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0wrkm556.php:18\nStack trace:\n#0 /tmp/tmp0wrkm556.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp0wrkm556.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian_num = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $eulerian_num[$i] = array();\n        for ($j = 0; $j <= $m; $j++) {\n            $eulerian_num[$i][$j] = 0;\n        }\n    }\n    $eulerian_num[0][0] = 1;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = 1; $j <= $m; $j++) {\n            $eulerian_num[$i][$j] = ($eulerian_num[$i - 1][$j - 1] + ($i - 1) * $eulerian_num[$i - 1][$j]);\n        }\n    }\n    return $eulerian_num[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl2w1hkro.php:25\nStack trace:\n#0 /tmp/tmpl2w1hkro.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpl2w1hkro.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    } else if ($m == 0) {\n        return 0;\n    } else if ($n == $m) {\n        return 1;\n    } else {\n        return eulerian_num($n - 1, $m - 1) + ($n + 1) * eulerian_num($n, $m - 1);\n    }\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbxc3b_lw.php:20\nStack trace:\n#0 /tmp/tmpbxc3b_lw.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpbxc3b_lw.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n\t$eulerian = array();\n\tfor ($i = 0; $i <= $n; $i++) {\n\t\t$eulerian[$i] = array();\n\t\tfor ($j = 0; $j <= $m; $j++) {\n\t\t\t$eulerian[$i][$j] = 0;\n\t\t}\n\t}\n\t$eulerian[0][0] = 1;\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\tfor ($j = 1; $j <= $m; $j++) {\n\t\t\t$eulerian[$i][$j] = $eulerian[$i - 1][$j - 1] + ($i - 1) * $eulerian[$i - 1][$j];\n\t\t}\n\t}\n\treturn $eulerian[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgq_j1uht.php:25\nStack trace:\n#0 /tmp/tmpgq_j1uht.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpgq_j1uht.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n < 0 || $m < 0) {\n        return 0;\n    }\n    if ($n == 0 && $m == 0) {\n        return 1;\n    }\n    if ($n == 0 || $m == 0) {\n        return 0;\n    }\n    return ($n - $m) * eulerian_num($n - 1, $m) + ($m + 1) * eulerian_num($n - 1, $m - 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ue4_v6w.php:22\nStack trace:\n#0 /tmp/tmp6ue4_v6w.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6ue4_v6w.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    } else {\n        return eulerian_num($n - 1, $m) + $m * eulerian_num($n - 1, $m - 1);\n    }\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp514ofzpx.php:17\nStack trace:\n#0 /tmp/tmp514ofzpx.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp514ofzpx.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy5olxhpx.php:18\nStack trace:\n#0 /tmp/tmpy5olxhpx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpy5olxhpx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $a = array();\n    for ($i = 0; $i <= $n; $i++) {\n        $a[$i] = array();\n        for ($j = 0; $j <= $m; $j++) {\n            $a[$i][$j] = 0;\n        }\n    }\n    $a[0][0] = 1;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = 1; $j <= $m; $j++) {\n            $a[$i][$j] = ($a[$i - 1][$j - 1] + ($i - 1) * $a[$i - 1][$j]) / $j;\n        }\n    }\n    return $a[$n][$m];\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpotmgvmrj.php:25\nStack trace:\n#0 /tmp/tmpotmgvmrj.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpotmgvmrj.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian_num = 0;\n    $eulerian_num = pow(-1, $m) * binomial_coefficient($n + 1, $m);\n    return $eulerian_num;\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function binomial_coefficient() in /tmp/tmpz37mgiv0.php:5\nStack trace:\n#0 /tmp/tmpz37mgiv0.php(10): eulerian_num(3, 1)\n#1 /tmp/tmpz37mgiv0.php(14): candidate(3, 1)\n#2 /tmp/tmpz37mgiv0.php(19): test()\n#3 {main}\n  thrown in /tmp/tmpz37mgiv0.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($m > $n) {\n        return 0;\n    }\n    if ($m == 0) {\n        return 1;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510568,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmpo8o7u04h.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    return ($n + $m - 1) * eulerian_num($n - 1, $m) + ($n + $m - 1) * eulerian_num($n, $m - 1);\n}\n\necho eulerian_num(2, 3);\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "228\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph0r9jmia.php:16\nStack trace:\n#0 /tmp/tmph0r9jmia.php(21): test()\n#1 {main}\n  thrown in /tmp/tmph0r9jmia.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    $eulerian_num = 1;\n    for ($i = 0; $i < $m; $i++) {\n        $eulerian_num = $eulerian_num * ($n - $i) / ($i + 1);\n    }\n    return $eulerian_num;\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl16qo2jb.php:16\nStack trace:\n#0 /tmp/tmpl16qo2jb.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpl16qo2jb.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    }\n    return ($n + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n - 1, $m);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpffuef_q4.php:15\nStack trace:\n#0 /tmp/tmpffuef_q4.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpffuef_q4.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0 || $m == 0) {\n        return 1;\n    } else {\n        return ($n + $m - 1) * eulerian_num($n, $m - 1) / $m;\n    }\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzf_9l1ct.php:16\nStack trace:\n#0 /tmp/tmpzf_9l1ct.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpzf_9l1ct.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num($n, $m) {\n    if ($n == 0) {\n        return 1;\n    }\n    if ($m == 0) {\n        return 0;\n    }\n    return ($n - $m + 1) * eulerian_num($n, $m - 1) + ($m + 1) * eulerian_num($n, $m + 1);\n}\n\nfunction candidate(...$args) {\n    return eulerian_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3, 1) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 1) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 3) !== 26) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510567,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmptltx2mnr.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
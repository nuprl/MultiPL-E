{
  "name": "mbpp_740_tuple_to_dict",
  "language": "php",
  "prompt": "<?php\n// Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nfunction tuple_to_dict($test_tup) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_740_tuple_to_dict.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return tuple_to_dict(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, 10, 13, 5)) !== array(1 => 5, 7 => 10, 13 => 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6)) !== array(1 => 2, 3 => 4, 5 => 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 10, 11, 12)) !== array(7 => 8, 9 => 10, 11 => 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $test_dict = array();\n    for ($i = 0; $i < count($test_tup); $i += 2) {\n        $test_dict[$test_tup[$i]] = $test_tup[$i + 1];\n    }\n    return $test_dict;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6);\n$test_dict = tuple_to_dict($test_tup);\nprint_r($test_dict);",
    "    $dict = array();\n    for ($i = 0; $i < count($test_tup); $i += 2) {\n        $dict[$test_tup[$i]] = $test_tup[$i + 1];\n    }\n    return $dict;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8);\nprint_r(tuple_to_dict($test_tup));",
    "    $test_dict = array();\n    for ($i = 0; $i < count($test_tup); $i += 2) {\n        $test_dict[$test_tup[$i]] = $test_tup[$i + 1];\n    }\n    return $test_dict;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6);\nprint_r(tuple_to_dict($test_tup));",
    "    $dict = array();\n    for ($i = 0; $i < sizeof($test_tup); $i += 2) {\n        $dict[$test_tup[$i]] = $test_tup[$i + 1];\n    }\n    return $dict;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6);\n$dict = tuple_to_dict($test_tup);\nprint_r($dict);",
    "    $dict = array();\n    for ($i = 0; $i < count($test_tup); $i++) {\n        if ($i % 2 == 0) {\n            $dict[$test_tup[$i]] = $test_tup[$i + 1];\n        }\n    }\n    return $dict;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(tuple_to_dict($test_tup));",
    "    $test_dict = array();\n    for ($i = 0; $i < count($test_tup); $i++) {\n        $test_dict[$test_tup[$i]] = $test_tup[$i + 1];\n        $i++;\n    }\n    return $test_dict;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$test_dict = tuple_to_dict($test_tup);\nprint_r($test_dict);",
    "    $res_dict = array();\n    for ($i = 0; $i < sizeof($test_tup); $i += 2) {\n        $res_dict[$test_tup[$i]] = $test_tup[$i + 1];\n    }\n    return $res_dict;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6);\nprint_r(tuple_to_dict($test_tup));",
    "    $dict = array();\n    $n = count($test_tup);\n    for ($i = 0; $i < $n; $i += 2) {\n        $dict[$test_tup[$i]] = $test_tup[$i + 1];\n    }\n    return $dict;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8);\n$dict = tuple_to_dict($test_tup);\necho \"The dictionary is :\\n\";\nprint_r($dict);",
    "    $test_dict = array();\n    for ($i = 0; $i < count($test_tup); $i += 2) {\n        $test_dict[$test_tup[$i]] = $test_tup[$i + 1];\n    }\n    return $test_dict;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6);\n$test_dict = tuple_to_dict($test_tup);\nprint_r($test_dict);",
    "    $dict = array();\n    for ($i = 0; $i < count($test_tup); $i += 2) {\n        $dict[$test_tup[$i]] = $test_tup[$i + 1];\n    }\n    return $dict;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6);\nprint_r(tuple_to_dict($test_tup));",
    "    $test_dict = array();\n    for($i = 0; $i < count($test_tup); $i++) {\n        if($i % 2 == 0) {\n            $test_dict[$test_tup[$i]] = $test_tup[$i + 1];\n        }\n    }\n    return $test_dict;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6);\nprint_r(tuple_to_dict($test_tup));",
    "    $test_dict = array();\n    $n = count($test_tup);\n    for ($i = 0; $i < $n; $i++) {\n        $test_dict[$test_tup[$i]] = $test_tup[$i + 1];\n        $i++;\n    }\n    return $test_dict;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\nprint_r(tuple_to_dict($test_tup));",
    "    $test_dict = array();\n    for ($i = 0; $i < count($test_tup); $i += 2) {\n        $test_dict[$test_tup[$i]] = $test_tup[$i + 1];\n    }\n    return $test_dict;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(tuple_to_dict($test_tup));",
    "    $dict = array();\n    for ($i = 0; $i < count($test_tup); $i++) {\n        $dict[$test_tup[$i]] = $test_tup[$i + 1];\n        $i++;\n    }\n    return $dict;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8);\nprint_r(tuple_to_dict($test_tup));",
    "    $test_dict = array();\n    for ($i = 0; $i < count($test_tup); $i++) {\n        if ($i % 2 == 0) {\n            $test_dict[$test_tup[$i]] = $test_tup[$i + 1];\n        }\n    }\n    return $test_dict;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8);\nprint_r(tuple_to_dict($test_tup));",
    "    $dict = array();\n    for ($i = 0; $i < count($test_tup); $i++) {\n        if ($i % 2 == 0) {\n            $dict[$test_tup[$i]] = $test_tup[$i + 1];\n        }\n    }\n    return $dict;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\nprint_r(tuple_to_dict($test_tup));\n",
    "    $dict = array();\n    for ($i = 0; $i < count($test_tup); $i += 2) {\n        $dict[$test_tup[$i]] = $test_tup[$i + 1];\n    }\n    return $dict;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8);\nprint_r(tuple_to_dict($test_tup));",
    "    $res_dict = array();\n    for ($i = 0; $i < sizeof($test_tup); $i += 2) {\n        $res_dict[$test_tup[$i]] = $test_tup[$i + 1];\n    }\n    return $res_dict;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6);\nprint_r(tuple_to_dict($test_tup));",
    "    $dict = array();\n    for($i = 0; $i < count($test_tup); $i += 2) {\n        $dict[$test_tup[$i]] = $test_tup[$i + 1];\n    }\n    return $dict;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6);\nprint_r(tuple_to_dict($test_tup));",
    "    $dict = array();\n    for ($i = 0; $i < count($test_tup); $i += 2) {\n        $dict[$test_tup[$i]] = $test_tup[$i + 1];\n    }\n    return $dict;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8);\nprint_r(tuple_to_dict($test_tup));"
  ]
}
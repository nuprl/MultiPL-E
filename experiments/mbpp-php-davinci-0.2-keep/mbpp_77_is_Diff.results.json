{
  "name": "mbpp_77_is_Diff",
  "language": "php",
  "prompt": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_77_is_Diff.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $n = (string)$n;\n    $len = strlen($n);\n    $sum1 = 0;\n    $sum2 = 0;\n    for ($i=0; $i < $len; $i++) { \n        if ($i % 2 == 0) {\n            $sum1 += $n[$i];\n        } else {\n            $sum2 += $n[$i];\n        }\n    }\n    $diff = abs($sum1 - $sum2);\n    if ($diff % 11 == 0) {\n        return \"True\";\n    } else {\n        return \"False\";\n    }\n}\n\necho is_Diff(1234);\necho \"\\n\";\necho is_Diff(1214);\necho \"\\n\";\necho is_Diff(12);\necho \"\\n\";\necho is_Diff(12345);\necho \"\\n\";\necho is_Diff(123456);\necho \"\\n\";\necho is_Diff(1234567);\necho \"\\n\";\necho is_Diff(12345678);\necho \"\\n\";\necho is_Diff(123456789);\necho \"\\n\";\necho is_Diff(1234567890);\necho \"\\n\";\necho is_Diff(12345678901);\necho \"\\n\";\necho is_Diff(123456789012);\necho \"\\n\";\necho is_Diff(1234567890123);\necho \"\\n\";\necho is_Diff(12345678901234);\necho \"\\n\";\necho is_Diff(123456789012345);\necho \"\\n\";\necho is_Diff(1234567890123456);\necho \"\\n\";\necho is_Diff(12345678901234567);\necho \"\\n\";\necho is_Diff(123456789012345678);\necho \"\\n\";\necho is_Diff(1234567890123456789);\necho \"\\n\";\necho is_Diff(12345678901234567890);\necho \"\\n\";\necho is_Diff(123456789012345678901);\necho \"\\n\";\necho is_Diff(1234567890123456789012);\necho\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509881,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpr_e73olj.php on line 65\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $n = strval($n);\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n    }\n    $diff = $even - $odd;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Diff(1234) ? \"True\" : \"False\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509882,
      "stdout": "False",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_sum = 0;\n    $even_sum = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_sum += $n % 10;\n        } else {\n            $odd_sum += $n % 10;\n        }\n        $n = (int)($n / 10);\n        $i++;\n    }\n    if (abs($odd_sum - $even_sum) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 12;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509882,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $n = str_split($n);\n    $sum = 0;\n    for ($i = 0; $i < count($n); $i++) {\n        if ($i % 2 == 0) {\n            $sum += $n[$i];\n        } else {\n            $sum -= $n[$i];\n        }\n    }\n    if ($sum % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"123456789\";\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509881,
      "stdout": "Not Divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd += $n[$i];\n        } else {\n            $even += $n[$i];\n        }\n    }\n    if (abs($odd - $even) % 11 == 0) {\n        return true;\n    }\n    return false;\n}\n\n$n = \"1234\";\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509881,
      "stdout": "No\nWarning: Trying to access array offset on value of type int in /tmp/tmp_un20x7q.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp_un20x7q.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp_un20x7q.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp_un20x7q.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp_un20x7q.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_un20x7q.php:31\nStack trace:\n#0 /tmp/tmp_un20x7q.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp_un20x7q.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int)($n / 10);\n        $even_digits += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509881,
      "stdout": "Not Divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum = 0;\n    $diff = 0;\n    $num = $n;\n    while ($num > 0) {\n        $sum += $num % 10;\n        $num = floor($num / 10);\n        $diff += $num % 10;\n        $num = floor($num / 10);\n    }\n    if ($sum - $diff == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509882,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0)\n            $odd_digits += $n % 10;\n        else\n            $even_digits += $n % 10;\n        $n = $n / 10;\n        $i++;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n$n = intval(fgets(STDIN));\nif (is_Diff($n))\n    echo \"Difference is divisible by 11\";\nelse\n    echo \"Difference is not divisible by 11\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509887,
      "stdout": "Difference is divisible by 11\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmp28hz8v35.php on line 11\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmp28hz8v35.php on line 9\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmp28hz8v35.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmp28hz8v35.php on line 9\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmp28hz8v35.php on line 11\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmp28hz8v35.php on line 9\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmp28hz8v35.php on line 11\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmp28hz8v35.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmp28hz8v35.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmp28hz8v35.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmp28hz8v35.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmp28hz8v35.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmp28hz8v35.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmp28hz8v35.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmp28hz8v35.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmp28hz8v35.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmp28hz8v35.php on line 11\n\nDeprecated: Implicit conversion from float 1.234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd += $n[$i];\n        } else {\n            $even += $n[$i];\n        }\n    }\n    if (abs($odd - $even) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"123456789\";\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509882,
      "stdout": "No\nWarning: Trying to access array offset on value of type int in /tmp/tmpocv_2l0n.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpocv_2l0n.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpocv_2l0n.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpocv_2l0n.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpocv_2l0n.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpocv_2l0n.php:32\nStack trace:\n#0 /tmp/tmpocv_2l0n.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpocv_2l0n.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_sum = 0;\n    $even_sum = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_sum += $n % 10;\n        } else {\n            $odd_sum += $n % 10;\n        }\n        $n = (int) ($n / 10);\n        $i++;\n    }\n    if (abs($odd_sum - $even_sum) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509882,
      "stdout": "Divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 123456789;\nif (is_Diff($n))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509882,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $i = 0;\n    $n = (string) $n;\n    $len = strlen($n);\n    while ($i < $len) {\n        if ($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n        $i++;\n    }\n    if ($even - $odd == 0 || $even - $odd == 11 || $even - $odd == -11) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 1234;\nif (is_Diff($n)) {\n    echo \"$n is divisible by 11\";\n} else {\n    echo \"$n is not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509881,
      "stdout": "1234 is not divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_digits += $n % 10;\n        } else {\n            $odd_digits += $n % 10;\n        }\n        $n = (int)($n / 10);\n        $i++;\n    }\n    if (abs($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(trim(fgets(STDIN)));\nif (is_Diff($n)) {\n    echo \"YES\";\n} else {\n    echo \"NO\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509881,
      "stdout": "YES",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $count = 0;\n    while ($n != 0) {\n        if ($count % 2 == 0) {\n            $odd_digits += $n % 10;\n        } else {\n            $even_digits += $n % 10;\n        }\n        $n = (int) ($n / 10);\n        $count++;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = intval(readline());\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509882,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmpv3il_uaq.php:19\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpv3il_uaq.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $count = 0;\n    while ($n != 0) {\n        if ($count % 2 == 0) {\n            $odd_digits += $n % 10;\n        } else {\n            $even_digits += $n % 10;\n        }\n        $n = $n / 10;\n        $count++;\n    }\n    if (($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(readline());\nif (is_Diff($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509882,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmps9dume81.php:23\nStack trace:\n#0 {main}\n  thrown in /tmp/tmps9dume81.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = $n / 10;\n        $even_digits += $n % 10;\n        $n = $n / 10;\n    }\n    $diff = $odd_digits - $even_digits;\n    if ($diff % 11 == 0) {\n        return true;\n    }\n    return false;\n}\n\necho is_Diff(121) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(12) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(123) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(1234) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(12345) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(123456) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(1234567) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(12345678) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(123456789) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(1234567890) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(12345678901) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(123456789012) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(1234567890123) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(12345678901234) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(123456789012345) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(1234567890123456) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(12345678901\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509881,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpwuk1iakq.php on line 52\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_pos = 0;\n    $even_pos = 0;\n    $i = 0;\n    while ($n != 0) {\n        $rem = $n % 10;\n        if ($i % 2 == 0) {\n            $odd_pos = $odd_pos + $rem;\n        } else {\n            $even_pos = $even_pos + $rem;\n        }\n        $n = $n / 10;\n        $i++;\n    }\n    if (($odd_pos - $even_pos) % 11 == 0) {\n        return \"True\";\n    } else {\n        return \"False\";\n    }\n}\necho is_Diff(1234);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509883,
      "stdout": "\nDeprecated: Implicit conversion from float 123.4 to int loses precision in /tmp/tmpprknvhi0.php on line 8\n\nDeprecated: Implicit conversion from float 12.34 to int loses precision in /tmp/tmpprknvhi0.php on line 8\n\nDeprecated: Implicit conversion from float 1.234 to int loses precision in /tmp/tmpprknvhi0.php on line 8\n\nDeprecated: Implicit conversion from float 0.1234 to int loses precision in /tmp/tmpprknvhi0.php on line 8\n\nDeprecated: Implicit conversion from float 0.01234 to int loses precision in /tmp/tmpprknvhi0.php on line 8\n\nDeprecated: Implicit conversion from float 0.001234 to int loses precision in /tmp/tmpprknvhi0.php on line 8\n\nDeprecated: Implicit conversion from float 0.00012340000000000002 to int loses precision in /tmp/tmpprknvhi0.php on line 8\n\nDeprecated: Implicit conversion from float 1.2340000000000002E-5 to int loses precision in /tmp/tmpprknvhi0.php on line 8\n\nDeprecated: Implicit conversion from float 1.2340000000000002E-6 to int loses precision in /tmp/tmpprknvhi0.php on line 8\n\nDeprecated: Implicit conversion from float 1.234E-7 to int loses precision in /tmp/tmpprknvhi0.php on line 8\n\nDeprecated: Implicit conversion from float 1.234E-8 to int loses precision in /tmp/tmpprknvhi0.php on line 8\n\nDeprecated: Implicit conversion from float 1.234E-9 to int loses precision in /tmp/tmpprknvhi0.php on line 8\n\nDeprecated: Implicit conversion from float 1.234E-10 to int loses precision in /tmp/tmpprknvhi0.php on line 8\n\nDeprecated: Implicit conversion from float 1.2340000000000001E-11 to int loses precision in /tmp/tmpprknvhi0.php on line 8\n\nDeprecated: Implicit conversion from float 1.2340000000000002E-12 to int loses precision in /tmp/tmpprknvhi0.php on line 8\n\nDeprecated: Implicit conversion from float 1.234E-13 to int loses precision in /tmp/tmpprknvhi0.php on line 8\n\nDeprecated: Implicit conversion from float 1.2340000000000001E-14 to int loses precision in /tmp/tmpprknvhi0.php on line 8\n\nDeprecated: Implicit conversion from float 1.2340000000000001E-15 to int loses precision in /tmp/tmpprknv",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd += $n[$i];\n        } else {\n            $even += $n[$i];\n        }\n    }\n    if (abs($odd - $even) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Diff(123456789) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123456780) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123456771) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123456762) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123456753) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123456744) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123456735) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123456726) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123456717) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123456708) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123456699) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123456690) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123456681) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123456672) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123456663) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123456654) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509881,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpi85ylix6.php on line 54\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n    }\n    return ($even - $odd) % 11 == 0;\n}\n\necho is_Diff(121);\necho \"\\n\";\necho is_Diff(12);\necho \"\\n\";\necho is_Diff(123);\necho \"\\n\";\necho is_Diff(1234);\necho \"\\n\";\necho is_Diff(12345);\necho \"\\n\";\necho is_Diff(123456);\necho \"\\n\";\necho is_Diff(1234567);\necho \"\\n\";\necho is_Diff(12345678);\necho \"\\n\";\necho is_Diff(123456789);\necho \"\\n\";\necho is_Diff(1234567890);\necho \"\\n\";\necho is_Diff(12345678901);\necho \"\\n\";\necho is_Diff(123456789012);\necho \"\\n\";\necho is_Diff(1234567890123);\necho \"\\n\";\necho is_Diff(12345678901234);\necho \"\\n\";\necho is_Diff(123456789012345);\necho \"\\n\";\necho is_Diff(1234567890123456);\necho \"\\n\";\necho is_Diff(12345678901234567);\necho \"\\n\";\necho is_Diff(123456789012345678);\necho \"\\n\";\necho is_Diff(1234567890123456789);\necho \"\\n\";\necho is_Diff(12345678901234567890);\necho \"\\n\";\necho is_Diff(123456789012345678901);\necho \"\\n\";\necho is_Diff(1234567890123456789012);\necho \"\\n\";\necho is_Diff(12345678901234567890123);\necho \"\\n\";\necho is_Diff(\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509882,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpro56d_cr.php on line 64\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $count = 0;\n    while ($n > 0) {\n        $count++;\n        if ($count % 2 == 0) {\n            $even_digits += $n % 10;\n        } else {\n            $odd_digits += $n % 10;\n        }\n        $n = (int) ($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509882,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $n = str_split($n);\n    for($i = 0; $i < count($n); $i++) {\n        if($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n    }\n    $diff = $even - $odd;\n    if($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"1234\";\nif(is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $n = strval($n);\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n    }\n    if ($even - $odd == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Diff(1234);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $n = str_split($n);\n    for ($i = 0; $i < count($n); $i++) {\n        if ($i % 2 == 0) {\n            $odd += $n[$i];\n        } else {\n            $even += $n[$i];\n        }\n    }\n    if ($odd - $even == 0 || $odd - $even % 11 == 0 || $even - $odd % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Diff(1234) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(1214) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(1244) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(1456) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(1567) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(2468) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(2478) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(2488) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(2498) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(2568) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(2578) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(2588) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(2598) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(2678) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(2688) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(2698) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(2788) ? 'true' : 'false';\necho\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpzf45cu3e.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $count = 0;\n    while ($n > 0) {\n        if ($count % 2 == 0) {\n            $odd_digits += $n % 10;\n        } else {\n            $even_digits += $n % 10;\n        }\n        $n = (int)($n / 10);\n        $count++;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    if ($n < 0) {\n        $n = -$n;\n    }\n    if ($n == 0) {\n        return true;\n    }\n    if ($n == 1) {\n        return false;\n    }\n    $even_digits_sum = 0;\n    $odd_digits_sum = 0;\n    $remaining_num = 0;\n    while ($n > 0) {\n        $remaining_num = intval($n / 10);\n        $odd_digits_sum += $n - $remaining_num * 10;\n        $n = $remaining_num;\n        $remaining_num = intval($n / 10);\n        $even_digits_sum += $n - $remaining_num * 10;\n        $n = $remaining_num;\n    }\n    return is_Diff(abs($odd_digits_sum - $even_digits_sum));\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "Divisible by 11\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmpcrr3xcu0.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_pos = 0;\n    $even_pos = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd_pos += $n[$i];\n        } else {\n            $even_pos += $n[$i];\n        }\n    }\n    return ($odd_pos - $even_pos) % 11 == 0 ? true : false;\n}\n\n$n = \"1234567\";\necho is_Diff($n);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "\nWarning: Trying to access array offset on value of type int in /tmp/tmpbvjs71e1.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpbvjs71e1.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpbvjs71e1.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpbvjs71e1.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpbvjs71e1.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbvjs71e1.php:24\nStack trace:\n#0 /tmp/tmpbvjs71e1.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpbvjs71e1.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_pos = 0;\n    $even_pos = 0;\n    $i = 0;\n    while ($n != 0) {\n        if ($i % 2 == 0) {\n            $even_pos += $n % 10;\n        } else {\n            $odd_pos += $n % 10;\n        }\n        $n = (int)($n / 10);\n        $i++;\n    }\n    if (abs($odd_pos - $even_pos) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(trim(fgets(STDIN)));\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even += $n % 10;\n        } else {\n            $odd += $n % 10;\n        }\n        $i++;\n        $n = floor($n / 10);\n    }\n    return ($even - $odd) % 11 == 0;\n}\n\necho is_Diff(121);\necho is_Diff(12);\necho is_Diff(123);\necho is_Diff(1234);\necho is_Diff(12345);\necho is_Diff(123456);\necho is_Diff(1234567);\necho is_Diff(12345678);\necho is_Diff(123456789);\necho is_Diff(1234567890);\necho is_Diff(12345678901);\necho is_Diff(123456789012);\necho is_Diff(1234567890123);\necho is_Diff(12345678901234);\necho is_Diff(123456789012345);\necho is_Diff(1234567890123456);\necho is_Diff(12345678901234567);\necho is_Diff(123456789012345678);\necho is_Diff(1234567890123456789);\necho is_Diff(12345678901234567890);\necho is_Diff(123456789012345678901);\necho is_Diff(1234567890123456789012);\necho is_Diff(12345678901234567890123);\necho is_Diff(123456789012345678901234);\necho is_Diff(1234567890123456789012345);\necho is_Diff(12345678901234567890123456);\necho is_Diff(123456789012345678901234567);\necho is_Diff(1234567890123456789012345678);\necho is_Diff(12345678901234567890123456789);\necho is_Diff\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmp22v9ljqa.php on line 49\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $n = str_split($n);\n    $sum = 0;\n    for ($i = 0; $i < count($n); $i++) {\n        if ($i % 2 == 0) {\n            $sum += $n[$i];\n        } else {\n            $sum -= $n[$i];\n        }\n    }\n    if ($sum % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Diff(1234);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_sum = 0;\n    $even_sum = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_sum += $n % 10;\n        } else {\n            $odd_sum += $n % 10;\n        }\n        $n = (int)($n / 10);\n        $i++;\n    }\n    return ($even_sum - $odd_sum) % 11 == 0;\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"$n is divisible by 11\";\n} else {\n    echo \"$n is not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "123456789 is not divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $n = strval($n);\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n    }\n    if ($even - $odd == 0 || $even - $odd == 11 || $even - $odd == -11) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $n = str_split($n);\n    $sum1 = 0;\n    $sum2 = 0;\n    for ($i = 0; $i < count($n); $i++) {\n        if ($i % 2 == 0) {\n            $sum1 += $n[$i];\n        } else {\n            $sum2 += $n[$i];\n        }\n    }\n    if ($sum1 - $sum2 == 0 || $sum1 - $sum2 == 11 || $sum1 - $sum2 == -11) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Diff(1234);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_sum = 0;\n    $even_sum = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_sum += $n % 10;\n        } else {\n            $odd_sum += $n % 10;\n        }\n        $n = floor($n / 10);\n        $i++;\n    }\n    return ($odd_sum - $even_sum) % 11 == 0;\n}\n\n$n = intval(fgets(STDIN));\necho is_Diff($n) ? \"Yes\" : \"No\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $odd_digits += $n % 10;\n        } else {\n            $even_digits += $n % 10;\n        }\n        $i++;\n        $n /= 10;\n    }\n    return $odd_digits - $even_digits;\n}\n\n$n = 1234;\n$diff = is_Diff($n);\nif ($diff % 11 == 0) {\n    echo \"Number is divisible by 11\";\n} else {\n    echo \"Number is not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122698,
      "stdout": "\nDeprecated: Implicit conversion from float 123.4 to int loses precision in /tmp/tmp3f7fzwnz.php on line 11\n\nDeprecated: Implicit conversion from float 12.34 to int loses precision in /tmp/tmp3f7fzwnz.php on line 9\n\nDeprecated: Implicit conversion from float 1.234 to int loses precision in /tmp/tmp3f7fzwnz.php on line 11\n\nDeprecated: Implicit conversion from float 0.1234 to int loses precision in /tmp/tmp3f7fzwnz.php on line 9\n\nDeprecated: Implicit conversion from float 0.01234 to int loses precision in /tmp/tmp3f7fzwnz.php on line 11\n\nDeprecated: Implicit conversion from float 0.001234 to int loses precision in /tmp/tmp3f7fzwnz.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012340000000000002 to int loses precision in /tmp/tmp3f7fzwnz.php on line 11\n\nDeprecated: Implicit conversion from float 1.2340000000000002E-5 to int loses precision in /tmp/tmp3f7fzwnz.php on line 9\n\nDeprecated: Implicit conversion from float 1.2340000000000002E-6 to int loses precision in /tmp/tmp3f7fzwnz.php on line 11\n\nDeprecated: Implicit conversion from float 1.234E-7 to int loses precision in /tmp/tmp3f7fzwnz.php on line 9\n\nDeprecated: Implicit conversion from float 1.234E-8 to int loses precision in /tmp/tmp3f7fzwnz.php on line 11\n\nDeprecated: Implicit conversion from float 1.234E-9 to int loses precision in /tmp/tmp3f7fzwnz.php on line 9\n\nDeprecated: Implicit conversion from float 1.234E-10 to int loses precision in /tmp/tmp3f7fzwnz.php on line 11\n\nDeprecated: Implicit conversion from float 1.2340000000000001E-11 to int loses precision in /tmp/tmp3f7fzwnz.php on line 9\n\nDeprecated: Implicit conversion from float 1.2340000000000002E-12 to int loses precision in /tmp/tmp3f7fzwnz.php on line 11\n\nDeprecated: Implicit conversion from float 1.234E-13 to int loses precision in /tmp/tmp3f7fzwnz.php on line 9\n\nDeprecated: Implicit conversion from float 1.2340000000000001E-14 to int loses precision in /tmp/tmp3f7fzwnz.php on line 11\n\nDeprecated: Implicit conversion from float 1.2340000000000001E-15 to int loses precision in /tmp",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $str = (string)$n;\n    for ($i = 0; $i < strlen($str); $i++) {\n        if ($i % 2 == 0) {\n            $even += $str[$i];\n        } else {\n            $odd += $str[$i];\n        }\n    }\n    $diff = $even - $odd;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 1234;\nif (is_Diff($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "False",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum = 0;\n    $diff = 0;\n    $i = 0;\n    while ($n) {\n        if ($i % 2 == 0) {\n            $sum += $n % 10;\n        } else {\n            $diff += $n % 10;\n        }\n        $n = (int)($n / 10);\n        $i++;\n    }\n    if ($sum - $diff == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 1234;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $n = str_split($n);\n    $sum = 0;\n    for ($i = 0; $i < count($n); $i++) {\n        if ($i % 2 == 0) {\n            $sum += $n[$i];\n        } else {\n            $sum -= $n[$i];\n        }\n    }\n    if ($sum % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Diff(123456789) ? 'True' : 'False';\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "False",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_sum = 0;\n    $even_sum = 0;\n    $count = 0;\n    while ($n > 0) {\n        if ($count % 2 == 0) {\n            $even_sum += $n % 10;\n        } else {\n            $odd_sum += $n % 10;\n        }\n        $n = (int)($n / 10);\n        $count++;\n    }\n    return $odd_sum - $even_sum;\n}\n\n$n = 123456789;\n$diff = is_Diff($n);\nif ($diff % 11 == 0) {\n    echo \"$n is divisible by 11\";\n} else {\n    echo \"$n is not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "123456789 is not divisible by 11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3yt00_9w.php:31\nStack trace:\n#0 /tmp/tmp3yt00_9w.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3yt00_9w.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int)($n / 10);\n        $even_digits += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 1234;\nif (is_Diff($n))\n    echo \"Divisible by 11\";\nelse\n    echo \"Not Divisible by 11\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "Not Divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum = 0;\n    $diff = 0;\n    $i = 0;\n    while ($n > 0) {\n        $rem = $n % 10;\n        if ($i % 2 == 0) {\n            $sum += $rem;\n        } else {\n            $diff += $rem;\n        }\n        $n = $n / 10;\n        $i++;\n    }\n    if ($sum - $diff == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(readline());\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmpny7uenec.php:24\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpny7uenec.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $n = str_split($n);\n    $sum1 = 0;\n    $sum2 = 0;\n    for ($i = 0; $i < count($n); $i++) {\n        if ($i % 2 == 0) {\n            $sum1 += $n[$i];\n        } else {\n            $sum2 += $n[$i];\n        }\n    }\n    if ($sum1 - $sum2 == 0 || $sum1 - $sum2 == 11 || $sum1 - $sum2 == -11) {\n        return true;\n    } else {\n        return false;\n    }\n}\necho is_Diff(1234);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n  $n = str_split($n);\n  $sum = 0;\n  for ($i = 0; $i < count($n); $i++) {\n    if ($i % 2 == 0) {\n      $sum += $n[$i];\n    } else {\n      $sum -= $n[$i];\n    }\n  }\n  if ($sum % 11 == 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\necho is_Diff(123456789);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $i = 0;\n    while ($n != 0) {\n        $digit = $n % 10;\n        if ($i % 2 == 0) {\n            $odd += $digit;\n        } else {\n            $even += $digit;\n        }\n        $n = $n / 10;\n        $i++;\n    }\n    if ($odd - $even == 0) {\n        return \"True\";\n    } else {\n        return \"False\";\n    }\n}\n\necho is_Diff(121);\necho \"\\n\";\necho is_Diff(12);\necho \"\\n\";\necho is_Diff(123);\necho \"\\n\";\necho is_Diff(1234);\necho \"\\n\";\necho is_Diff(12345);\necho \"\\n\";\necho is_Diff(123456);\necho \"\\n\";\necho is_Diff(1234567);\necho \"\\n\";\necho is_Diff(12345678);\necho \"\\n\";\necho is_Diff(123456789);\necho \"\\n\";\necho is_Diff(1234567890);\necho \"\\n\";\necho is_Diff(12345678901);\necho \"\\n\";\necho is_Diff(123456789012);\necho \"\\n\";\necho is_Diff(1234567890123);\necho \"\\n\";\necho is_Diff(12345678901234);\necho \"\\n\";\necho is_Diff(123456789012345);\necho \"\\n\";\necho is_Diff(1234567890123456);\necho \"\\n\";\necho is_Diff(12345678901234567);\necho \"\\n\";\necho is_Diff(123456789012345678);\necho \"\\n\";\necho is_Diff(1234567890123456789);\necho \"\\n\";\necho is_Diff(12345678901234567890);\necho \"\\n\";\necho is_Diff(123456789012345678901);\necho \"\\n\";\necho is_Diff(1234567890123456789012);\necho \"\\n\";\necho is_Diff(123\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp9krrjm6b.php on line 69\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $count = 0;\n    while ($n > 0) {\n        $count++;\n        if ($count % 2 == 0) {\n            $even_digits += $n % 10;\n        } else {\n            $odd_digits += $n % 10;\n        }\n        $n = $n / 10;\n    }\n    if (($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122701,
      "stdout": "True\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpqn3kwyud.php on line 10\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmpqn3kwyud.php on line 12\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmpqn3kwyud.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmpqn3kwyud.php on line 12\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmpqn3kwyud.php on line 10\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmpqn3kwyud.php on line 12\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmpqn3kwyud.php on line 10\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmpqn3kwyud.php on line 12\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmpqn3kwyud.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmpqn3kwyud.php on line 12\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmpqn3kwyud.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmpqn3kwyud.php on line 12\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmpqn3kwyud.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmpqn3kwyud.php on line 12\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmpqn3kwyud.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmpqn3kwyud.php on line 12\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmpqn3kwyud.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int lose",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $n = (string)$n;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd += $n[$i];\n        } else {\n            $even += $n[$i];\n        }\n    }\n    $diff = $odd - $even;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $digits = str_split($n);\n    for ($i = 0; $i < count($digits); $i++) {\n        if ($i % 2 == 0) {\n            $odd_digits += $digits[$i];\n        } else {\n            $even_digits += $digits[$i];\n        }\n    }\n    if ($odd_digits - $even_digits % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"123456789\";\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $count = 0;\n    $temp = $n;\n    while ($temp != 0) {\n        $count++;\n        $rem = $temp % 10;\n        if ($count % 2 == 0) {\n            $even_digits += $rem;\n        } else {\n            $odd_digits += $rem;\n        }\n        $temp = $temp / 10;\n    }\n    if (($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122701,
      "stdout": "True\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmptha9wpmf.php on line 10\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmptha9wpmf.php on line 10\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmptha9wpmf.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmptha9wpmf.php on line 10\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmptha9wpmf.php on line 10\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmptha9wpmf.php on line 10\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmptha9wpmf.php on line 10\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmptha9wpmf.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmptha9wpmf.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmptha9wpmf.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmptha9wpmf.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmptha9wpmf.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmptha9wpmf.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmptha9wpmf.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmptha9wpmf.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmptha9wpmf.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmptha9wpmf.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int lose",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even += $n % 10;\n        } else {\n            $odd += $n % 10;\n        }\n        $n = intval($n / 10);\n        $i++;\n    }\n    if ($odd - $even == 0 || $odd - $even == 11 || $odd - $even == -11) {\n        return true;\n    }\n    return false;\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $n = strval($n);\n    $len = strlen($n);\n    if ($len == 1) {\n        return false;\n    }\n    $odd_sum = 0;\n    $even_sum = 0;\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd_sum += $n[$i];\n        } else {\n            $even_sum += $n[$i];\n        }\n    }\n    $diff = $odd_sum - $even_sum;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(fgets(STDIN));\necho is_Diff($n);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum = 0;\n    $diff = 0;\n    $n = (string)$n;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $sum += $n[$i];\n        } else {\n            $diff += $n[$i];\n        }\n    }\n    return ($sum - $diff) % 11 == 0;\n}\n\n$n = 123456789;\necho is_Diff($n);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd_digits += $n[$i];\n        } else {\n            $even_digits += $n[$i];\n        }\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = \"123456789\";\necho is_Diff($n);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "\nWarning: Trying to access array offset on value of type int in /tmp/tmpiwicf7r3.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpiwicf7r3.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpiwicf7r3.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpiwicf7r3.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpiwicf7r3.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiwicf7r3.php:24\nStack trace:\n#0 /tmp/tmpiwicf7r3.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpiwicf7r3.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_sum = 0;\n    $even_sum = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0)\n            $even_sum += $n % 10;\n        else\n            $odd_sum += $n % 10;\n        $i++;\n        $n = $n / 10;\n    }\n    if (abs($odd_sum - $even_sum) % 11 == 0)\n        return true;\n    else\n        return false;\n}\n$n = intval(fgets(STDIN));\nif (is_Diff($n))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122701,
      "stdout": "Yes\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpdrd4lmxb.php on line 11\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmpdrd4lmxb.php on line 9\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmpdrd4lmxb.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmpdrd4lmxb.php on line 9\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmpdrd4lmxb.php on line 11\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmpdrd4lmxb.php on line 9\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmpdrd4lmxb.php on line 11\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmpdrd4lmxb.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmpdrd4lmxb.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmpdrd4lmxb.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmpdrd4lmxb.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmpdrd4lmxb.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmpdrd4lmxb.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmpdrd4lmxb.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmpdrd4lmxb.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmpdrd4lmxb.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmpdrd4lmxb.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precisi",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $n = (string)$n;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n    }\n    return ($even - $odd) % 11 == 0;\n}\n\necho is_Diff(1234) ? 'True' : 'False';\necho \"\\n\";\necho is_Diff(1214) ? 'True' : 'False';\necho \"\\n\";\necho is_Diff(1244) ? 'True' : 'False';\necho \"\\n\";\necho is_Diff(1224) ? 'True' : 'False';\necho \"\\n\";\necho is_Diff(1234) ? 'True' : 'False';\necho \"\\n\";\necho is_Diff(1234) ? 'True' : 'False';\necho \"\\n\";\necho is_Diff(1234) ? 'True' : 'False';\necho \"\\n\";\necho is_Diff(1234) ? 'True' : 'False';\necho \"\\n\";\necho is_Diff(1234) ? 'True' : 'False';\necho \"\\n\";\necho is_Diff(1234) ? 'True' : 'False';\necho \"\\n\";\necho is_Diff(1234) ? 'True' : 'False';\necho \"\\n\";\necho is_Diff(1234) ? 'True' : 'False';\necho \"\\n\";\necho is_Diff(1234) ? 'True' : 'False';\necho \"\\n\";\necho is_Diff(1234) ? 'True' : 'False';\necho \"\\n\";\necho is_Diff(1234) ? 'True' : 'False';\necho \"\\n\";\necho is_Diff(1234) ? 'True' : 'False';\necho \"\\n\";\necho is_Diff(1234) ? 'True' : 'False';\necho \"\\n\";\necho is_Diff(1234) ? 'True' : 'False';\necho \"\\n\";\necho\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp76lopj1a.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum = 0;\n    $diff = 0;\n    $n = (string)$n;\n    $len = strlen($n);\n    for($i=0; $i<$len; $i++) {\n        if($i%2 == 0) {\n            $sum += $n[$i];\n        } else {\n            $diff += $n[$i];\n        }\n    }\n    $diff -= $sum;\n    if($diff%11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 1234;\nif(is_Diff($n)) {\n    echo \"$n is divisible by 11\";\n} else {\n    echo \"$n is not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "1234 is not divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $n = (string)$n;\n    $odd = 0;\n    $even = 0;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($i % 2 == 0) {\n            $odd += $n[$i];\n        } else {\n            $even += $n[$i];\n        }\n    }\n    if ($odd - $even == 0 || $odd - $even == 11 || $odd - $even == -11) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Diff(121);\necho \"\\n\";\necho is_Diff(12);\necho \"\\n\";\necho is_Diff(123);\necho \"\\n\";\necho is_Diff(1234);\necho \"\\n\";\necho is_Diff(12345);\necho \"\\n\";\necho is_Diff(123456);\necho \"\\n\";\necho is_Diff(1234567);\necho \"\\n\";\necho is_Diff(12345678);\necho \"\\n\";\necho is_Diff(123456789);\necho \"\\n\";\necho is_Diff(1234567890);\necho \"\\n\";\necho is_Diff(12345678901);\necho \"\\n\";\necho is_Diff(123456789012);\necho \"\\n\";\necho is_Diff(1234567890123);\necho \"\\n\";\necho is_Diff(12345678901234);\necho \"\\n\";\necho is_Diff(123456789012345);\necho \"\\n\";\necho is_Diff(1234567890123456);\necho \"\\n\";\necho is_Diff(12345678901234567);\necho \"\\n\";\necho is_Diff(123456789012345678);\necho \"\\n\";\necho is_Diff(1234567890123456789);\necho \"\\n\";\necho is_Diff(12345678901234567890);\necho \"\\n\";\necho is_Diff(123456789012345678901);\necho \"\\n\";\necho is_Diff(1234567890123456789012);\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpm_270b1b.php:11\nStack trace:\n#0 /tmp/tmpm_270b1b.php(59): is_Diff('1.2345678901235...')\n#1 {main}\n  thrown in /tmp/tmpm_270b1b.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $count = 0;\n    while ($n > 0) {\n        if ($count % 2 == 0) {\n            $odd_digits += $n % 10;\n        } else {\n            $even_digits += $n % 10;\n        }\n        $n = (int)($n / 10);\n        $count++;\n    }\n    if (abs($odd_digits - $even_digits) % 11 == 0) {\n        return \"True\";\n    } else {\n        return \"False\";\n    }\n}\n\n$n = intval(fgets(STDIN));\necho is_Diff($n);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "True\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpujx9to7x.php:30\nStack trace:\n#0 /tmp/tmpujx9to7x.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpujx9to7x.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even += $n % 10;\n        } else {\n            $odd += $n % 10;\n        }\n        $n = intval($n / 10);\n        $i++;\n    }\n    return ($even - $odd) % 11 == 0;\n}\n\necho is_Diff(121);\necho is_Diff(123);\necho is_Diff(1234);\necho is_Diff(12345);\necho is_Diff(123456);\necho is_Diff(1234567);\necho is_Diff(12345678);\necho is_Diff(123456789);\necho is_Diff(1234567890);\necho is_Diff(12345678901);\necho is_Diff(123456789012);\necho is_Diff(1234567890123);\necho is_Diff(12345678901234);\necho is_Diff(123456789012345);\necho is_Diff(1234567890123456);\necho is_Diff(12345678901234567);\necho is_Diff(123456789012345678);\necho is_Diff(1234567890123456789);\necho is_Diff(12345678901234567890);\necho is_Diff(123456789012345678901);\necho is_Diff(1234567890123456789012);\necho is_Diff(12345678901234567890123);\necho is_Diff(123456789012345678901234);\necho is_Diff(1234567890123456789012345);\necho is_Diff(12345678901234567890123456);\necho is_Diff(123456789012345678901234567);\necho is_Diff(1234567890123456789012345678);\necho is_Diff(12345678901234567890123456789);\necho is_Diff(1234567890123\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpof8bkiop.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $flag = 0;\n    $i = 0;\n    while ($n != 0) {\n        if ($i % 2 == 0) {\n            $odd += $n % 10;\n        } else {\n            $even += $n % 10;\n        }\n        $n = floor($n / 10);\n        $i++;\n    }\n    if ($odd - $even == 0) {\n        $flag = 1;\n    }\n    return $flag;\n}\n\n$n = 12345;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "No\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprbsd5ne_.php:34\nStack trace:\n#0 /tmp/tmprbsd5ne_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmprbsd5ne_.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_sum = 0;\n    $even_sum = 0;\n    $count = 0;\n    $flag = 0;\n    $temp = $n;\n    while ($n > 0) {\n        $count++;\n        if ($count % 2 == 0) {\n            $even_sum += $n % 10;\n        } else {\n            $odd_sum += $n % 10;\n        }\n        $n = $n / 10;\n    }\n    if ($odd_sum - $even_sum == 0) {\n        $flag = 1;\n    }\n    return $flag;\n}\n\n$n = 12;\nif (is_Diff($n)) {\n    echo \"Number is divisible by 11\";\n} else {\n    echo \"Number is not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122698,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmp10iucwe_.php on line 12\n\nDeprecated: Implicit conversion from float 0.12 to int loses precision in /tmp/tmp10iucwe_.php on line 14\n\nDeprecated: Implicit conversion from float 0.012 to int loses precision in /tmp/tmp10iucwe_.php on line 12\n\nDeprecated: Implicit conversion from float 0.0012000000000000001 to int loses precision in /tmp/tmp10iucwe_.php on line 14\n\nDeprecated: Implicit conversion from float 0.00012000000000000002 to int loses precision in /tmp/tmp10iucwe_.php on line 12\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-5 to int loses precision in /tmp/tmp10iucwe_.php on line 14\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-6 to int loses precision in /tmp/tmp10iucwe_.php on line 12\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-7 to int loses precision in /tmp/tmp10iucwe_.php on line 14\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-8 to int loses precision in /tmp/tmp10iucwe_.php on line 12\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-9 to int loses precision in /tmp/tmp10iucwe_.php on line 14\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-10 to int loses precision in /tmp/tmp10iucwe_.php on line 12\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-11 to int loses precision in /tmp/tmp10iucwe_.php on line 14\n\nDeprecated: Implicit conversion from float 1.2000000000000001E-12 to int loses precision in /tmp/tmp10iucwe_.php on line 12\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-13 to int loses precision in /tmp/tmp10iucwe_.php on line 14\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-14 to int loses precision in /tmp/tmp10iucwe_.php on line 12\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-15 to int loses precision in /tmp/tmp10iucwe_.php on line 14\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-16 to int loses precision in /tmp/tmp10iucwe",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum = 0;\n    $diff = 0;\n    $flag = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($flag == 0) {\n            $sum += $n[$i];\n            $flag = 1;\n        } else {\n            $diff += $n[$i];\n            $flag = 0;\n        }\n    }\n    if ($sum - $diff == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"1234\";\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "No\nWarning: Trying to access array offset on value of type int in /tmp/tmpgf5rwzf0.php on line 10\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpgf5rwzf0.php on line 13\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpgf5rwzf0.php on line 10\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpgf5rwzf0.php on line 13\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpgf5rwzf0.php on line 10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgf5rwzf0.php:35\nStack trace:\n#0 /tmp/tmpgf5rwzf0.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpgf5rwzf0.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_pos = 0;\n    $even_pos = 0;\n    $i = 0;\n    while ($n > 0) {\n        $rem = $n % 10;\n        if ($i % 2 == 0) {\n            $even_pos = $even_pos + $rem;\n        } else {\n            $odd_pos = $odd_pos + $rem;\n        }\n        $i++;\n        $n = $n / 10;\n    }\n    $diff = $even_pos - $odd_pos;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Diff(1234);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122705,
      "stdout": "\nDeprecated: Implicit conversion from float 123.4 to int loses precision in /tmp/tmpnxrf3ki1.php on line 8\n\nDeprecated: Implicit conversion from float 12.34 to int loses precision in /tmp/tmpnxrf3ki1.php on line 8\n\nDeprecated: Implicit conversion from float 1.234 to int loses precision in /tmp/tmpnxrf3ki1.php on line 8\n\nDeprecated: Implicit conversion from float 0.1234 to int loses precision in /tmp/tmpnxrf3ki1.php on line 8\n\nDeprecated: Implicit conversion from float 0.01234 to int loses precision in /tmp/tmpnxrf3ki1.php on line 8\n\nDeprecated: Implicit conversion from float 0.001234 to int loses precision in /tmp/tmpnxrf3ki1.php on line 8\n\nDeprecated: Implicit conversion from float 0.00012340000000000002 to int loses precision in /tmp/tmpnxrf3ki1.php on line 8\n\nDeprecated: Implicit conversion from float 1.2340000000000002E-5 to int loses precision in /tmp/tmpnxrf3ki1.php on line 8\n\nDeprecated: Implicit conversion from float 1.2340000000000002E-6 to int loses precision in /tmp/tmpnxrf3ki1.php on line 8\n\nDeprecated: Implicit conversion from float 1.234E-7 to int loses precision in /tmp/tmpnxrf3ki1.php on line 8\n\nDeprecated: Implicit conversion from float 1.234E-8 to int loses precision in /tmp/tmpnxrf3ki1.php on line 8\n\nDeprecated: Implicit conversion from float 1.234E-9 to int loses precision in /tmp/tmpnxrf3ki1.php on line 8\n\nDeprecated: Implicit conversion from float 1.234E-10 to int loses precision in /tmp/tmpnxrf3ki1.php on line 8\n\nDeprecated: Implicit conversion from float 1.2340000000000001E-11 to int loses precision in /tmp/tmpnxrf3ki1.php on line 8\n\nDeprecated: Implicit conversion from float 1.2340000000000002E-12 to int loses precision in /tmp/tmpnxrf3ki1.php on line 8\n\nDeprecated: Implicit conversion from float 1.234E-13 to int loses precision in /tmp/tmpnxrf3ki1.php on line 8\n\nDeprecated: Implicit conversion from float 1.2340000000000001E-14 to int loses precision in /tmp/tmpnxrf3ki1.php on line 8\n\nDeprecated: Implicit conversion from float 1.2340000000000001E-15 to int loses precision in /tmp/tmpnxrf3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n /= 10;\n        $even_digits += $n % 10;\n        $n /= 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122701,
      "stdout": "Divisible by 11\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpnqc5uu16.php on line 9\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmpnqc5uu16.php on line 7\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmpnqc5uu16.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmpnqc5uu16.php on line 7\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmpnqc5uu16.php on line 9\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmpnqc5uu16.php on line 7\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmpnqc5uu16.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmpnqc5uu16.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmpnqc5uu16.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmpnqc5uu16.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmpnqc5uu16.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmpnqc5uu16.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmpnqc5uu16.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmpnqc5uu16.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmpnqc5uu16.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmpnqc5uu16.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmpnqc5uu16.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses prec",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $n = str_split($n);\n    $n = array_reverse($n);\n    for ($i = 0; $i < count($n); $i++) {\n        if ($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n    }\n    if ($even - $odd == 0 || $even - $odd == 11 || $even - $odd == -11) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"1234\";\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even += $n % 10;\n        } else {\n            $odd += $n % 10;\n        }\n        $n = floor($n / 10);\n        $i++;\n    }\n    if (abs($odd - $even) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "True",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $str = (string)$n;\n    $len = strlen($str);\n    $sum = 0;\n    for($i=0;$i<$len;$i++) {\n        if($i%2==0) {\n            $sum += $str[$i];\n        } else {\n            $sum -= $str[$i];\n        }\n    }\n    if($sum%11==0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 123456789;\nif(is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "Not Divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum_even = 0;\n    $sum_odd = 0;\n    $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($i % 2 == 0) {\n            $sum_even += $n[$i];\n        } else {\n            $sum_odd += $n[$i];\n        }\n    }\n    if ($sum_even - $sum_odd == 0 || $sum_even - $sum_odd == 11 || $sum_even - $sum_odd == -11) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Diff(121);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n    }\n    if ($even - $odd == 0 || $even - $odd == 11 || $even - $odd == -11) {\n        return true;\n    }\n    return false;\n}\n\necho is_Diff(121);\necho is_Diff(1212);\necho is_Diff(121212);\necho is_Diff(12121212);\necho is_Diff(1212121212);\necho is_Diff(121212121212);\necho is_Diff(12121212121212);\necho is_Diff(1212121212121212);\necho is_Diff(121212121212121212);\necho is_Diff(12121212121212121212);\necho is_Diff(1212121212121212121212);\necho is_Diff(121212121212121212121212);\necho is_Diff(12121212121212121212121212);\necho is_Diff(1212121212121212121212121212);\necho is_Diff(121212121212121212121212121212);\necho is_Diff(12121212121212121212121212121212);\necho is_Diff(1212121212121212121212121212121212);\necho is_Diff(121212121212121212121212121212121212);\necho is_Diff(12121212121212121212121212121212121212);\necho is_Diff(1212121212121212121212121212121212121212);\necho is_Diff(121212121212121212121212121212121212121212);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "1\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp8a38y725.php:11\nStack trace:\n#0 /tmp/tmp8a38y725.php(29): is_Diff('1.2121212121212...')\n#1 {main}\n  thrown in /tmp/tmp8a38y725.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $i = 0;\n    while($n > 0) {\n        if($i % 2 == 0) {\n            $even += $n % 10;\n        } else {\n            $odd += $n % 10;\n        }\n        $n = (int)($n / 10);\n        $i++;\n    }\n    if(($odd - $even) % 11 == 0) {\n        return true;\n    }\n    return false;\n}\n\n$n = 1234;\nif(is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n /= 10;\n        $even_digits += $n % 10;\n        $n /= 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = intval(fgets(STDIN));\necho is_Diff($n);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122701,
      "stdout": "1\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmp3r23paqw.php on line 9\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmp3r23paqw.php on line 7\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmp3r23paqw.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmp3r23paqw.php on line 7\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmp3r23paqw.php on line 9\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmp3r23paqw.php on line 7\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmp3r23paqw.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmp3r23paqw.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmp3r23paqw.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmp3r23paqw.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmp3r23paqw.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmp3r23paqw.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmp3r23paqw.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmp3r23paqw.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmp3r23paqw.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmp3r23paqw.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmp3r23paqw.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precision in /tmp/",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_sum = 0;\n    $even_sum = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_sum += $n % 10;\n        } else {\n            $odd_sum += $n % 10;\n        }\n        $n = floor($n / 10);\n        $i++;\n    }\n    return ($odd_sum - $even_sum) % 11 == 0;\n}\n\n$n = intval(trim(fgets(STDIN)));\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $n = strval($n);\n    $len = strlen($n);\n    $sum1 = 0;\n    $sum2 = 0;\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $sum1 += $n[$i];\n        } else {\n            $sum2 += $n[$i];\n        }\n    }\n    if (abs($sum1 - $sum2) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "True",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum = 0;\n    $diff = 0;\n    $flag = 0;\n    $i = 0;\n    $len = strlen($n);\n    while ($i < $len) {\n        if ($flag == 0) {\n            $sum += $n[$i];\n            $flag = 1;\n        } else {\n            $diff += $n[$i];\n            $flag = 0;\n        }\n        $i++;\n    }\n    if ($sum - $diff == 0) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n\n$n = \"1234\";\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "Not Divisible by 11\nWarning: Trying to access array offset on value of type int in /tmp/tmpwf3eogod.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpwf3eogod.php on line 14\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpwf3eogod.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpwf3eogod.php on line 14\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpwf3eogod.php on line 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwf3eogod.php:37\nStack trace:\n#0 /tmp/tmpwf3eogod.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpwf3eogod.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $i = 0;\n    while ($n > 0) {\n        $rem = $n % 10;\n        if ($i % 2 == 0) {\n            $even += $rem;\n        } else {\n            $odd += $rem;\n        }\n        $n = $n / 10;\n        $i++;\n    }\n    if ($even - $odd == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 123321;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122705,
      "stdout": "\nDeprecated: Implicit conversion from float 12332.1 to int loses precision in /tmp/tmpupysjhcc.php on line 8\n\nDeprecated: Implicit conversion from float 1233.21 to int loses precision in /tmp/tmpupysjhcc.php on line 8\n\nDeprecated: Implicit conversion from float 123.321 to int loses precision in /tmp/tmpupysjhcc.php on line 8\n\nDeprecated: Implicit conversion from float 12.3321 to int loses precision in /tmp/tmpupysjhcc.php on line 8\n\nDeprecated: Implicit conversion from float 1.2332100000000001 to int loses precision in /tmp/tmpupysjhcc.php on line 8\n\nDeprecated: Implicit conversion from float 0.12332100000000001 to int loses precision in /tmp/tmpupysjhcc.php on line 8\n\nDeprecated: Implicit conversion from float 0.012332100000000002 to int loses precision in /tmp/tmpupysjhcc.php on line 8\n\nDeprecated: Implicit conversion from float 0.0012332100000000002 to int loses precision in /tmp/tmpupysjhcc.php on line 8\n\nDeprecated: Implicit conversion from float 0.00012332100000000002 to int loses precision in /tmp/tmpupysjhcc.php on line 8\n\nDeprecated: Implicit conversion from float 1.2332100000000002E-5 to int loses precision in /tmp/tmpupysjhcc.php on line 8\n\nDeprecated: Implicit conversion from float 1.2332100000000002E-6 to int loses precision in /tmp/tmpupysjhcc.php on line 8\n\nDeprecated: Implicit conversion from float 1.2332100000000002E-7 to int loses precision in /tmp/tmpupysjhcc.php on line 8\n\nDeprecated: Implicit conversion from float 1.2332100000000003E-8 to int loses precision in /tmp/tmpupysjhcc.php on line 8\n\nDeprecated: Implicit conversion from float 1.2332100000000003E-9 to int loses precision in /tmp/tmpupysjhcc.php on line 8\n\nDeprecated: Implicit conversion from float 1.2332100000000003E-10 to int loses precision in /tmp/tmpupysjhcc.php on line 8\n\nDeprecated: Implicit conversion from float 1.2332100000000003E-11 to int loses precision in /tmp/tmpupysjhcc.php on line 8\n\nDeprecated: Implicit conversion from float 1.2332100000000004E-12 to int loses precision in /tmp/tmpupysjhcc.php on line 8\n\nDeprecated: Im",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $n = strval($n);\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd += $n[$i];\n        } else {\n            $even += $n[$i];\n        }\n    }\n    $diff = $odd - $even;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Diff(121212);\necho \"\\n\";\necho is_Diff(121213);\necho \"\\n\";\necho is_Diff(121214);\necho \"\\n\";\necho is_Diff(121215);\necho \"\\n\";\necho is_Diff(121216);\necho \"\\n\";\necho is_Diff(121217);\necho \"\\n\";\necho is_Diff(121218);\necho \"\\n\";\necho is_Diff(121219);\necho \"\\n\";\necho is_Diff(121220);\necho \"\\n\";\necho is_Diff(121221);\necho \"\\n\";\necho is_Diff(121222);\necho \"\\n\";\necho is_Diff(121223);\necho \"\\n\";\necho is_Diff(121224);\necho \"\\n\";\necho is_Diff(121225);\necho \"\\n\";\necho is_Diff(121226);\necho \"\\n\";\necho is_Diff(121227);\necho \"\\n\";\necho is_Diff(121228);\necho \"\\n\";\necho is_Diff(121229);\necho \"\\n\";\necho is_Diff(121230);\necho \"\\n\";\necho is_Diff(121231);\necho \"\\n\";\necho is_Diff(121232);\necho \"\\n\";\necho is_Diff(121233);\necho \"\\n\";\necho is_Diff(121234);\necho \"\\n\";\necho is_Diff(121235);\necho \"\\n\";\necho is_Diff(121236);\necho \"\\\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\", expecting \",\" or \";\" in /tmp/tmpmlxn5ase.php on line 78\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_pos = 0;\n    $even_pos = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd_pos += $n[$i];\n        } else {\n            $even_pos += $n[$i];\n        }\n    }\n    $diff = $odd_pos - $even_pos;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"123456789\";\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "Not Divisible by 11\nWarning: Trying to access array offset on value of type int in /tmp/tmpm1xzol54.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpm1xzol54.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpm1xzol54.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpm1xzol54.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpm1xzol54.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm1xzol54.php:33\nStack trace:\n#0 /tmp/tmpm1xzol54.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpm1xzol54.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n    }\n    if ($even - $odd == 0 || $even - $odd == 11 || $even - $odd == -11) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Diff(121);\necho is_Diff(12);\necho is_Diff(123);\necho is_Diff(1234);\necho is_Diff(12345);\necho is_Diff(123456);\necho is_Diff(1234567);\necho is_Diff(12345678);\necho is_Diff(123456789);\necho is_Diff(1234567890);\necho is_Diff(12345678901);\necho is_Diff(123456789012);\necho is_Diff(1234567890123);\necho is_Diff(12345678901234);\necho is_Diff(123456789012345);\necho is_Diff(1234567890123456);\necho is_Diff(12345678901234567);\necho is_Diff(123456789012345678);\necho is_Diff(1234567890123456789);\necho is_Diff(12345678901234567890);\necho is_Diff(123456789012345678901);\necho is_Diff(1234567890123456789012);\necho is_Diff(12345678901234567890123);\necho is_Diff(123456789012345678901234);\necho is_Diff(1234567890123456789012345);\necho is_Diff(12345678901234567890123456);\necho is_Diff(123456789012345678901234567);\necho is_Diff(1234567890123\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpvlgfzz4g.php on line 49\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd_digits += $n[$i];\n        } else {\n            $even_digits += $n[$i];\n        }\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = \"123456789\";\necho is_Diff($n);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "\nWarning: Trying to access array offset on value of type int in /tmp/tmpiwicf7r3.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpiwicf7r3.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpiwicf7r3.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpiwicf7r3.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpiwicf7r3.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiwicf7r3.php:24\nStack trace:\n#0 /tmp/tmpiwicf7r3.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpiwicf7r3.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $n = strval($n);\n    $len = strlen($n);\n    for($i = 0; $i < $len; $i++) {\n        if($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n    }\n    if(abs($odd - $even) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(fgets(STDIN));\necho is_Diff($n);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_sum = 0;\n    $even_sum = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_sum += $n % 10;\n        } else {\n            $odd_sum += $n % 10;\n        }\n        $n = intval($n / 10);\n        $i++;\n    }\n    return ($even_sum - $odd_sum) % 11 == 0;\n}\n\necho is_Diff(121);\necho \"\\n\";\necho is_Diff(12);\necho \"\\n\";\necho is_Diff(123);\necho \"\\n\";\necho is_Diff(1234);\necho \"\\n\";\necho is_Diff(12345);\necho \"\\n\";\necho is_Diff(123456);\necho \"\\n\";\necho is_Diff(1234567);\necho \"\\n\";\necho is_Diff(12345678);\necho \"\\n\";\necho is_Diff(123456789);\necho \"\\n\";\necho is_Diff(1234567890);\necho \"\\n\";\necho is_Diff(12345678901);\necho \"\\n\";\necho is_Diff(123456789012);\necho \"\\n\";\necho is_Diff(1234567890123);\necho \"\\n\";\necho is_Diff(12345678901234);\necho \"\\n\";\necho is_Diff(123456789012345);\necho \"\\n\";\necho is_Diff(1234567890123456);\necho \"\\n\";\necho is_Diff(12345678901234567);\necho \"\\n\";\necho is_Diff(123456789012345678);\necho \"\\n\";\necho is_Diff(1234567890123456789);\necho \"\\n\";\necho is_Diff(12345678901234567890);\necho \"\\n\";\necho is_Diff(123456789012345678901);\necho \"\\n\";\necho is_Diff(1234567890123456789012);\necho \"\\n\";\necho is_Diff(12345678901234567890123\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpsevu0z_y.php on line 64\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even += $n % 10;\n        } else {\n            $odd += $n % 10;\n        }\n        $i++;\n        $n = (int) ($n / 10);\n    }\n    return ($odd - $even) % 11 == 0;\n}\n\necho is_Diff(1234) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(1243) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(1254) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(1265) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(1276) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(1287) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(1298) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(1209) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(1220) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(1231) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(1242) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(1253) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(1264) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(1275) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(1286) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(1297) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(1208) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(1219) ? \"True\" : \"False\";\necho \"\\n\";\necho is_Diff(1230)\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmpbnw6djfz.php on line 56\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $n = strval($n);\n    $len = strlen($n);\n    $sum = 0;\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $sum += $n[$i];\n        } else {\n            $sum -= $n[$i];\n        }\n    }\n    if ($sum % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Diff(1234);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_sum = 0;\n    $even_sum = 0;\n    $count = 0;\n    $temp = $n;\n    while ($temp != 0) {\n        $rem = $temp % 10;\n        if ($count % 2 == 0) {\n            $odd_sum += $rem;\n        } else {\n            $even_sum += $rem;\n        }\n        $count++;\n        $temp = $temp / 10;\n    }\n    if (abs($odd_sum - $even_sum) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 12;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122705,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmpvmspz51a.php on line 9\n\nDeprecated: Implicit conversion from float 0.12 to int loses precision in /tmp/tmpvmspz51a.php on line 9\n\nDeprecated: Implicit conversion from float 0.012 to int loses precision in /tmp/tmpvmspz51a.php on line 9\n\nDeprecated: Implicit conversion from float 0.0012000000000000001 to int loses precision in /tmp/tmpvmspz51a.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012000000000000002 to int loses precision in /tmp/tmpvmspz51a.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-5 to int loses precision in /tmp/tmpvmspz51a.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-6 to int loses precision in /tmp/tmpvmspz51a.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-7 to int loses precision in /tmp/tmpvmspz51a.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-8 to int loses precision in /tmp/tmpvmspz51a.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-9 to int loses precision in /tmp/tmpvmspz51a.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-10 to int loses precision in /tmp/tmpvmspz51a.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-11 to int loses precision in /tmp/tmpvmspz51a.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000001E-12 to int loses precision in /tmp/tmpvmspz51a.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-13 to int loses precision in /tmp/tmpvmspz51a.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-14 to int loses precision in /tmp/tmpvmspz51a.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-15 to int loses precision in /tmp/tmpvmspz51a.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-16 to int loses precision in /tmp/tmpvmspz51a.php on line 9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum = 0;\n    $diff = 0;\n    $i = 0;\n    while ($n != 0) {\n        $sum += $n % 10;\n        $n = intval($n / 10);\n        $diff += $n % 10;\n        $n = intval($n / 10);\n        $i++;\n    }\n    if ($i == 1) {\n        return false;\n    }\n    $diff = abs($diff - $sum);\n    if ($diff == 0 || $diff == 11) {\n        return true;\n    }\n    return false;\n}\n\n$n = intval(readline());\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmpvc209jo9.php:24\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpvc209jo9.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $n = str_split($n);\n    $sum = 0;\n    for ($i = 0; $i < count($n); $i++) {\n        if ($i % 2 == 0) {\n            $sum += $n[$i];\n        } else {\n            $sum -= $n[$i];\n        }\n    }\n    if ($sum % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"123456789\";\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509881,
      "stdout": "Not Divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_pos = 0;\n    $even_pos = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd_pos += $n[$i];\n        } else {\n            $even_pos += $n[$i];\n        }\n    }\n    if (abs($odd_pos - $even_pos) % 11 == 0) {\n        return \"True\";\n    } else {\n        return \"False\";\n    }\n}\n\necho is_Diff(\"121426\");\necho \"\\n\";\necho is_Diff(\"121426\");\necho \"\\n\";\necho is_Diff(\"121426\");\necho \"\\n\";\necho is_Diff(\"121426\");\necho \"\\n\";\necho is_Diff(\"121426\");\necho \"\\n\";\necho is_Diff(\"121426\");\necho \"\\n\";\necho is_Diff(\"121426\");\necho \"\\n\";\necho is_Diff(\"121426\");\necho \"\\n\";\necho is_Diff(\"121426\");\necho \"\\n\";\necho is_Diff(\"121426\");\necho \"\\n\";\necho is_Diff(\"121426\");\necho \"\\n\";\necho is_Diff(\"121426\");\necho \"\\n\";\necho is_Diff(\"121426\");\necho \"\\n\";\necho is_Diff(\"121426\");\necho \"\\n\";\necho is_Diff(\"121426\");\necho \"\\n\";\necho is_Diff(\"121426\");\necho \"\\n\";\necho is_Diff(\"121426\");\necho \"\\n\";\necho is_Diff(\"121426\");\necho \"\\n\";\necho is_Diff(\"121426\");\necho \"\\n\";\necho is_Diff(\"121426\");\necho \"\\n\";\necho is_Diff(\"121426\");\necho \"\\n\";\necho is_Diff(\"121426\");\necho \"\\n\";\necho is_Diff(\"121426\");\necho \"\\n\";\necho is_Diff(\"121426\");\necho \"\\n\";\necho is_Diff(\"121426\");\necho \"\\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\", expecting \",\" or \";\" in /tmp/tmp6qyh672f.php on line 76\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_digits += $n % 10;\n        } else {\n            $odd_digits += $n % 10;\n        }\n        $n = intval($n / 10);\n        $i++;\n    }\n    if (abs($odd_digits - $even_digits) % 11 == 0) {\n        return \"True\";\n    } else {\n        return \"False\";\n    }\n}\n\n$n = intval(fgets(STDIN));\necho is_Diff($n);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "True\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpav9i3qrz.php:30\nStack trace:\n#0 /tmp/tmpav9i3qrz.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpav9i3qrz.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    while ($n > 0) {\n        $even += $n % 10;\n        $n = (int)($n / 10);\n        $odd += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return ($even - $odd) % 11 == 0;\n}\n\n$n = intval(fgets(STDIN));\necho is_Diff($n) ? \"YES\" : \"NO\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "YES",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd += $n[$i];\n        } else {\n            $even += $n[$i];\n        }\n    }\n    if (abs($odd - $even) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"1234\";\necho is_Diff($n);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "\nWarning: Trying to access array offset on value of type int in /tmp/tmpuqjtzdmx.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpuqjtzdmx.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpuqjtzdmx.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpuqjtzdmx.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpuqjtzdmx.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuqjtzdmx.php:28\nStack trace:\n#0 /tmp/tmpuqjtzdmx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuqjtzdmx.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_pos = 0;\n    $even_pos = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd_pos += $n[$i];\n        } else {\n            $even_pos += $n[$i];\n        }\n    }\n    $diff = $odd_pos - $even_pos;\n    if ($diff % 11 == 0) {\n        return \"Divisible by 11\";\n    } else {\n        return \"Not Divisible by 11\";\n    }\n}\n\necho is_Diff(1234);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "\nWarning: Trying to access array offset on value of type int in /tmp/tmp9btrc395.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp9btrc395.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp9btrc395.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp9btrc395.php on line 11\nDivisible by 11\nWarning: Trying to access array offset on value of type int in /tmp/tmp9btrc395.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp9btrc395.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp9btrc395.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp9btrc395.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp9btrc395.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9btrc395.php:28\nStack trace:\n#0 /tmp/tmp9btrc395.php(33): test()\n#1 {main}\n  thrown in /tmp/",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even += $n % 10;\n        } else {\n            $odd += $n % 10;\n        }\n        $n = floor($n / 10);\n        $i++;\n    }\n    if (abs($odd - $even) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(trim(fgets(STDIN)));\nif (is_Diff($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "True",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 123456789;\nif (is_Diff($n))\n    echo \"Divisible by 11\";\nelse\n    echo \"Not Divisible by 11\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "Not Divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    while($n > 0) {\n        $odd += $n % 10;\n        $n /= 10;\n        $even += $n % 10;\n        $n /= 10;\n    }\n    return ($odd - $even) % 11 == 0;\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122702,
      "stdout": "Yes\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmp61e9liqd.php on line 9\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmp61e9liqd.php on line 7\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmp61e9liqd.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmp61e9liqd.php on line 7\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmp61e9liqd.php on line 9\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmp61e9liqd.php on line 7\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmp61e9liqd.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmp61e9liqd.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmp61e9liqd.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmp61e9liqd.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmp61e9liqd.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmp61e9liqd.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmp61e9liqd.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmp61e9liqd.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmp61e9liqd.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmp61e9liqd.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmp61e9liqd.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precision in /tm",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $n = (string)$n;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n    }\n    return $even - $odd;\n}\n\n$n = 123456789;\n$result = is_Diff($n);\nif ($result == 0 || $result % 11 == 0) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "No\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_wacgq7m.php:30\nStack trace:\n#0 /tmp/tmp_wacgq7m.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_wacgq7m.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $n = strval($n);\n    $len = strlen($n);\n    $odd = 0;\n    $even = 0;\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n    }\n    return $even - $odd;\n}\n\n$n = 1234;\n$result = is_Diff($n);\nif ($result == 0) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "Not Divisible by 11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7il0lf50.php:30\nStack trace:\n#0 /tmp/tmp7il0lf50.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp7il0lf50.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_pos = 0;\n    $even_pos = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd_pos += $n[$i];\n        } else {\n            $even_pos += $n[$i];\n        }\n    }\n    $diff = $odd_pos - $even_pos;\n    if ($diff % 11 == 0) {\n        return \"True\";\n    } else {\n        return \"False\";\n    }\n}\n\n$n = \"1234\";\necho is_Diff($n);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "False\nWarning: Trying to access array offset on value of type int in /tmp/tmppenyqibp.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmppenyqibp.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmppenyqibp.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmppenyqibp.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmppenyqibp.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppenyqibp.php:29\nStack trace:\n#0 /tmp/tmppenyqibp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmppenyqibp.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $i = 0;\n    while ($n > 0) {\n        $rem = $n % 10;\n        if ($i % 2 == 0) {\n            $even += $rem;\n        } else {\n            $odd += $rem;\n        }\n        $n = $n / 10;\n        $i++;\n    }\n    if (abs($odd - $even) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(trim(fgets(STDIN)));\nif (is_Diff($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122702,
      "stdout": "True\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpnwd3q038.php on line 8\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmpnwd3q038.php on line 8\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmpnwd3q038.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmpnwd3q038.php on line 8\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmpnwd3q038.php on line 8\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmpnwd3q038.php on line 8\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmpnwd3q038.php on line 8\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmpnwd3q038.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmpnwd3q038.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmpnwd3q038.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmpnwd3q038.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmpnwd3q038.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmpnwd3q038.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmpnwd3q038.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmpnwd3q038.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmpnwd3q038.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmpnwd3q038.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precision in /t",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum = 0;\n    $diff = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $sum += $n % 10;\n        } else {\n            $diff += $n % 10;\n        }\n        $n = (int) ($n / 10);\n        $i++;\n    }\n    return ($sum - $diff) % 11 == 0;\n}\n\n$n = intval(readline());\necho is_Diff($n);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmpvzoy3itq.php:19\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpvzoy3itq.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $i = 0;\n    while ($n > 0) {\n        $rem = $n % 10;\n        if ($i % 2 == 0) {\n            $even = $even + $rem;\n        } else {\n            $odd = $odd + $rem;\n        }\n        $i++;\n        $n = $n / 10;\n    }\n    $diff = $even - $odd;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 1234;\nif (is_Diff($n)) {\n    echo \"Number is divisible by 11\";\n} else {\n    echo \"Number is not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122705,
      "stdout": "\nDeprecated: Implicit conversion from float 123.4 to int loses precision in /tmp/tmp18za5946.php on line 8\n\nDeprecated: Implicit conversion from float 12.34 to int loses precision in /tmp/tmp18za5946.php on line 8\n\nDeprecated: Implicit conversion from float 1.234 to int loses precision in /tmp/tmp18za5946.php on line 8\n\nDeprecated: Implicit conversion from float 0.1234 to int loses precision in /tmp/tmp18za5946.php on line 8\n\nDeprecated: Implicit conversion from float 0.01234 to int loses precision in /tmp/tmp18za5946.php on line 8\n\nDeprecated: Implicit conversion from float 0.001234 to int loses precision in /tmp/tmp18za5946.php on line 8\n\nDeprecated: Implicit conversion from float 0.00012340000000000002 to int loses precision in /tmp/tmp18za5946.php on line 8\n\nDeprecated: Implicit conversion from float 1.2340000000000002E-5 to int loses precision in /tmp/tmp18za5946.php on line 8\n\nDeprecated: Implicit conversion from float 1.2340000000000002E-6 to int loses precision in /tmp/tmp18za5946.php on line 8\n\nDeprecated: Implicit conversion from float 1.234E-7 to int loses precision in /tmp/tmp18za5946.php on line 8\n\nDeprecated: Implicit conversion from float 1.234E-8 to int loses precision in /tmp/tmp18za5946.php on line 8\n\nDeprecated: Implicit conversion from float 1.234E-9 to int loses precision in /tmp/tmp18za5946.php on line 8\n\nDeprecated: Implicit conversion from float 1.234E-10 to int loses precision in /tmp/tmp18za5946.php on line 8\n\nDeprecated: Implicit conversion from float 1.2340000000000001E-11 to int loses precision in /tmp/tmp18za5946.php on line 8\n\nDeprecated: Implicit conversion from float 1.2340000000000002E-12 to int loses precision in /tmp/tmp18za5946.php on line 8\n\nDeprecated: Implicit conversion from float 1.234E-13 to int loses precision in /tmp/tmp18za5946.php on line 8\n\nDeprecated: Implicit conversion from float 1.2340000000000001E-14 to int loses precision in /tmp/tmp18za5946.php on line 8\n\nDeprecated: Implicit conversion from float 1.2340000000000001E-15 to int loses precision in /tmp/tmp18za5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $diff = 0;\n    while ($n != 0) {\n        $diff += $n % 10;\n        $n = intval($n / 10);\n        $diff -= $n % 10;\n        $n = intval($n / 10);\n    }\n    return $diff;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp657ce0k_.php:19\nStack trace:\n#0 /tmp/tmp657ce0k_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp657ce0k_.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $flag = 0;\n    while ($n > 0) {\n        if ($flag == 0) {\n            $odd_digits += $n % 10;\n            $flag = 1;\n        } else {\n            $even_digits += $n % 10;\n            $flag = 0;\n        }\n        $n = (int)($n / 10);\n    }\n    if (($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(readline());\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmpia11hjy2.php:24\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpia11hjy2.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n /= 10;\n        $even_digits += $n % 10;\n        $n /= 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122701,
      "stdout": "Divisible by 11\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpnqc5uu16.php on line 9\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmpnqc5uu16.php on line 7\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmpnqc5uu16.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmpnqc5uu16.php on line 7\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmpnqc5uu16.php on line 9\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmpnqc5uu16.php on line 7\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmpnqc5uu16.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmpnqc5uu16.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmpnqc5uu16.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmpnqc5uu16.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmpnqc5uu16.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmpnqc5uu16.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmpnqc5uu16.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmpnqc5uu16.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmpnqc5uu16.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmpnqc5uu16.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmpnqc5uu16.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses prec",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $len = strlen($n);\n    for($i = 0; $i < $len; $i++) {\n        if($i % 2 == 0) {\n            $odd += $n[$i];\n        } else {\n            $even += $n[$i];\n        }\n    }\n    if(abs($odd - $even) % 11 == 0) {\n        return \"True\";\n    } else {\n        return \"False\";\n    }\n}\n$n = \"123456789\";\necho is_Diff($n);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "False\nWarning: Trying to access array offset on value of type int in /tmp/tmpwppwugs2.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpwppwugs2.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpwppwugs2.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpwppwugs2.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpwppwugs2.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwppwugs2.php:27\nStack trace:\n#0 /tmp/tmpwppwugs2.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpwppwugs2.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $n = (string)$n;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n    }\n    return ($even - $odd) % 11 == 0;\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"The number $n is divisible by 11\";\n} else {\n    echo \"The number $n is not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "The number 123456789 is not divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_sum = 0;\n    $even_sum = 0;\n    $i = 0;\n    while ($n > 0) {\n        $rem = $n % 10;\n        if ($i % 2 == 0) {\n            $even_sum += $rem;\n        } else {\n            $odd_sum += $rem;\n        }\n        $i++;\n        $n = $n / 10;\n    }\n    if ($even_sum - $odd_sum == 0 || $even_sum - $odd_sum == 11 || $even_sum - $odd_sum == -11) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122706,
      "stdout": "\nDeprecated: Implicit conversion from float 12345678.9 to int loses precision in /tmp/tmp19_cqxxa.php on line 8\n\nDeprecated: Implicit conversion from float 1234567.8900000001 to int loses precision in /tmp/tmp19_cqxxa.php on line 8\n\nDeprecated: Implicit conversion from float 123456.78900000002 to int loses precision in /tmp/tmp19_cqxxa.php on line 8\n\nDeprecated: Implicit conversion from float 12345.678900000003 to int loses precision in /tmp/tmp19_cqxxa.php on line 8\n\nDeprecated: Implicit conversion from float 1234.5678900000003 to int loses precision in /tmp/tmp19_cqxxa.php on line 8\n\nDeprecated: Implicit conversion from float 123.45678900000003 to int loses precision in /tmp/tmp19_cqxxa.php on line 8\n\nDeprecated: Implicit conversion from float 12.345678900000003 to int loses precision in /tmp/tmp19_cqxxa.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345678900000003 to int loses precision in /tmp/tmp19_cqxxa.php on line 8\n\nDeprecated: Implicit conversion from float 0.12345678900000004 to int loses precision in /tmp/tmp19_cqxxa.php on line 8\n\nDeprecated: Implicit conversion from float 0.012345678900000004 to int loses precision in /tmp/tmp19_cqxxa.php on line 8\n\nDeprecated: Implicit conversion from float 0.0012345678900000003 to int loses precision in /tmp/tmp19_cqxxa.php on line 8\n\nDeprecated: Implicit conversion from float 0.00012345678900000002 to int loses precision in /tmp/tmp19_cqxxa.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-5 to int loses precision in /tmp/tmp19_cqxxa.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-6 to int loses precision in /tmp/tmp19_cqxxa.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-7 to int loses precision in /tmp/tmp19_cqxxa.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-8 to int loses precision in /tmp/tmp19_cqxxa.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345678900000001E-9 to int loses precision in /tmp/tmp19_cqxxa.php o",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $len = strlen($n);\n    $sum1 = 0;\n    $sum2 = 0;\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $sum1 += $n[$i];\n        } else {\n            $sum2 += $n[$i];\n        }\n    }\n    if (($sum1 - $sum2) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"123456789\";\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "No\nWarning: Trying to access array offset on value of type int in /tmp/tmppdfn0itz.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmppdfn0itz.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmppdfn0itz.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmppdfn0itz.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmppdfn0itz.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppdfn0itz.php:32\nStack trace:\n#0 /tmp/tmppdfn0itz.php(37): test()\n#1 {main}\n  thrown in /tmp/tmppdfn0itz.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n  $n = str_split($n);\n  $sum = 0;\n  for ($i=0; $i < count($n); $i++) {\n    if ($i % 2 == 0) {\n      $sum += $n[$i];\n    } else {\n      $sum -= $n[$i];\n    }\n  }\n  if ($sum % 11 == 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\necho is_Diff(123456789);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum = 0;\n    $diff = 0;\n    $flag = 0;\n    $len = strlen($n);\n    for($i=0; $i<$len; $i++) {\n        if($flag == 0) {\n            $sum += $n[$i];\n            $flag = 1;\n        } else {\n            $diff += $n[$i];\n            $flag = 0;\n        }\n    }\n    if(($sum - $diff) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"12345\";\nif(is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "No\nWarning: Trying to access array offset on value of type int in /tmp/tmph74vr2_1.php on line 10\n\nWarning: Trying to access array offset on value of type int in /tmp/tmph74vr2_1.php on line 13\n\nWarning: Trying to access array offset on value of type int in /tmp/tmph74vr2_1.php on line 10\n\nWarning: Trying to access array offset on value of type int in /tmp/tmph74vr2_1.php on line 13\n\nWarning: Trying to access array offset on value of type int in /tmp/tmph74vr2_1.php on line 10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph74vr2_1.php:35\nStack trace:\n#0 /tmp/tmph74vr2_1.php(40): test()\n#1 {main}\n  thrown in /tmp/tmph74vr2_1.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum = 0;\n    $diff = 0;\n    $i = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = intval($n / 10);\n        $diff += $n % 10;\n        $n = intval($n / 10);\n        $i++;\n    }\n    if ($i % 2 == 0) {\n        return $sum == $diff;\n    } else {\n        return $sum - $diff == 11;\n    }\n}\n\necho is_Diff(121) ? \"True\" : \"False\";\necho \"<br>\";\necho is_Diff(12) ? \"True\" : \"False\";\necho \"<br>\";\necho is_Diff(123) ? \"True\" : \"False\";\necho \"<br>\";\necho is_Diff(1234) ? \"True\" : \"False\";\necho \"<br>\";\necho is_Diff(12345) ? \"True\" : \"False\";\necho \"<br>\";\necho is_Diff(123456) ? \"True\" : \"False\";\necho \"<br>\";\necho is_Diff(1234567) ? \"True\" : \"False\";\necho \"<br>\";\necho is_Diff(12345678) ? \"True\" : \"False\";\necho \"<br>\";\necho is_Diff(123456789) ? \"True\" : \"False\";\necho \"<br>\";\necho is_Diff(1234567890) ? \"True\" : \"False\";\necho \"<br>\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "True<br>False<br>False<br>False<br>False<br>False<br>False<br>False<br>False<br>False<br>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_sum = 0;\n    $even_sum = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_sum += $n % 10;\n        } else {\n            $odd_sum += $n % 10;\n        }\n        $n = (int)($n / 10);\n        $i++;\n    }\n    if ($odd_sum - $even_sum == 0 || $odd_sum - $even_sum == 11 || $odd_sum - $even_sum == -11) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Diff(1234) . \"\\n\";\necho is_Diff(1233) . \"\\n\";\necho is_Diff(1232) . \"\\n\";\necho is_Diff(1231) . \"\\n\";\necho is_Diff(1230) . \"\\n\";\necho is_Diff(1229) . \"\\n\";\necho is_Diff(1228) . \"\\n\";\necho is_Diff(1227) . \"\\n\";\necho is_Diff(1226) . \"\\n\";\necho is_Diff(1225) . \"\\n\";\necho is_Diff(1224) . \"\\n\";\necho is_Diff(1223) . \"\\n\";\necho is_Diff(1222) . \"\\n\";\necho is_Diff(1221) . \"\\n\";\necho is_Diff(1220) . \"\\n\";\necho is_Diff(1219) . \"\\n\";\necho is_Diff(1218) . \"\\n\";\necho is_Diff(1217) . \"\\n\";\necho is_Diff(1216) . \"\\n\";\necho is_Diff(1215) . \"\\n\";\necho is_Diff(1214) . \"\\n\";\necho is_Diff(1213) . \"\\n\";\necho is_Diff(1212) . \"\\n\";\necho is_Diff(1211) . \"\\n\";\necho is_Diff(1210) . \"\\n\";\necho is_Diff(1209) . \"\\n\";\necho is_Diff(1208) . \"\\n\";\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "\n\n1\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n\n\n\n1\n\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum = 0;\n    $diff = 0;\n    $i = 0;\n    while($n > 0) {\n        $rem = $n % 10;\n        if($i % 2 == 0) {\n            $sum += $rem;\n        }\n        else {\n            $diff += $rem;\n        }\n        $n = $n / 10;\n        $i++;\n    }\n    if(($sum - $diff) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\n$n = 1234;\nif(is_Diff($n)) {\n    echo \"Yes\";\n}\nelse {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122706,
      "stdout": "\nDeprecated: Implicit conversion from float 123.4 to int loses precision in /tmp/tmp5dm7sr9m.php on line 8\n\nDeprecated: Implicit conversion from float 12.34 to int loses precision in /tmp/tmp5dm7sr9m.php on line 8\n\nDeprecated: Implicit conversion from float 1.234 to int loses precision in /tmp/tmp5dm7sr9m.php on line 8\n\nDeprecated: Implicit conversion from float 0.1234 to int loses precision in /tmp/tmp5dm7sr9m.php on line 8\n\nDeprecated: Implicit conversion from float 0.01234 to int loses precision in /tmp/tmp5dm7sr9m.php on line 8\n\nDeprecated: Implicit conversion from float 0.001234 to int loses precision in /tmp/tmp5dm7sr9m.php on line 8\n\nDeprecated: Implicit conversion from float 0.00012340000000000002 to int loses precision in /tmp/tmp5dm7sr9m.php on line 8\n\nDeprecated: Implicit conversion from float 1.2340000000000002E-5 to int loses precision in /tmp/tmp5dm7sr9m.php on line 8\n\nDeprecated: Implicit conversion from float 1.2340000000000002E-6 to int loses precision in /tmp/tmp5dm7sr9m.php on line 8\n\nDeprecated: Implicit conversion from float 1.234E-7 to int loses precision in /tmp/tmp5dm7sr9m.php on line 8\n\nDeprecated: Implicit conversion from float 1.234E-8 to int loses precision in /tmp/tmp5dm7sr9m.php on line 8\n\nDeprecated: Implicit conversion from float 1.234E-9 to int loses precision in /tmp/tmp5dm7sr9m.php on line 8\n\nDeprecated: Implicit conversion from float 1.234E-10 to int loses precision in /tmp/tmp5dm7sr9m.php on line 8\n\nDeprecated: Implicit conversion from float 1.2340000000000001E-11 to int loses precision in /tmp/tmp5dm7sr9m.php on line 8\n\nDeprecated: Implicit conversion from float 1.2340000000000002E-12 to int loses precision in /tmp/tmp5dm7sr9m.php on line 8\n\nDeprecated: Implicit conversion from float 1.234E-13 to int loses precision in /tmp/tmp5dm7sr9m.php on line 8\n\nDeprecated: Implicit conversion from float 1.2340000000000001E-14 to int loses precision in /tmp/tmp5dm7sr9m.php on line 8\n\nDeprecated: Implicit conversion from float 1.2340000000000001E-15 to int loses precision in /tmp/tmp5dm7s",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_pos = 0;\n    $even_pos = 0;\n    $len = strlen($n);\n    for($i = 0; $i < $len; $i++) {\n        if($i % 2 == 0) {\n            $odd_pos += $n[$i];\n        } else {\n            $even_pos += $n[$i];\n        }\n    }\n    return ($odd_pos - $even_pos) % 11 == 0;\n}\n\n$n = \"123456789\";\nif(is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "No\nWarning: Trying to access array offset on value of type int in /tmp/tmp50oyhx48.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp50oyhx48.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp50oyhx48.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp50oyhx48.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp50oyhx48.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp50oyhx48.php:28\nStack trace:\n#0 /tmp/tmp50oyhx48.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp50oyhx48.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum = 0;\n    $diff = 0;\n    $count = 0;\n    $flag = 0;\n    $num = $n;\n    while ($n != 0) {\n        $count++;\n        $rem = $n % 10;\n        if ($flag == 0) {\n            $sum = $sum + $rem;\n            $flag = 1;\n        } else {\n            $diff = $diff + $rem;\n            $flag = 0;\n        }\n        $n = $n / 10;\n    }\n    if ($count % 2 == 0) {\n        if ($sum == $diff) {\n            return 1;\n        } else {\n            return 0;\n        }\n    } else {\n        if ($sum - $diff == 11) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n}\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"Number is divisible by 11\";\n} else {\n    echo \"Number is not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122698,
      "stdout": "\nDeprecated: Implicit conversion from float 12345678.9 to int loses precision in /tmp/tmprkoulqd_.php on line 11\n\nDeprecated: Implicit conversion from float 1234567.8900000001 to int loses precision in /tmp/tmprkoulqd_.php on line 11\n\nDeprecated: Implicit conversion from float 123456.78900000002 to int loses precision in /tmp/tmprkoulqd_.php on line 11\n\nDeprecated: Implicit conversion from float 12345.678900000003 to int loses precision in /tmp/tmprkoulqd_.php on line 11\n\nDeprecated: Implicit conversion from float 1234.5678900000003 to int loses precision in /tmp/tmprkoulqd_.php on line 11\n\nDeprecated: Implicit conversion from float 123.45678900000003 to int loses precision in /tmp/tmprkoulqd_.php on line 11\n\nDeprecated: Implicit conversion from float 12.345678900000003 to int loses precision in /tmp/tmprkoulqd_.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345678900000003 to int loses precision in /tmp/tmprkoulqd_.php on line 11\n\nDeprecated: Implicit conversion from float 0.12345678900000004 to int loses precision in /tmp/tmprkoulqd_.php on line 11\n\nDeprecated: Implicit conversion from float 0.012345678900000004 to int loses precision in /tmp/tmprkoulqd_.php on line 11\n\nDeprecated: Implicit conversion from float 0.0012345678900000003 to int loses precision in /tmp/tmprkoulqd_.php on line 11\n\nDeprecated: Implicit conversion from float 0.00012345678900000002 to int loses precision in /tmp/tmprkoulqd_.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-5 to int loses precision in /tmp/tmprkoulqd_.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-6 to int loses precision in /tmp/tmprkoulqd_.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-7 to int loses precision in /tmp/tmprkoulqd_.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-8 to int loses precision in /tmp/tmprkoulqd_.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345678900000001E-9 to int loses precision in /tmp/t",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits_sum = 0;\n    $even_digits_sum = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_digits_sum += $n % 10;\n        } else {\n            $odd_digits_sum += $n % 10;\n        }\n        $n = (int)($n / 10);\n        $i++;\n    }\n    return abs($odd_digits_sum - $even_digits_sum) % 11 == 0;\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $n = str_split($n);\n    $sum = 0;\n    for ($i = 0; $i < count($n); $i++) {\n        if ($i % 2 == 0) {\n            $sum += $n[$i];\n        } else {\n            $sum -= $n[$i];\n        }\n    }\n    if ($sum % 11 == 0) {\n        return \"True\";\n    } else {\n        return \"False\";\n    }\n}\n\necho is_Diff(123456789);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "False\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ecxnxhv.php:26\nStack trace:\n#0 /tmp/tmp9ecxnxhv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp9ecxnxhv.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $n = (string) $n;\n    $odd = 0;\n    $even = 0;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($i % 2 == 0) {\n            $odd += $n[$i];\n        } else {\n            $even += $n[$i];\n        }\n    }\n    if ($odd - $even == 0 || $odd - $even == 11 || $odd - $even == -11) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 1234;\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "Not Divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_digits += $n % 10;\n        } else {\n            $odd_digits += $n % 10;\n        }\n        $n = (int) ($n / 10);\n        $i++;\n    }\n    return $odd_digits - $even_digits;\n}\n\n$n = 123456789;\n$diff = is_Diff($n);\nif ($diff % 11 == 0) {\n    echo \"Number is divisible by 11\";\n} else {\n    echo \"Number is not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "Number is not divisible by 11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5w9jh3jj.php:31\nStack trace:\n#0 /tmp/tmp5w9jh3jj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp5w9jh3jj.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum_odd = 0;\n    $sum_even = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $sum_even += $n % 10;\n        } else {\n            $sum_odd += $n % 10;\n        }\n        $n = (int)($n / 10);\n        $i++;\n    }\n    return ($sum_even - $sum_odd) % 11 == 0;\n}\n\n$n = intval(trim(fgets(STDIN)));\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_digits += $n % 10;\n        } else {\n            $odd_digits += $n % 10;\n        }\n        $n = $n / 10;\n        $i++;\n    }\n    if (($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"Difference is divisible by 11\";\n} else {\n    echo \"Difference is not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122702,
      "stdout": "Difference is divisible by 11\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmp17rnbpyy.php on line 11\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmp17rnbpyy.php on line 9\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmp17rnbpyy.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmp17rnbpyy.php on line 9\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmp17rnbpyy.php on line 11\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmp17rnbpyy.php on line 9\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmp17rnbpyy.php on line 11\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmp17rnbpyy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmp17rnbpyy.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmp17rnbpyy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmp17rnbpyy.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmp17rnbpyy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmp17rnbpyy.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmp17rnbpyy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmp17rnbpyy.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmp17rnbpyy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmp17rnbpyy.php on line 11\n\nDeprecated: Implicit conversion from float 1.234",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $n = (string)$n;\n    $len = strlen($n);\n    for($i = 0; $i < $len; $i++) {\n        if($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n    }\n    $diff = $even - $odd;\n    if($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 1234;\nif(is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even_sum = 0;\n    $odd_sum = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_sum += $n % 10;\n        } else {\n            $odd_sum += $n % 10;\n        }\n        $n = floor($n / 10);\n        $i++;\n    }\n    return abs($even_sum - $odd_sum) % 11 == 0;\n}\n\n$n = intval(trim(fgets(STDIN)));\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_sum = 0;\n    $even_sum = 0;\n    $i = 0;\n    while ($n > 0) {\n        $i++;\n        $rem = $n % 10;\n        if ($i % 2 == 0) {\n            $even_sum += $rem;\n        } else {\n            $odd_sum += $rem;\n        }\n        $n = $n / 10;\n    }\n    if ($odd_sum - $even_sum == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 1234;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122706,
      "stdout": "\nDeprecated: Implicit conversion from float 123.4 to int loses precision in /tmp/tmpxmhl1xs9.php on line 9\n\nDeprecated: Implicit conversion from float 12.34 to int loses precision in /tmp/tmpxmhl1xs9.php on line 9\n\nDeprecated: Implicit conversion from float 1.234 to int loses precision in /tmp/tmpxmhl1xs9.php on line 9\n\nDeprecated: Implicit conversion from float 0.1234 to int loses precision in /tmp/tmpxmhl1xs9.php on line 9\n\nDeprecated: Implicit conversion from float 0.01234 to int loses precision in /tmp/tmpxmhl1xs9.php on line 9\n\nDeprecated: Implicit conversion from float 0.001234 to int loses precision in /tmp/tmpxmhl1xs9.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012340000000000002 to int loses precision in /tmp/tmpxmhl1xs9.php on line 9\n\nDeprecated: Implicit conversion from float 1.2340000000000002E-5 to int loses precision in /tmp/tmpxmhl1xs9.php on line 9\n\nDeprecated: Implicit conversion from float 1.2340000000000002E-6 to int loses precision in /tmp/tmpxmhl1xs9.php on line 9\n\nDeprecated: Implicit conversion from float 1.234E-7 to int loses precision in /tmp/tmpxmhl1xs9.php on line 9\n\nDeprecated: Implicit conversion from float 1.234E-8 to int loses precision in /tmp/tmpxmhl1xs9.php on line 9\n\nDeprecated: Implicit conversion from float 1.234E-9 to int loses precision in /tmp/tmpxmhl1xs9.php on line 9\n\nDeprecated: Implicit conversion from float 1.234E-10 to int loses precision in /tmp/tmpxmhl1xs9.php on line 9\n\nDeprecated: Implicit conversion from float 1.2340000000000001E-11 to int loses precision in /tmp/tmpxmhl1xs9.php on line 9\n\nDeprecated: Implicit conversion from float 1.2340000000000002E-12 to int loses precision in /tmp/tmpxmhl1xs9.php on line 9\n\nDeprecated: Implicit conversion from float 1.234E-13 to int loses precision in /tmp/tmpxmhl1xs9.php on line 9\n\nDeprecated: Implicit conversion from float 1.2340000000000001E-14 to int loses precision in /tmp/tmpxmhl1xs9.php on line 9\n\nDeprecated: Implicit conversion from float 1.2340000000000001E-15 to int loses precision in /tmp/tmpxmhl1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    while ($n > 0) {\n        $even += $n % 10;\n        $n = (int)($n / 10);\n        $odd += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return ($even - $odd) % 11 == 0;\n}\n\n$n = intval(readline());\nif (is_Diff($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmp85l8cntc.php:15\nStack trace:\n#0 {main}\n  thrown in /tmp/tmp85l8cntc.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum = 0;\n    $diff = 0;\n    $flag = 0;\n    $num = $n;\n    while ($n != 0) {\n        if ($flag == 0) {\n            $sum += $n % 10;\n            $flag = 1;\n        } else {\n            $diff += $n % 10;\n            $flag = 0;\n        }\n        $n = (int)($n / 10);\n    }\n    if ($sum - $diff == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_sum = 0;\n    $even_sum = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_sum += $n % 10;\n        } else {\n            $odd_sum += $n % 10;\n        }\n        $i++;\n        $n = intval($n / 10);\n    }\n    return ($odd_sum - $even_sum) % 11 == 0;\n}\n\necho is_Diff(121);\necho is_Diff(12);\necho is_Diff(123);\necho is_Diff(1234);\necho is_Diff(12345);\necho is_Diff(123456);\necho is_Diff(1234567);\necho is_Diff(12345678);\necho is_Diff(123456789);\necho is_Diff(1234567890);\necho is_Diff(12345678901);\necho is_Diff(123456789012);\necho is_Diff(1234567890123);\necho is_Diff(12345678901234);\necho is_Diff(123456789012345);\necho is_Diff(1234567890123456);\necho is_Diff(12345678901234567);\necho is_Diff(123456789012345678);\necho is_Diff(1234567890123456789);\necho is_Diff(12345678901234567890);\necho is_Diff(123456789012345678901);\necho is_Diff(1234567890123456789012);\necho is_Diff(12345678901234567890123);\necho is_Diff(123456789012345678901234);\necho is_Diff(1234567890123456789012345);\necho is_Diff(12345678901234567890123456);\necho is_Diff(123456789012345678901234567);\necho is_Diff(1234567890123456789012345678);\necho is_Diff(123456789012345\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp2ed3yk8v.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $n = str_split($n);\n    $sum = 0;\n    $i = 0;\n    while ($i < count($n)) {\n        if ($i % 2 == 0) {\n            $sum += $n[$i];\n        } else {\n            $sum -= $n[$i];\n        }\n        $i++;\n    }\n    if ($sum % 11 == 0) {\n        return \"Divisible by 11\";\n    } else {\n        return \"Not Divisible by 11\";\n    }\n}\n\necho is_Diff(1234);\necho \"\\n\";\necho is_Diff(1233);\necho \"\\n\";\necho is_Diff(1232);\necho \"\\n\";\necho is_Diff(1231);\necho \"\\n\";\necho is_Diff(1230);\necho \"\\n\";\necho is_Diff(1229);\necho \"\\n\";\necho is_Diff(1228);\necho \"\\n\";\necho is_Diff(1227);\necho \"\\n\";\necho is_Diff(1226);\necho \"\\n\";\necho is_Diff(1225);\necho \"\\n\";\necho is_Diff(1224);\necho \"\\n\";\necho is_Diff(1223);\necho \"\\n\";\necho is_Diff(1222);\necho \"\\n\";\necho is_Diff(1221);\necho \"\\n\";\necho is_Diff(1220);\necho \"\\n\";\necho is_Diff(1219);\necho \"\\n\";\necho is_Diff(1218);\necho \"\\n\";\necho is_Diff(1217);\necho \"\\n\";\necho is_Diff(1216);\necho \"\\n\";\necho is_Diff(1215);\necho \"\\n\";\necho is_Diff(1214);\necho \"\\n\";\necho is_Diff(1213);\necho \"\\n\";\necho is_Diff(1212);\necho \"\\n\";\necho is_Diff(1211);\necho \"\\n\";\necho is_Diff(1210);\necho \"\\n\";\necho is_Diff(1209);\necho \"\\n\";\necho is_Diff(1208);\necho \"\\n\";\necho is_Diff(1207\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmptg1m59x4.php on line 77\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 121;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $n = str_split($n);\n    $sum = 0;\n    for ($i = 0; $i < count($n); $i++) {\n        if ($i % 2 == 0) {\n            $sum += $n[$i];\n        } else {\n            $sum -= $n[$i];\n        }\n    }\n    if ($sum % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Diff(123456789);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd += $n[$i];\n        } else {\n            $even += $n[$i];\n        }\n    }\n    if ($odd - $even == 0 || $odd - $even == 11 || $odd - $even == -11) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"123456789\";\n$result = is_Diff($n);\nif ($result) {\n    echo \"Number is divisible by 11\";\n} else {\n    echo \"Number is not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "Number is not divisible by 11\nWarning: Trying to access array offset on value of type int in /tmp/tmpm1roxhqs.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpm1roxhqs.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpm1roxhqs.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpm1roxhqs.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpm1roxhqs.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm1roxhqs.php:33\nStack trace:\n#0 /tmp/tmpm1roxhqs.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpm1roxhqs.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $is_divisible = False;\n    $n = (string)$n;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd_digits += $n[$i];\n        } else {\n            $even_digits += $n[$i];\n        }\n    }\n    if (($odd_digits - $even_digits) % 11 == 0) {\n        $is_divisible = True;\n    }\n    return $is_divisible;\n}\n\n$n = 12;\nif (is_Diff($n)) {\n    echo \"The number is divisible by 11\";\n} else {\n    echo \"The number is not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "The number is not divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $n = strval($n);\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n    }\n    if ($even - $odd == 0 || $even - $odd == 11 || $even - $odd == -11) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Diff(121);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum = 0;\n    $diff = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $sum += $n % 10;\n        } else {\n            $diff += $n % 10;\n        }\n        $n = floor($n / 10);\n        $i++;\n    }\n    return ($sum - $diff) % 11 == 0;\n}\n\necho is_Diff(1234);\necho \"<br>\";\necho is_Diff(1233);\necho \"<br>\";\necho is_Diff(1232);\necho \"<br>\";\necho is_Diff(1231);\necho \"<br>\";\necho is_Diff(1230);\necho \"<br>\";\necho is_Diff(1229);\necho \"<br>\";\necho is_Diff(1228);\necho \"<br>\";\necho is_Diff(1227);\necho \"<br>\";\necho is_Diff(1226);\necho \"<br>\";\necho is_Diff(1225);\necho \"<br>\";\necho is_Diff(1224);\necho \"<br>\";\necho is_Diff(1223);\necho \"<br>\";\necho is_Diff(1222);\necho \"<br>\";\necho is_Diff(1221);\necho \"<br>\";\necho is_Diff(1220);\necho \"<br>\";\necho is_Diff(1219);\necho \"<br>\";\necho is_Diff(1218);\necho \"<br>\";\necho is_Diff(1217);\necho \"<br>\";\necho is_Diff(1216);\necho \"<br>\";\necho is_Diff(1215);\necho \"<br>\";\necho is_Diff(1214);\necho \"<br>\";\necho is_Diff(1213);\necho \"<br>\";\necho is_Diff(1212);\necho \"<br>\";\necho is_Diff(1211);\necho \"<br>\";\necho is_Diff(1210);\necho \"<br>\";\necho is_Diff(1209);\necho \"<br>\";\necho is_Diff(1208);\necho \"<br>\";\necho\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpt1typgcl.php on line 74\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_sum = 0;\n    $even_sum = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $odd_sum += $n % 10;\n        } else {\n            $even_sum += $n % 10;\n        }\n        $n = floor($n / 10);\n        $i++;\n    }\n    return ($odd_sum - $even_sum) % 11 == 0;\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n /= 10;\n        $even_digits += $n % 10;\n        $n /= 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = intval(trim(fgets(STDIN)));\nif (is_Diff($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122702,
      "stdout": "True\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpgkqfbr3z.php on line 9\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmpgkqfbr3z.php on line 7\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmpgkqfbr3z.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmpgkqfbr3z.php on line 7\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmpgkqfbr3z.php on line 9\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmpgkqfbr3z.php on line 7\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmpgkqfbr3z.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmpgkqfbr3z.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmpgkqfbr3z.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmpgkqfbr3z.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmpgkqfbr3z.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmpgkqfbr3z.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmpgkqfbr3z.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmpgkqfbr3z.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmpgkqfbr3z.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmpgkqfbr3z.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmpgkqfbr3z.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precision in /t",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    if (($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    }\n    return false;\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even += $n % 10;\n        } else {\n            $odd += $n % 10;\n        }\n        $n = (int) ($n / 10);\n        $i++;\n    }\n    if (abs($even - $odd) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int)($n / 10);\n        $even_digits += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\necho is_Diff(121) ? \"Yes\" : \"No\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n != 0) {\n        $odd_digits += $n % 10;\n        $n = (int)($n / 10);\n        $even_digits += $n % 10;\n        $n = (int)($n / 10);\n    }\n    $diff = $odd_digits - $even_digits;\n    if ($diff < 0) {\n        $diff = -$diff;\n    }\n    return $diff % 11 == 0;\n}\n\n$n = intval(readline());\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122697,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmpctp99goe.php:19\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpctp99goe.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd += $n[$i];\n        } else {\n            $even += $n[$i];\n        }\n    }\n    if ($odd - $even == 0 || $odd - $even == 11 || $odd - $even == -11) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Diff(123456789) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123456780) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123456771) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123456762) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123456773) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123456764) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123456775) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123456766) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123456777) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123456768) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123456779) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123456760) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123456771) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123456762) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123456773) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123456764) ? 'true' :\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122697,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpkcntn4zz.php on line 52\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_pos = 0;\n    $even_pos = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd_pos += $n[$i];\n        } else {\n            $even_pos += $n[$i];\n        }\n    }\n    if (abs($odd_pos - $even_pos) % 11 == 0) {\n        return true;\n    }\n    return false;\n}\n\n$n = \"1214\";\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122697,
      "stdout": "No\nWarning: Trying to access array offset on value of type int in /tmp/tmpgdc4rvn6.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpgdc4rvn6.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpgdc4rvn6.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpgdc4rvn6.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpgdc4rvn6.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgdc4rvn6.php:31\nStack trace:\n#0 /tmp/tmpgdc4rvn6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpgdc4rvn6.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_sum = 0;\n    $even_sum = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_sum += $n % 10;\n        } else {\n            $odd_sum += $n % 10;\n        }\n        $n = (int)($n / 10);\n        $i++;\n    }\n    return ($odd_sum - $even_sum) % 11 == 0;\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122697,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $n = strval($n);\n    $len = strlen($n);\n    $sum1 = 0;\n    $sum2 = 0;\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $sum1 += $n[$i];\n        } else {\n            $sum2 += $n[$i];\n        }\n    }\n    if (abs($sum1 - $sum2) % 11 == 0) {\n        return \"True\";\n    } else {\n        return \"False\";\n    }\n}\n\n$n = intval(fgets(STDIN));\necho is_Diff($n);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122697,
      "stdout": "True\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8hmr8dsn.php:29\nStack trace:\n#0 /tmp/tmp8hmr8dsn.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp8hmr8dsn.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $diff = 0;\n    $n = (string)$n;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $diff += $n[$i];\n        } else {\n            $diff -= $n[$i];\n        }\n    }\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"$n is divisible by 11\";\n} else {\n    echo \"$n is not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122697,
      "stdout": "123456789 is not divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n    }\n    if ($even - $odd == 0 || $even - $odd == 11 || $even - $odd == -11) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Diff(1234);\necho is_Diff(1243);\necho is_Diff(1254);\necho is_Diff(1263);\necho is_Diff(1272);\necho is_Diff(1281);\necho is_Diff(1290);\necho is_Diff(1299);\necho is_Diff(1301);\necho is_Diff(1310);\necho is_Diff(1329);\necho is_Diff(1338);\necho is_Diff(1347);\necho is_Diff(1356);\necho is_Diff(1365);\necho is_Diff(1374);\necho is_Diff(1383);\necho is_Diff(1392);\necho is_Diff(1401);\necho is_Diff(1410);\necho is_Diff(1419);\necho is_Diff(1428);\necho is_Diff(1437);\necho is_Diff(1446);\necho is_Diff(1455);\necho is_Diff(1464);\necho is_Diff(1473);\necho is_Diff(1482);\necho is_Diff(1491);\necho is_Diff(1500);\necho is_Diff(1509);\necho is_Diff(1518);\necho is_Diff(1527);\necho is_Diff(1536);\necho is_Diff(1545);\necho is_Diff(1554);\necho is_Diff(1563);\necho is_Diff(1572);\necho is_Diff(1581);\necho is_Diff(1590);\necho is_Diff(1599);\necho is_Diff\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122697,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmpgrql2w_l.php on line 63\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int)($n / 10);\n        $even_digits += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509881,
      "stdout": "Not Divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $is_negative = false;\n    if ($n < 0) {\n        $is_negative = true;\n        $n = -$n;\n    }\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    if ($is_negative) {\n        $odd_digits = -$odd_digits;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = -121;\necho is_Diff($n);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $odd_digits_count = 0;\n    $even_digits_count = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_digits = $even_digits + $n % 10;\n            $even_digits_count++;\n        } else {\n            $odd_digits = $odd_digits + $n % 10;\n            $odd_digits_count++;\n        }\n        $n = $n / 10;\n        $i++;\n    }\n    $diff = $odd_digits - $even_digits;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$n = 12;\nif (is_Diff($n)) {\n    echo \"Given number is divisible by 11\";\n} else {\n    echo \"Given number is not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122706,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmp5i_fk8wy.php on line 14\n\nDeprecated: Implicit conversion from float 0.12 to int loses precision in /tmp/tmp5i_fk8wy.php on line 11\n\nDeprecated: Implicit conversion from float 0.012 to int loses precision in /tmp/tmp5i_fk8wy.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012000000000000001 to int loses precision in /tmp/tmp5i_fk8wy.php on line 11\n\nDeprecated: Implicit conversion from float 0.00012000000000000002 to int loses precision in /tmp/tmp5i_fk8wy.php on line 14\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-5 to int loses precision in /tmp/tmp5i_fk8wy.php on line 11\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-6 to int loses precision in /tmp/tmp5i_fk8wy.php on line 14\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-7 to int loses precision in /tmp/tmp5i_fk8wy.php on line 11\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-8 to int loses precision in /tmp/tmp5i_fk8wy.php on line 14\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-9 to int loses precision in /tmp/tmp5i_fk8wy.php on line 11\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-10 to int loses precision in /tmp/tmp5i_fk8wy.php on line 14\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-11 to int loses precision in /tmp/tmp5i_fk8wy.php on line 11\n\nDeprecated: Implicit conversion from float 1.2000000000000001E-12 to int loses precision in /tmp/tmp5i_fk8wy.php on line 14\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-13 to int loses precision in /tmp/tmp5i_fk8wy.php on line 11\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-14 to int loses precision in /tmp/tmp5i_fk8wy.php on line 14\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-15 to int loses precision in /tmp/tmp5i_fk8wy.php on line 11\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-16 to int loses precision in /tmp/tmp5i_fk8w",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $i = 0;\n    while ($n > 0) {\n        $rem = $n % 10;\n        if ($i % 2 == 0) {\n            $odd += $rem;\n        } else {\n            $even += $rem;\n        }\n        $i++;\n        $n = $n / 10;\n    }\n    if ($odd - $even == 0 || $odd - $even == 11 || $odd - $even == -11) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(readline());\nif (is_Diff($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122697,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmp7h56yu18.php:24\nStack trace:\n#0 {main}\n  thrown in /tmp/tmp7h56yu18.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $n = str_split($n);\n    $odd = 0;\n    $even = 0;\n    for ($i = 0; $i < count($n); $i++) {\n        if ($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n    }\n    if (($odd - $even) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\necho is_Diff(123456789);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $str = strval($n);\n    $count = strlen($str);\n    $sum = 0;\n    for ($i = 0; $i < $count; $i++) {\n        if ($i % 2 == 0) {\n            $sum += $str[$i];\n        } else {\n            $sum -= $str[$i];\n        }\n    }\n    if ($sum % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122697,
      "stdout": "True",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    while ($n > 0) {\n        $odd += $n % 10;\n        $n = $n / 10;\n        $even += $n % 10;\n        $n = $n / 10;\n    }\n    return ($odd - $even) % 11 == 0;\n}\n\necho is_Diff(121);\necho is_Diff(12);\necho is_Diff(123456789);\necho is_Diff(1234567890);\necho is_Diff(12345678901);\necho is_Diff(123456789012);\necho is_Diff(1234567890123);\necho is_Diff(12345678901234);\necho is_Diff(123456789012345);\necho is_Diff(1234567890123456);\necho is_Diff(12345678901234567);\necho is_Diff(123456789012345678);\necho is_Diff(1234567890123456789);\necho is_Diff(12345678901234567890);\necho is_Diff(123456789012345678901);\necho is_Diff(1234567890123456789012);\necho is_Diff(12345678901234567890123);\necho is_Diff(123456789012345678901234);\necho is_Diff(1234567890123456789012345);\necho is_Diff(12345678901234567890123456);\necho is_Diff(123456789012345678901234567);\necho is_Diff(1234567890123456789012345678);\necho is_Diff(12345678901234567890123456789);\necho is_Diff(123456789012345678901234567890);\necho is_Diff(1234567890123456789012345678901);\necho is_Diff(12345678901234567890123456789012);\necho is_Diff(12345678901234567890123\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122697,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmps_zmmj0c.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $str = strval($n);\n    $len = strlen($str);\n    $sum = 0;\n    for ($i = 0; $i < $len; $i++) {\n        $sum += $str[$i];\n    }\n    if ($sum % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122697,
      "stdout": "True\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsvwntuz_.php:29\nStack trace:\n#0 /tmp/tmpsvwntuz_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpsvwntuz_.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum = 0;\n    $diff = 0;\n    $flag = 1;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = intval($n / 10);\n        if ($flag == 1) {\n            $diff += $n % 10;\n            $n = intval($n / 10);\n            $flag = 0;\n        } else {\n            $diff -= $n % 10;\n            $n = intval($n / 10);\n            $flag = 1;\n        }\n    }\n    if ($diff == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122697,
      "stdout": "Divisible by 11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqack8s84.php:39\nStack trace:\n#0 /tmp/tmpqack8s84.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpqack8s84.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n    }\n    if ($even - $odd == 0 || $even - $odd == 11 || $even - $odd == -11) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"123456789\";\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122697,
      "stdout": "No\nWarning: Trying to access array offset on value of type int in /tmp/tmp739eklzf.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp739eklzf.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp739eklzf.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp739eklzf.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp739eklzf.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp739eklzf.php:32\nStack trace:\n#0 /tmp/tmp739eklzf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp739eklzf.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $flag = 0;\n    while ($n != 0) {\n        if ($flag == 0) {\n            $odd_digits += $n % 10;\n            $flag = 1;\n        } else {\n            $even_digits += $n % 10;\n            $flag = 0;\n        }\n        $n = $n / 10;\n    }\n    if (($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(readline('Enter a number: '));\nif (is_Diff($n)) {\n    echo 'The number is divisible by 11';\n} else {\n    echo 'The number is not divisible by 11';\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122697,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmpot2ccs8w.php:24\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpot2ccs8w.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum_odd = 0;\n    $sum_even = 0;\n    $n = str_split($n);\n    for ($i = 0; $i < count($n); $i++) {\n        if ($i % 2 == 0) {\n            $sum_even += $n[$i];\n        } else {\n            $sum_odd += $n[$i];\n        }\n    }\n    if (($sum_odd - $sum_even) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"1234\";\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122697,
      "stdout": "Not Divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_pos = 0;\n    $even_pos = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_pos += $n % 10;\n        } else {\n            $odd_pos += $n % 10;\n        }\n        $n = (int) ($n / 10);\n        $i++;\n    }\n    if (abs($odd_pos - $even_pos) % 11 == 0) {\n        return true;\n    }\n    return false;\n}\n\n$n = intval(readline());\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122697,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmp5ijl6lwr.php:22\nStack trace:\n#0 {main}\n  thrown in /tmp/tmp5ijl6lwr.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int)($n / 10);\n        $even_digits += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\necho is_Diff(121) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(12345) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(1234567) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456789) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(1234567891011) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456789101112) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(12345678910111213) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(1234567891011121314) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456789101112131415) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(12345678910111213141516) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(1234567891011121314151617) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456789101112131415161718) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(12345678910111213141516171819) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(1234567891011121314151617181920) ? \"Yes\" : \"No\";\necho \"\\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122697,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\", expecting \",\" or \";\" in /tmp/tmp93pg3a8n.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n    }\n    if (($even - $odd) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Diff(1234) ? \"Divisible by 11\" : \"Not Divisible by 11\";\necho \"\\n\";\necho is_Diff(1233) ? \"Divisible by 11\" : \"Not Divisible by 11\";\necho \"\\n\";\necho is_Diff(1232) ? \"Divisible by 11\" : \"Not Divisible by 11\";\necho \"\\n\";\necho is_Diff(1231) ? \"Divisible by 11\" : \"Not Divisible by 11\";\necho \"\\n\";\necho is_Diff(1230) ? \"Divisible by 11\" : \"Not Divisible by 11\";\necho \"\\n\";\necho is_Diff(1229) ? \"Divisible by 11\" : \"Not Divisible by 11\";\necho \"\\n\";\necho is_Diff(1228) ? \"Divisible by 11\" : \"Not Divisible by 11\";\necho \"\\n\";\necho is_Diff(1227) ? \"Divisible by 11\" : \"Not Divisible by 11\";\necho \"\\n\";\necho is_Diff(1226) ? \"Divisible by 11\" : \"Not Divisible by 11\";\necho \"\\n\";\necho is_Diff(1225) ? \"Divisible by 11\" : \"Not Divisible by 11\";\necho \"\\n\";\necho is_Diff(1224) ? \"Divisible by 11\" : \"Not Divisible by 11\";\necho \"\\n\";\necho is_Diff(1223) ? \"Divisible by 11\" : \"Not Divisible by 11\";\necho \"\\n\";\necho is_Diff(1222) ? \"Divisible by 11\" : \"Not Divisible by 11\";\necho \"\\n\";\necho is_Diff(1221) ? \"Divisible by 11\" : \"Not Div\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122697,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\", expecting \",\" or \";\" in /tmp/tmp6mbdyu31.php on line 52\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n    }\n    if ($even - $odd == 0 || $even - $odd == 11 || $even - $odd == -11) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"1234\";\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122697,
      "stdout": "No\nWarning: Trying to access array offset on value of type int in /tmp/tmpudinp08l.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpudinp08l.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpudinp08l.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpudinp08l.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpudinp08l.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpudinp08l.php:32\nStack trace:\n#0 /tmp/tmpudinp08l.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpudinp08l.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_digits += $n % 10;\n        } else {\n            $odd_digits += $n % 10;\n        }\n        $n = (int)($n / 10);\n        $i++;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = intval(readline());\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122697,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmpbw1xvfs9.php:19\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpbw1xvfs9.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_pos = 0;\n    $even_pos = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd_pos += $n[$i];\n        } else {\n            $even_pos += $n[$i];\n        }\n    }\n    if (abs($odd_pos - $even_pos) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122697,
      "stdout": "\nWarning: Trying to access array offset on value of type int in /tmp/tmppao4a_hp.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmppao4a_hp.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmppao4a_hp.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmppao4a_hp.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmppao4a_hp.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmppao4a_hp.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmppao4a_hp.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmppao4a_hp.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmppao4a_hp.php on line 9\nYes\nWarning: Trying to access array offset on value of type int in /tmp/tmppao4a_hp.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tm",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd += $n[$i];\n        } else {\n            $even += $n[$i];\n        }\n    }\n    if (abs($odd - $even) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Diff(123456789);\necho \"\\n\";\necho is_Diff(123456780);\necho \"\\n\";\necho is_Diff(123456781);\necho \"\\n\";\necho is_Diff(123456782);\necho \"\\n\";\necho is_Diff(123456783);\necho \"\\n\";\necho is_Diff(123456784);\necho \"\\n\";\necho is_Diff(123456785);\necho \"\\n\";\necho is_Diff(123456786);\necho \"\\n\";\necho is_Diff(123456787);\necho \"\\n\";\necho is_Diff(123456788);\necho \"\\n\";\necho is_Diff(123456789);\necho \"\\n\";\necho is_Diff(123456790);\necho \"\\n\";\necho is_Diff(123456791);\necho \"\\n\";\necho is_Diff(123456792);\necho \"\\n\";\necho is_Diff(123456793);\necho \"\\n\";\necho is_Diff(123456794);\necho \"\\n\";\necho is_Diff(123456795);\necho \"\\n\";\necho is_Diff(123456796);\necho \"\\n\";\necho is_Diff(123456797);\necho \"\\n\";\necho is_Diff(123456798);\necho \"\\n\";\necho is_Diff(123456799);\necho \"\\n\";\necho is_Diff(123456800);\necho \"\\n\";\necho is_Diff(123456801);\necho \"\\n\";\necho is_Diff(123456802);\necho \"\\n\";\necho is_Diff\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122697,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmp57si800y.php on line 70\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $n = (string)$n;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd += $n[$i];\n        } else {\n            $even += $n[$i];\n        }\n    }\n    if (abs($odd - $even) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Diff(121);\necho is_Diff(12);\necho is_Diff(123);\necho is_Diff(12345);\necho is_Diff(123456);\necho is_Diff(1234567);\necho is_Diff(12345678);\necho is_Diff(123456789);\necho is_Diff(1234567890);\necho is_Diff(12345678901);\necho is_Diff(123456789012);\necho is_Diff(1234567890123);\necho is_Diff(12345678901234);\necho is_Diff(123456789012345);\necho is_Diff(1234567890123456);\necho is_Diff(12345678901234567);\necho is_Diff(123456789012345678);\necho is_Diff(1234567890123456789);\necho is_Diff(12345678901234567890);\necho is_Diff(123456789012345678901);\necho is_Diff(1234567890123456789012);\necho is_Diff(12345678901234567890123);\necho is_Diff(123456789012345678901234);\necho is_Diff(1234567890123456789012345);\necho is_Diff(12345678901234567890123456);\necho is_Diff(123456789012345678901234567);\necho is_Diff(1234567890123456789012345678);\necho is_Diff\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122697,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmp6f79ff47.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even += $n % 10;\n        } else {\n            $odd += $n % 10;\n        }\n        $n = $n / 10;\n        $i++;\n    }\n    if ($even - $odd == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Diff(121);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122707,
      "stdout": "\nDeprecated: Implicit conversion from float 12.1 to int loses precision in /tmp/tmptbzcu61a.php on line 11\n\nDeprecated: Implicit conversion from float 1.21 to int loses precision in /tmp/tmptbzcu61a.php on line 9\n\nDeprecated: Implicit conversion from float 0.121 to int loses precision in /tmp/tmptbzcu61a.php on line 11\n\nDeprecated: Implicit conversion from float 0.0121 to int loses precision in /tmp/tmptbzcu61a.php on line 9\n\nDeprecated: Implicit conversion from float 0.00121 to int loses precision in /tmp/tmptbzcu61a.php on line 11\n\nDeprecated: Implicit conversion from float 0.00012099999999999999 to int loses precision in /tmp/tmptbzcu61a.php on line 9\n\nDeprecated: Implicit conversion from float 1.21E-5 to int loses precision in /tmp/tmptbzcu61a.php on line 11\n\nDeprecated: Implicit conversion from float 1.2099999999999998E-6 to int loses precision in /tmp/tmptbzcu61a.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999998E-7 to int loses precision in /tmp/tmptbzcu61a.php on line 11\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-8 to int loses precision in /tmp/tmptbzcu61a.php on line 9\n\nDeprecated: Implicit conversion from float 1.21E-9 to int loses precision in /tmp/tmptbzcu61a.php on line 11\n\nDeprecated: Implicit conversion from float 1.21E-10 to int loses precision in /tmp/tmptbzcu61a.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-11 to int loses precision in /tmp/tmptbzcu61a.php on line 11\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-12 to int loses precision in /tmp/tmptbzcu61a.php on line 9\n\nDeprecated: Implicit conversion from float 1.21E-13 to int loses precision in /tmp/tmptbzcu61a.php on line 11\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-14 to int loses precision in /tmp/tmptbzcu61a.php on line 9\n\nDeprecated: Implicit conversion from float 1.21E-15 to int loses precision in /tmp/tmptbzcu61a.php on line 11\n\nDeprecated: Implicit conversion from float 1.21E-16 to int loses precision in /tmp/tmptbz",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_sum = 0;\n    $even_sum = 0;\n    $count = 0;\n    while ($n > 0) {\n        $count++;\n        $rem = $n % 10;\n        if ($count % 2 == 0) {\n            $even_sum += $rem;\n        } else {\n            $odd_sum += $rem;\n        }\n        $n = $n / 10;\n    }\n    $diff = $odd_sum - $even_sum;\n    if ($diff % 11 == 0) {\n        return \"True\";\n    } else {\n        return \"False\";\n    }\n}\necho is_Diff(121);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122699,
      "stdout": "\nDeprecated: Implicit conversion from float 12.1 to int loses precision in /tmp/tmp94yzglce.php on line 9\n\nDeprecated: Implicit conversion from float 1.21 to int loses precision in /tmp/tmp94yzglce.php on line 9\n\nDeprecated: Implicit conversion from float 0.121 to int loses precision in /tmp/tmp94yzglce.php on line 9\n\nDeprecated: Implicit conversion from float 0.0121 to int loses precision in /tmp/tmp94yzglce.php on line 9\n\nDeprecated: Implicit conversion from float 0.00121 to int loses precision in /tmp/tmp94yzglce.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012099999999999999 to int loses precision in /tmp/tmp94yzglce.php on line 9\n\nDeprecated: Implicit conversion from float 1.21E-5 to int loses precision in /tmp/tmp94yzglce.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999998E-6 to int loses precision in /tmp/tmp94yzglce.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999998E-7 to int loses precision in /tmp/tmp94yzglce.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-8 to int loses precision in /tmp/tmp94yzglce.php on line 9\n\nDeprecated: Implicit conversion from float 1.21E-9 to int loses precision in /tmp/tmp94yzglce.php on line 9\n\nDeprecated: Implicit conversion from float 1.21E-10 to int loses precision in /tmp/tmp94yzglce.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-11 to int loses precision in /tmp/tmp94yzglce.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-12 to int loses precision in /tmp/tmp94yzglce.php on line 9\n\nDeprecated: Implicit conversion from float 1.21E-13 to int loses precision in /tmp/tmp94yzglce.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-14 to int loses precision in /tmp/tmp94yzglce.php on line 9\n\nDeprecated: Implicit conversion from float 1.21E-15 to int loses precision in /tmp/tmp94yzglce.php on line 9\n\nDeprecated: Implicit conversion from float 1.21E-16 to int loses precision in /tmp/tmp94yzglce.php",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum = 0;\n    $diff = 0;\n    $num = $n;\n    while ($num > 0) {\n        $sum += $num % 10;\n        $num = floor($num / 10);\n        $diff += $num % 10;\n        $num = floor($num / 10);\n    }\n    return ($sum - $diff) % 11 == 0;\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122697,
      "stdout": "Divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_pos = 0;\n    $even_pos = 0;\n    $len = strlen($n);\n    for($i = 0; $i < $len; $i++) {\n        if($i % 2 == 0) {\n            $odd_pos += $n[$i];\n        } else {\n            $even_pos += $n[$i];\n        }\n    }\n    $diff = $odd_pos - $even_pos;\n    if($diff % 11 == 0) {\n        return \"True\";\n    } else {\n        return \"False\";\n    }\n}\n\necho is_Diff(123456789);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122698,
      "stdout": "\nWarning: Trying to access array offset on value of type int in /tmp/tmpwrcectrw.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpwrcectrw.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpwrcectrw.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpwrcectrw.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpwrcectrw.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpwrcectrw.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpwrcectrw.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpwrcectrw.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpwrcectrw.php on line 9\nTrue\nWarning: Trying to access array offset on value of type int in /tmp/tmpwrcectrw.php on line 9\n\nWarning: Trying to access array offset on value of type int in /t",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_pos = 0;\n    $even_pos = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd_pos += $n[$i];\n        } else {\n            $even_pos += $n[$i];\n        }\n    }\n    if (abs($odd_pos - $even_pos) % 11 == 0) {\n        return \"True\";\n    } else {\n        return \"False\";\n    }\n}\necho is_Diff(1234);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122698,
      "stdout": "\nWarning: Trying to access array offset on value of type int in /tmp/tmpoiabexeg.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpoiabexeg.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpoiabexeg.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpoiabexeg.php on line 11\nTrue\nWarning: Trying to access array offset on value of type int in /tmp/tmpoiabexeg.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpoiabexeg.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpoiabexeg.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpoiabexeg.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpoiabexeg.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoiabexeg.php:26\nStack trace:\n#0 /tmp/tmpoiabexeg.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpoiabexeg",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) $n / 10;\n        $even_digits += $n % 10;\n        $n = (int) $n / 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 121;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122698,
      "stdout": "\nDeprecated: Implicit conversion from float 12.1 to int loses precision in /tmp/tmpphsc0fqw.php on line 9\n\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmpphsc0fqw.php on line 7\n\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmpphsc0fqw.php on line 9\nYes\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpphsc0fqw.php on line 9\n\nDeprecated: Implicit conversion from float 123.4 to int loses precision in /tmp/tmpphsc0fqw.php on line 7\n\nDeprecated: Implicit conversion from float 12.3 to int loses precision in /tmp/tmpphsc0fqw.php on line 9\n\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmpphsc0fqw.php on line 7\n\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmpphsc0fqw.php on line 9\n\nDeprecated: Implicit conversion from float 121211.2 to int loses precision in /tmp/tmpphsc0fqw.php on line 9\n\nDeprecated: Implicit conversion from float 12121.1 to int loses",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $n = str_split($n);\n    $odd_sum = 0;\n    $even_sum = 0;\n    for ($i = 0; $i < count($n); $i++) {\n        if ($i % 2 == 0) {\n            $odd_sum += $n[$i];\n        } else {\n            $even_sum += $n[$i];\n        }\n    }\n    $diff = $odd_sum - $even_sum;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"1234\";\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122698,
      "stdout": "Not Divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_sum = 0;\n    $even_sum = 0;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($i % 2 == 0) {\n            $odd_sum += $n[$i];\n        } else {\n            $even_sum += $n[$i];\n        }\n    }\n    if (($odd_sum - $even_sum) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"123456789\";\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122698,
      "stdout": "No\nWarning: Trying to access array offset on value of type int in /tmp/tmpynf7w2jw.php on line 8\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpynf7w2jw.php on line 10\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpynf7w2jw.php on line 8\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpynf7w2jw.php on line 10\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpynf7w2jw.php on line 8\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynf7w2jw.php:31\nStack trace:\n#0 /tmp/tmpynf7w2jw.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpynf7w2jw.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $n = (string)$n;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd += $n[$i];\n        } else {\n            $even += $n[$i];\n        }\n    }\n    return ($odd - $even) % 11 == 0;\n}\n\necho is_Diff(1234);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122698,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even += $n % 10;\n        } else {\n            $odd += $n % 10;\n        }\n        $n = (int)($n / 10);\n        $i++;\n    }\n    return ($odd - $even) % 11 == 0;\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122698,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_pos = 0;\n    $even_pos = 0;\n    $num = $n;\n    $i = 0;\n    while ($num != 0) {\n        $rem = $num % 10;\n        if ($i % 2 == 0) {\n            $even_pos = $even_pos + $rem;\n        } else {\n            $odd_pos = $odd_pos + $rem;\n        }\n        $i++;\n        $num = $num / 10;\n    }\n    if (($odd_pos - $even_pos) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(readline());\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122698,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmpw_o2z5zy.php:25\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpw_o2z5zy.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $i = 0;\n    while ($n != 0) {\n        if ($i % 2 == 0) {\n            $odd_digits += $n % 10;\n        } else {\n            $even_digits += $n % 10;\n        }\n        $n = (int) ($n / 10);\n        $i++;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122698,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $count = 0;\n    while ($n > 0) {\n        if ($count % 2 == 0) {\n            $odd_digits += $n % 10;\n        } else {\n            $even_digits += $n % 10;\n        }\n        $n = $n / 10;\n        $count++;\n    }\n    if (abs($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122704,
      "stdout": "Yes\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpbl4w58yf.php on line 11\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmpbl4w58yf.php on line 9\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmpbl4w58yf.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmpbl4w58yf.php on line 9\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmpbl4w58yf.php on line 11\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmpbl4w58yf.php on line 9\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmpbl4w58yf.php on line 11\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmpbl4w58yf.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmpbl4w58yf.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmpbl4w58yf.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmpbl4w58yf.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmpbl4w58yf.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmpbl4w58yf.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmpbl4w58yf.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmpbl4w58yf.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmpbl4w58yf.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmpbl4w58yf.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precisi",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_digits += $n % 10;\n        } else {\n            $odd_digits += $n % 10;\n        }\n        $n = (int)($n / 10);\n        $i++;\n    }\n    if (abs($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(readline());\nif (is_Diff($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122698,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmpexn84gss.php:23\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpexn84gss.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum = 0;\n    $diff = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $sum += $n % 10;\n        } else {\n            $diff += $n % 10;\n        }\n        $n = (int)($n / 10);\n        $i++;\n    }\n    return ($sum - $diff) % 11 == 0;\n}\n\n$n = intval(trim(fgets(STDIN)));\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122698,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $n = str_split($n);\n    $odd = 0;\n    $even = 0;\n    for ($i = 0; $i < count($n); $i++) {\n        if ($i % 2 == 0) {\n            $odd += $n[$i];\n        } else {\n            $even += $n[$i];\n        }\n    }\n    if (($odd - $even) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\necho is_Diff(1234);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122698,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum = 0;\n    $odd = 0;\n    $even = 0;\n    $i = 0;\n    while ($n > 0) {\n        $rem = $n % 10;\n        if ($i % 2 == 0) {\n            $odd += $rem;\n        } else {\n            $even += $rem;\n        }\n        $i++;\n        $n = $n / 10;\n    }\n    $sum = $odd - $even;\n    if ($sum % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122708,
      "stdout": "\nDeprecated: Implicit conversion from float 12345678.9 to int loses precision in /tmp/tmpbuc0vxc_.php on line 9\n\nDeprecated: Implicit conversion from float 1234567.8900000001 to int loses precision in /tmp/tmpbuc0vxc_.php on line 9\n\nDeprecated: Implicit conversion from float 123456.78900000002 to int loses precision in /tmp/tmpbuc0vxc_.php on line 9\n\nDeprecated: Implicit conversion from float 12345.678900000003 to int loses precision in /tmp/tmpbuc0vxc_.php on line 9\n\nDeprecated: Implicit conversion from float 1234.5678900000003 to int loses precision in /tmp/tmpbuc0vxc_.php on line 9\n\nDeprecated: Implicit conversion from float 123.45678900000003 to int loses precision in /tmp/tmpbuc0vxc_.php on line 9\n\nDeprecated: Implicit conversion from float 12.345678900000003 to int loses precision in /tmp/tmpbuc0vxc_.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345678900000003 to int loses precision in /tmp/tmpbuc0vxc_.php on line 9\n\nDeprecated: Implicit conversion from float 0.12345678900000004 to int loses precision in /tmp/tmpbuc0vxc_.php on line 9\n\nDeprecated: Implicit conversion from float 0.012345678900000004 to int loses precision in /tmp/tmpbuc0vxc_.php on line 9\n\nDeprecated: Implicit conversion from float 0.0012345678900000003 to int loses precision in /tmp/tmpbuc0vxc_.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012345678900000002 to int loses precision in /tmp/tmpbuc0vxc_.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-5 to int loses precision in /tmp/tmpbuc0vxc_.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-6 to int loses precision in /tmp/tmpbuc0vxc_.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-7 to int loses precision in /tmp/tmpbuc0vxc_.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-8 to int loses precision in /tmp/tmpbuc0vxc_.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345678900000001E-9 to int loses precision in /tmp/tmpbuc0vxc_.php o",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n /= 10;\n        $even_digits += $n % 10;\n        $n /= 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122704,
      "stdout": "True\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmp98mtljni.php on line 9\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmp98mtljni.php on line 7\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmp98mtljni.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmp98mtljni.php on line 7\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmp98mtljni.php on line 9\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmp98mtljni.php on line 7\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmp98mtljni.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmp98mtljni.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmp98mtljni.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmp98mtljni.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmp98mtljni.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmp98mtljni.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmp98mtljni.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmp98mtljni.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmp98mtljni.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmp98mtljni.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmp98mtljni.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precision in /t",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_pos = 0;\n    $even_pos = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $even_pos += $n[$i];\n        } else {\n            $odd_pos += $n[$i];\n        }\n    }\n    if (($even_pos - $odd_pos) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"123456789\";\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122698,
      "stdout": "No\nWarning: Trying to access array offset on value of type int in /tmp/tmpf2kfv09y.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpf2kfv09y.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpf2kfv09y.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpf2kfv09y.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpf2kfv09y.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf2kfv09y.php:32\nStack trace:\n#0 /tmp/tmpf2kfv09y.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpf2kfv09y.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int)($n / 10);\n        $even_digits += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122698,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_pos = 0;\n    $even_pos = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd_pos += $n[$i];\n        } else {\n            $even_pos += $n[$i];\n        }\n    }\n    $diff = abs($odd_pos - $even_pos);\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"123456789\";\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122698,
      "stdout": "Not Divisible by 11\nWarning: Trying to access array offset on value of type int in /tmp/tmphsdm2hmk.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmphsdm2hmk.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmphsdm2hmk.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmphsdm2hmk.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmphsdm2hmk.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphsdm2hmk.php:33\nStack trace:\n#0 /tmp/tmphsdm2hmk.php(38): test()\n#1 {main}\n  thrown in /tmp/tmphsdm2hmk.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_pos = 0;\n    $even_pos = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd_pos += $n[$i];\n        } else {\n            $even_pos += $n[$i];\n        }\n    }\n    if (abs($odd_pos - $even_pos) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"1234567\";\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122698,
      "stdout": "Not Divisible by 11\nWarning: Trying to access array offset on value of type int in /tmp/tmp7tuilej8.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp7tuilej8.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp7tuilej8.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp7tuilej8.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp7tuilej8.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7tuilej8.php:32\nStack trace:\n#0 /tmp/tmp7tuilej8.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7tuilej8.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_digits += $n % 10;\n        } else {\n            $odd_digits += $n % 10;\n        }\n        $n = (int) ($n / 10);\n        $i++;\n    }\n    if (abs($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    }\n    return false;\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122699,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd += $n[$i];\n        } else {\n            $even += $n[$i];\n        }\n    }\n    $diff = $odd - $even;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"1234\";\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122699,
      "stdout": "Not Divisible by 11\nWarning: Trying to access array offset on value of type int in /tmp/tmpcbzjtdri.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpcbzjtdri.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpcbzjtdri.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpcbzjtdri.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpcbzjtdri.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcbzjtdri.php:33\nStack trace:\n#0 /tmp/tmpcbzjtdri.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpcbzjtdri.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = $n / 10;\n        $even_digits += $n % 10;\n        $n = $n / 10;\n    }\n    if (($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122704,
      "stdout": "Yes\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpde8i5vbw.php on line 9\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmpde8i5vbw.php on line 7\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmpde8i5vbw.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmpde8i5vbw.php on line 7\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmpde8i5vbw.php on line 9\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmpde8i5vbw.php on line 7\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmpde8i5vbw.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmpde8i5vbw.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmpde8i5vbw.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmpde8i5vbw.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmpde8i5vbw.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmpde8i5vbw.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmpde8i5vbw.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmpde8i5vbw.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmpde8i5vbw.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmpde8i5vbw.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmpde8i5vbw.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precision in /tm",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $n = strval($n);\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n    }\n    return $even - $odd;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122699,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcz8y_nsm.php:23\nStack trace:\n#0 /tmp/tmpcz8y_nsm.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpcz8y_nsm.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    while ($n > 0) {\n        $odd += $n % 10;\n        $n /= 10;\n        $even += $n % 10;\n        $n /= 10;\n    }\n    return ($odd - $even) % 11 == 0;\n}\n\n$n = intval(trim(fgets(STDIN)));\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122705,
      "stdout": "Divisible by 11\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmppawazxe9.php on line 9\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmppawazxe9.php on line 7\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmppawazxe9.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmppawazxe9.php on line 7\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmppawazxe9.php on line 9\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmppawazxe9.php on line 7\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmppawazxe9.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmppawazxe9.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmppawazxe9.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmppawazxe9.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmppawazxe9.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmppawazxe9.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmppawazxe9.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmppawazxe9.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmppawazxe9.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmppawazxe9.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmppawazxe9.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses prec",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_digits += $n % 10;\n        } else {\n            $odd_digits += $n % 10;\n        }\n        $i++;\n        $n = $n / 10;\n    }\n    if (abs($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    }\n    return false;\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122707,
      "stdout": "Yes\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpszsfe7ma.php on line 11\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmpszsfe7ma.php on line 9\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmpszsfe7ma.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmpszsfe7ma.php on line 9\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmpszsfe7ma.php on line 11\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmpszsfe7ma.php on line 9\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmpszsfe7ma.php on line 11\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmpszsfe7ma.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmpszsfe7ma.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmpszsfe7ma.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmpszsfe7ma.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmpszsfe7ma.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmpszsfe7ma.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmpszsfe7ma.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmpszsfe7ma.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmpszsfe7ma.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmpszsfe7ma.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precisi",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n    }\n    if ($even - $odd == 0 || $even - $odd == 11 || $even - $odd == -11) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"It is divisible by 11\";\n} else {\n    echo \"It is not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122701,
      "stdout": "It is not divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_pos = 0;\n    $even_pos = 0;\n    $i = 0;\n    while ($n != 0) {\n        if ($i % 2 == 0) {\n            $even_pos += $n % 10;\n        } else {\n            $odd_pos += $n % 10;\n        }\n        $n = $n / 10;\n        $i++;\n    }\n    if (abs($odd_pos - $even_pos) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122707,
      "stdout": "True\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmppkysof92.php on line 11\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmppkysof92.php on line 9\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmppkysof92.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmppkysof92.php on line 9\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmppkysof92.php on line 11\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmppkysof92.php on line 9\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmppkysof92.php on line 11\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmppkysof92.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmppkysof92.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmppkysof92.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmppkysof92.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmppkysof92.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmppkysof92.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmppkysof92.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmppkysof92.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmppkysof92.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmppkysof92.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precis",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($i % 2 == 0) {\n            $odd += $n[$i];\n        } else {\n            $even += $n[$i];\n        }\n    }\n    if ($odd - $even == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 1234;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122701,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $i = 0;\n    while ($n > 0) {\n        $rem = $n % 10;\n        if ($i % 2 == 0) {\n            $even += $rem;\n        } else {\n            $odd += $rem;\n        }\n        $i++;\n        $n = $n / 10;\n    }\n    $diff = $odd - $even;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122707,
      "stdout": "Yes\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmplye7500n.php on line 8\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmplye7500n.php on line 8\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmplye7500n.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmplye7500n.php on line 8\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmplye7500n.php on line 8\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmplye7500n.php on line 8\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmplye7500n.php on line 8\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmplye7500n.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmplye7500n.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmplye7500n.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmplye7500n.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmplye7500n.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmplye7500n.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmplye7500n.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmplye7500n.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmplye7500n.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmplye7500n.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precision in /tm",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $n = str_split($n);\n    $sum1 = 0;\n    $sum2 = 0;\n    for ($i = 0; $i < count($n); $i++) {\n        if ($i % 2 == 0) {\n            $sum1 += $n[$i];\n        } else {\n            $sum2 += $n[$i];\n        }\n    }\n    if ($sum1 - $sum2 == 0 || $sum1 - $sum2 == 11 || $sum1 - $sum2 == -11) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Diff(121);\necho \"<br>\";\necho is_Diff(12);\necho \"<br>\";\necho is_Diff(123456789);\necho \"<br>\";\necho is_Diff(1234567890);\necho \"<br>\";\necho is_Diff(1234567891);\necho \"<br>\";\necho is_Diff(1234567892);\necho \"<br>\";\necho is_Diff(1234567893);\necho \"<br>\";\necho is_Diff(1234567894);\necho \"<br>\";\necho is_Diff(1234567895);\necho \"<br>\";\necho is_Diff(1234567896);\necho \"<br>\";\necho is_Diff(1234567897);\necho \"<br>\";\necho is_Diff(1234567898);\necho \"<br>\";\necho is_Diff(1234567899);\necho \"<br>\";\necho is_Diff(12345678910);\necho \"<br>\";\necho is_Diff(12345678911);\necho \"<br>\";\necho is_Diff(12345678912);\necho \"<br>\";\necho is_Diff(12345678913);\necho \"<br>\";\necho is_Diff(12345678914);\necho \"<br>\";\necho is_Diff(12345678915);\necho \"<br>\";\necho is_Diff(12345678916);\necho \"<br>\";\necho is_Diff(12345678917);\necho \"<br>\";\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122701,
      "stdout": "1<br><br><br><br><br><br><br><br>1<br><br><br><br><br><br><br><br><br><br><br><br>1<br>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_sum = 0;\n    $even_sum = 0;\n    $count = 0;\n    while ($n > 0) {\n        if ($count % 2 == 0) {\n            $even_sum += $n % 10;\n        } else {\n            $odd_sum += $n % 10;\n        }\n        $n = intval($n / 10);\n        $count++;\n    }\n    return ($even_sum - $odd_sum) % 11 == 0;\n}\n\n$n = intval(readline());\nif (is_Diff($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122702,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmppn6aezqy.php:19\nStack trace:\n#0 {main}\n  thrown in /tmp/tmppn6aezqy.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_sum = 0;\n    $even_sum = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_sum += $n % 10;\n        } else {\n            $odd_sum += $n % 10;\n        }\n        $n = (int)($n / 10);\n        $i++;\n    }\n    return ($even_sum - $odd_sum) % 11 == 0;\n}\n\necho is_Diff(121);\necho is_Diff(123);\necho is_Diff(1234);\necho is_Diff(12345);\necho is_Diff(123456);\necho is_Diff(1234567);\necho is_Diff(12345678);\necho is_Diff(123456789);\necho is_Diff(1234567890);\necho is_Diff(12345678901);\necho is_Diff(123456789012);\necho is_Diff(1234567890123);\necho is_Diff(12345678901234);\necho is_Diff(123456789012345);\necho is_Diff(1234567890123456);\necho is_Diff(12345678901234567);\necho is_Diff(123456789012345678);\necho is_Diff(1234567890123456789);\necho is_Diff(12345678901234567890);\necho is_Diff(123456789012345678901);\necho is_Diff(1234567890123456789012);\necho is_Diff(12345678901234567890123);\necho is_Diff(123456789012345678901234);\necho is_Diff(1234567890123456789012345);\necho is_Diff(12345678901234567890123456);\necho is_Diff(123456789012345678901234567);\necho is_Diff(1234567890123456789012345678);\necho is_Diff(12345678901234567890123456789\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122702,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpoiet9qv5.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_pos = 0;\n    $even_pos = 0;\n    $len = strlen($n);\n    for($i = 0; $i < $len; $i++) {\n        if($i % 2 == 0) {\n            $odd_pos += $n[$i];\n        } else {\n            $even_pos += $n[$i];\n        }\n    }\n    if(($odd_pos - $even_pos) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"1234567\";\nif(is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122702,
      "stdout": "No\nWarning: Trying to access array offset on value of type int in /tmp/tmp5d75a0_z.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp5d75a0_z.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp5d75a0_z.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp5d75a0_z.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp5d75a0_z.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5d75a0_z.php:32\nStack trace:\n#0 /tmp/tmp5d75a0_z.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp5d75a0_z.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a python function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $n = (string)$n;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd += $n[$i];\n        } else {\n            $even += $n[$i];\n        }\n    }\n    if ($odd - $even == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Diff(1234) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(1214) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(123414) ? 'true' : 'false';\necho \"\\n\";\necho is_Diff(1234141) ? 'true' : 'false';\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122702,
      "stdout": "false\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
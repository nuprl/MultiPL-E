{
  "name": "mbpp_445_index_multiplication",
  "language": "php",
  "prompt": "<?php\n// Write a function to perform index wise multiplication of tuple elements in the given two tuples.\nfunction index_multiplication($test_tup1, $test_tup2) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_445_index_multiplication.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return index_multiplication(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1, 3), array(4, 5), array(2, 9), array(1, 10)), array(array(6, 7), array(3, 9), array(1, 1), array(7, 3))) !== array(array(6, 21), array(12, 45), array(2, 9), array(7, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(2, 4), array(5, 6), array(3, 10), array(2, 11)), array(array(7, 8), array(4, 10), array(2, 2), array(8, 4))) !== array(array(14, 32), array(20, 60), array(6, 20), array(16, 44))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(3, 5), array(6, 7), array(4, 11), array(3, 12)), array(array(8, 9), array(5, 11), array(3, 3), array(9, 5))) !== array(array(24, 45), array(30, 77), array(12, 33), array(27, 60))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = $test_tup1[$i] * $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3, 4, 5);\n$test_tup2 = array(2, 3, 4, 5, 6);\nprint_r(index_multiplication($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = $test_tup1[$i] * $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3, 4, 5);\n$test_tup2 = array(1, 2, 3, 4, 5);\nprint_r(index_multiplication($test_tup1, $test_tup2));",
    "    $res_tup = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $res_tup[$i] = $test_tup1[$i] * $test_tup2[$i];\n    }\n    return $res_tup;\n}\n$test_tup1 = array(1, 2, 3, 4, 5);\n$test_tup2 = array(2, 3, 4, 5, 6);\n$res_tup = index_multiplication($test_tup1, $test_tup2);\necho \"The result tuple is :\\n\";\necho \"( \";\nfor ($i = 0; $i < count($res_tup); $i++) {\n    echo $res_tup[$i];\n    if ($i != count($res_tup) - 1) {\n        echo \", \";\n    }\n}\necho \" )\\n\";",
    "    $res = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $res[$i] = $test_tup1[$i] * $test_tup2[$i];\n    }\n    return $res;\n}\n\n$test_tup1 = array(1, 2, 3, 4, 5);\n$test_tup2 = array(5, 4, 3, 2, 1);\n$res = index_multiplication($test_tup1, $test_tup2);\nprint_r($res);",
    "    $res_tup = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $res_tup[$i] = $test_tup1[$i] * $test_tup2[$i];\n    }\n    return $res_tup;\n}\n\n$test_tup1 = array(1, 2, 3, 4, 5);\n$test_tup2 = array(2, 3, 4, 5, 6);\nprint_r(index_multiplication($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = $test_tup1[$i] * $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3, 4);\n$test_tup2 = array(2, 3, 4, 5);\n$result = index_multiplication($test_tup1, $test_tup2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = $test_tup1[$i] * $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3, 4);\n$test_tup2 = array(5, 6, 7, 8);\nprint_r(index_multiplication($test_tup1, $test_tup2));",
    "    $res = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $res[$i] = $test_tup1[$i] * $test_tup2[$i];\n    }\n    return $res;\n}\n\n$test_tup1 = array(1, 2, 3, 4, 5);\n$test_tup2 = array(5, 4, 3, 2, 1);\n$res = index_multiplication($test_tup1, $test_tup2);\nprint_r($res);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = $test_tup1[$i] * $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3, 4, 5);\n$test_tup2 = array(1, 2, 3, 4, 5);\nprint_r(index_multiplication($test_tup1, $test_tup2));",
    "    $res = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $res[$i] = $test_tup1[$i] * $test_tup2[$i];\n    }\n    return $res;\n}\n$test_tup1 = array(1, 2, 3, 4, 5);\n$test_tup2 = array(1, 2, 3, 4, 5);\n$result = index_multiplication($test_tup1, $test_tup2);\nprint_r($result);",
    "\t$result = array();\n\t$len = count($test_tup1);\n\tfor ($i = 0; $i < $len; $i++) {\n\t\t$result[$i] = $test_tup1[$i] * $test_tup2[$i];\n\t}\n\treturn $result;\n}\n\n$test_tup1 = array(1, 2, 3, 4);\n$test_tup2 = array(5, 6, 7, 8);\nprint_r(index_multiplication($test_tup1, $test_tup2));",
    "    $res = array();\n    for($i = 0; $i < count($test_tup1); $i++) {\n        $res[] = $test_tup1[$i] * $test_tup2[$i];\n    }\n    return $res;\n}\n\n$test_tup1 = array(1, 2, 3, 4, 5);\n$test_tup2 = array(1, 2, 3, 4, 5);\nprint_r(index_multiplication($test_tup1, $test_tup2));",
    "    $result = array();\n    for($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = $test_tup1[$i] * $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(2, 4, 5, 6);\n$test_tup2 = array(1, 3, 2, 5);\n\n$result = index_multiplication($test_tup1, $test_tup2);\nprint_r($result);",
    "  $result = array();\n  for($i = 0; $i < count($test_tup1); $i++) {\n    $result[] = $test_tup1[$i] * $test_tup2[$i];\n  }\n  return $result;\n}\n",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[] = $test_tup1[$i] * $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3, 4, 5);\n$test_tup2 = array(1, 2, 3, 4, 5);\n\nprint_r(index_multiplication($test_tup1, $test_tup2));\n",
    "    $res = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $res[$i] = $test_tup1[$i] * $test_tup2[$i];\n    }\n    return $res;\n}\n\n$test_tup1 = array(1, 2, 3, 4, 5);\n$test_tup2 = array(1, 2, 3, 4, 5);\nprint_r(index_multiplication($test_tup1, $test_tup2));",
    "    $result = array();\n    for ($i = 0; $i < sizeof($test_tup1); $i++) {\n        $result[$i] = $test_tup1[$i] * $test_tup2[$i];\n    }\n    return $result;\n}\n",
    "    $res_tup = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $res_tup[$i] = $test_tup1[$i] * $test_tup2[$i];\n    }\n    return $res_tup;\n}\n$test_tup1 = array(2, 3, 4, 5);\n$test_tup2 = array(5, 6, 7, 8);\nprint_r(index_multiplication($test_tup1, $test_tup2));",
    "    $res_tup = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $res_tup[$i] = $test_tup1[$i] * $test_tup2[$i];\n    }\n    return $res_tup;\n}\n$test_tup1 = array(1, 2, 3, 4, 5);\n$test_tup2 = array(2, 3, 4, 5, 6);\n$res_tup = index_multiplication($test_tup1, $test_tup2);\necho \"The result of index wise multiplication of tuple elements is :\\n\";\necho implode(\", \", $res_tup);",
    "    $result = array();\n    for ($i = 0; $i < count($test_tup1); $i++) {\n        $result[$i] = $test_tup1[$i] * $test_tup2[$i];\n    }\n    return $result;\n}\n\n$test_tup1 = array(1, 2, 3, 4, 5);\n$test_tup2 = array(1, 2, 3, 4, 5);\n\n$result = index_multiplication($test_tup1, $test_tup2);\nprint_r($result);"
  ]
}
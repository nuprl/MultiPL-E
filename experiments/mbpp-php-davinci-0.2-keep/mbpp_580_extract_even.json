{
  "name": "mbpp_580_extract_even",
  "language": "php",
  "prompt": "<?php\n// Write a function to remove uneven elements in the nested mixed tuple.\nfunction extract_even($test_tuple) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_580_extract_even.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return extract_even(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4, 5, array(7, 6, array(2, 4)), 6, 8)) !== array(4, array(6, array(2, 4)), 6, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, array(8, 7, array(4, 8)), 7, 9)) !== array(6, array(8, array(4, 8)))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, array(9, 8, array(4, 6)), 8, 10)) !== array(6, array(8, array(4, 6)), 8, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } elseif ($item % 2 == 0) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), array(5, array(6, 7), 8), 9);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else if ($item % 2 == 0) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } elseif ($item % 2 == 0) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, 5), array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, 5), 6, array(7, 8, 9, 10));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), array(5, 6, array(7, 8, 9), 10), 11, 12);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, 3, array(4, 5, 6, array(7, 8, 9, 10, array(11, 12, 13, 14))));\necho \"<pre>\";\nprint_r(extract_even($test_tuple));\necho \"</pre>\";",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, array(8, 9, 10))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = [];\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = [1, 2, 3, [4, 5, 6, [7, 8, 9, [10, 11, 12]]]];\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, array(8, 9, 10))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(\n        array(\n            array(\n                array(\n                    array(\n                        array(\n                            array(\n                                array(\n                                    array(\n                                        array(\n                                            array(\n                                                array(\n                                                    array(\n                                                        array(\n                                                            array(\n                                                                array(\n                                                                    array(\n                                                                        array(\n                                                                            array(\n                                                                                array(\n                                                                                    array(\n                                                                                        array(\n                                                                                            array(\n                                                                                                array(\n                                                                                                    array(\n                                                                                                        array(\n                                                                                                            array(\n                                                                                                                array(\n                                                                                                                    array(\n                                                                                                                        array(\n                                                                                                                            array(\n                                                                                                                                array(\n                                                                                                                                    array(\n                                                                                                                                        array(\n                                                                                                                                            array(\n                                                                                                                                                array(\n                                                                                                                                                    array(\n                                                                                                                                                        array(\n                                                                                                                                                            array(\n                                                                                                                                                                array(\n                                                                                                                                                                    array(\n                                                                                                                                                                        array(\n                                                                                                                                                                            array(\n                                                                                                                                                                                array(\n                                                                                                                                                                                    array(\n                                                                                                                                                                                        array(\n                                ",
    "    $result = [];\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9, 10), 11, 12);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n",
    "    $result = array();\n    foreach($test_tuple as $item) {\n        if(is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20);\n$test_tuple = array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20));\n$test_tuple = array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)));\n\nprint_r(extract_even($test_tuple));",
    "    $result = [];\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, 5), array(6, 7, array(8, 9, 10)));\necho '<pre>';\nprint_r(extract_even($test_tuple));\necho '</pre>';",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, array(2, 3, array(4, 5, 6), 7, 8), 9, 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, 5), array(6, 7, array(8, 9)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } elseif ($element % 2 == 0) {\n            $result[] = $element;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), array(5, 6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, array(7, 8, array(9, 10)))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, array(7, 8, 9))));\nprint_r(extract_even($test_tuple));",
    "    $new_tuple = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $new_tuple[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $new_tuple[$key] = $value;\n            }\n        }\n    }\n    return $new_tuple;\n}\n\n$test_tuple = array(\n    array(\n        array(\n            array(\n                array(\n                    array(\n                        array(\n                            array(\n                                array(\n                                    array(\n                                        array(\n                                            array(\n                                                array(\n                                                    array(\n                                                        array(\n                                                            array(\n                                                                array(\n                                                                    array(\n                                                                        array(\n                                                                            array(\n                                                                                array(\n                                                                                    array(\n                                                                                        array(\n                                                                                            array(\n                                                                                                array(\n                                                                                                    array(\n                                                                                                        array(\n                                                                                                            array(\n                                                                                                                array(\n                                                                                                                    array(\n                                                                                                                        array(\n                                                                                                                            array(\n                                                                                                                                array(\n                                                                                                                                    array(\n                                                                                                                                        array(\n                                                                                                                                            array(\n                                                                                                                                                array(\n                                                                                                                                                    array(\n                                                                                                                                                        array(\n                                                                                                                                                            array(\n                                                                                                                                                                array(\n                                                                                                                                                                    array(\n                                                                                                                                                                        array(\n                                                                                                                                                                            array(\n                                                                                                                                                                                array(\n                                                                                                                                                                                    array(\n                                                                ",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)), 11, 12);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, 8));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), array(5, array(6, 7), 8), 9);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\necho json_encode(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, 8));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, array(2, 3, array(4, 5, 6)), 7, array(8, 9, 10));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, array(2, 3, array(4, 5, 6)), 7, array(8, 9, 10));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach($test_tuple as $element) {\n        if(is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), array(5, array(6, 7)), 8);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8, 9, 10), 11, 12), 13, 14, 15, array(16, 17, 18, 19, 20, 21));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach($test_tuple as $item) {\n        if(is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, array(2, 3, array(4, 5, 6, array(7, 8, 9))));\nprint_r(extract_even($test_tuple));",
    "    $even_tuple = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $even_tuple[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $even_tuple[] = $value;\n            }\n        }\n    }\n    return $even_tuple;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9), 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } elseif ($element % 2 == 0) {\n            $result[] = $element;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, array(7, 8, 9))));\n$result = extract_even($test_tuple);\necho \"<pre>\";\nprint_r($result);\necho \"</pre>\";\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, 3, array(4, 5, 6, array(7, 8, 9, 10)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9), 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), array(5, array(6, 7, 8), 9), 10);\n\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, array(7, 8, 9))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, array(7, 8, 9))), 10);\nprint_r(extract_even($test_tuple));",
    "    $result = [];\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = [1, 2, [3, 4, [5, 6, [7, 8]]], 9];\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, 3, array(4, 5, array(6, 7, 8, 9, 10)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(\n        array(1, 2, 3),\n        array(4, 5, 6),\n        array(7, 8, 9),\n    ),\n    array(\n        array(10, 11, 12),\n        array(13, 14, 15),\n        array(16, 17, 18),\n    ),\n    array(\n        array(19, 20, 21),\n        array(22, 23, 24),\n        array(25, 26, 27),\n    ),\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $even_tuple = [];\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $even_tuple[] = extract_even($value);\n        } elseif ($value % 2 == 0) {\n            $even_tuple[] = $value;\n        }\n    }\n    return $even_tuple;\n}\n\n$test_tuple = [1, 2, [3, 4, [5, 6]], 7, 8, [9, 10, [11, 12, [13, 14]]]];\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, 3, array(4, 5, array(6, 7, 8, 9, 10), 11), 12, 13);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8)));\nprint_r(extract_even($test_tuple));\n",
    "    $even_list = [];\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $even_list[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $even_list[] = $item;\n            }\n        }\n    }\n    return $even_list;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), array(5, array(6, 7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $even_tuple = [];\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $even_tuple[] = extract_even($element);\n        } elseif ($element % 2 == 0) {\n            $even_tuple[] = $element;\n        }\n    }\n    return $even_tuple;\n}\n\n$test_tuple = [1, [2, 3, [4, 5, 6, [7, 8, 9]]], 10];\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9),\n);\n\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, array(7, 8, 9))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9, 10), 11, 12);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } elseif ($item % 2 == 0) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } elseif ($item % 2 == 0) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9, 10), 11, 12);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } elseif ($item % 2 == 0) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, 5, 6), 7, 8, array(9, 10, 11, 12));\nprint_r(extract_even($test_tuple));",
    "    $result = [];\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = [1, 2, 3, [4, 5, 6], 7, 8, [9, 10, [11, 12, [13, 14]]]];\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } elseif ($element % 2 == 0) {\n            $result[] = $element;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9), 10);\nprint_r(extract_even($test_tuple));",
    "    $even_tuple = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $even_tuple[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $even_tuple[$key] = $value;\n            }\n        }\n    }\n    return $even_tuple;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, array(7, 8, 9))));\n$even_tuple = extract_even($test_tuple);\nprint_r($even_tuple);",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => array(\n            3,\n            6,\n            9\n        ),\n        'd' => 4,\n        'e' => array(\n            8\n        )\n    ),\n    'f' => 5\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), array(array(5, 6), 7), 8, array(9, array(10, 11)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, 5, 6), 7, 8, array(9, 10, 11, 12), 13, 14);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, 5, array(6, 7, 8, 9, 10), 11), 12, 13);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8, array(9, 10))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, 3, array(4, 5, 6, array(7, 8, 9)));\nprint_r(extract_even($test_tuple));",
    "    $new_tuple = [];\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $new_tuple[] = extract_even($element);\n        } elseif ($element % 2 == 0) {\n            $new_tuple[] = $element;\n        }\n    }\n    return $new_tuple;\n}\n\n$test_tuple = [1, 2, [3, 4, [5, 6]], 7, [8, [9, 10]]];\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, array(7, 8, 9))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $value = extract_even($value);\n        }\n        if (is_int($value) && $value % 2 == 0) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    1,\n    array(\n        2,\n        3,\n        array(\n            4,\n            5,\n            6\n        )\n    ),\n    7,\n    array(\n        8,\n        array(\n            9,\n            10\n        )\n    )\n);\n\n$result = extract_even($test_tuple);\nprint_r($result);",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, array(8, 9, 10))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } elseif ($element % 2 == 0) {\n            $result[] = $element;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, array(2, 3, 4, array(5, 6, 7, array(8, 9, 10))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $even_tuple = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $even_tuple[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $even_tuple[$key] = $value;\n            }\n        }\n    }\n    return $even_tuple;\n}\n\n$test_tuple = array(\n    array(\n        array(1, 2, 3, 4, 5, 6),\n        array(7, 8, 9, 10, 11, 12),\n        array(13, 14, 15, 16, 17, 18)\n    ),\n    array(\n        array(19, 20, 21, 22, 23, 24),\n        array(25, 26, 27, 28, 29, 30),\n        array(31, 32, 33, 34, 35, 36)\n    ),\n    array(\n        array(37, 38, 39, 40, 41, 42),\n        array(43, 44, 45, 46, 47, 48),\n        array(49, 50, 51, 52, 53, 54)\n    )\n);\n\necho '<pre>';\nprint_r(extract_even($test_tuple));\necho '</pre>';",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, 5, 6), 7, 8, array(9, 10, 11, 12));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, 5), array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8, array(9, 10, 11, 12))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } elseif ($value % 2 == 0) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, 8), 9);\nprint_r(extract_even($test_tuple));",
    "    $even_tuple = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $even_tuple[$key] = extract_even($value);\n        } elseif ($value % 2 == 0) {\n            $even_tuple[$key] = $value;\n        }\n    }\n    return $even_tuple;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9), 10, 11, array(12, 13, 14, 15));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    \"a\" => 1,\n    \"b\" => 2,\n    \"c\" => array(\n        \"d\" => 3,\n        \"e\" => 4,\n        \"f\" => array(\n            \"g\" => 5,\n            \"h\" => 6,\n            \"i\" => array(\n                \"j\" => 7,\n                \"k\" => 8,\n                \"l\" => 9\n            )\n        )\n    )\n);\n\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9, 10), 11, 12);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7), 8), 9, 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9), 10);\n$result = extract_even($test_tuple);\nprint_r($result);",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, array(2, 3, array(4, 5, 6)), 7, array(8, 9, 10));\nprint_r(extract_even($test_tuple));",
    "    $result = [];\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = [1, 2, 3, [4, 5, 6, [7, 8, 9, [10, 11, 12, [13, 14, 15]]]]];\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, array(8, 9, 10))));\nprint_r(extract_even($test_tuple));",
    "    $new_tuple = [];\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $new_tuple[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $new_tuple[] = $item;\n            }\n        }\n    }\n    return $new_tuple;\n}\n\n$test_tuple = [1, 2, 3, [4, 5, 6, [7, 8, 9, 10]], 11, 12, 13];\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, 3, array(4, 5, 6, array(7, 8, 9, array(10, 11, 12))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, array(10, 11, 12))), 13, 14);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9), 10, 11);\nprint_r(extract_even($test_tuple));\n",
    "    $even_tuple = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $even_tuple[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $even_tuple[] = $element;\n            }\n        }\n    }\n    return $even_tuple;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9, 10), 11, 12);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, array(7, 8, 9))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, 3, array(4, 5, 6, array(7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100)));\n\nprint_r(extract_even($test_tuple));",
    "    $even_tuple = [];\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $even_tuple[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $even_tuple[] = $value;\n            }\n        }\n    }\n    return $even_tuple;\n}\n\n$test_tuple = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho \"Test Tuple: \";\nprint_r($test_tuple);\necho \"\\n\";\n\n$even_tuple = extract_even($test_tuple);\necho \"Even Tuple: \";\nprint_r($even_tuple);\necho \"\\n\";",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $new_tuple = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $new_tuple[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $new_tuple[] = $item;\n            }\n        }\n    }\n    return $new_tuple;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, array(8, 9, 10, 11))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7), 8), 9, 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(11, 12, 13, array(14, 15, 16, 17, 18, 19, 20)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), array(5, array(6, 7), 8), 9);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } elseif ($element % 2 == 0) {\n            $result[] = $element;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), array(5, array(6, 7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, 8), 9);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, array(2, 3, array(4, 5, 6)), 7, array(8, array(9, 10)));\necho '<pre>';\nprint_r(extract_even($test_tuple));\necho '</pre>';\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9), 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9),\n    array(10, 11, 12),\n    array(13, 14, 15),\n    array(16, 17, 18),\n    array(19, 20, 21),\n    array(22, 23, 24),\n    array(25, 26, 27),\n    array(28, 29, 30),\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, 3, array(4, 5, 6, array(7, 8, 9)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, array(7, 8, array(9, 10)))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } elseif ($item % 2 == 0) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, 8), 9, 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8, array(9, 10))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8, 9), 10), 11);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $tuple) {\n        if (is_array($tuple)) {\n            $result[] = extract_even($tuple);\n        } else {\n            if ($tuple % 2 == 0) {\n                $result[] = $tuple;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9), 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $new_tuple = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $new_tuple[$key] = extract_even($value);\n        } else if ($value % 2 == 0) {\n            $new_tuple[$key] = $value;\n        }\n    }\n    return $new_tuple;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9, 10), 11, 12);\n$result = extract_even($test_tuple);\nprint_r($result);",
    "    $result = [];\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9, 10), 11, 12);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9), 10), 11);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9), 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } elseif ($item % 2 == 0) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8, array(9, 10, 11, 12))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, array(7, 8, 9))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), array(5, array(6, 7), 8), 9, 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, 5), array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, 3, array(4, 5, 6, array(7, 8, 9, 10)), 11, 12, 13);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8, array(9, 10, 11, 12))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, 8), 9, 10);\necho '<pre>';\nprint_r(extract_even($test_tuple));\necho '</pre>';",
    "    $result = [];\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = [1, 2, [3, 4, [5, 6, [7, 8, 9]]]];\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8, 9)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } elseif ($value % 2 == 0) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(1, 2, 3, 4, 5),\n    array(6, 7, 8, 9, 10),\n    array(11, 12, 13, 14, 15)\n);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, 5, array(6, 7, 8, 9, 10)), 11, 12);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else if ($item % 2 == 0) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, array(8, 9, 10))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8, array(9, 10))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } elseif ($item % 2 == 0) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, array(7, 8, 9))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, 3, array(4, 5, 6, array(7, 8, 9, 10)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, 8), 9);\nprint_r(extract_even($test_tuple));",
    "    $result = [];\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = [1, 2, 3, [4, 5, 6, [7, 8, 9, [10, 11, 12, [13, 14, 15]]]]];\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, array(2, 3, array(4, 5, 6), 7, 8), 9);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } elseif ($value % 2 == 0) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, 5), array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = [];\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = [1, 2, 3, [4, 5, 6, [7, 8, 9, 10], 11], 12, 13, [14, 15, [16, 17, 18, 19], 20], 21, 22, 23];\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), array(5, array(6, 7), 8), 9);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9), 10);\n$result = extract_even($test_tuple);\nprint_r($result);",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, 8));\nprint_r(extract_even($test_tuple));\n",
    "    $even_tuple = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $even_tuple[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $even_tuple[$key] = $value;\n            }\n        }\n    }\n    return $even_tuple;\n}\n\n$test_tuple = array(1, 2, array(3, 4, 5), 6, array(7, 8, 9));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else if ($item % 2 == 0) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\necho '<pre>';\nprint_r(extract_even($test_tuple));\necho '</pre>';",
    "    $result = [];\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = [1, 2, 3, [4, 5, 6], 7, 8, [9, 10, 11, [12, 13, 14, 15, [16, 17, 18, 19, 20]]]];\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, array(7, 8, 9))));\n$result = extract_even($test_tuple);\nprint_r($result);",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, 8), 9);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20);\n$test_tuple = array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20, array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20));\n$test_tuple = array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20, array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20, array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)));\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } elseif ($item % 2 == 0) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10, 11), 12), 13, 14);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10, 11));\nprint_r(extract_even($test_tuple));\n"
  ]
}
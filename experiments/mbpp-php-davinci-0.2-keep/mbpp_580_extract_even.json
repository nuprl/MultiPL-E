{
  "name": "mbpp_580_extract_even",
  "language": "php",
  "prompt": "<?php\n// Write a function to remove uneven elements in the nested mixed tuple.\nfunction extract_even($test_tuple) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_580_extract_even.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return extract_even(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4, 5, array(7, 6, array(2, 4)), 6, 8)) !== array(4, array(6, array(2, 4)), 6, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, array(8, 7, array(4, 8)), 7, 9)) !== array(6, array(8, array(4, 8)))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, array(9, 8, array(4, 6)), 8, 10)) !== array(6, array(8, array(4, 6)), 8, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } elseif ($item % 2 == 0) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), array(5, array(6, 7), 8), 9);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else if ($item % 2 == 0) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } elseif ($item % 2 == 0) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, 5), array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, 5), 6, array(7, 8, 9, 10));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), array(5, 6, array(7, 8, 9), 10), 11, 12);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, 3, array(4, 5, 6, array(7, 8, 9, 10, array(11, 12, 13, 14))));\necho \"<pre>\";\nprint_r(extract_even($test_tuple));\necho \"</pre>\";",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, array(8, 9, 10))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = [];\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = [1, 2, 3, [4, 5, 6, [7, 8, 9, [10, 11, 12]]]];\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, array(8, 9, 10))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));"
  ]
}
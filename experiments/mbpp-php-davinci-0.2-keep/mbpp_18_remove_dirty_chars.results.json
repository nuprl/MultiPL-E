{
  "name": "mbpp_18_remove_dirty_chars",
  "language": "php",
  "prompt": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_18_remove_dirty_chars.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = [];\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode($result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = '';\n    foreach($string_array as $char) {\n        if(!in_array($char, $second_string_array)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $result = '';\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = array();\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n\t$clean_string = \"\";\n\t$dirty_chars = str_split($second_string);\n\t$string_chars = str_split($string);\n\tforeach ($string_chars as $char) {\n\t\tif (!in_array($char, $dirty_chars)) {\n\t\t\t$clean_string .= $char;\n\t\t}\n\t}\n\treturn $clean_string;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode(\"\", $result);\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n\t$second_string_array = str_split($second_string);\n\t$string_array = str_split($string);\n\t$result = array();\n\tforeach ($string_array as $char) {\n\t\tif (!in_array($char, $second_string_array)) {\n\t\t\t$result[] = $char;\n\t\t}\n\t}\n\treturn implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode(\"\", $result);\n}\n\n$string = \"Battle of the Vowels: Hawaii vs. Grozny\";\n$second_string = \"aeiou\";\necho remove_dirty_chars($string, $second_string);\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = [];\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $array = str_split($second_string);\n    $result = '';\n    foreach ($array as $char) {\n        $string = str_replace($char, '', $string);\n    }\n    return $string;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $dirty_chars = str_split($second_string);\n    $clean_string = '';\n    $string_chars = str_split($string);\n    foreach ($string_chars as $char) {\n        if (!in_array($char, $dirty_chars)) {\n            $clean_string .= $char;\n        }\n    }\n    return $clean_string;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $array = str_split($string);\n    $second_array = str_split($second_string);\n    $result = array_diff($array, $second_array);\n    return implode(\"\", $result);\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $dirty_chars = str_split($second_string);\n    $clean_string = '';\n    $string_chars = str_split($string);\n    foreach ($string_chars as $char) {\n        if (!in_array($char, $dirty_chars)) {\n            $clean_string .= $char;\n        }\n    }\n    return $clean_string;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $new_string = '';\n    for ($i = 0; $i < strlen($string); $i++) {\n        if (strpos($second_string, $string[$i]) === false) {\n            $new_string .= $string[$i];\n        }\n    }\n    return $new_string;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = [];\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $clean_string = \"\";\n    for ($i = 0; $i < strlen($string); $i++) {\n        if (strpos($second_string, $string[$i]) === false) {\n            $clean_string .= $string[$i];\n        }\n    }\n    return $clean_string;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $result = '';\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $result = \"\";\n    for ($i = 0; $i < strlen($string); $i++) {\n        if (!in_array($string[$i], $second_string_array)) {\n            $result .= $string[$i];\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $clean_string = '';\n    foreach($string_array as $char) {\n        if(!in_array($char, $second_string_array)) {\n            $clean_string .= $char;\n        }\n    }\n    return $clean_string;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $str_arr = str_split($string);\n    $second_str_arr = str_split($second_string);\n    $result = array_diff($str_arr, $second_str_arr);\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $arr = str_split($second_string);\n    $new_string = \"\";\n    for ($i = 0; $i < strlen($string); $i++) {\n        if (!in_array($string[$i], $arr)) {\n            $new_string .= $string[$i];\n        }\n    }\n    return $new_string;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n\t$second_string_array = str_split($second_string);\n\t$string_array = str_split($string);\n\t$result = \"\";\n\tforeach ($string_array as $char) {\n\t\tif (!in_array($char, $second_string_array)) {\n\t\t\t$result .= $char;\n\t\t}\n\t}\n\treturn $result;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = array();\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result[] = $char;\n        }\n    }\n    return implode($result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array();\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n}\n\n$string = 'Battle of the Vowels: Hawaii vs. Grozny';\n$second_string = 'aeiou';\necho remove_dirty_chars($string, $second_string);\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n\t$string_array = str_split($string);\n\t$second_string_array = str_split($second_string);\n\t$result = array_diff($string_array, $second_string_array);\n\treturn implode('', $result);\n}\n\n$string = 'Battle of the Vowels: Hawaii vs. Grozny';\n$second_string = 'aeiou';\necho remove_dirty_chars($string, $second_string);\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode('', $result);\n}\n\n$string = \"Battle of the Vowels: Hawaii vs. Grozny\";\n$second_string = \"aeiou\";\necho remove_dirty_chars($string, $second_string);\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $result = \"\";\n    $second_string_arr = str_split($second_string);\n    $string_arr = str_split($string);\n    foreach ($string_arr as $char) {\n        if (!in_array($char, $second_string_arr)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $dirty_chars = str_split($second_string);\n    $clean_string = '';\n    $string_chars = str_split($string);\n    foreach ($string_chars as $char) {\n        if (!in_array($char, $dirty_chars)) {\n            $clean_string .= $char;\n        }\n    }\n    return $clean_string;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n\t$second_string_array = str_split($second_string);\n\t$string_array = str_split($string);\n\t$result = array();\n\tforeach ($string_array as $char) {\n\t\tif (!in_array($char, $second_string_array)) {\n\t\t\t$result[] = $char;\n\t\t}\n\t}\n\treturn implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string = str_split($string);\n    $second_string = str_split($second_string);\n    $result = \"\";\n    foreach ($string as $char) {\n        if (!in_array($char, $second_string)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\n$string = \"Battle of the Vowels: Hawaii vs. Grozny\";\n$second_string = \"aeiou\";\necho remove_dirty_chars($string, $second_string);\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = \"\";\n    for ($i = 0; $i < count($string_array); $i++) {\n        if (!in_array($string_array[$i], $second_string_array)) {\n            $result .= $string_array[$i];\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars(\"geeksforgeeks\", \"mask\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "geeforgee",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string = str_split($string);\n    $second_string = str_split($second_string);\n    $result = array_diff($string, $second_string);\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $arr = str_split($string);\n    $arr2 = str_split($second_string);\n    $result = '';\n    foreach($arr as $char) {\n        if(!in_array($char, $arr2)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $array = str_split($string);\n    $second_array = str_split($second_string);\n    $result = array_diff($array, $second_array);\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = \"\";\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\n$string = \"Battle of the Vowels: Hawaii vs. Grozny\";\n$second_string = \"aeiou\";\necho remove_dirty_chars($string, $second_string);\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n  $second_string_array = str_split($second_string);\n  $string_array = str_split($string);\n  $result_array = array();\n  foreach ($string_array as $char) {\n    if (!in_array($char, $second_string_array)) {\n      $result_array[] = $char;\n    }\n  }\n  return implode($result_array);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n\t$string_array = str_split($string);\n\t$second_string_array = str_split($second_string);\n\t$result = array();\n\tforeach ($string_array as $key => $value) {\n\t\tif (!in_array($value, $second_string_array)) {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = [];\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = '';\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n\t$string_array = str_split($string);\n\t$second_string_array = str_split($second_string);\n\t$result = array_diff($string_array, $second_string_array);\n\treturn implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $dirty_chars = str_split($second_string);\n    $clean_string = \"\";\n    $string_array = str_split($string);\n    foreach($string_array as $char) {\n        if(!in_array($char, $dirty_chars)) {\n            $clean_string .= $char;\n        }\n    }\n    return $clean_string;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = array();\n    foreach($string_array as $char) {\n        if(!in_array($char, $second_string_array)) {\n            $result[] = $char;\n        }\n    }\n    return implode(\"\", $result);\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $result = \"\";\n    $second_string = str_split($second_string);\n    $string = str_split($string);\n    foreach($string as $char) {\n        if(!in_array($char, $second_string)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = array();\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode('', $result);\n}\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $clean_string = \"\";\n    for ($i = 0; $i < strlen($string); $i++) {\n        if (strpos($second_string, $string[$i]) === false) {\n            $clean_string .= $string[$i];\n        }\n    }\n    return $clean_string;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\") . \"\\n\";\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = [];\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho remove_dirty_chars('geeksforgeeks', 'mask');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "geeforgee",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = '';\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n\t$string_array = str_split($string);\n\t$second_string_array = str_split($second_string);\n\t$new_string = '';\n\tforeach ($string_array as $key => $value) {\n\t\tif (!in_array($value, $second_string_array)) {\n\t\t\t$new_string .= $value;\n\t\t}\n\t}\n\treturn $new_string;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode(\"\", $result);\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode('', $result);\n}\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $dirty_chars = str_split($second_string);\n    $clean_string = \"\";\n    $string_array = str_split($string);\n    foreach ($string_array as $char) {\n        if (!in_array($char, $dirty_chars)) {\n            $clean_string .= $char;\n        }\n    }\n    return $clean_string;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $result = '';\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string = str_split($string);\n    $second_string = str_split($second_string);\n    $result = '';\n    foreach ($string as $char) {\n        if (!in_array($char, $second_string)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode($result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $clean_string = '';\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $clean_string .= $char;\n        }\n    }\n    return $clean_string;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string = str_split($string);\n    $second_string = str_split($second_string);\n    $result = [];\n    foreach ($string as $char) {\n        if (!in_array($char, $second_string)) {\n            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $result = '';\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    for ($i = 0; $i < count($string_array); $i++) {\n        if (!in_array($string_array[$i], $second_string_array)) {\n            $result .= $string_array[$i];\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    foreach ($string_array as $key => $value) {\n        if (in_array($value, $second_string_array)) {\n            unset($string_array[$key]);\n        }\n    }\n    return implode(\"\", $string_array);\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $dirty_chars = str_split($second_string);\n    $clean_string = '';\n    $string_array = str_split($string);\n    foreach ($string_array as $char) {\n        if (!in_array($char, $dirty_chars)) {\n            $clean_string .= $char;\n        }\n    }\n    return $clean_string;\n}\n\n$string = 'Battle of the Vowels: Hawaii vs. Grozny';\n$second_string = 'aeiou';\necho remove_dirty_chars($string, $second_string);\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $dirty_chars = str_split($second_string);\n    $clean_string = '';\n    $string_chars = str_split($string);\n    foreach ($string_chars as $char) {\n        if (!in_array($char, $dirty_chars)) {\n            $clean_string .= $char;\n        }\n    }\n    return $clean_string;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $new_string = '';\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $new_string .= $char;\n        }\n    }\n    return $new_string;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n\t$result = \"\";\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\tif (strpos($second_string, $string[$i]) === false) {\n\t\t\t$result .= $string[$i];\n\t\t}\n\t}\n\treturn $result;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $result = '';\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode(\"\", $result);\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n\t$second_string_array = str_split($second_string);\n\t$string_array = str_split($string);\n\t$result = array_diff($string_array, $second_string_array);\n\treturn implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $arr = str_split($string);\n    $arr2 = str_split($second_string);\n    $result = array_diff($arr, $arr2);\n    return implode($result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = [];\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string = str_split($string);\n    $second_string = str_split($second_string);\n    $result = array_diff($string, $second_string);\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $dirty_chars = str_split($second_string);\n    $clean_string = '';\n    $string_chars = str_split($string);\n    foreach ($string_chars as $char) {\n        if (!in_array($char, $dirty_chars)) {\n            $clean_string .= $char;\n        }\n    }\n    return $clean_string;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = '';\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $dirty_chars = str_split($second_string);\n    $clean_string = \"\";\n    $string_array = str_split($string);\n    foreach ($string_array as $char) {\n        if (!in_array($char, $dirty_chars)) {\n            $clean_string .= $char;\n        }\n    }\n    return $clean_string;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = '';\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $dirty_chars = str_split($second_string);\n    $clean_string = \"\";\n    for ($i = 0; $i < strlen($string); $i++) {\n        if (!in_array($string[$i], $dirty_chars)) {\n            $clean_string .= $string[$i];\n        }\n    }\n    return $clean_string;\n}\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode(\"\", $result);\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode($result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n\t$second_string = str_split($second_string);\n\t$string = str_split($string);\n\t$result = array_diff($string, $second_string);\n\treturn implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $array = str_split($second_string);\n    $result = \"\";\n    for($i=0; $i<strlen($string); $i++) {\n        if(!in_array($string[$i], $array)) {\n            $result .= $string[$i];\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = '';\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $result = \"\";\n    for ($i = 0; $i < strlen($string); $i++) {\n        if (strpos($second_string, $string[$i]) === false) {\n            $result .= $string[$i];\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars(\"geeksforgeeks\", \"mask\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "geeforgee",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = array();\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n  $string_array = str_split($string);\n  $second_string_array = str_split($second_string);\n  $result = array_diff($string_array, $second_string_array);\n  return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode(\"\", $result);\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $result = '';\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\n$string = 'Battle of the Vowels: Hawaii vs. Grozny';\n$second_string = 'aeiou';\necho remove_dirty_chars($string, $second_string);\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $length = strlen($second_string);\n    for ($i = 0; $i < $length; $i++) {\n        $string = str_replace($second_string[$i], '', $string);\n    }\n    return $string;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = [];\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $new_string = '';\n    for ($i = 0; $i < strlen($string); $i++) {\n        if (strpos($second_string, $string[$i]) === false) {\n            $new_string .= $string[$i];\n        }\n    }\n    return $new_string;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $new_string = '';\n    foreach ($string_array as $key => $value) {\n        if (!in_array($value, $second_string_array)) {\n            $new_string .= $value;\n        }\n    }\n    return $new_string;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $result = '';\n    for ($i = 0; $i < strlen($string); $i++) {\n        if (strpos($second_string, $string[$i]) === false) {\n            $result .= $string[$i];\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $result = \"\";\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = '';\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $dirty_chars = str_split($second_string);\n    $clean_string = '';\n    $string_array = str_split($string);\n    foreach ($string_array as $char) {\n        if (!in_array($char, $dirty_chars)) {\n            $clean_string .= $char;\n        }\n    }\n    return $clean_string;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $clean_string = \"\";\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $clean_string .= $char;\n        }\n    }\n    return $clean_string;\n}\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $result = \"\";\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n  $string_array = str_split($string);\n  $second_string_array = str_split($second_string);\n  $clean_string = \"\";\n  foreach($string_array as $char) {\n    if(!in_array($char, $second_string_array)) {\n      $clean_string .= $char;\n    }\n  }\n  return $clean_string;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = [];\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $dirty_chars = str_split($second_string);\n    $clean_string = \"\";\n    for ($i = 0; $i < strlen($string); $i++) {\n        if (!in_array($string[$i], $dirty_chars)) {\n            $clean_string .= $string[$i];\n        }\n    }\n    return $clean_string;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = array();\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $new_string = \"\";\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    for ($i = 0; $i < count($string_array); $i++) {\n        if (!in_array($string_array[$i], $second_string_array)) {\n            $new_string .= $string_array[$i];\n        }\n    }\n    return $new_string;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode($result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = \"\";\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n\t$string_array = str_split($string);\n\t$second_string_array = str_split($second_string);\n\t$result = array_diff($string_array, $second_string_array);\n\treturn implode($result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n\t$string_array = str_split($string);\n\t$second_string_array = str_split($second_string);\n\t$result = array_diff($string_array, $second_string_array);\n\treturn implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n\t$string_array = str_split($string);\n\t$second_string_array = str_split($second_string);\n\t$result = array();\n\tforeach ($string_array as $char) {\n\t\tif (!in_array($char, $second_string_array)) {\n\t\t\t$result[] = $char;\n\t\t}\n\t}\n\treturn implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $new_string = \"\";\n    for($i = 0; $i < strlen($string); $i++) {\n        if(strpos($second_string, $string[$i]) === false) {\n            $new_string .= $string[$i];\n        }\n    }\n    return $new_string;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $dirty_chars = str_split($second_string);\n    $clean_string = '';\n    $string_chars = str_split($string);\n    foreach ($string_chars as $char) {\n        if (!in_array($char, $dirty_chars)) {\n            $clean_string .= $char;\n        }\n    }\n    return $clean_string;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $result = '';\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string = str_split($string);\n    $second_string = str_split($second_string);\n    $new_string = '';\n    foreach ($string as $char) {\n        if (!in_array($char, $second_string)) {\n            $new_string .= $char;\n        }\n    }\n    return $new_string;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = [];\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    foreach ($string_array as $key => $value) {\n        foreach ($second_string_array as $key2 => $value2) {\n            if ($value == $value2) {\n                unset($string_array[$key]);\n            }\n        }\n    }\n    return implode('', $string_array);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $dirty_chars = str_split($second_string);\n    $clean_string = \"\";\n    for ($i = 0; $i < strlen($string); $i++) {\n        if (!in_array($string[$i], $dirty_chars)) {\n            $clean_string .= $string[$i];\n        }\n    }\n    return $clean_string;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n\t$string_array = str_split($string);\n\t$second_string_array = str_split($second_string);\n\t$result = array_diff($string_array, $second_string_array);\n\treturn implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode($result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = '';\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string = str_split($second_string);\n    $string = str_split($string);\n    $result = [];\n    foreach ($string as $char) {\n        if (!in_array($char, $second_string)) {\n            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $chars = str_split($second_string);\n    foreach ($chars as $char) {\n        $string = str_replace($char, '', $string);\n    }\n    return $string;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $string_array = array_diff($string_array, $second_string_array);\n    return implode($string_array);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode($result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode($result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $dirty_chars = str_split($second_string);\n    $clean_string = \"\";\n    $string_array = str_split($string);\n    foreach ($string_array as $char) {\n        if (!in_array($char, $dirty_chars)) {\n            $clean_string .= $char;\n        }\n    }\n    return $clean_string;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n\t$result = '';\n\t$second_string_array = str_split($second_string);\n\t$string_array = str_split($string);\n\tforeach ($string_array as $char) {\n\t\tif (!in_array($char, $second_string_array)) {\n\t\t\t$result .= $char;\n\t\t}\n\t}\n\treturn $result;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $result = '';\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    foreach($string_array as $string_char) {\n        if(!in_array($string_char, $second_string_array)) {\n            $result .= $string_char;\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = array();\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode($result);\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    foreach ($second_string_array as $char) {\n        $key = array_search($char, $string_array);\n        if ($key !== false) {\n            unset($string_array[$key]);\n        }\n    }\n    return implode('', $string_array);\n}\n\n$string = 'Battle of the Vowels: Hawaii vs. Grozny';\n$second_string = 'aeiou';\necho remove_dirty_chars($string, $second_string);\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f the Vowels: Hawai vs. Grozny\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpre0t1tyn.php:23\nStack trace:\n#0 /tmp/tmpre0t1tyn.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpre0t1tyn.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $clean_string = \"\";\n    $second_string_array = str_split($second_string);\n    for ($i = 0; $i < strlen($string); $i++) {\n        if (!in_array($string[$i], $second_string_array)) {\n            $clean_string .= $string[$i];\n        }\n    }\n    return $clean_string;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode($result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $dirty_chars = str_split($second_string);\n    $string_array = str_split($string);\n    $clean_string = \"\";\n    foreach($string_array as $char) {\n        if(!in_array($char, $dirty_chars)) {\n            $clean_string .= $char;\n        }\n    }\n    return $clean_string;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $dirty_chars = str_split($second_string);\n    $clean_string = '';\n    for ($i = 0; $i < strlen($string); $i++) {\n        if (!in_array($string[$i], $dirty_chars)) {\n            $clean_string .= $string[$i];\n        }\n    }\n    return $clean_string;\n}\n\n$string = 'Battle of the Vowels: Hawaii vs. Grozny';\n$second_string = 'aeiou';\necho remove_dirty_chars($string, $second_string);\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $chars = str_split($second_string);\n    foreach($chars as $char) {\n        $string = str_replace($char, '', $string);\n    }\n    return $string;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = [];\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string = str_split($string);\n    $second_string = str_split($second_string);\n    $result = array_diff($string, $second_string);\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $dirty_chars = str_split($second_string);\n    $clean_string = \"\";\n    $string_array = str_split($string);\n    foreach ($string_array as $char) {\n        if (!in_array($char, $dirty_chars)) {\n            $clean_string .= $char;\n        }\n    }\n    return $clean_string;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = array();\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n\t$dirty_chars = str_split($second_string);\n\t$clean_string = '';\n\t$string_chars = str_split($string);\n\tforeach ($string_chars as $char) {\n\t\tif (!in_array($char, $dirty_chars)) {\n\t\t\t$clean_string .= $char;\n\t\t}\n\t}\n\treturn $clean_string;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = [];\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array();\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = '';\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $arr = str_split($string);\n    $arr_second = str_split($second_string);\n    $arr_result = [];\n    foreach ($arr as $key => $value) {\n        if (!in_array($value, $arr_second)) {\n            $arr_result[] = $value;\n        }\n    }\n    return implode('', $arr_result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result_array = array();\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            array_push($result_array, $char);\n        }\n    }\n    return implode($result_array);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode($result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = '';\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    $result = implode('', $result);\n    return $result;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result_array = array_diff($string_array, $second_string_array);\n    $result_string = implode('', $result_array);\n    return $result_string;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $dirty_chars = str_split($second_string);\n    $clean_string = '';\n    for ($i = 0; $i < strlen($string); $i++) {\n        if (!in_array($string[$i], $dirty_chars)) {\n            $clean_string .= $string[$i];\n        }\n    }\n    return $clean_string;\n}\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $dirty_chars = str_split($second_string);\n    $clean_string = '';\n    $string_chars = str_split($string);\n    foreach ($string_chars as $char) {\n        if (!in_array($char, $dirty_chars)) {\n            $clean_string .= $char;\n        }\n    }\n    return $clean_string;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $dirty_chars = str_split($second_string);\n    $clean_string = '';\n    $string = str_split($string);\n    foreach ($string as $char) {\n        if (!in_array($char, $dirty_chars)) {\n            $clean_string .= $char;\n        }\n    }\n    return $clean_string;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = [];\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $dirty_chars = str_split($second_string);\n    $clean_string = \"\";\n    for($i = 0; $i < strlen($string); $i++) {\n        if(!in_array($string[$i], $dirty_chars)) {\n            $clean_string .= $string[$i];\n        }\n    }\n    return $clean_string;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = \"\";\n    foreach ($string_array as $key => $value) {\n        if (!in_array($value, $second_string_array)) {\n            $result .= $value;\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n  $dirty_chars = str_split($second_string);\n  $clean_string = '';\n  $string_array = str_split($string);\n  foreach ($string_array as $char) {\n    if (!in_array($char, $dirty_chars)) {\n      $clean_string .= $char;\n    }\n  }\n  return $clean_string;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $dirty_chars = str_split($second_string);\n    $clean_string = '';\n    $string_array = str_split($string);\n    foreach ($string_array as $char) {\n        if (!in_array($char, $dirty_chars)) {\n            $clean_string .= $char;\n        }\n    }\n    return $clean_string;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode(\"\", $result);\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $result = '';\n    for ($i = 0; $i < strlen($string); $i++) {\n        if (strpos($second_string, $string[$i]) === false) {\n            $result .= $string[$i];\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $arr = str_split($string);\n    $arr2 = str_split($second_string);\n    $arr3 = array_diff($arr, $arr2);\n    $arr3 = implode($arr3);\n    return $arr3;\n}\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $str_len = strlen($string);\n    $second_str_len = strlen($second_string);\n    $new_string = '';\n    for ($i = 0; $i < $str_len; $i++) {\n        $is_present = false;\n        for ($j = 0; $j < $second_str_len; $j++) {\n            if ($string[$i] == $second_string[$j]) {\n                $is_present = true;\n                break;\n            }\n        }\n        if (!$is_present) {\n            $new_string .= $string[$i];\n        }\n    }\n    return $new_string;\n}\n\n$string = 'Battle of the Vowels: Hawaii vs. Grozny';\n$second_string = 'aeiou';\necho remove_dirty_chars($string, $second_string);\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result_array = array_diff($string_array, $second_string_array);\n    return implode(\"\", $result_array);\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $dirty_chars = str_split($second_string);\n    $clean_string = \"\";\n    for ($i = 0; $i < strlen($string); $i++) {\n        if (!in_array($string[$i], $dirty_chars)) {\n            $clean_string .= $string[$i];\n        }\n    }\n    return $clean_string;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = '';\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n\t$string_array = str_split($string);\n\t$second_string_array = str_split($second_string);\n\t$result = array_diff($string_array, $second_string_array);\n\treturn implode(\"\", $result);\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $clean_string = \"\";\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $clean_string .= $char;\n        }\n    }\n    return $clean_string;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $arr = str_split($second_string);\n    $result = \"\";\n    for ($i = 0; $i < strlen($string); $i++) {\n        if (!in_array($string[$i], $arr)) {\n            $result .= $string[$i];\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars(\"daily\", \"aeiou\") . \"\\n\";\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "dly\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124143,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode('', $result);\n}\n\n$string = \"geeksforgeeks\";\n$second_string = \"mask\";\necho remove_dirty_chars($string, $second_string);\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "geeforgee",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = array();\n    foreach($string_array as $char) {\n        if(!in_array($char, $second_string_array)) {\n            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    foreach ($string_array as $key => $value) {\n        if (in_array($value, $second_string_array)) {\n            unset($string_array[$key]);\n        }\n    }\n    return implode('', $string_array);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $dirty_chars = str_split($second_string);\n    $clean_string = \"\";\n    $string_chars = str_split($string);\n    foreach($string_chars as $char) {\n        if(!in_array($char, $dirty_chars)) {\n            $clean_string .= $char;\n        }\n    }\n    return $clean_string;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $dirty_chars = str_split($second_string);\n    $clean_string = \"\";\n    $string_array = str_split($string);\n    foreach ($string_array as $char) {\n        if (!in_array($char, $dirty_chars)) {\n            $clean_string .= $char;\n        }\n    }\n    return $clean_string;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $dirty_chars = str_split($second_string);\n    $clean_string = '';\n    for ($i = 0; $i < strlen($string); $i++) {\n        if (!in_array($string[$i], $dirty_chars)) {\n            $clean_string .= $string[$i];\n        }\n    }\n    return $clean_string;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = '';\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $dirty_chars = str_split($second_string);\n    $clean_string = '';\n    $string_chars = str_split($string);\n    foreach($string_chars as $char) {\n        if(!in_array($char, $dirty_chars)) {\n            $clean_string .= $char;\n        }\n    }\n    return $clean_string;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = [];\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string = str_split($string);\n    $second_string = str_split($second_string);\n    $result = array_diff($string, $second_string);\n    return implode($result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string = str_split($string);\n    $second_string = str_split($second_string);\n    $result = '';\n    foreach ($string as $char) {\n        if (!in_array($char, $second_string)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124142,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = array();\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode(\"\", $result);\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510616,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $array = str_split($string);\n    $second_array = str_split($second_string);\n    $result = array_diff($array, $second_array);\n    return implode($result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n    $string = str_split($string);\n    $second_string = str_split($second_string);\n    $result = array_diff($string, $second_string);\n    return implode(\"\", $result);\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "Bttl f th Vwls: Hw vs. Grzny",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n\t$second_string = str_split($second_string);\n\t$string = str_split($string);\n\tforeach ($string as $key => $value) {\n\t\tforeach ($second_string as $key2 => $value2) {\n\t\t\tif ($value == $value2) {\n\t\t\t\tunset($string[$key]);\n\t\t\t}\n\t\t}\n\t}\n\treturn implode(\"\", $string);\n}\n\necho remove_dirty_chars(\"daily\", \"aeiou\");\nfunction candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124144,
      "stdout": "dly",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
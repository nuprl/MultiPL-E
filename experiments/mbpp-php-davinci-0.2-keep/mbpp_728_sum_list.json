{
  "name": "mbpp_728_sum_list",
  "language": "php",
  "prompt": "<?php\n// Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_728_sum_list.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $lst3 = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $lst3[] = $lst1[$i] + $lst2[$i];\n    }\n    return $lst3;\n}\n",
    "    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3);\n$lst2 = array(4, 5, 6);\n$result = sum_list($lst1, $lst2);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3, 4);\n$lst2 = array(5, 6, 7, 8);\n\nprint_r(sum_list($lst1, $lst2));\n",
    "\t$sum = [];\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\t$sum[] = $lst1[$i] + $lst2[$i];\n\t}\n\treturn $sum;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\nprint_r(sum_list($lst1, $lst2));\n",
    "    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4];\n$lst2 = [5, 6, 7, 8];\n\necho implode(', ', sum_list($lst1, $lst2));",
    "\t$lst3 = array();\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\t$lst3[] = $lst1[$i] + $lst2[$i];\n\t}\n\treturn $lst3;\n}\n\n$lst1 = array(1,2,3);\n$lst2 = array(4,5,6);\n$lst3 = sum_list($lst1, $lst2);\nprint_r($lst3);",
    "    $lst3 = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $lst3[] = $lst1[$i] + $lst2[$i];\n    }\n    return $lst3;\n}\n",
    "    $sum = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $sum[] = $lst1[$i] + $lst2[$i];\n    }\n    return $sum;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n$sum = sum_list($lst1, $lst2);\nprint_r($sum);\n",
    "    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[$i] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3);\n$lst2 = array(4, 5, 6);\n\necho implode(',', sum_list($lst1, $lst2));\n",
    "    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n\nprint_r(sum_list($lst1, $lst2));",
    "    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3, 4, 5);\n$lst2 = array(5, 4, 3, 2, 1);\nprint_r(sum_list($lst1, $lst2));\n",
    "    $sum = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $sum[] = $lst1[$i] + $lst2[$i];\n    }\n    return $sum;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [6, 7, 8, 9, 10];\n\nprint_r(sum_list($lst1, $lst2));",
    "    $lst3 = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $lst3[] = $lst1[$i] + $lst2[$i];\n    }\n    return $lst3;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [6, 7, 8, 9, 10];\n\nprint_r(sum_list($lst1, $lst2));\n",
    "\t$lst3 = array();\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\t$lst3[$i] = $lst1[$i] + $lst2[$i];\n\t}\n\treturn $lst3;\n}\n\n$lst1 = array(1, 2, 3, 4);\n$lst2 = array(5, 6, 7, 8);\n$lst3 = sum_list($lst1, $lst2);\nprint_r($lst3);\n",
    "    $lst3 = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $lst3[$i] = $lst1[$i] + $lst2[$i];\n    }\n    return $lst3;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [5, 4, 3, 2, 1];\nprint_r(sum_list($lst1, $lst2));",
    "    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n",
    "    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[$i] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3, 4, 5);\n$lst2 = array(6, 7, 8, 9, 10);\n$result = sum_list($lst1, $lst2);\nprint_r($result);",
    "\t$result = array();\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\t$result[$i] = $lst1[$i] + $lst2[$i];\n\t}\n\treturn $result;\n}\n\n$lst1 = array(1,2,3,4,5);\n$lst2 = array(5,4,3,2,1);\n\n$result = sum_list($lst1, $lst2);\nprint_r($result);",
    "    $sum = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $sum[] = $lst1[$i] + $lst2[$i];\n    }\n    return $sum;\n}\n",
    "    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [1, 2, 3, 4, 5];\n\nprint_r(sum_list($lst1, $lst2));\n"
  ]
}
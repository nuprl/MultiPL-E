{
  "name": "mbpp_747_lcs_of_three",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_747_lcs_of_three.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"ABCBDAB\";\n$Y = \"BDCABA\";\n$Z = \"BADACB\";\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\necho \"Length of LCS is \".lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        $L[$i][0][0] = 0;\n    }\n    for ($j = 0; $j <= $n; $j++) {\n        $L[0][$j][0] = 0;\n    }\n    for ($k = 0; $k <= $o; $k++) {\n        $L[0][0][$k] = 0;\n    }\n    for ($i = 1; $i <= $m; $i++) {\n        for ($j = 1; $j <= $n; $j++) {\n            for ($k = 1; $k <= $o; $k++) {\n                if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmp14mbbd9p.php on line 23\n\nWarning: Undefined array key 1 in /tmp/tmp14mbbd9p.php on line 23\n\nWarning: Undefined array key 1 in /tmp/tmp14mbbd9p.php on line 23\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp14mbbd9p.php on line 23\n\nWarning: Undefined array key 2 in /tmp/tmp14mbbd9p.php on line 23\n\nWarning: Undefined array key 2 in /tmp/tmp14mbbd9p.php on line 23\n\nWarning: Undefined array key 3 in /tmp/tmp14mbbd9p.php on line 23\n\nWarning: Undefined array key 3 in /tmp/tmp14mbbd9p.php on line 23\n\nWarning: Undefined array key 4 in /tmp/tmp14mbbd9p.php on line 23\n\nWarning: Undefined array key 4 in /tmp/tmp14mbbd9p.php on line 23\n\nWarning: Undefined array key 5 in /tmp/tmp14mbbd9p.php on line 23\n\nWarning: Undefined array key 5 in /tmp/tmp14mbbd9p.php on line 23\n\nWarning: Undefined array key 1 in /tmp/tmp14mbbd9p.php on line 23\n\nWarning: Undefined array key 2 in /tmp/tmp14mbbd9p.php on line 23\n\nWarning: Trying to access array offset on value of type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \". lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \". lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n\t$m = strlen($X);\n\t$n = strlen($Y);\n\t$o = strlen($Z);\n\t$L = array();\n\tfor ($i = 0; $i <= $m; $i++) {\n\t\tfor ($j = 0; $j <= $n; $j++) {\n\t\t\tfor ($k = 0; $k <= $o; $k++) {\n\t\t\t\tif ($i == 0 || $j == 0 || $k == 0) {\n\t\t\t\t\t$L[$i][$j][$k] = 0;\n\t\t\t\t} else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n\t\t\t\t\t$L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n\t\t\t\t} else {\n\t\t\t\t\t$L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGTAB\";\n$Y = \"GXTXAYB\";\n$Z = \"GTAB\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122518,
      "stdout": "Length of LCS is 4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n\t$m = strlen($X);\n\t$n = strlen($Y);\n\t$o = strlen($Z);\n\t$L = array();\n\tfor($i = 0; $i <= $m; $i++) {\n\t\t$L[$i][0][0] = 0;\n\t}\n\tfor($j = 0; $j <= $n; $j++) {\n\t\t$L[0][$j][0] = 0;\n\t}\n\tfor($k = 0; $k <= $o; $k++) {\n\t\t$L[0][0][$k] = 0;\n\t}\n\tfor($i = 1; $i <= $m; $i++) {\n\t\tfor($j = 1; $j <= $n; $j++) {\n\t\t\tfor($k = 1; $k <= $o; $k++) {\n\t\t\t\tif($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n\t\t\t\t\t$L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n\t\t\t\t} else {\n\t\t\t\t\t$L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122520,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmp1cog21wf.php on line 23\n\nWarning: Undefined array key 1 in /tmp/tmp1cog21wf.php on line 23\n\nWarning: Undefined array key 1 in /tmp/tmp1cog21wf.php on line 23\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp1cog21wf.php on line 23\n\nWarning: Undefined array key 2 in /tmp/tmp1cog21wf.php on line 23\n\nWarning: Undefined array key 2 in /tmp/tmp1cog21wf.php on line 23\n\nWarning: Undefined array key 3 in /tmp/tmp1cog21wf.php on line 23\n\nWarning: Undefined array key 3 in /tmp/tmp1cog21wf.php on line 23\n\nWarning: Undefined array key 4 in /tmp/tmp1cog21wf.php on line 23\n\nWarning: Undefined array key 4 in /tmp/tmp1cog21wf.php on line 23\n\nWarning: Undefined array key 5 in /tmp/tmp1cog21wf.php on line 23\n\nWarning: Undefined array key 5 in /tmp/tmp1cog21wf.php on line 23\n\nWarning: Undefined array key 1 in /tmp/tmp1cog21wf.php on line 23\n\nWarning: Undefined array key 2 in /tmp/tmp1cog21wf.php on line 23\n\nWarning: Trying to access array offset on value of type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $Y[$j - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122518,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\n\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122518,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122520,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \". lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \". lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $dp = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $dp[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $dp[$i][$j][$k] = $dp[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $dp[$i][$j][$k] = max($dp[$i - 1][$j][$k], $dp[$i][$j - 1][$k], $dp[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $dp[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122520,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = [];\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \". lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n\t$m = strlen($X);\n\t$n = strlen($Y);\n\t$o = strlen($Z);\n\t$L = array();\n\tfor ($i = 0; $i <= $m; $i++) {\n\t\tfor ($j = 0; $j <= $n; $j++) {\n\t\t\tfor ($k = 0; $k <= $o; $k++) {\n\t\t\t\tif ($i == 0 || $j == 0 || $k == 0) {\n\t\t\t\t\t$L[$i][$j][$k] = 0;\n\t\t\t\t} else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n\t\t\t\t\t$L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n\t\t\t\t} else {\n\t\t\t\t\t$L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGTAB\";\n$Y = \"GXTXAYB\";\n$Z = \"GTAB\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122518,
      "stdout": "Length of LCS is 4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        $L[$i][0][0] = 0;\n    }\n    for ($j=0; $j<=$n; $j++) {\n        $L[0][$j][0] = 0;\n    }\n    for ($k=0; $k<=$o; $k++) {\n        $L[0][0][$k] = 0;\n    }\n    for ($i=1; $i<=$m; $i++) {\n        for ($j=1; $j<=$n; $j++) {\n            for ($k=1; $k<=$o; $k++) {\n                if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122520,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpcqmjw9dh.php on line 23\n\nWarning: Undefined array key 1 in /tmp/tmpcqmjw9dh.php on line 23\n\nWarning: Undefined array key 1 in /tmp/tmpcqmjw9dh.php on line 23\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpcqmjw9dh.php on line 23\n\nWarning: Undefined array key 2 in /tmp/tmpcqmjw9dh.php on line 23\n\nWarning: Undefined array key 2 in /tmp/tmpcqmjw9dh.php on line 23\n\nWarning: Undefined array key 3 in /tmp/tmpcqmjw9dh.php on line 23\n\nWarning: Undefined array key 3 in /tmp/tmpcqmjw9dh.php on line 23\n\nWarning: Undefined array key 4 in /tmp/tmpcqmjw9dh.php on line 23\n\nWarning: Undefined array key 4 in /tmp/tmpcqmjw9dh.php on line 23\n\nWarning: Undefined array key 5 in /tmp/tmpcqmjw9dh.php on line 23\n\nWarning: Undefined array key 5 in /tmp/tmpcqmjw9dh.php on line 23\n\nWarning: Undefined array key 1 in /tmp/tmpcqmjw9dh.php on line 23\n\nWarning: Undefined array key 2 in /tmp/tmpcqmjw9dh.php on line 23\n\nWarning: Trying to access array offset on value of type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122520,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGTAB\";\n$Y = \"GXTXAYB\";\n$Z = \"GTAB\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122518,
      "stdout": "Length of LCS is 4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \". lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n\t$m = strlen($X);\n\t$n = strlen($Y);\n\t$o = strlen($Z);\n\t$L = array();\n\tfor ($i = 0; $i <= $m; $i++) {\n\t\tfor ($j = 0; $j <= $n; $j++) {\n\t\t\tfor ($k = 0; $k <= $o; $k++) {\n\t\t\t\tif ($i == 0 || $j == 0 || $k == 0) {\n\t\t\t\t\t$L[$i][$j][$k] = 0;\n\t\t\t\t} else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n\t\t\t\t\t$L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n\t\t\t\t} else {\n\t\t\t\t\t$L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $L[$m][$n][$o];\n}\n\n$X = \"AGGTAB\";\n$Y = \"GXTXAYB\";\n$Z = \"GTAB\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122520,
      "stdout": "Length of LCS is 4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $Y[$j - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122518,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \".lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122518,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122518,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122518,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        $L[$i][0][0] = 0;\n    }\n    for ($j = 0; $j <= $n; $j++) {\n        $L[0][$j][0] = 0;\n    }\n    for ($k = 0; $k <= $o; $k++) {\n        $L[0][0][$k] = 0;\n    }\n    for ($i = 1; $i <= $m; $i++) {\n        for ($j = 1; $j <= $n; $j++) {\n            for ($k = 1; $k <= $o; $k++) {\n                if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmp14mbbd9p.php on line 23\n\nWarning: Undefined array key 1 in /tmp/tmp14mbbd9p.php on line 23\n\nWarning: Undefined array key 1 in /tmp/tmp14mbbd9p.php on line 23\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp14mbbd9p.php on line 23\n\nWarning: Undefined array key 2 in /tmp/tmp14mbbd9p.php on line 23\n\nWarning: Undefined array key 2 in /tmp/tmp14mbbd9p.php on line 23\n\nWarning: Undefined array key 3 in /tmp/tmp14mbbd9p.php on line 23\n\nWarning: Undefined array key 3 in /tmp/tmp14mbbd9p.php on line 23\n\nWarning: Undefined array key 4 in /tmp/tmp14mbbd9p.php on line 23\n\nWarning: Undefined array key 4 in /tmp/tmp14mbbd9p.php on line 23\n\nWarning: Undefined array key 5 in /tmp/tmp14mbbd9p.php on line 23\n\nWarning: Undefined array key 5 in /tmp/tmp14mbbd9p.php on line 23\n\nWarning: Undefined array key 1 in /tmp/tmp14mbbd9p.php on line 23\n\nWarning: Undefined array key 2 in /tmp/tmp14mbbd9p.php on line 23\n\nWarning: Trying to access array offset on value of type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \". lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        $L[$i][0][0] = 0;\n    }\n    for ($j=0; $j<=$n; $j++) {\n        $L[0][$j][0] = 0;\n    }\n    for ($k=0; $k<=$o; $k++) {\n        $L[0][0][$k] = 0;\n    }\n    for ($i=1; $i<=$m; $i++) {\n        for ($j=1; $j<=$n; $j++) {\n            for ($k=1; $k<=$o; $k++) {\n                if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"ABCBDAB\";\n$Y = \"BDCABA\";\n$Z = \"BADACB\";\n\necho lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122520,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmp5a_wwykq.php on line 23\n\nWarning: Undefined array key 1 in /tmp/tmp5a_wwykq.php on line 23\n\nWarning: Undefined array key 1 in /tmp/tmp5a_wwykq.php on line 23\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp5a_wwykq.php on line 23\n\nWarning: Undefined array key 2 in /tmp/tmp5a_wwykq.php on line 23\n\nWarning: Undefined array key 2 in /tmp/tmp5a_wwykq.php on line 23\n\nWarning: Undefined array key 3 in /tmp/tmp5a_wwykq.php on line 23\n\nWarning: Undefined array key 3 in /tmp/tmp5a_wwykq.php on line 23\n\nWarning: Undefined array key 4 in /tmp/tmp5a_wwykq.php on line 23\n\nWarning: Undefined array key 4 in /tmp/tmp5a_wwykq.php on line 23\n\nWarning: Undefined array key 5 in /tmp/tmp5a_wwykq.php on line 23\n\nWarning: Undefined array key 5 in /tmp/tmp5a_wwykq.php on line 23\n\nWarning: Undefined array key 6 in /tmp/tmp5a_wwykq.php on line 23\n\nWarning: Undefined array key 6 in /tmp/tmp5a_wwykq.php on line 23\n\nWarning: Undefined array key 1 in /tmp/tmp5a_wwykq.php ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122518,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = [];\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } elseif ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122520,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n\t$m = strlen($X);\n\t$n = strlen($Y);\n\t$o = strlen($Z);\n\t$L = array();\n\tfor ($i = 0; $i <= $m; $i++) {\n\t\tfor ($j = 0; $j <= $n; $j++) {\n\t\t\tfor ($k = 0; $k <= $o; $k++) {\n\t\t\t\tif ($i == 0 || $j == 0 || $k == 0) {\n\t\t\t\t\t$L[$i][$j][$k] = 0;\n\t\t\t\t} else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n\t\t\t\t\t$L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n\t\t\t\t} else {\n\t\t\t\t\t$L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122520,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \". lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \". lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for($i = 0; $i <= $m; $i++) {\n        $L[$i][0][0] = 0;\n    }\n    for($j = 0; $j <= $n; $j++) {\n        $L[0][$j][0] = 0;\n    }\n    for($k = 0; $k <= $o; $k++) {\n        $L[0][0][$k] = 0;\n    }\n    for($i = 1; $i <= $m; $i++) {\n        for($j = 1; $j <= $n; $j++) {\n            for($k = 1; $k <= $o; $k++) {\n                if($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\necho lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122520,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmp3h4zeo2b.php on line 23\n\nWarning: Undefined array key 1 in /tmp/tmp3h4zeo2b.php on line 23\n\nWarning: Undefined array key 1 in /tmp/tmp3h4zeo2b.php on line 23\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp3h4zeo2b.php on line 23\n\nWarning: Undefined array key 2 in /tmp/tmp3h4zeo2b.php on line 23\n\nWarning: Undefined array key 2 in /tmp/tmp3h4zeo2b.php on line 23\n\nWarning: Undefined array key 3 in /tmp/tmp3h4zeo2b.php on line 23\n\nWarning: Undefined array key 3 in /tmp/tmp3h4zeo2b.php on line 23\n\nWarning: Undefined array key 4 in /tmp/tmp3h4zeo2b.php on line 23\n\nWarning: Undefined array key 4 in /tmp/tmp3h4zeo2b.php on line 23\n\nWarning: Undefined array key 5 in /tmp/tmp3h4zeo2b.php on line 23\n\nWarning: Undefined array key 5 in /tmp/tmp3h4zeo2b.php on line 23\n\nWarning: Undefined array key 1 in /tmp/tmp3h4zeo2b.php on line 23\n\nWarning: Undefined array key 2 in /tmp/tmp3h4zeo2b.php on line 23\n\nWarning: Trying to access array offset on value of type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \".lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122518,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"ABCBDAB\";\n$Y = \"BDCABA\";\n$Z = \"BADACB\";\necho lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122520,
      "stdout": "4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122518,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"ABCBDAB\";\n$Y = \"BDCABA\";\n$Z = \"BADACB\";\necho lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122518,
      "stdout": "4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \".lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122518,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\necho lcs_of_three(\"AGGT12\", \"12TXAYB\", \"12XBA\");\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122520,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } elseif ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \". lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n\t$m = strlen($X);\n\t$n = strlen($Y);\n\t$o = strlen($Z);\n\t$L = array();\n\tfor ($i = 0; $i <= $m; $i++) {\n\t\t$L[$i][0][0] = 0;\n\t}\n\tfor ($j = 0; $j <= $n; $j++) {\n\t\t$L[0][$j][0] = 0;\n\t}\n\tfor ($k = 0; $k <= $o; $k++) {\n\t\t$L[0][0][$k] = 0;\n\t}\n\tfor ($i = 1; $i <= $m; $i++) {\n\t\tfor ($j = 1; $j <= $n; $j++) {\n\t\t\tfor ($k = 1; $k <= $o; $k++) {\n\t\t\t\tif ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n\t\t\t\t\t$L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n\t\t\t\t} else {\n\t\t\t\t\t$L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122520,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmphqddm3c3.php on line 23\n\nWarning: Undefined array key 1 in /tmp/tmphqddm3c3.php on line 23\n\nWarning: Undefined array key 1 in /tmp/tmphqddm3c3.php on line 23\n\nWarning: Trying to access array offset on value of type null in /tmp/tmphqddm3c3.php on line 23\n\nWarning: Undefined array key 2 in /tmp/tmphqddm3c3.php on line 23\n\nWarning: Undefined array key 2 in /tmp/tmphqddm3c3.php on line 23\n\nWarning: Undefined array key 3 in /tmp/tmphqddm3c3.php on line 23\n\nWarning: Undefined array key 3 in /tmp/tmphqddm3c3.php on line 23\n\nWarning: Undefined array key 4 in /tmp/tmphqddm3c3.php on line 23\n\nWarning: Undefined array key 4 in /tmp/tmphqddm3c3.php on line 23\n\nWarning: Undefined array key 5 in /tmp/tmphqddm3c3.php on line 23\n\nWarning: Undefined array key 5 in /tmp/tmphqddm3c3.php on line 23\n\nWarning: Undefined array key 1 in /tmp/tmphqddm3c3.php on line 23\n\nWarning: Undefined array key 2 in /tmp/tmphqddm3c3.php on line 23\n\nWarning: Trying to access array offset on value of type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } elseif ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\necho lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122519,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = [];\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } elseif ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\necho lcs_of_three('ABCDGH', 'AEDFHR', 'AEDGHR');\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122520,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \". lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $Y[$j - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122520,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } elseif ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"ABCBDAB\";\n$Y = \"BDCABA\";\n$Z = \"BADACB\";\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122520,
      "stdout": "Length of LCS is 4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"ABCBDAB\";\n$Y = \"BDCABA\";\n$Z = \"BADACB\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122518,
      "stdout": "Length of LCS is 4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for($i=0; $i<=$m; $i++) {\n        for($j=0; $j<=$n; $j++) {\n            for($k=0; $k<=$o; $k++) {\n                if($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\necho \"Length of LCS is \".lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122520,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122520,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \".lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122518,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \".lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122518,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = [];\n    for ($i=0; $i<=$m; $i++) {\n        $L[$i][0][0] = 0;\n    }\n    for ($j=0; $j<=$n; $j++) {\n        $L[0][$j][0] = 0;\n    }\n    for ($k=0; $k<=$o; $k++) {\n        $L[0][0][$k] = 0;\n    }\n    for ($i=1; $i<=$m; $i++) {\n        for ($j=1; $j<=$n; $j++) {\n            for ($k=1; $k<=$o; $k++) {\n                if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\necho lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122520,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmplr9phhax.php on line 23\n\nWarning: Undefined array key 1 in /tmp/tmplr9phhax.php on line 23\n\nWarning: Undefined array key 1 in /tmp/tmplr9phhax.php on line 23\n\nWarning: Trying to access array offset on value of type null in /tmp/tmplr9phhax.php on line 23\n\nWarning: Undefined array key 2 in /tmp/tmplr9phhax.php on line 23\n\nWarning: Undefined array key 2 in /tmp/tmplr9phhax.php on line 23\n\nWarning: Undefined array key 3 in /tmp/tmplr9phhax.php on line 23\n\nWarning: Undefined array key 3 in /tmp/tmplr9phhax.php on line 23\n\nWarning: Undefined array key 4 in /tmp/tmplr9phhax.php on line 23\n\nWarning: Undefined array key 4 in /tmp/tmplr9phhax.php on line 23\n\nWarning: Undefined array key 5 in /tmp/tmplr9phhax.php on line 23\n\nWarning: Undefined array key 5 in /tmp/tmplr9phhax.php on line 23\n\nWarning: Undefined array key 1 in /tmp/tmplr9phhax.php on line 23\n\nWarning: Undefined array key 2 in /tmp/tmplr9phhax.php on line 23\n\nWarning: Trying to access array offset on value of type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"ABCBDAB\";\n$Y = \"BDCABA\";\n$Z = \"BADACB\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122520,
      "stdout": "Length of LCS is 4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"ABCBDAB\";\n$Y = \"BDCABA\";\n$Z = \"BADACB\";\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\n\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122518,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n\t$m = strlen($X);\n\t$n = strlen($Y);\n\t$o = strlen($Z);\n\t$L = array();\n\tfor ($i = 0; $i <= $m; $i++) {\n\t\tfor ($j = 0; $j <= $n; $j++) {\n\t\t\tfor ($k = 0; $k <= $o; $k++) {\n\t\t\t\tif ($i == 0 || $j == 0 || $k == 0) {\n\t\t\t\t\t$L[$i][$j][$k] = 0;\n\t\t\t\t} else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n\t\t\t\t\t$L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n\t\t\t\t} else {\n\t\t\t\t\t$L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n\t$m = strlen($X);\n\t$n = strlen($Y);\n\t$o = strlen($Z);\n\t$L = array();\n\tfor($i=0; $i<=$m; $i++) {\n\t\tfor($j=0; $j<=$n; $j++) {\n\t\t\tfor($k=0; $k<=$o; $k++) {\n\t\t\t\tif($i == 0 || $j == 0 || $k == 0) {\n\t\t\t\t\t$L[$i][$j][$k] = 0;\n\t\t\t\t} else if($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n\t\t\t\t\t$L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n\t\t\t\t} else {\n\t\t\t\t\t$L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\necho lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122520,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"ABCBDAB\";\n$Y = \"BDCABA\";\n$Z = \"BADACB\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122518,
      "stdout": "Length of LCS is 4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } elseif ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"ABCBDAB\";\n$Y = \"BDCABA\";\n$Z = \"BADACB\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122518,
      "stdout": "Length of LCS is 4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \". lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"ABCBDAB\";\n$Y = \"BDCABA\";\n$Z = \"BADACB\";\necho \"Length of LCS is \".lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122520,
      "stdout": "Length of LCS is 4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \". lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGTAB\";\n$Y = \"GXTXAYB\";\n$Z = \"GTAB\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122518,
      "stdout": "Length of LCS is 4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\n\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122518,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"ABCBDAB\";\n$Y = \"BDCABA\";\n$Z = \"BADACB\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122518,
      "stdout": "Length of LCS is 4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\necho \"Length of LCS is \".lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGTAB\";\n$Y = \"GXTXAYB\";\n$Z = \"GTAB\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122518,
      "stdout": "Length of LCS is 4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\necho \"Length of LCS is \". lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122520,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        $L[$i][0][0] = 0;\n    }\n    for ($j = 0; $j <= $n; $j++) {\n        $L[0][$j][0] = 0;\n    }\n    for ($k = 0; $k <= $o; $k++) {\n        $L[0][0][$k] = 0;\n    }\n    for ($i = 1; $i <= $m; $i++) {\n        for ($j = 1; $j <= $n; $j++) {\n            for ($k = 1; $k <= $o; $k++) {\n                if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"ABCBDAB\";\n$Y = \"BDCABA\";\n$Z = \"BADACB\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122520,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpv7xtl0k3.php on line 23\n\nWarning: Undefined array key 1 in /tmp/tmpv7xtl0k3.php on line 23\n\nWarning: Undefined array key 1 in /tmp/tmpv7xtl0k3.php on line 23\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpv7xtl0k3.php on line 23\n\nWarning: Undefined array key 2 in /tmp/tmpv7xtl0k3.php on line 23\n\nWarning: Undefined array key 2 in /tmp/tmpv7xtl0k3.php on line 23\n\nWarning: Undefined array key 3 in /tmp/tmpv7xtl0k3.php on line 23\n\nWarning: Undefined array key 3 in /tmp/tmpv7xtl0k3.php on line 23\n\nWarning: Undefined array key 4 in /tmp/tmpv7xtl0k3.php on line 23\n\nWarning: Undefined array key 4 in /tmp/tmpv7xtl0k3.php on line 23\n\nWarning: Undefined array key 5 in /tmp/tmpv7xtl0k3.php on line 23\n\nWarning: Undefined array key 5 in /tmp/tmpv7xtl0k3.php on line 23\n\nWarning: Undefined array key 6 in /tmp/tmpv7xtl0k3.php on line 23\n\nWarning: Undefined array key 6 in /tmp/tmpv7xtl0k3.php on line 23\n\nWarning: Undefined array key 1 in /tmp/tmpv7xtl0k3.php ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\necho \"Length of LCS is \". lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122520,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);\nfunction candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509980,
      "stdout": "Length of LCS is 2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
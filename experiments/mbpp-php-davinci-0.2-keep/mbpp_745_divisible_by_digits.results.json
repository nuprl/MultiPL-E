{
  "name": "mbpp_745_divisible_by_digits",
  "language": "php",
  "prompt": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_745_divisible_by_digits.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $numbers = range($startnum, $endnum);\n    $result = array_filter($numbers, function($num) {\n        $digits = str_split($num);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($num % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp929_8fc3.php:9\nStack trace:\n#0 [internal function]: {closure}(10)\n#1 /tmp/tmp929_8fc3.php(15): array_filter(Array, Object(Closure))\n#2 /tmp/tmp929_8fc3.php(19): divisible_by_digits(1, 100)\n#3 {main}\n  thrown in /tmp/tmp929_8fc3.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \";\necho implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpxi0a9ouv.php:9\nStack trace:\n#0 /tmp/tmpxi0a9ouv.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpxi0a9ouv.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit !== 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\necho \"<pre>\";\nprint_r(divisible_by_digits(1, 100));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(divisible_by_digits(100, 1000));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "<pre>\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpym9e1jmo.php:9\nStack trace:\n#0 /tmp/tmpym9e1jmo.php(22): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpym9e1jmo.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $numbers = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $numbers[] = $i;\n        }\n    }\n    return $numbers;\n}\n\nprint_r(divisible_by_digits(1, 100));\nprint_r(divisible_by_digits(100, 1000));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp6cxi8bnh.php:9\nStack trace:\n#0 /tmp/tmp6cxi8bnh.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp6cxi8bnh.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit !== 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \" . implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpu9xe4t4x.php:9\nStack trace:\n#0 /tmp/tmpu9xe4t4x.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmpu9xe4t4x.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));\n\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpilfyg30r.php:9\nStack trace:\n#0 /tmp/tmpilfyg30r.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpilfyg30r.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $arr = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $arr[] = $i;\n        }\n    }\n    return $arr;\n}\n\nprint_r(divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp3auv31a9.php:9\nStack trace:\n#0 /tmp/tmp3auv31a9.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp3auv31a9.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \" . implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmptt55ykg6.php:9\nStack trace:\n#0 /tmp/tmptt55ykg6.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmptt55ykg6.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"The numbers between $startnum and $endnum which are divisible by every digit it contains are: \";\necho implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmptw3i1itb.php:9\nStack trace:\n#0 /tmp/tmptw3i1itb.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmptw3i1itb.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"The numbers between $startnum and $endnum divisible by their digits are: \" . implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpiyhqthox.php:9\nStack trace:\n#0 /tmp/tmpiyhqthox.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpiyhqthox.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n\t$result = array();\n\tfor ($i = $startnum; $i <= $endnum; $i++) {\n\t\t$digits = str_split($i);\n\t\t$divisible = true;\n\t\tforeach ($digits as $digit) {\n\t\t\tif ($i % $digit != 0) {\n\t\t\t\t$divisible = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ($divisible) {\n\t\t\t$result[] = $i;\n\t\t}\n\t}\n\treturn $result;\n}\n\necho \"Divisible by digits: \" . implode(\", \", divisible_by_digits(1, 100)) . \"\\n\";\n\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpjtixpjlr.php:9\nStack trace:\n#0 /tmp/tmpjtixpjlr.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpjtixpjlr.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $arr = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $arr[] = $i;\n        }\n    }\n    return $arr;\n}\n\necho \"<pre>\";\nprint_r(divisible_by_digits(1, 100));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "<pre>\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpnmcl1lfr.php:9\nStack trace:\n#0 /tmp/tmpnmcl1lfr.php(22): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpnmcl1lfr.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\nprint_r(divisible_by_digits($startnum, $endnum));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpzs447389.php:9\nStack trace:\n#0 /tmp/tmpzs447389.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpzs447389.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n\n$result = divisible_by_digits($startnum, $endnum);\nprint_r($result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp0pcwe5l_.php:9\nStack trace:\n#0 /tmp/tmp0pcwe5l_.php(24): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp0pcwe5l_.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $isDivisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $isDivisible = false;\n                break;\n            }\n        }\n        if ($isDivisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\necho \"<pre>\";\nprint_r(divisible_by_digits(1, 100));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "<pre>\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp_wqw8m9q.php:9\nStack trace:\n#0 /tmp/tmp_wqw8m9q.php(22): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp_wqw8m9q.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));\nprint_r(divisible_by_digits(100, 200));\nprint_r(divisible_by_digits(1000, 2000));\nprint_r(divisible_by_digits(10000, 20000));\nprint_r(divisible_by_digits(100000, 200000));\nprint_r(divisible_by_digits(1000000, 2000000));\nprint_r(divisible_by_digits(10000000, 20000000));\nprint_r(divisible_by_digits(100000000, 200000000));\nprint_r(divisible_by_digits(1000000000, 2000000000));\nprint_r(divisible_by_digits(10000000000, 20000000000));\nprint_r(divisible_by_digits(100000000000, 200000000000));\nprint_r(divisible_by_digits(1000000000000, 2000000000000));\nprint_r(divisible_by_digits(10000000000000, 20000000000000));\nprint_r(divisible_by_digits(100000000000000, 200000000000000));\nprint_r(divisible_by_digits(1000000000000000, 2000000000000000));\nprint_r(divisible_by_digits(10000000000000000, 20000000000000000));\nprint_r(divisible_by_digits(100000000000000000, 200000000000000000));\nprint_r(divisible_by_digits(1000000000000000000, 2000000000000000000));\nprint_r(divisible_by_digits(10000000000000000000, 20000000000000000000));\nprint_r(divisible_by_digits(100000000000000000000,\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp1lj8ywvg.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\necho \"Divisible by digits: \" . implode(\", \", divisible_by_digits(1, 100)) . \"\\n\";\n\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp875kbm8_.php:9\nStack trace:\n#0 /tmp/tmp875kbm8_.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp875kbm8_.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum that are divisible by every digit it contains: \";\necho implode(', ', $result);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpvy5blqwx.php:9\nStack trace:\n#0 /tmp/tmpvy5blqwx.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmpvy5blqwx.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n\t$result = array();\n\tfor ($i = $startnum; $i <= $endnum; $i++) {\n\t\t$digits = str_split($i);\n\t\t$divisible = true;\n\t\tforeach ($digits as $digit) {\n\t\t\tif ($i % $digit != 0) {\n\t\t\t\t$divisible = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ($divisible) {\n\t\t\t$result[] = $i;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$startnum = intval(readline('Enter start number: '));\n$endnum = intval(readline('Enter end number: '));\n$result = divisible_by_digits($startnum, $endnum);\necho implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmpjoyid12s.php:21\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpjoyid12s.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $divisible_numbers = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $divisible_numbers[] = $i;\n        }\n    }\n    return $divisible_numbers;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$divisible_numbers = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \" . implode(', ', $divisible_numbers);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp0sgik01h.php:9\nStack trace:\n#0 /tmp/tmp0sgik01h.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmp0sgik01h.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\necho \"Divisible by digits: \" . implode(', ', divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpn6h41iuv.php:9\nStack trace:\n#0 /tmp/tmpn6h41iuv.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpn6h41iuv.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpxasi1ebn.php:9\nStack trace:\n#0 /tmp/tmpxasi1ebn.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpxasi1ebn.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($digit != 0 && $i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt1lmrkp5.php:26\nStack trace:\n#0 /tmp/tmpt1lmrkp5.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpt1lmrkp5.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \" . implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpydqj5nm5.php:9\nStack trace:\n#0 /tmp/tmpydqj5nm5.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmpydqj5nm5.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $flag = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $i);\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum which are divisible by every digit it contains: \";\necho implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpmbeqevx5.php:9\nStack trace:\n#0 /tmp/tmpmbeqevx5.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmpmbeqevx5.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\nprint_r(divisible_by_digits($startnum, $endnum));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp0m7nslwf.php:9\nStack trace:\n#0 /tmp/tmp0m7nslwf.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmp0m7nslwf.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum which are divisible by the digits they contain: \" . implode(', ', $result);\n\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp_qqieuuv.php:9\nStack trace:\n#0 /tmp/tmp_qqieuuv.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp_qqieuuv.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 500;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \" . implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpa1ia8_bh.php:9\nStack trace:\n#0 /tmp/tmpa1ia8_bh.php(23): divisible_by_digits(100, 500)\n#1 {main}\n  thrown in /tmp/tmpa1ia8_bh.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum that are divisible by their digits are: \" . implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp1krnnblc.php:9\nStack trace:\n#0 /tmp/tmp1krnnblc.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmp1krnnblc.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 500;\n$endnum = 600;\necho \"Numbers between $startnum and $endnum are divisible by every digit they contain: \";\nprint_r(divisible_by_digits($startnum, $endnum));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "Numbers between 500 and 600 are divisible by every digit they contain: \nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpctg0b6wj.php:9\nStack trace:\n#0 /tmp/tmpctg0b6wj.php(24): divisible_by_digits(500, 600)\n#1 {main}\n  thrown in /tmp/tmpctg0b6wj.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $arr = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $arr[] = $i;\n        }\n    }\n    return $arr;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$arr = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \";\necho implode(', ', $arr);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp_iq7kl_w.php:9\nStack trace:\n#0 /tmp/tmp_iq7kl_w.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmp_iq7kl_w.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum which are divisible by the digits they contain: \" . implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp_o32z4xd.php:9\nStack trace:\n#0 /tmp/tmp_o32z4xd.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp_o32z4xd.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n\n$result = divisible_by_digits($startnum, $endnum);\nprint_r($result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp_p6jmg6r.php:9\nStack trace:\n#0 /tmp/tmp_p6jmg6r.php(24): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmp_p6jmg6r.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($digit == 0) {\n                $is_divisible = false;\n                break;\n            }\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = intval(readline('Enter start number: '));\n$endnum = intval(readline('Enter end number: '));\n$result = divisible_by_digits($startnum, $endnum);\necho implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmp0vrlhakj.php:25\nStack trace:\n#0 {main}\n  thrown in /tmp/tmp0vrlhakj.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \";\necho implode(', ', $result);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp9yub81fo.php:9\nStack trace:\n#0 /tmp/tmp9yub81fo.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmp9yub81fo.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $i);\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum that are divisible by their digits are: \" . implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpofchx1h5.php:9\nStack trace:\n#0 /tmp/tmpofchx1h5.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmpofchx1h5.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\necho \"The numbers between $startnum and $endnum which are divisible by their digits are: \";\necho implode(', ', divisible_by_digits($startnum, $endnum));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "The numbers between 1 and 100 which are divisible by their digits are: \nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpo01mq5fo.php:9\nStack trace:\n#0 /tmp/tmpo01mq5fo.php(24): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpo01mq5fo.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($digit == 0) {\n                $is_divisible = false;\n                break;\n            }\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\nprint_r(divisible_by_digits($startnum, $endnum));\n\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 11\n    [10] => 12\n    [11] => 15\n    [12] => 22\n    [13] => 24\n    [14] => 33\n    [15] => 36\n    [16] => 44\n    [17] => 48\n    [18] => 55\n    [19] => 66\n    [20] => 77\n    [21] => 88\n    [22] => 99\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\necho '<pre>';\nprint_r(divisible_by_digits(1, 100));\necho '</pre>';\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "<pre>\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmppieegxx6.php:9\nStack trace:\n#0 /tmp/tmppieegxx6.php(22): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmppieegxx6.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\nprint_r($result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp6tj58nfu.php:9\nStack trace:\n#0 /tmp/tmp6tj58nfu.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp6tj58nfu.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = intval(readline('Enter start number: '));\n$endnum = intval(readline('Enter end number: '));\n\n$result = divisible_by_digits($startnum, $endnum);\n\necho implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmpk8893vw0.php:21\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpk8893vw0.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $flag = true;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0 || $i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n            $num = (int) ($num / 10);\n        }\n        if ($flag) {\n            array_push($result, $i);\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"The numbers between $startnum and $endnum which are divisible by the digits they contain are: \";\necho implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "The numbers between 1 and 100 which are divisible by the digits they contain are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22, 24, 33, 36, 44, 48, 55, 66, 77, 88, 99",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit !== 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\necho '<pre>';\nprint_r(divisible_by_digits(1, 100));\necho '</pre>';\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "<pre>\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpu45k7q2x.php:9\nStack trace:\n#0 /tmp/tmpu45k7q2x.php(22): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpu45k7q2x.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n\t$result = array();\n\tfor($i = $startnum; $i <= $endnum; $i++) {\n\t\t$digits = str_split($i);\n\t\t$divisible = true;\n\t\tforeach($digits as $digit) {\n\t\t\tif($i % $digit != 0) {\n\t\t\t\t$divisible = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif($divisible) {\n\t\t\t$result[] = $i;\n\t\t}\n\t}\n\treturn $result;\n}\n\necho \"divisible_by_digits(1, 100) = \";\nprint_r(divisible_by_digits(1, 100));\necho \"<br>\";\necho \"divisible_by_digits(100, 300) = \";\nprint_r(divisible_by_digits(100, 300));\necho \"<br>\";\necho \"divisible_by_digits(1000, 2000) = \";\nprint_r(divisible_by_digits(1000, 2000));\necho \"<br>\";\necho \"divisible_by_digits(10000, 30000) = \";\nprint_r(divisible_by_digits(10000, 30000));\necho \"<br>\";\necho \"divisible_by_digits(100000, 300000) = \";\nprint_r(divisible_by_digits(100000, 300000));\necho \"<br>\";\necho \"divisible_by_digits(1000000, 3000000) = \";\nprint_r(divisible_by_digits(1000000, 3000000));\necho \"<br>\";\necho \"divisible_by_digits(10000000, 30000000) = \";\nprint_r(divisible_by_digits(10000000, 30000000));\necho \"<br>\";\necho \"divisible_by_digits(100000000, 300000000) = \";\nprint_r(divisible_by_digits(100000000, 300000000));\necho \"<br>\";\necho \"divisible_by_digits(1000000000, 3000000000) = \";\nprint_r\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpgegojjgp.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\nprint_r($result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpdz5_v3nf.php:9\nStack trace:\n#0 /tmp/tmpdz5_v3nf.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmpdz5_v3nf.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($digit == 0) {\n                $divisible = false;\n                break;\n            }\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = intval(readline('Enter start number: '));\n$endnum = intval(readline('Enter end number: '));\n\n$result = divisible_by_digits($startnum, $endnum);\necho implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmpf2e39y1u.php:25\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpf2e39y1u.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \";\necho implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp_cnac981.php:9\nStack trace:\n#0 /tmp/tmp_cnac981.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmp_cnac981.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \" . implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpydqj5nm5.php:9\nStack trace:\n#0 /tmp/tmpydqj5nm5.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmpydqj5nm5.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n\t$result = array();\n\tfor ($i = $startnum; $i <= $endnum; $i++) {\n\t\t$digits = str_split($i);\n\t\t$divisible = true;\n\t\tforeach ($digits as $digit) {\n\t\t\tif ($i % $digit != 0) {\n\t\t\t\t$divisible = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ($divisible) {\n\t\t\tarray_push($result, $i);\n\t\t}\n\t}\n\treturn $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\nprint_r($result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpbend1rss.php:9\nStack trace:\n#0 /tmp/tmpbend1rss.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpbend1rss.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $arr = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $flag = true;\n        while ($num > 0) {\n            $rem = $num % 10;\n            if ($rem == 0) {\n                $flag = false;\n                break;\n            }\n            if ($i % $rem != 0) {\n                $flag = false;\n                break;\n            }\n            $num = $num / 10;\n        }\n        if ($flag) {\n            $arr[] = $i;\n        }\n    }\n    return $arr;\n}\n\n$startnum = 100;\n$endnum = 500;\n$arr = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum which are divisible by every digit it contains are: \";\nforeach ($arr as $val) {\n    echo $val . \" \";\n}\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nDeprecated: Implicit conversion from float 10.1 to int loses precision in /tmp/tmp_tq6gar5.php on line 9\n\nDeprecated: Implicit conversion from float 10.2 to int loses precision in /tmp/tmp_tq6gar5.php on line 9\n\nDeprecated: Implicit conversion from float 10.4 to int loses precision in /tmp/tmp_tq6gar5.php on line 9\n\nDeprecated: Implicit conversion from float 10.5 to int loses precision in /tmp/tmp_tq6gar5.php on line 9\n\nDeprecated: Implicit conversion from float 11.1 to int loses precision in /tmp/tmp_tq6gar5.php on line 9\n\nDeprecated: Implicit conversion from float 1.1099999999999999 to int loses precision in /tmp/tmp_tq6gar5.php on line 9\n\nDeprecated: Implicit conversion from float 0.11099999999999999 to int loses precision in /tmp/tmp_tq6gar5.php on line 9\n\nDeprecated: Implicit conversion from float 11.2 to int loses precision in /tmp/tmp_tq6gar5.php on line 9\n\nDeprecated: Implicit conversion from float 1.1199999999999999 to int loses precision in /tmp/tmp_tq6gar5.php on line 9\n\nDeprecated: Implicit conve",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $arr = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit !== 0) {\n                $divisible = false;\n            }\n        }\n        if ($divisible) {\n            $arr[] = $i;\n        }\n    }\n    return $arr;\n}\n\necho \"<pre>\";\nprint_r(divisible_by_digits(1, 100));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(divisible_by_digits(100, 200));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(divisible_by_digits(1000, 2000));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(divisible_by_digits(10000, 20000));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "<pre>\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp222637qv.php:9\nStack trace:\n#0 /tmp/tmp222637qv.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp222637qv.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum that are divisible by every digit it contains: \";\necho implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpzdct_4p1.php:9\nStack trace:\n#0 /tmp/tmpzdct_4p1.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpzdct_4p1.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum which are divisible by every digit it contains: \" . implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpdqe6pocw.php:9\nStack trace:\n#0 /tmp/tmpdqe6pocw.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmpdqe6pocw.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $flag = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 500;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \";\necho implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp0ql1n3fa.php:9\nStack trace:\n#0 /tmp/tmp0ql1n3fa.php(23): divisible_by_digits(100, 500)\n#1 {main}\n  thrown in /tmp/tmp0ql1n3fa.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $numbers = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit !== 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $numbers[] = $i;\n        }\n    }\n    return $numbers;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\nprint_r($result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpn5346xpz.php:9\nStack trace:\n#0 /tmp/tmpn5346xpz.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmpn5346xpz.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by their digits: \" . implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpbtkpkyc4.php:9\nStack trace:\n#0 /tmp/tmpbtkpkyc4.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpbtkpkyc4.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\necho \"<pre>\";\nprint_r(divisible_by_digits(1, 100));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "<pre>\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpbe6yas5n.php:9\nStack trace:\n#0 /tmp/tmpbe6yas5n.php(22): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpbe6yas5n.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\nprint_r($result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpdz5_v3nf.php:9\nStack trace:\n#0 /tmp/tmpdz5_v3nf.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmpdz5_v3nf.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \" . implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpydqj5nm5.php:9\nStack trace:\n#0 /tmp/tmpydqj5nm5.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmpydqj5nm5.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpxasi1ebn.php:9\nStack trace:\n#0 /tmp/tmpxasi1ebn.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpxasi1ebn.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by the digits it contains: \";\necho implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp3_7jhqin.php:9\nStack trace:\n#0 /tmp/tmp3_7jhqin.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp3_7jhqin.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \";\necho implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpxi0a9ouv.php:9\nStack trace:\n#0 /tmp/tmpxi0a9ouv.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpxi0a9ouv.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum which are divisible by every digit it contains: \" . implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpbey9kjqc.php:9\nStack trace:\n#0 /tmp/tmpbey9kjqc.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmpbey9kjqc.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $arr = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit !== 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $arr[] = $i;\n        }\n    }\n    return $arr;\n}\n\nprint_r(divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmptjz5qm5c.php:9\nStack trace:\n#0 /tmp/tmptjz5qm5c.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmptjz5qm5c.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \";\necho implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmptcs2ya9x.php:9\nStack trace:\n#0 /tmp/tmptcs2ya9x.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmptcs2ya9x.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $flag = true;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0 || $i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n            $num = (int)($num / 10);\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by their digits: \";\necho implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "Numbers between 100 and 1000 divisible by their digits: 111, 112, 115, 122, 124, 126, 128, 132, 135, 144, 155, 162, 168, 175, 184, 212, 216, 222, 224, 244, 248, 264, 288, 312, 315, 324, 333, 336, 366, 384, 396, 412, 424, 432, 444, 448, 488, 515, 555, 612, 624, 636, 648, 666, 672, 728, 735, 777, 784, 816, 824, 848, 864, 888, 936, 999",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum that are divisible by every digit it contains: \";\necho implode(\", \", $result);\necho \"\\n\";\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpq74xlpjv.php:9\nStack trace:\n#0 /tmp/tmpq74xlpjv.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpq74xlpjv.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum that are divisible by every digit it contains: \" . implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp2tvd_2fp.php:9\nStack trace:\n#0 /tmp/tmp2tvd_2fp.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmp2tvd_2fp.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\nprint_r(divisible_by_digits($startnum, $endnum));\n\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpvcv3vkt9.php:9\nStack trace:\n#0 /tmp/tmpvcv3vkt9.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpvcv3vkt9.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by their digits: \";\necho implode(\", \", $result);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp24q1cq6y.php:9\nStack trace:\n#0 /tmp/tmp24q1cq6y.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmp24q1cq6y.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $divisible_numbers = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $divisible_numbers[] = $i;\n        }\n    }\n    return $divisible_numbers;\n}\n\n$startnum = 1;\n$endnum = 100;\n$divisible_numbers = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \" . implode(', ', $divisible_numbers);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmptb065j5i.php:9\nStack trace:\n#0 /tmp/tmptb065j5i.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmptb065j5i.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n\n$result = divisible_by_digits($startnum, $endnum);\n\necho \"Numbers from $startnum to $endnum which are divisible by every digit it contains: \";\necho implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmprbo3h_vh.php:9\nStack trace:\n#0 /tmp/tmprbo3h_vh.php(24): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmprbo3h_vh.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\necho \"Numbers between $startnum and $endnum that are divisible by their digits: \";\necho implode(', ', divisible_by_digits($startnum, $endnum));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "Numbers between 1 and 100 that are divisible by their digits: \nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpodwuq1o6.php:9\nStack trace:\n#0 /tmp/tmpodwuq1o6.php(24): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpodwuq1o6.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit !== 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\necho \"Numbers between $startnum and $endnum that are divisible by the digits they contain: \";\necho implode(', ', divisible_by_digits($startnum, $endnum));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "Numbers between 1 and 100 that are divisible by the digits they contain: \nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpqynggqya.php:9\nStack trace:\n#0 /tmp/tmpqynggqya.php(24): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpqynggqya.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp36_fqqoq.php:9\nStack trace:\n#0 /tmp/tmp36_fqqoq.php(22): divisible_by_digits(1, 22)\n#1 /tmp/tmp36_fqqoq.php(26): candidate(1, 22)\n#2 /tmp/tmp36_fqqoq.php(31): test()\n#3 {main}\n  thrown in /tmp/tmp36_fqqoq.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $numbers = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $numbers[] = $i;\n        }\n    }\n    return $numbers;\n}\n\nprint_r(divisible_by_digits(1, 100));\nprint_r(divisible_by_digits(1000, 10000));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp6lj1u1v6.php:9\nStack trace:\n#0 /tmp/tmp6lj1u1v6.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp6lj1u1v6.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\necho \"Divisible by digits: \" . implode(\", \", divisible_by_digits(1, 100));\n\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpqcgof_bp.php:9\nStack trace:\n#0 /tmp/tmpqcgof_bp.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpqcgof_bp.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by digits: \" . implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp1ctetns9.php:9\nStack trace:\n#0 /tmp/tmp1ctetns9.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp1ctetns9.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = intval(readline('Enter start number: '));\n$endnum = intval(readline('Enter end number: '));\n\n$result = divisible_by_digits($startnum, $endnum);\necho implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmpjblehptr.php:21\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpjblehptr.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \" . implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpydqj5nm5.php:9\nStack trace:\n#0 /tmp/tmpydqj5nm5.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmpydqj5nm5.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 500;\n$endnum = 600;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum that are divisible by every digit it contains: \";\necho implode(\", \", $result);\necho \"<br>\";\n\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpeky2fzxr.php:9\nStack trace:\n#0 /tmp/tmpeky2fzxr.php(23): divisible_by_digits(500, 600)\n#1 {main}\n  thrown in /tmp/tmpeky2fzxr.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpaqo3403l.php:9\nStack trace:\n#0 /tmp/tmpaqo3403l.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpaqo3403l.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by digits: \" . implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp19r828iz.php:9\nStack trace:\n#0 /tmp/tmp19r828iz.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmp19r828iz.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"The numbers between $startnum and $endnum that are divisible by their digits are: \" . implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp7owroi0t.php:9\nStack trace:\n#0 /tmp/tmp7owroi0t.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmp7owroi0t.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nvar_dump(divisible_by_digits(1, 100));\nvar_dump(divisible_by_digits(100, 1000));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpfkwgpnup.php:9\nStack trace:\n#0 /tmp/tmpfkwgpnup.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpfkwgpnup.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers from $startnum to $endnum divisible by digits: \" . implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpn09xfd6k.php:9\nStack trace:\n#0 /tmp/tmpn09xfd6k.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpn09xfd6k.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($digit == 0) {\n                $divisible = false;\n                break;\n            }\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \";\necho implode(', ', $result);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "Numbers between 100 and 1000 divisible by every digit it contains: 111, 112, 115, 122, 124, 126, 128, 132, 135, 144, 155, 162, 168, 175, 184, 212, 216, 222, 224, 244, 248, 264, 288, 312, 315, 324, 333, 336, 366, 384, 396, 412, 424, 432, 444, 448, 488, 515, 555, 612, 624, 636, 648, 666, 672, 728, 735, 777, 784, 816, 824, 848, 864, 888, 936, 999\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\nprint_r($result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp6tj58nfu.php:9\nStack trace:\n#0 /tmp/tmp6tj58nfu.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp6tj58nfu.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by digits: \";\necho implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp3dchf3a4.php:9\nStack trace:\n#0 /tmp/tmp3dchf3a4.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmp3dchf3a4.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $numbers = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit !== 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $numbers[] = $i;\n        }\n    }\n    return $numbers;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \" . implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpsdx3kh3n.php:9\nStack trace:\n#0 /tmp/tmpsdx3kh3n.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmpsdx3kh3n.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i=$startnum; $i<=$endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 10;\n$endnum = 30;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \";\necho implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp7x1p_y74.php:9\nStack trace:\n#0 /tmp/tmp7x1p_y74.php(23): divisible_by_digits(10, 30)\n#1 {main}\n  thrown in /tmp/tmp7x1p_y74.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $arr = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $flag = true;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0 || $i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n            $num = floor($num / 10);\n        }\n        if ($flag) {\n            $arr[] = $i;\n        }\n    }\n    return $arr;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$arr = divisible_by_digits($startnum, $endnum);\nprint_r($arr);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "Array\n(\n    [0] => 111\n    [1] => 112\n    [2] => 115\n    [3] => 122\n    [4] => 124\n    [5] => 126\n    [6] => 128\n    [7] => 132\n    [8] => 135\n    [9] => 144\n    [10] => 155\n    [11] => 162\n    [12] => 168\n    [13] => 175\n    [14] => 184\n    [15] => 212\n    [16] => 216\n    [17] => 222\n    [18] => 224\n    [19] => 244\n    [20] => 248\n    [21] => 264\n    [22] => 288\n    [23] => 312\n    [24] => 315\n    [25] => 324\n    [26] => 333\n    [27] => 336\n    [28] => 366\n    [29] => 384\n    [30] => 396\n    [31] => 412\n    [32] => 424\n    [33] => 432\n    [34] => 444\n    [35] => 448\n    [36] => 488\n    [37] => 515\n    [38] => 555\n    [39] => 612\n    [40] => 624\n    [41] => 636\n    [42] => 648\n    [43] => 666\n    [44] => 672\n    [45] => 728\n    [46] => 735\n    [47] => 777\n    [48] => 784\n    [49] => 816\n    [50] => 824\n    [51] => 848\n    [52] => 864\n    [53] => 888\n    [54] => 936\n    [55] => 999\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = intval(readline('Enter start number: '));\n$endnum = intval(readline('Enter end number: '));\n$result = divisible_by_digits($startnum, $endnum);\necho implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmp5ll0is4f.php:21\nStack trace:\n#0 {main}\n  thrown in /tmp/tmp5ll0is4f.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach($digits as $digit) {\n            if($digit == 0) {\n                $divisible = false;\n                break;\n            }\n            if($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\necho implode(', ', divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22, 24, 33, 36, 44, 48, 55, 66, 77, 88, 99",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $flag = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\nprint_r($result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpwysv_9po.php:9\nStack trace:\n#0 /tmp/tmpwysv_9po.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmpwysv_9po.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $i);\n        }\n    }\n    return $result;\n}\n\necho \"Divisible by digits: \";\nprint_r(divisible_by_digits(1, 100));\n\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "Divisible by digits: \nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpudxd3x_z.php:9\nStack trace:\n#0 /tmp/tmpudxd3x_z.php(22): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpudxd3x_z.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n\t$arr = [];\n\tfor ($i = $startnum; $i <= $endnum; $i++) {\n\t\t$digits = str_split($i);\n\t\t$divisible = true;\n\t\tforeach ($digits as $digit) {\n\t\t\tif ($i % $digit != 0) {\n\t\t\t\t$divisible = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ($divisible) {\n\t\t\t$arr[] = $i;\n\t\t}\n\t}\n\treturn $arr;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp8cebop98.php:9\nStack trace:\n#0 /tmp/tmp8cebop98.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp8cebop98.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by digits: \" . implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpt24x4ti3.php:9\nStack trace:\n#0 /tmp/tmpt24x4ti3.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpt24x4ti3.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by its digits: \";\necho implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp8qryxxw8.php:9\nStack trace:\n#0 /tmp/tmp8qryxxw8.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmp8qryxxw8.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \";\necho implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpxi0a9ouv.php:9\nStack trace:\n#0 /tmp/tmpxi0a9ouv.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpxi0a9ouv.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum that are divisible by their digits: \";\necho implode(\", \", $result);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpyijdcssl.php:9\nStack trace:\n#0 /tmp/tmpyijdcssl.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmpyijdcssl.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $arr = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $flag = 1;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0) {\n                $flag = 0;\n                break;\n            }\n            if ($i % $digit != 0) {\n                $flag = 0;\n                break;\n            }\n            $num = $num / 10;\n        }\n        if ($flag == 1) {\n            $arr[] = $i;\n        }\n    }\n    return $arr;\n}\n\n$startnum = 10;\n$endnum = 100;\n$arr = divisible_by_digits($startnum, $endnum);\nprint_r($arr);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nDeprecated: Implicit conversion from float 1.1 to int loses precision in /tmp/tmp3q3yyxk5.php on line 9\n\nDeprecated: Implicit conversion from float 0.11000000000000001 to int loses precision in /tmp/tmp3q3yyxk5.php on line 9\n\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmp3q3yyxk5.php on line 9\n\nDeprecated: Implicit conversion from float 0.12 to int loses precision in /tmp/tmp3q3yyxk5.php on line 9\n\nDeprecated: Implicit conversion from float 1.5 to int loses precision in /tmp/tmp3q3yyxk5.php on line 9\n\nDeprecated: Implicit conversion from float 0.15 to int loses precision in /tmp/tmp3q3yyxk5.php on line 9\n\nDeprecated: Implicit conversion from float 2.1 to int loses precision in /tmp/tmp3q3yyxk5.php on line 9\n\nDeprecated: Implicit conversion from float 2.2 to int loses precision in /tmp/tmp3q3yyxk5.php on line 9\n\nDeprecated: Implicit conversion from float 0.22000000000000003 to int loses precision in /tmp/tmp3q3yyxk5.php on line 9\n\nDeprecated: Implicit conversion from float 2",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n\t$result = array();\n\tfor ($i = $startnum; $i <= $endnum; $i++) {\n\t\t$digits = str_split($i);\n\t\t$divisible = true;\n\t\tforeach ($digits as $digit) {\n\t\t\tif ($i % $digit != 0) {\n\t\t\t\t$divisible = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ($divisible) {\n\t\t\tarray_push($result, $i);\n\t\t}\n\t}\n\treturn $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by digits: \" . implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpihax6n_o.php:9\nStack trace:\n#0 /tmp/tmpihax6n_o.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpihax6n_o.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpxasi1ebn.php:9\nStack trace:\n#0 /tmp/tmpxasi1ebn.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpxasi1ebn.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        if (divisible_by_digits_check($i)) {\n            array_push($result, $i);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function divisible_by_digits_check() in /tmp/tmplfa7es2w.php:6\nStack trace:\n#0 /tmp/tmplfa7es2w.php(14): divisible_by_digits(1, 22)\n#1 /tmp/tmplfa7es2w.php(18): candidate(1, 22)\n#2 /tmp/tmplfa7es2w.php(23): test()\n#3 {main}\n  thrown in /tmp/tmplfa7es2w.php on line 6\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $arr = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $digits = str_split($num);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($num % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $arr[] = $num;\n        }\n    }\n    return $arr;\n}\n\nprint_r(divisible_by_digits(1, 100));\n\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpla6xb2jn.php:10\nStack trace:\n#0 /tmp/tmpla6xb2jn.php(22): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpla6xb2jn.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $arr = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $arr[] = $i;\n        }\n    }\n    return $arr;\n}\n\nprint_r(divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp3auv31a9.php:9\nStack trace:\n#0 /tmp/tmp3auv31a9.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp3auv31a9.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach($digits as $digit) {\n            if($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum that are divisible by every digit it contains: \";\necho implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmphhze8m6v.php:9\nStack trace:\n#0 /tmp/tmphhze8m6v.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmphhze8m6v.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 500;\n$result = divisible_by_digits($startnum, $endnum);\necho \"The numbers between $startnum and $endnum that are divisible by every digit they contain are: \";\necho implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpyzeiolxr.php:9\nStack trace:\n#0 /tmp/tmpyzeiolxr.php(23): divisible_by_digits(100, 500)\n#1 {main}\n  thrown in /tmp/tmpyzeiolxr.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $arr = [];\n    for($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach($digits as $digit) {\n            if($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if($divisible) {\n            $arr[] = $i;\n        }\n    }\n    return $arr;\n}\n\nprint_r(divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp11po0qop.php:9\nStack trace:\n#0 /tmp/tmp11po0qop.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp11po0qop.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp7x6v0qvc.php:9\nStack trace:\n#0 /tmp/tmp7x6v0qvc.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp7x6v0qvc.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($digit == 0) {\n                $is_divisible = false;\n                break;\n            }\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = intval(readline(\"Enter start number: \"));\n$endnum = intval(readline(\"Enter end number: \"));\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers divisible by digits: \" . implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmp4xachz5v.php:25\nStack trace:\n#0 {main}\n  thrown in /tmp/tmp4xachz5v.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum which are divisible by every digit it contains: \";\necho implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpbvcy4ano.php:9\nStack trace:\n#0 /tmp/tmpbvcy4ano.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmpbvcy4ano.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));\nprint_r(divisible_by_digits(1000, 2000));\nprint_r(divisible_by_digits(10000, 20000));\nprint_r(divisible_by_digits(100000, 200000));\nprint_r(divisible_by_digits(1000000, 2000000));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp8vodo7h6.php:9\nStack trace:\n#0 /tmp/tmp8vodo7h6.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp8vodo7h6.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum which are divisible by all digits they contain: \" . implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpt85wke1o.php:9\nStack trace:\n#0 /tmp/tmpt85wke1o.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpt85wke1o.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $digits = [];\n        while ($num > 0) {\n            $digits[] = $num % 10;\n            $num = floor($num / 10);\n        }\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($digit == 0 || $i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum which are divisible by their digits: \" . implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "Numbers between 100 and 1000 which are divisible by their digits: 111, 112, 115, 122, 124, 126, 128, 132, 135, 144, 155, 162, 168, 175, 184, 212, 216, 222, 224, 244, 248, 264, 288, 312, 315, 324, 333, 336, 366, 384, 396, 412, 424, 432, 444, 448, 488, 515, 555, 612, 624, 636, 648, 666, 672, 728, 735, 777, 784, 816, 824, 848, 864, 888, 936, 999",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($digit == 0) {\n                $is_divisible = false;\n                break;\n            }\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $i);\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \" . implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "Numbers between 100 and 1000 divisible by every digit it contains: 111, 112, 115, 122, 124, 126, 128, 132, 135, 144, 155, 162, 168, 175, 184, 212, 216, 222, 224, 244, 248, 264, 288, 312, 315, 324, 333, 336, 366, 384, 396, 412, 424, 432, 444, 448, 488, 515, 555, 612, 624, 636, 648, 666, 672, 728, 735, 777, 784, 816, 824, 848, 864, 888, 936, 999",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\necho \"<pre>\";\nprint_r(divisible_by_digits(1, 100));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "<pre>\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpbe6yas5n.php:9\nStack trace:\n#0 /tmp/tmpbe6yas5n.php(22): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpbe6yas5n.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $numbers = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $numbers[] = $i;\n        }\n    }\n    return $numbers;\n}\n\necho \"<pre>\";\nprint_r(divisible_by_digits(1, 100));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "<pre>\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmppzlatz9e.php:9\nStack trace:\n#0 /tmp/tmppzlatz9e.php(22): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmppzlatz9e.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\nprint_r($result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp6tj58nfu.php:9\nStack trace:\n#0 /tmp/tmp6tj58nfu.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp6tj58nfu.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $arr = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($arr, $i);\n        }\n    }\n    return $arr;\n}\n\necho \"<pre>\";\nprint_r(divisible_by_digits(1, 100));\necho \"</pre>\";\n\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "<pre>\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp0xkss6_h.php:9\nStack trace:\n#0 /tmp/tmp0xkss6_h.php(22): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp0xkss6_h.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\nprint_r($result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp6tj58nfu.php:9\nStack trace:\n#0 /tmp/tmp6tj58nfu.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp6tj58nfu.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $i);\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n\n$result = divisible_by_digits($startnum, $endnum);\n\necho \"Numbers between $startnum and $endnum that are divisible by their digits: \";\necho implode(\", \", $result);\necho \"\\n\";\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpn31qa552.php:9\nStack trace:\n#0 /tmp/tmpn31qa552.php(24): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpn31qa552.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum which are divisible by every digit it contains: \" . implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpbey9kjqc.php:9\nStack trace:\n#0 /tmp/tmpbey9kjqc.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmpbey9kjqc.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n\t$result = array();\n\tfor ($i = $startnum; $i <= $endnum; $i++) {\n\t\t$digits = str_split($i);\n\t\t$divisible = true;\n\t\tforeach ($digits as $digit) {\n\t\t\tif ($i % $digit != 0) {\n\t\t\t\t$divisible = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ($divisible) {\n\t\t\t$result[] = $i;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\nprint_r($result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpmcd4dotm.php:9\nStack trace:\n#0 /tmp/tmpmcd4dotm.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpmcd4dotm.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));\n\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpilfyg30r.php:9\nStack trace:\n#0 /tmp/tmpilfyg30r.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpilfyg30r.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $isDivisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $isDivisible = false;\n                break;\n            }\n        }\n        if ($isDivisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmplk9pmyxr.php:9\nStack trace:\n#0 /tmp/tmplk9pmyxr.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmplk9pmyxr.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $numbers = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($numbers, $i);\n        }\n    }\n    return $numbers;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$numbers = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \";\necho implode(\", \", $numbers);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpvto8dffp.php:9\nStack trace:\n#0 /tmp/tmpvto8dffp.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmpvto8dffp.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($digit == 0) {\n                $divisible = false;\n                break;\n            }\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by the digits it contains: \" . implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "Numbers between 1 and 100 divisible by the digits it contains: 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22, 24, 33, 36, 44, 48, 55, 66, 77, 88, 99",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n\t$result = [];\n\tfor ($i = $startnum; $i <= $endnum; $i++) {\n\t\t$digits = str_split($i);\n\t\t$divisible = true;\n\t\tforeach ($digits as $digit) {\n\t\t\tif ($i % $digit !== 0) {\n\t\t\t\t$divisible = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ($divisible) {\n\t\t\t$result[] = $i;\n\t\t}\n\t}\n\treturn $result;\n}\n\necho '<pre>';\nprint_r(divisible_by_digits(1, 100));\necho '</pre>';\n\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "<pre>\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpni9ekes0.php:9\nStack trace:\n#0 /tmp/tmpni9ekes0.php(22): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpni9ekes0.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpxasi1ebn.php:9\nStack trace:\n#0 /tmp/tmpxasi1ebn.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpxasi1ebn.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($digit == 0) {\n                $is_divisible = false;\n                break;\n            }\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum which are divisible by the digits they contain: \" . implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "Numbers between 1 and 100 which are divisible by the digits they contain: 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22, 24, 33, 36, 44, 48, 55, 66, 77, 88, 99",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit !== 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n\n$result = divisible_by_digits($startnum, $endnum);\n\necho \"Numbers between $startnum and $endnum that are divisible by their digits: \" . implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp3_f7qtu7.php:9\nStack trace:\n#0 /tmp/tmp3_f7qtu7.php(24): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmp3_f7qtu7.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpt05_ls6b.php:9\nStack trace:\n#0 /tmp/tmpt05_ls6b.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpt05_ls6b.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\necho \"Numbers between $startnum and $endnum divisible by digits: \";\necho implode(', ', divisible_by_digits($startnum, $endnum));\necho \"\\n\";\n\n$startnum = 100;\n$endnum = 1000;\necho \"Numbers between $startnum and $endnum divisible by digits: \";\necho implode(', ', divisible_by_digits($startnum, $endnum));\necho \"\\n\";\n\n$startnum = 1000;\n$endnum = 10000;\necho \"Numbers between $startnum and $endnum divisible by digits: \";\necho implode(', ', divisible_by_digits($startnum, $endnum));\necho \"\\n\";\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "Numbers between 1 and 100 divisible by digits: \nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpy8_2a8hh.php:9\nStack trace:\n#0 /tmp/tmpy8_2a8hh.php(24): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpy8_2a8hh.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\necho '<pre>';\nprint_r(divisible_by_digits(1, 100));\necho '</pre>';\n\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "<pre>\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpcw5k4hb4.php:9\nStack trace:\n#0 /tmp/tmpcw5k4hb4.php(22): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpcw5k4hb4.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $numbers = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit !== 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $numbers[] = $i;\n        }\n    }\n    return $numbers;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpnznjqn6t.php:9\nStack trace:\n#0 /tmp/tmpnznjqn6t.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpnznjqn6t.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\necho \"Divisible by digits: \" . implode(\", \", divisible_by_digits(1, 100)) . \"<br>\";\n\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp3zqruoxf.php:9\nStack trace:\n#0 /tmp/tmp3zqruoxf.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp3zqruoxf.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$divisible_by_digits = divisible_by_digits($startnum, $endnum);\necho \"The numbers between $startnum and $endnum which are divisible by the digits they contain are: \" . implode(\", \", $divisible_by_digits);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp2_rvhphi.php:9\nStack trace:\n#0 /tmp/tmp2_rvhphi.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp2_rvhphi.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $arr = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($arr, $i);\n        }\n    }\n    return $arr;\n}\n\nprint_r(divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp80jifvgj.php:9\nStack trace:\n#0 /tmp/tmp80jifvgj.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp80jifvgj.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpxasi1ebn.php:9\nStack trace:\n#0 /tmp/tmpxasi1ebn.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpxasi1ebn.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \" . implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp24psyzk_.php:9\nStack trace:\n#0 /tmp/tmp24psyzk_.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp24psyzk_.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp7x6v0qvc.php:9\nStack trace:\n#0 /tmp/tmp7x6v0qvc.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp7x6v0qvc.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpxasi1ebn.php:9\nStack trace:\n#0 /tmp/tmpxasi1ebn.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpxasi1ebn.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \";\necho implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpxi0a9ouv.php:9\nStack trace:\n#0 /tmp/tmpxi0a9ouv.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpxi0a9ouv.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \";\necho implode(', ', divisible_by_digits($startnum, $endnum));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "Numbers between 100 and 1000 divisible by every digit it contains: \nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpipirdgrm.php:9\nStack trace:\n#0 /tmp/tmpipirdgrm.php(25): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmpipirdgrm.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \";\necho implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp_cnac981.php:9\nStack trace:\n#0 /tmp/tmp_cnac981.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmp_cnac981.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $numbers = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $numbers[] = $i;\n        }\n    }\n    return $numbers;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$numbers = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \" . implode(', ', $numbers);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpy1c7r8gn.php:9\nStack trace:\n#0 /tmp/tmpy1c7r8gn.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmpy1c7r8gn.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers from $startnum to $endnum divisible by every digit it contains: \" . implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpubd0hmrv.php:9\nStack trace:\n#0 /tmp/tmpubd0hmrv.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpubd0hmrv.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by digits: \" . implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpuh6y6w_5.php:9\nStack trace:\n#0 /tmp/tmpuh6y6w_5.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpuh6y6w_5.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum which are divisible by the digits they contain: \";\necho implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpdpqp6i9g.php:9\nStack trace:\n#0 /tmp/tmpdpqp6i9g.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpdpqp6i9g.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $i);\n        }\n    }\n    return $result;\n}\n\n$startnum = intval(readline('Enter start number: '));\n$endnum = intval(readline('Enter end number: '));\n$result = divisible_by_digits($startnum, $endnum);\necho 'Result: ' . implode(', ', $result) . PHP_EOL;\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmpp6f9t9jm.php:21\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpp6f9t9jm.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \";\necho implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpxi0a9ouv.php:9\nStack trace:\n#0 /tmp/tmpxi0a9ouv.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpxi0a9ouv.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $i);\n        }\n    }\n    return $result;\n}\n\n$startnum = intval(fgets(STDIN));\n$endnum = intval(fgets(STDIN));\n$result = divisible_by_digits($startnum, $endnum);\necho implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp_pi6mjl4.php:9\nStack trace:\n#0 /tmp/tmp_pi6mjl4.php(23): divisible_by_digits(0, 0)\n#1 {main}\n  thrown in /tmp/tmp_pi6mjl4.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit !== 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\necho implode(', ', divisible_by_digits(1, 100));\necho '<br>';\necho implode(', ', divisible_by_digits(100, 1000));\necho '<br>';\necho implode(', ', divisible_by_digits(1000, 10000));\necho '<br>';\necho implode(', ', divisible_by_digits(10000, 100000));\necho '<br>';\necho implode(', ', divisible_by_digits(100000, 1000000));\necho '<br>';\necho implode(', ', divisible_by_digits(1000000, 10000000));\necho '<br>';\necho implode(', ', divisible_by_digits(10000000, 100000000));\necho '<br>';\necho implode(', ', divisible_by_digits(100000000, 1000000000));\necho '<br>';\necho implode(', ', divisible_by_digits(1000000000, 10000000000));\necho '<br>';\necho implode(', ', divisible_by_digits(10000000000, 100000000000));\necho '<br>';\necho implode(', ', divisible_by_digits(100000000000, 1000000000000));\necho '<br>';\necho implode(', ', divisible_by_digits(1000000000000, 10000000000000));\necho '<br>';\necho implode(', ', divisible_by_digits(10000000000000, 100000000000000));\necho '<br>';\necho implode(', ', divisible_by_digits(100000000000000\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp0cbe35z7.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpxasi1ebn.php:9\nStack trace:\n#0 /tmp/tmpxasi1ebn.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpxasi1ebn.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum that are divisible by every digit it contains: \";\necho implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmplek_rx1f.php:9\nStack trace:\n#0 /tmp/tmplek_rx1f.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmplek_rx1f.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers from $startnum to $endnum divisible by digits: \" . implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp60u2rleq.php:9\nStack trace:\n#0 /tmp/tmp60u2rleq.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp60u2rleq.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\necho \"<pre>\";\nprint_r(divisible_by_digits(1, 100));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "<pre>\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp5dbkrm3_.php:9\nStack trace:\n#0 /tmp/tmp5dbkrm3_.php(22): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp5dbkrm3_.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpxasi1ebn.php:9\nStack trace:\n#0 /tmp/tmpxasi1ebn.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpxasi1ebn.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n\necho \"Numbers between $startnum and $endnum that are divisible by their digits: \";\necho implode(\", \", divisible_by_digits($startnum, $endnum));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "Numbers between 1 and 100 that are divisible by their digits: \nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpzfdn2ypg.php:9\nStack trace:\n#0 /tmp/tmpzfdn2ypg.php(25): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpzfdn2ypg.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $arr = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $arr[] = $i;\n        }\n    }\n    return $arr;\n}\n\nprint_r(divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp3auv31a9.php:9\nStack trace:\n#0 /tmp/tmp3auv31a9.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp3auv31a9.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\necho '<pre>';\nprint_r(divisible_by_digits(1, 100));\necho '</pre>';\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "<pre>\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpck_rulhr.php:9\nStack trace:\n#0 /tmp/tmpck_rulhr.php(22): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpck_rulhr.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\necho \"<pre>\";\nprint_r(divisible_by_digits(1, 100));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(divisible_by_digits(1000, 10000));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "<pre>\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp2_ssyqwe.php:9\nStack trace:\n#0 /tmp/tmp2_ssyqwe.php(22): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp2_ssyqwe.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $arr = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $flag = 1;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0) {\n                $flag = 0;\n                break;\n            }\n            if ($i % $digit != 0) {\n                $flag = 0;\n                break;\n            }\n            $num = $num / 10;\n        }\n        if ($flag == 1) {\n            array_push($arr, $i);\n        }\n    }\n    return $arr;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$arr = divisible_by_digits($startnum, $endnum);\nprint_r($arr);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "\nDeprecated: Implicit conversion from float 10.1 to int loses precision in /tmp/tmpfzytl0rp.php on line 9\n\nDeprecated: Implicit conversion from float 10.2 to int loses precision in /tmp/tmpfzytl0rp.php on line 9\n\nDeprecated: Implicit conversion from float 10.4 to int loses precision in /tmp/tmpfzytl0rp.php on line 9\n\nDeprecated: Implicit conversion from float 10.5 to int loses precision in /tmp/tmpfzytl0rp.php on line 9\n\nDeprecated: Implicit conversion from float 11.1 to int loses precision in /tmp/tmpfzytl0rp.php on line 9\n\nDeprecated: Implicit conversion from float 1.1099999999999999 to int loses precision in /tmp/tmpfzytl0rp.php on line 9\n\nDeprecated: Implicit conversion from float 0.11099999999999999 to int loses precision in /tmp/tmpfzytl0rp.php on line 9\n\nDeprecated: Implicit conversion from float 11.2 to int loses precision in /tmp/tmpfzytl0rp.php on line 9\n\nDeprecated: Implicit conversion from float 1.1199999999999999 to int loses precision in /tmp/tmpfzytl0rp.php on line 9\n\nDeprecated: Implicit conversion from float 0.11199999999999999 to int loses precision in /tmp/tmpfzytl0rp.php on line 9\n\nDeprecated: Implicit conversion from float 11.5 to int loses precision in /tmp/tmpfzytl0rp.php on line 9\n\nDeprecated: Implicit conversion from float 1.15 to int loses precision in /tmp/tmpfzytl0rp.php on line 9\n\nDeprecated: Implicit conversion from float 0.11499999999999999 to int loses precision in /tmp/tmpfzytl0rp.php on line 9\n\nDeprecated: Implicit conversion from float 12.1 to int loses precision in /tmp/tmpfzytl0rp.php on line 9\n\nDeprecated: Implicit conversion from float 12.2 to int loses precision in /tmp/tmpfzytl0rp.php on line 9\n\nDeprecated: Implicit conversion from float 1.22 to int loses precision in /tmp/tmpfzytl0rp.php on line 9\n\nDeprecated: Implicit conversion from float 0.122 to int loses precision in /tmp/tmpfzytl0rp.php on line 9\n\nDeprecated: Implicit conversion from float 12.3 to int loses precision in /tmp/tmpfzytl0rp.php on line 9\n\nDeprecated: Implicit conversion from float 12.4 to int loses prec",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $arr = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $arr[] = $i;\n        }\n    }\n    return $arr;\n}\n\nprint_r(divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp3auv31a9.php:9\nStack trace:\n#0 /tmp/tmp3auv31a9.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp3auv31a9.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\necho '<pre>';\nprint_r(divisible_by_digits(1, 100));\necho '</pre>';\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "<pre>\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpzm9thpyv.php:9\nStack trace:\n#0 /tmp/tmpzm9thpyv.php(22): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpzm9thpyv.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n\t$numbers = [];\n\tfor ($i = $startnum; $i <= $endnum; $i++) {\n\t\t$digits = str_split($i);\n\t\t$divisible = true;\n\t\tforeach ($digits as $digit) {\n\t\t\tif ($i % $digit != 0) {\n\t\t\t\t$divisible = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ($divisible) {\n\t\t\t$numbers[] = $i;\n\t\t}\n\t}\n\treturn $numbers;\n}\n\nprint_r(divisible_by_digits(1, 100));\n\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp7ik14rtj.php:9\nStack trace:\n#0 /tmp/tmp7ik14rtj.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp7ik14rtj.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \";\necho implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpqpuerqhe.php:9\nStack trace:\n#0 /tmp/tmpqpuerqhe.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpqpuerqhe.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpxasi1ebn.php:9\nStack trace:\n#0 /tmp/tmpxasi1ebn.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpxasi1ebn.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n\t$result = array();\n\tfor ($i = $startnum; $i <= $endnum; $i++) {\n\t\t$digits = str_split($i);\n\t\t$divisible = true;\n\t\tforeach ($digits as $digit) {\n\t\t\tif ($i % $digit != 0) {\n\t\t\t\t$divisible = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ($divisible) {\n\t\t\tarray_push($result, $i);\n\t\t}\n\t}\n\treturn $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers from $startnum to $endnum divisible by digits: \" . implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp74xsnjhl.php:9\nStack trace:\n#0 /tmp/tmp74xsnjhl.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp74xsnjhl.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit !== 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\necho implode(', ', divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpxtt28r4d.php:9\nStack trace:\n#0 /tmp/tmpxtt28r4d.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpxtt28r4d.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp7x6v0qvc.php:9\nStack trace:\n#0 /tmp/tmp7x6v0qvc.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp7x6v0qvc.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($digit != 0 && $i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\necho \"Divisible by digits: \" . implode(', ', divisible_by_digits(1, 100)) . \"\\n\";\n\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "Divisible by digits: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 20, 22, 24, 30, 33, 36, 40, 44, 48, 50, 55, 60, 66, 70, 77, 80, 88, 90, 99, 100\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0le7bsk5.php:28\nStack trace:\n#0 /tmp/tmp0le7bsk5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp0le7bsk5.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\nprint_r($result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpir7ff8un.php:9\nStack trace:\n#0 /tmp/tmpir7ff8un.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpir7ff8un.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpxasi1ebn.php:9\nStack trace:\n#0 /tmp/tmpxasi1ebn.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpxasi1ebn.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $i);\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpeksboay1.php:9\nStack trace:\n#0 /tmp/tmpeksboay1.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpeksboay1.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \";\necho implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmptcs2ya9x.php:9\nStack trace:\n#0 /tmp/tmptcs2ya9x.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmptcs2ya9x.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers from $startnum to $endnum that are divisible by their digits: \" . implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpftwunhsv.php:9\nStack trace:\n#0 /tmp/tmpftwunhsv.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpftwunhsv.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by digits: \" . implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpuh6y6w_5.php:9\nStack trace:\n#0 /tmp/tmpuh6y6w_5.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpuh6y6w_5.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\nprint_r($result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp6tj58nfu.php:9\nStack trace:\n#0 /tmp/tmp6tj58nfu.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp6tj58nfu.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $i);\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 500;\n$result = divisible_by_digits($startnum, $endnum);\necho \"The numbers between $startnum and $endnum that are divisible by their digits are: \" . implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpz6d5ns7r.php:9\nStack trace:\n#0 /tmp/tmpz6d5ns7r.php(23): divisible_by_digits(100, 500)\n#1 {main}\n  thrown in /tmp/tmpz6d5ns7r.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp7x6v0qvc.php:9\nStack trace:\n#0 /tmp/tmp7x6v0qvc.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp7x6v0qvc.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $nums = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $nums[] = $i;\n        }\n    }\n    return $nums;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$nums = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \" . implode(', ', $nums);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp0qxe7ks3.php:9\nStack trace:\n#0 /tmp/tmp0qxe7ks3.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmp0qxe7ks3.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $arr = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $flag = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($arr, $i);\n        }\n    }\n    return $arr;\n}\n\n$startnum = intval(readline('Enter start number: '));\n$endnum = intval(readline('Enter end number: '));\n$arr = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by digits: \";\nforeach ($arr as $num) {\n    echo \"$num \";\n}\necho \"\\n\";\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmp4hnc52m8.php:21\nStack trace:\n#0 {main}\n  thrown in /tmp/tmp4hnc52m8.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $flag = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by their digits: \" . implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpexv1v0dk.php:9\nStack trace:\n#0 /tmp/tmpexv1v0dk.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmpexv1v0dk.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \" . implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpydqj5nm5.php:9\nStack trace:\n#0 /tmp/tmpydqj5nm5.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmpydqj5nm5.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum which are divisible by every digit it contains: \";\necho implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpolq7prmh.php:9\nStack trace:\n#0 /tmp/tmpolq7prmh.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmpolq7prmh.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));\nprint_r(divisible_by_digits(1000, 10000));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpsthx5jux.php:9\nStack trace:\n#0 /tmp/tmpsthx5jux.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpsthx5jux.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \" . implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpvk3knbjh.php:9\nStack trace:\n#0 /tmp/tmpvk3knbjh.php(23): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpvk3knbjh.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpaqo3403l.php:9\nStack trace:\n#0 /tmp/tmpaqo3403l.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpaqo3403l.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \" . implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpydqj5nm5.php:9\nStack trace:\n#0 /tmp/tmpydqj5nm5.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmpydqj5nm5.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($digit == 0) {\n                $is_divisible = false;\n                break;\n            }\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum that are divisible by their digits: \" . implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "Numbers between 1 and 100 that are divisible by their digits: 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22, 24, 33, 36, 44, 48, 55, 66, 77, 88, 99",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit !== 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \" . implode(\", \", $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp_ra8f2qd.php:9\nStack trace:\n#0 /tmp/tmp_ra8f2qd.php(23): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmp_ra8f2qd.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $arr = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $flag = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            $arr[] = $i;\n        }\n    }\n    return $arr;\n}\n\nprint_r(divisible_by_digits(1, 100));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp5tpry5ma.php:9\nStack trace:\n#0 /tmp/tmp5tpry5ma.php(21): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmp5tpry5ma.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $arr = [];\n    for($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $digits = str_split($num);\n        $flag = true;\n        foreach($digits as $digit) {\n            if($num % $digit != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if($flag) {\n            array_push($arr, $num);\n        }\n    }\n    return $arr;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum which are divisible by every digit it contains are: \";\nforeach($result as $num) {\n    echo \"$num \";\n}\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp8c_br37o.php:10\nStack trace:\n#0 /tmp/tmp8c_br37o.php(24): divisible_by_digits(100, 1000)\n#1 {main}\n  thrown in /tmp/tmp8c_br37o.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\necho \"The numbers between $startnum and $endnum that are divisible by the digits they contain are: \";\necho implode(\", \", divisible_by_digits($startnum, $endnum));\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "The numbers between 1 and 100 that are divisible by the digits they contain are: \nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpativ2vbg.php:9\nStack trace:\n#0 /tmp/tmpativ2vbg.php(24): divisible_by_digits(1, 100)\n#1 {main}\n  thrown in /tmp/tmpativ2vbg.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($digit == 0) {\n                $divisible = false;\n                break;\n            }\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \" . implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "Numbers between 1 and 100 divisible by every digit it contains: 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22, 24, 33, 36, 44, 48, 55, 66, 77, 88, 99",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = intval(readline('Enter start number: '));\n$endnum = intval(readline('Enter end number: '));\n$result = divisible_by_digits($startnum, $endnum);\necho 'Result: ' . implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122603,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmprlpgf_vp.php:21\nStack trace:\n#0 {main}\n  thrown in /tmp/tmprlpgf_vp.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = intval(readline('Enter start number: '));\n$endnum = intval(readline('Enter end number: '));\n$result = divisible_by_digits($startnum, $endnum);\necho implode(', ', $result);\nfunction candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122602,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmp5ll0is4f.php:21\nStack trace:\n#0 {main}\n  thrown in /tmp/tmp5ll0is4f.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
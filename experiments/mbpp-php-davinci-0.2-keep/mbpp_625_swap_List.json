{
  "name": "mbpp_625_swap_List",
  "language": "php",
  "prompt": "<?php\n// Write a python function to interchange the first and last element in a given list.\nfunction swap_List($newList) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_625_swap_List.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return swap_List(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== array(3, 2, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 4)) !== array(4, 2, 3, 4, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6)) !== array(6, 5, 4)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = [1, 2, 3, 4, 5];\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $first_element = $newList[0];\n    $last_element = end($newList);\n    $newList[0] = $last_element;\n    $newList[count($newList)-1] = $first_element;\n    return $newList;\n}\n$newList = array(1,2,3,4,5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\necho \"Original List: \";\necho implode(\", \", $newList);\necho \"\\n\";\necho \"New List: \";\necho implode(\", \", swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\necho \"Original List: \";\necho implode(', ', $newList);\necho \"\\n\";\necho \"New List: \";\necho implode(', ', swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n\n$newList = array(1,2,3,4,5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\necho \"Original List :\\n\";\necho implode(', ',$newList );\necho \"\\nNew List after swapping first and last element :\\n\";\necho implode(', ',swap_List($newList)).\"\\n\";",
    "    $first = $newList[0];\n    $last = end($newList);\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = [1, 2, 3, 4, 5];\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $newList[0] = $newList[count($newList) - 1];\n    $newList[count($newList) - 1] = $newList[0];\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\n$result = swap_List($newList);\necho implode(', ', $result);",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = [1, 2, 3, 4, 5];\necho \"Original List: \";\necho implode(\", \", $newList);\necho \"\\n\";\necho \"New List: \";\necho implode(\", \", swap_List($newList));",
    "    $first_element = $newList[0];\n    $last_element = end($newList);\n    $newList[0] = $last_element;\n    $newList[count($newList) - 1] = $first_element;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));\n",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\n$newList = swap_List($newList);\nprint_r($newList);",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$newList = swap_List($newList);\nprint_r($newList);",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));\n",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\necho \"Original List :\\n\";\necho implode(', ',$newList );\necho \"\\nNew List after swapping first and last element:\\n\";\necho implode(', ',swap_List($newList)).\"\\n\";",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\necho implode(',', swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\n$newList = swap_List($newList);\nprint_r($newList);",
    "    $newList[0] = $newList[count($newList) - 1];\n    $newList[count($newList) - 1] = $newList[0];\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\n$newList = swap_List($newList);\necho implode(', ', $newList);",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = [1, 2, 3, 4, 5];\necho \"Original List: \";\necho implode(', ', $newList);\necho \"\\n\";\necho \"New List: \";\necho implode(', ', swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $temp = $newList[0];\n    $newList[0] = $newList[count($newList)-1];\n    $newList[count($newList)-1] = $temp;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\necho \"Original List: \";\necho implode(\", \", $newList);\necho \"\\n\";\necho \"New List: \";\necho implode(\", \", swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $newList[0] = $newList[count($newList) - 1];\n    $newList[count($newList) - 1] = $newList[0];\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = [1, 2, 3, 4, 5];\necho implode(', ', swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));\n",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\necho \"Original List: \";\necho implode(\", \", $newList);\necho \"<br>\";\necho \"Swapped List: \";\necho implode(\", \", swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = [1, 2, 3, 4, 5];\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = array_shift($newList);\n    $last = array_pop($newList);\n    array_unshift($newList, $last);\n    array_push($newList, $first);\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $newList[0] = $newList[count($newList) - 1];\n    $newList[count($newList) - 1] = $newList[0];\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5,6,7,8,9,10);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\necho \"Original List: \";\necho implode(', ', $newList);\necho \"\\n\";\necho \"Swapped List: \";\necho implode(', ', swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5,6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $newList[0] = $newList[count($newList) - 1];\n    $newList[count($newList) - 1] = $newList[0];\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $length = count($newList);\n    $temp = $newList[0];\n    $newList[0] = $newList[$length - 1];\n    $newList[$length - 1] = $temp;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5,6,7,8,9);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(swap_List($newList));",
    "    $first_element = $newList[0];\n    $last_element = $newList[count($newList) - 1];\n    $newList[0] = $last_element;\n    $newList[count($newList) - 1] = $first_element;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = [1, 2, 3, 4, 5, 6];\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\n$result = swap_List($newList);\nprint_r($result);",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\n$newList = swap_List($newList);\nprint_r($newList);",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first_element = $newList[0];\n    $last_element = $newList[count($newList) - 1];\n    $newList[0] = $last_element;\n    $newList[count($newList) - 1] = $first_element;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\n$result = swap_List($newList);\nprint_r($result);",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5,6,7,8,9);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5,6,7,8,9,10);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first_element = $newList[0];\n    $last_element = $newList[count($newList) - 1];\n    $newList[0] = $last_element;\n    $newList[count($newList) - 1] = $first_element;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5, 6);\n$result = swap_List($newList);\nprint_r($result);",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5);\necho \"Original List: \";\necho implode(\",\",$newList);\necho \"\\n\";\necho \"New List: \";\necho implode(\",\",swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = end($newList);\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5, 6, 7);\necho \"Original List: \";\necho implode(\", \", $newList);\necho \"\\n\";\necho \"New List: \";\necho implode(\", \", swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5,6,7,8,9);\necho \"Original List: \";\nprint_r($newList);\necho \"<br>\";\necho \"Swapped List: \";\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n\n$newList = array(1,2,3,4,5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6);\n$newList = swap_List($newList);\nprint_r($newList);",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\necho \"Original List: \";\necho implode(\", \", $newList);\necho \"\\n\";\necho \"New List: \";\necho implode(\", \", swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n\n$newList = array(1,2,3,4,5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n\n$newList = array(1,2,3,4,5,6,7,8,9,10);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5,6,7,8,9,10);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $firstElement = $newList[0];\n    $lastElement = $newList[count($newList) - 1];\n    $newList[0] = $lastElement;\n    $newList[count($newList) - 1] = $firstElement;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\n$newList = swap_List($newList);\nprint_r($newList);",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5,6,7,8,9,10);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $firstElement = $newList[0];\n    $lastElement = $newList[count($newList) - 1];\n    $newList[0] = $lastElement;\n    $newList[count($newList) - 1] = $firstElement;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5);\n$newList = swap_List($newList);\necho implode(',', $newList);",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n\n$newList = array(1,2,3,4,5,6,7,8,9);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n\n$newList = array(1,2,3,4,5,6,7,8,9);\n$newList = swap_List($newList);\nprint_r($newList);",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\necho \"Original List: \";\necho implode(', ', $newList);\necho \"\\n\";\necho \"Swapped List: \";\necho implode(', ', swap_List($newList));",
    "    $first_element = $newList[0];\n    $last_element = $newList[count($newList) - 1];\n    $newList[0] = $last_element;\n    $newList[count($newList) - 1] = $first_element;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\n$result = swap_List($newList);\nprint_r($result);",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\n$newList = swap_List($newList);\nprint_r($newList);",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6, 7);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n\n$newList = [1, 2, 3, 4, 5];\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n\n$newList = array(1,2,3,4,5,6,7,8,9);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\necho \"Original List :\\n\";\necho implode(', ', $newList);\necho \"\\nNew List :\\n\";\necho implode(', ', swap_List($newList)) . \"\\n\";",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5);\necho \"Original List: \";\nforeach ($newList as $value) {\n    echo \"$value \";\n}\necho \"\\n\";\necho \"New List: \";\n$newList = swap_List($newList);\nforeach ($newList as $value) {\n    echo \"$value \";\n}",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n\n$newList = array(1,2,3,4,5,6,7,8,9);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\n$newList = swap_List($newList);\nprint_r($newList);",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first_element = $newList[0];\n    $last_element = $newList[count($newList) - 1];\n    $newList[0] = $last_element;\n    $newList[count($newList) - 1] = $first_element;\n    return $newList;\n}\n$newList = array(1,2,3,4,5,6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n\n$newList = array(1,2,3,4,5);\nprint_r(swap_List($newList));\n",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\necho \"Original List: \";\necho implode(\", \", $newList);\necho \"\\n\";\necho \"New List: \";\necho implode(\", \", swap_List($newList));",
    "    $firstElement = $newList[0];\n    $lastElement = $newList[count($newList) - 1];\n    $newList[0] = $lastElement;\n    $newList[count($newList) - 1] = $firstElement;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\n$newList = swap_List($newList);\necho \"New List: \";\nforeach($newList as $value) {\n    echo $value . \" \";\n}",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = end($newList);\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first_element = $newList[0];\n    $last_element = end($newList);\n    $newList[0] = $last_element;\n    $newList[count($newList) - 1] = $first_element;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = end($newList);\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));"
  ]
}
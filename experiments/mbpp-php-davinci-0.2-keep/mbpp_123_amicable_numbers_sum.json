{
  "name": "mbpp_123_amicable_numbers_sum",
  "language": "php",
  "prompt": "<?php\n// Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum($limit) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_123_amicable_numbers_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return amicable_numbers_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(999) !== 504) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9999) !== 31626) { throw new Exception(\"Test failed!\"); }\n    if (candidate(99) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $sum = 0;\n    for ($i = 1; $i <= $limit; $i++) {\n        $sum += amicable_number($i);\n    }\n    return $sum;\n}\n",
    "    $sum = 0;\n    for ($i = 1; $i <= $limit; $i++) {\n        $sum += amicable_number($i);\n    }\n    return $sum;\n}\n",
    "    $sum = 0;\n    for ($i = 1; $i < $limit; $i++) {\n        $sum += amicable_number($i);\n    }\n    return $sum;\n}\n",
    "    $sum = 0;\n    for ($i = 1; $i < $limit; $i++) {\n        $divisors_sum = 0;\n        for ($j = 1; $j < $i; $j++) {\n            if ($i % $j == 0) {\n                $divisors_sum += $j;\n            }\n        }\n        $divisors_sum_2 = 0;\n        for ($j = 1; $j < $divisors_sum; $j++) {\n            if ($divisors_sum % $j == 0) {\n                $divisors_sum_2 += $j;\n            }\n        }\n        if ($divisors_sum_2 == $i && $i != $divisors_sum) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}\n\necho amicable_numbers_sum(10000);",
    "  $sum = 0;\n  for ($i = 1; $i < $limit; $i++) {\n    $a = sum_of_divisors($i);\n    $b = sum_of_divisors($a);\n    if ($b == $i && $a != $b) {\n      $sum += $a + $b;\n    }\n  }\n  return $sum;\n}\n",
    "\t$sum = 0;\n\tfor ($i = 1; $i < $limit; $i++) {\n\t\t$sum += amicable_number($i);\n\t}\n\treturn $sum;\n}\n",
    "\t$sum = 0;\n\tfor ($i = 1; $i < $limit; $i++) {\n\t\t$a = sum_of_divisors($i);\n\t\tif ($a > $i && $i == sum_of_divisors($a)) {\n\t\t\t$sum += $i + $a;\n\t\t}\n\t}\n\treturn $sum;\n}\n",
    "    $sum = 0;\n    for ($i = 1; $i < $limit; $i++) {\n        $sum_of_divisors_i = sum_of_divisors($i);\n        $sum_of_divisors_sum_of_divisors_i = sum_of_divisors($sum_of_divisors_i);\n        if ($sum_of_divisors_sum_of_divisors_i == $i && $sum_of_divisors_i != $i) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}\n",
    "    $sum = 0;\n    for ($i = 1; $i <= $limit; $i++) {\n        $sum += amicable_number_sum($i);\n    }\n    return $sum;\n}\n",
    "    $sum = 0;\n    for ($i = 1; $i < $limit; $i++) {\n        $divisors_sum = sum_of_divisors($i);\n        $divisors_sum_of_divisors = sum_of_divisors($divisors_sum);\n        if ($divisors_sum_of_divisors == $i && $divisors_sum != $i) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}\n",
    "    $sum = 0;\n    for ($i = 1; $i <= $limit; $i++) {\n        $sum += amicable_number($i);\n    }\n    return $sum;\n}\n",
    "    $sum = 0;\n    for ($i = 1; $i < $limit; $i++) {\n        $sum += amicable_number($i);\n    }\n    return $sum;\n}\n",
    "    $sum = 0;\n    for ($i = 1; $i <= $limit; $i++) {\n        $sum += amicable_number($i);\n    }\n    return $sum;\n}\n",
    "    $sum = 0;\n    for ($i = 1; $i < $limit; $i++) {\n        $sum += amicable_number($i);\n    }\n    return $sum;\n}\n",
    "    $sum = 0;\n    for ($i = 1; $i < $limit; $i++) {\n        $sum += amicable_number($i);\n    }\n    return $sum;\n}\n",
    "    $sum = 0;\n    for ($i = 1; $i < $limit; $i++) {\n        $a = sum_of_divisors($i);\n        $b = sum_of_divisors($a);\n        if ($b == $i && $a != $b) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}\n",
    "    $sum = 0;\n    for ($i = 1; $i <= $limit; $i++) {\n        $sum += amicable_number($i);\n    }\n    return $sum;\n}\n",
    "  $sum = 0;\n  for ($i = 1; $i < $limit; $i++) {\n    $sum += amicable_number($i);\n  }\n  return $sum;\n}\n",
    "    $sum = 0;\n    for ($i = 1; $i <= $limit; $i++) {\n        $sum += amicable_number($i);\n    }\n    return $sum;\n}\n",
    "\t$sum = 0;\n\tfor ($i = 1; $i < $limit; $i++) {\n\t\t$divisors = array_sum(get_divisors($i));\n\t\tif ($divisors > $i && $i == array_sum(get_divisors($divisors))) {\n\t\t\t$sum += $i;\n\t\t}\n\t}\n\treturn $sum;\n}\n"
  ]
}
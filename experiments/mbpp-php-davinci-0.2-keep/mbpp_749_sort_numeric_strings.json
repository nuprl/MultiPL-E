{
  "name": "mbpp_749_sort_numeric_strings",
  "language": "php",
  "prompt": "<?php\n// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunction sort_numeric_strings($nums_str) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_749_sort_numeric_strings.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return sort_numeric_strings(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\")) !== array(-500, -12, 0, 4, 7, 12, 45, 100, 200)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\")) !== array(1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\")) !== array(1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $nums = array_map('intval', $nums_str);\n    sort($nums);\n    return array_map('strval', $nums);\n}\n\n$nums_str = ['1', '2', '3', '4', '5', '6', '7', '8', '9'];\nprint_r(sort_numeric_strings($nums_str));\n",
    "    $nums_str = explode(',', $nums_str);\n    $nums_str = array_map('intval', $nums_str);\n    sort($nums_str);\n    return implode(',', $nums_str);\n}\n\necho sort_numeric_strings('1,3,2,5,4');\n",
    "    $nums_int = [];\n    foreach ($nums_str as $num_str) {\n        $nums_int[] = intval($num_str);\n    }\n    sort($nums_int);\n    $nums_str = [];\n    foreach ($nums_int as $num_int) {\n        $nums_str[] = strval($num_int);\n    }\n    return $nums_str;\n}\n\n$nums_str = ['1', '2', '10', '5'];\nprint_r(sort_numeric_strings($nums_str));",
    "    $nums = array();\n    foreach ($nums_str as $num) {\n        $nums[] = intval($num);\n    }\n    sort($nums);\n    $nums_str = array();\n    foreach ($nums as $num) {\n        $nums_str[] = strval($num);\n    }\n    return $nums_str;\n}\n\n$nums_str = array(\"10\", \"5\", \"40\", \"25\", \"1000\", \"1\");\nprint_r(sort_numeric_strings($nums_str));",
    "    $nums = explode(\" \", $nums_str);\n    $nums_int = array();\n    foreach ($nums as $num) {\n        $nums_int[] = intval($num);\n    }\n    sort($nums_int);\n    return implode(\" \", $nums_int);\n}\n\n$nums_str = \"1 2 3 4 5 6 7 8 9 10\";\necho sort_numeric_strings($nums_str);",
    "    $nums = array_map('intval', $nums_str);\n    sort($nums);\n    return array_map('strval', $nums);\n}\n\n$nums_str = ['1', '2', '10', '3', '4', '5', '6', '7', '8', '9'];\nprint_r(sort_numeric_strings($nums_str));\n",
    "    $nums = array();\n    foreach ($nums_str as $num) {\n        $nums[] = intval($num);\n    }\n    sort($nums);\n    return $nums;\n}\n\n$nums_str = array(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\");\nprint_r(sort_numeric_strings($nums_str));\n",
    "    $nums = explode(',', $nums_str);\n    $nums = array_map('intval', $nums);\n    sort($nums);\n    return implode(',', $nums);\n}\n",
    "    $nums = [];\n    foreach ($nums_str as $num) {\n        $nums[] = intval($num);\n    }\n    sort($nums);\n    $nums_str = [];\n    foreach ($nums as $num) {\n        $nums_str[] = strval($num);\n    }\n    return $nums_str;\n}\n\n$nums_str = [\"10\", \"2\", \"5\", \"1\", \"9\", \"7\", \"8\", \"6\", \"4\", \"3\"];\nprint_r(sort_numeric_strings($nums_str));",
    "    $nums_int = [];\n    foreach ($nums_str as $num_str) {\n        $nums_int[] = intval($num_str);\n    }\n    sort($nums_int);\n    $nums_str = [];\n    foreach ($nums_int as $num_int) {\n        $nums_str[] = strval($num_int);\n    }\n    return $nums_str;\n}\n\n$nums_str = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'];\n$nums_str = sort_numeric_strings($nums_str);\nprint_r($nums_str);\n\n$nums_str = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20'];\n$nums_str = sort_numeric_strings($nums_str);\nprint_r($nums_str);\n\n$nums_str = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30'];\n$nums_str = sort_numeric_strings($nums_str);\nprint_r($nums_str);\n\n$nums_str = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34',",
    "    $nums = explode(',', $nums_str);\n    $nums = array_map('intval', $nums);\n    sort($nums);\n    return implode(',', $nums);\n}\n\necho sort_numeric_strings('1,2,3,4,5,6,7,8,9,10');\necho \"<br>\";\necho sort_numeric_strings('10,9,8,7,6,5,4,3,2,1');\necho \"<br>\";\necho sort_numeric_strings('1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20');\necho \"<br>\";\necho sort_numeric_strings('20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1');\necho \"<br>\";\necho sort_numeric_strings('1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30');\necho \"<br>\";\necho sort_numeric_strings('30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1');\necho \"<br>\";\necho sort_numeric_strings('1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40');\necho \"<br>\";\necho sort_numeric_strings('40,39,38,37,36,35,34,33,32,31,30,29",
    "    $nums = [];\n    foreach ($nums_str as $num_str) {\n        $nums[] = intval($num_str);\n    }\n    sort($nums);\n    $nums_str = [];\n    foreach ($nums as $num) {\n        $nums_str[] = strval($num);\n    }\n    return $nums_str;\n}\n\n$nums_str = ['10', '2', '3', '1', '5', '6', '4', '7', '8', '9'];\nvar_dump(sort_numeric_strings($nums_str));\n",
    "    $nums = [];\n    foreach ($nums_str as $num_str) {\n        $nums[] = intval($num_str);\n    }\n    sort($nums);\n    $nums_str = [];\n    foreach ($nums as $num) {\n        $nums_str[] = strval($num);\n    }\n    return $nums_str;\n}\n\n$nums_str = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'];\nprint_r(sort_numeric_strings($nums_str));\n",
    "    $nums = array_map('intval', $nums_str);\n    sort($nums);\n    return array_map('strval', $nums);\n}\n\n$nums_str = ['1', '3', '2', '4', '5', '6', '7'];\nprint_r(sort_numeric_strings($nums_str));\n",
    "    $nums = explode(\" \", $nums_str);\n    $nums_int = array();\n    foreach ($nums as $num) {\n        $nums_int[] = (int)$num;\n    }\n    sort($nums_int);\n    $nums_str = array();\n    foreach ($nums_int as $num) {\n        $nums_str[] = (string)$num;\n    }\n    return implode(\" \", $nums_str);\n}\n\necho sort_numeric_strings(\"10 2 3 4 5 6 7 8 9 1\");",
    "    $nums = [];\n    foreach ($nums_str as $num) {\n        $nums[] = intval($num);\n    }\n    sort($nums);\n    $nums_str = [];\n    foreach ($nums as $num) {\n        $nums_str[] = strval($num);\n    }\n    return $nums_str;\n}\n\n$nums_str = ['1', '2', '10', '3', '5'];\nprint_r(sort_numeric_strings($nums_str));\n",
    "    $nums = [];\n    foreach ($nums_str as $num) {\n        $nums[] = intval($num);\n    }\n    sort($nums);\n    $nums_str = [];\n    foreach ($nums as $num) {\n        $nums_str[] = strval($num);\n    }\n    return $nums_str;\n}\n\n$nums_str = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'];\nprint_r(sort_numeric_strings($nums_str));\n",
    "    $nums = [];\n    foreach ($nums_str as $num) {\n        $nums[] = intval($num);\n    }\n    sort($nums);\n    return $nums;\n}\n\n$nums_str = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'];\nprint_r(sort_numeric_strings($nums_str));",
    "    $nums = explode(\" \", $nums_str);\n    $nums_sorted = array();\n    foreach ($nums as $num) {\n        $nums_sorted[] = (int)$num;\n    }\n    sort($nums_sorted);\n    return implode(\" \", $nums_sorted);\n}\n\necho sort_numeric_strings(\"1 2 3 4 5 6 7 8 9 10\");\n",
    "    $nums = array_map('intval', $nums_str);\n    sort($nums);\n    return array_map('strval', $nums);\n}\n\n$nums_str = array(\"10\", \"2\", \"3\", \"4\", \"1\");\nprint_r(sort_numeric_strings($nums_str));"
  ]
}
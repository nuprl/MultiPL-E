{
  "name": "mbpp_743_rotate_right",
  "language": "php",
  "prompt": "<?php\n// Write a function to rotate a given list by specified number of items to the right direction. https://www.geeksforgeeks.org/python-program-right-rotate-list-n/\nfunction rotate_right($list, $m) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_743_rotate_right.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return rotate_right(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 3) !== array(8, 9, 10, 1, 2, 3, 4, 5, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 2) !== array(9, 10, 1, 2, 3, 4, 5, 6, 7, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 5) !== array(6, 7, 8, 9, 10, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $list_length = count($list);\n    $m = $m % $list_length;\n    $result = array_merge(array_slice($list, -$m), array_slice($list, 0, $list_length - $m));\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$m = 3;\nprint_r(rotate_right($list, $m));",
    "    $n = count($list);\n    $m = $m % $n;\n    $new_list = array_slice($list, $n - $m, $m);\n    $new_list = array_merge($new_list, array_slice($list, 0, $n - $m));\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5];\n$m = 2;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);\n",
    "    $length = count($list);\n    $list = array_reverse($list);\n    $list = array_reverse(array_slice($list, 0, $length - $m));\n    $list = array_merge($list, array_reverse(array_slice($list, $length - $m)));\n    return $list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 2;\nprint_r(rotate_right($list, $m));",
    "    $result = [];\n    $n = count($list);\n    for ($i = 0; $i < $n; $i++) {\n        $result[($i + $m) % $n] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 2;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $new_list = array();\n    $list_length = count($list);\n    for ($i = 0; $i < $list_length; $i++) {\n        $new_list[$i] = $list[($i + $m) % $list_length];\n    }\n    return $new_list;\n}\n\n$list = array(1, 2, 3, 4, 5);\n$m = 2;\nprint_r(rotate_right($list, $m));",
    "    $result = [];\n    for ($i = 0; $i < count($list); $i++) {\n        $result[($i + $m) % count($list)] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 2;\n\necho implode(', ', rotate_right($list, $m));",
    "    $length = count($list);\n    $m = $m % $length;\n    $new_list = array_slice($list, $length - $m);\n    $new_list = array_merge($new_list, array_slice($list, 0, $length - $m));\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\nprint_r(rotate_right($list, $m));",
    "    $new_list = [];\n    $n = count($list);\n    for ($i = 0; $i < $n; $i++) {\n        $new_list[($i + $m) % $n] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6];\n$m = 2;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (1) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (true) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $new_list = array_merge(array_slice($list, $n - $m), array_slice($list, 0, $n - $m));\n    return $new_list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    $temp2 = array_slice($list, 0, $n - $m);\n    return array_merge($temp, $temp2);\n}\n\n$list = [1, 2, 3, 4, 5];\n$m = 2;\nprint_r(rotate_right($list, $m));",
    "    $list_length = count($list);\n    $rotated_list = [];\n    for ($i = 0; $i < $list_length; $i++) {\n        $rotated_list[($i + $m) % $list_length] = $list[$i];\n    }\n    return $rotated_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\n$rotated_list = rotate_right($list, $m);\nprint_r($rotated_list);",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $length = count($list);\n    $mod = $m % $length;\n    $result = array();\n    for ($i = 0; $i < $length; $i++) {\n        $result[$i] = $list[($i + $mod) % $length];\n    }\n    return $result;\n}\n\n$list = array(1, 2, 3, 4, 5);\n$m = 2;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $list_length = count($list);\n    $new_list = [];\n    for ($i = 0; $i < $list_length; $i++) {\n        $new_list[($i + $m) % $list_length] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 2;\n\nprint_r(rotate_right($list, $m));",
    "    $length = count($list);\n    $m = $m % $length;\n    $new_list = array_slice($list, $length - $m);\n    $new_list = array_merge($new_list, array_slice($list, 0, $length - $m));\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 2;\nprint_r(rotate_right($list, $m));",
    "\t$n = count($list);\n\t$m = $m % $n;\n\t$gcd = gcd($n, $m);\n\tfor ($i = 0; $i < $gcd; $i++) {\n\t\t$temp = $list[$i];\n\t\t$j = $i;\n\t\twhile (true) {\n\t\t\t$k = $j + $m;\n\t\t\tif ($k >= $n) {\n\t\t\t\t$k = $k - $n;\n\t\t\t}\n\t\t\tif ($k == $i) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t$list[$j] = $list[$k];\n\t\t\t$j = $k;\n\t\t}\n\t\t$list[$j] = $temp;\n\t}\n\treturn $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $list_length = count($list);\n    $new_list = array();\n    for ($i = 0; $i < $list_length; $i++) {\n        $new_list[($i + $m) % $list_length] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);",
    "    $list_length = count($list);\n    $new_list = [];\n    for ($i = 0; $i < $list_length; $i++) {\n        $new_list[($i + $m) % $list_length] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\nprint_r(rotate_right($list, $m));",
    "    $length = count($list);\n    $result = array_fill(0, $length, null);\n    for ($i = 0; $i < $length; $i++) {\n        $result[($i + $m) % $length] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$m = 3;\nprint_r(rotate_right($list, $m));\n",
    "    $length = count($list);\n    $result = [];\n    for ($i = 0; $i < $length; $i++) {\n        $result[($i + $m) % $length] = $list[$i];\n    }\n    return $result;\n}\n",
    "    $length = count($list);\n    $m = $m % $length;\n    $new_list = array_slice($list, $length - $m);\n    $new_list = array_merge($new_list, array_slice($list, 0, $length - $m));\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\nprint_r(rotate_right($list, $m));\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (1) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $list_length = count($list);\n    $m = $m % $list_length;\n    $new_list = array_merge(array_slice($list, $list_length - $m), array_slice($list, 0, $list_length - $m));\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\n\nprint_r(rotate_right($list, $m));",
    "    $list_length = count($list);\n    $rotated_list = [];\n    for ($i = 0; $i < $list_length; $i++) {\n        $rotated_list[($i + $m) % $list_length] = $list[$i];\n    }\n    return $rotated_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 2;\nprint_r(rotate_right($list, $m));",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $result = [];\n    for ($i = 0; $i < $n; $i++) {\n        $result[$i] = $list[($i + $m) % $n];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 2;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $result = [];\n    $n = count($list);\n    for ($i = 0; $i < $n; $i++) {\n        $result[($i + $m) % $n] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\nprint_r(rotate_right($list, $m));",
    "    $list_length = count($list);\n    $new_list = [];\n    for ($i = 0; $i < $list_length; $i++) {\n        $new_list[($i + $m) % $list_length] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);",
    "    $list_length = count($list);\n    $new_list = [];\n    for ($i = 0; $i < $list_length; $i++) {\n        $new_list[($i + $m) % $list_length] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 2;\nprint_r(rotate_right($list, $m));",
    "    $length = count($list);\n    $m = $m % $length;\n    $new_list = array_slice($list, $length - $m);\n    $new_list = array_merge($new_list, array_slice($list, 0, $length - $m));\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5];\n$m = 2;\nprint_r(rotate_right($list, $m));",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $rotated_list = array();\n    $n = count($list);\n    for ($i = 0; $i < $n; $i++) {\n        $rotated_list[($i + $m) % $n] = $list[$i];\n    }\n    return $rotated_list;\n}\n\n$list = array(1, 2, 3, 4, 5);\n$m = 2;\n$rotated_list = rotate_right($list, $m);\nprint_r($rotated_list);\n",
    "    $list_length = count($list);\n    $new_list = [];\n    for ($i = 0; $i < $list_length; $i++) {\n        $new_list[$i] = $list[($i + $m) % $list_length];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$m = 3;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);",
    "    $new_list = [];\n    for ($i = 0; $i < count($list); $i++) {\n        $new_list[($i + $m) % count($list)] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$m = 3;\nprint_r(rotate_right($list, $m));",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $list_size = count($list);\n    $rotated_list = [];\n    for ($i = 0; $i < $list_size; $i++) {\n        $rotated_list[($i + $m) % $list_size] = $list[$i];\n    }\n    return $rotated_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 2;\nprint_r(rotate_right($list, $m));",
    "    $result = array();\n    for ($i = 0; $i < count($list); $i++) {\n        $result[($i + $m) % count($list)] = $list[$i];\n    }\n    return $result;\n}\n\n$list = array(1, 2, 3, 4, 5);\n$m = 2;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (1) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $length = count($list);\n    $new_list = [];\n    for ($i = 0; $i < $length; $i++) {\n        $new_list[($i + $m) % $length] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 2;\nprint_r(rotate_right($list, $m));\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $new_list = array_merge(array_slice($list, $n - $m), array_slice($list, 0, $n - $m));\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\nprint_r(rotate_right($list, $m));\n",
    "    $length = count($list);\n    $m = $m % $length;\n    $result = array_merge(array_slice($list, $length - $m), array_slice($list, 0, $length - $m));\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 2;\nprint_r(rotate_right($list, $m));",
    "    $result = [];\n    $length = count($list);\n    for ($i = 0; $i < $length; $i++) {\n        $result[($i + $m) % $length] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\nprint_r(rotate_right($list, $m));",
    "    $list_size = count($list);\n    $m = $m % $list_size;\n    $list = array_reverse($list);\n    $first_part = array_slice($list, 0, $m);\n    $second_part = array_slice($list, $m);\n    $first_part = array_reverse($first_part);\n    $second_part = array_reverse($second_part);\n    $result = array_merge($first_part, $second_part);\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\nprint_r(rotate_right($list, $m));",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $length = count($list);\n    $m = $m % $length;\n    $result = array_slice($list, -$m);\n    $result = array_merge($result, array_slice($list, 0, $length - $m));\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);\n",
    "    $length = count($list);\n    $m = $m % $length;\n    $temp = array_slice($list, $length - $m);\n    $temp = array_merge($temp, array_slice($list, 0, $length - $m));\n    return $temp;\n}\n\n$list = array(1, 2, 3, 4, 5);\n$m = 2;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "\t$length = count($list);\n\t$m = $m % $length;\n\t$result = array_merge(array_slice($list, $length - $m), array_slice($list, 0, $length - $m));\n\treturn $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $result = array_merge(array_slice($list, $n - $m), array_slice($list, 0, $n - $m));\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $m = $m % $n;\n    $list = array_reverse($list);\n    $list = array_reverse(array_slice($list, 0, $m));\n    $list = array_reverse(array_slice($list, $m));\n    return $list;\n}\n\n$list = [1,2,3,4,5,6,7,8,9];\n$m = 3;\necho implode(',', rotate_right($list, $m));",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    $temp = array_merge($temp, array_slice($list, 0, $n - $m));\n    return $temp;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\nprint_r(rotate_right($list, $m));",
    "    $length = count($list);\n    $new_list = [];\n    for ($i = 0; $i < $length; $i++) {\n        $new_list[($i + $m) % $length] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);",
    "    $size = count($list);\n    $m = $m % $size;\n    $result = array_merge(array_slice($list, $m), array_slice($list, 0, $m));\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $last = array_pop($list);\n    array_unshift($list, $last);\n    return $list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 2;\n$list = rotate_right($list, $m);\nprint_r($list);",
    "    $length = count($list);\n    $new_list = [];\n    for ($i = 0; $i < $length; $i++) {\n        $new_list[($i + $m) % $length] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 2;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);",
    "    $result = [];\n    $n = count($list);\n    for ($i = 0; $i < $n; $i++) {\n        $result[($i + $m) % $n] = $list[$i];\n    }\n    return $result;\n}\n\nprint_r(rotate_right([1, 2, 3, 4, 5], 2));\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $list_len = count($list);\n    $new_list = [];\n    for ($i = 0; $i < $list_len; $i++) {\n        $new_list[($i + $m) % $list_len] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 2;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);",
    "    $list_length = count($list);\n    $new_list = array();\n    for ($i = 0; $i < $list_length; $i++) {\n        $new_list[($i + $m) % $list_length] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7);\n$m = 2;\n$new_list = rotate_right($list, $m);\nvar_dump($new_list);",
    "    $new_list = [];\n    for ($i = 0; $i < count($list); $i++) {\n        $new_list[($i + $m) % count($list)] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$m = 3;\nprint_r(rotate_right($list, $m));",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $length = count($list);\n    $result = [];\n    for ($i = 0; $i < $length; $i++) {\n        $result[($i + $m) % $length] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5];\n$m = 2;\nprint_r(rotate_right($list, $m));\n",
    "    $list_length = count($list);\n    $rotated_list = array();\n    for ($i = 0; $i < $list_length; $i++) {\n        $rotated_list[($i + $m) % $list_length] = $list[$i];\n    }\n    return $rotated_list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7);\n$m = 2;\n$rotated_list = rotate_right($list, $m);\nprint_r($rotated_list);\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $new_list = [];\n    for ($i = 0; $i < $n; $i++) {\n        $new_list[$i] = $list[($i + $m) % $n];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 2;\nprint_r(rotate_right($list, $m));",
    "    $list_length = count($list);\n    $new_list = [];\n    for ($i = 0; $i < $list_length; $i++) {\n        $new_list[($i + $m) % $list_length] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$m = 3;\n$rotated_list = rotate_right($list, $m);\nprint_r($rotated_list);\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (true) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $length = count($list);\n    $m = $m % $length;\n    $result = [];\n    for ($i = 0; $i < $length; $i++) {\n        $result[$i] = $list[($i + $m) % $length];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\n\n$result = rotate_right($list, $m);\n\necho implode(', ', $result);",
    "    $list_len = count($list);\n    $m = $m % $list_len;\n    $new_list = array_merge(array_slice($list, $list_len - $m), array_slice($list, 0, $list_len - $m));\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$m = 3;\nprint_r(rotate_right($list, $m));",
    "    $length = count($list);\n    $result = [];\n    for ($i = 0; $i < $length; $i++) {\n        $result[($i + $m) % $length] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\n\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $length = count($list);\n    $new_list = [];\n    for ($i = 0; $i < $length; $i++) {\n        $new_list[($i + $m) % $length] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5];\n$m = 3;\nprint_r(rotate_right($list, $m));",
    "    $size = count($list);\n    $m = $m % $size;\n    $new_list = [];\n    for ($i = 0; $i < $size; $i++) {\n        $new_list[($i + $m) % $size] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\nprint_r(rotate_right($list, $m));",
    "    $list_length = count($list);\n    $new_list = [];\n    for ($i = 0; $i < $list_length; $i++) {\n        $new_list[($i + $m) % $list_length] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$m = 3;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $rotated_list = array();\n    $length = count($list);\n    for ($i = 0; $i < $length; $i++) {\n        $rotated_list[($i + $m) % $length] = $list[$i];\n    }\n    return $rotated_list;\n}\n\n$list = array(1, 2, 3, 4, 5);\n$m = 2;\n$rotated_list = rotate_right($list, $m);\nprint_r($rotated_list);",
    "    $n = count($list);\n    $m = $m % $n;\n    $m = $m < 0 ? $m + $n : $m;\n    $result = [];\n    for ($i = 0; $i < $n; $i++) {\n        $result[$i] = $list[($i + $m) % $n];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8];\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    $temp2 = array_slice($list, 0, $n - $m);\n    return array_merge($temp, $temp2);\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\nprint_r(rotate_right($list, $m));",
    "    $list_size = count($list);\n    $new_list = [];\n    for ($i = 0; $i < $list_size; $i++) {\n        $new_list[($i + $m) % $list_size] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 2;\nprint_r(rotate_right($list, $m));",
    "    $result = [];\n    $len = count($list);\n    for ($i = 0; $i < $len; $i++) {\n        $result[($i + $m) % $len] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 3;\nprint_r(rotate_right($list, $m));",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (1) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (1) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $result = [];\n    for ($i = 0; $i < count($list); $i++) {\n        $result[($i + $m) % count($list)] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5];\n$m = 2;\nprint_r(rotate_right($list, $m));\n",
    "    $result = [];\n    $length = count($list);\n    for ($i = 0; $i < $length; $i++) {\n        $result[$i] = $list[($i + $m) % $length];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$m = 3;\nprint_r(rotate_right($list, $m));\n",
    "    $length = count($list);\n    $new_list = [];\n    for ($i = 0; $i < $length; $i++) {\n        $new_list[($i + $m) % $length] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);\n",
    "    $length = count($list);\n    $new_list = array();\n    for ($i = 0; $i < $length; $i++) {\n        $new_list[$i] = $list[($i + $m) % $length];\n    }\n    return $new_list;\n}\n\n$list = array(1, 2, 3, 4, 5);\n$m = 2;\nprint_r(rotate_right($list, $m));",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $list_size = count($list);\n    $m = $m % $list_size;\n    $result = array_merge(array_slice($list, $m, $list_size), array_slice($list, 0, $m));\n    return $result;\n}\n\n$list = array(1, 2, 3, 4, 5);\n$m = 2;\n$result = rotate_right($list, $m);\nprint_r($result);\n",
    "    $list_len = count($list);\n    $new_list = array();\n    for ($i = 0; $i < $list_len; $i++) {\n        $new_list[($i + $m) % $list_len] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = array(1, 2, 3, 4, 5);\n$m = 2;\nprint_r(rotate_right($list, $m));\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $m = $n - $m;\n    $new_list = array_merge(array_slice($list, $m), array_slice($list, 0, $m));\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 2;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    $temp2 = array_slice($list, 0, $n - $m);\n    $temp = array_merge($temp, $temp2);\n    return $temp;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\nprint_r(rotate_right($list, $m));",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $new_list = [];\n    $n = count($list);\n    for ($i = 0; $i < $n; $i++) {\n        $new_list[($i + $m) % $n] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5];\n$m = 2;\nprint_r(rotate_right($list, $m));",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $mod = $m % $n;\n    $result = array_slice($list, $n - $mod, $mod);\n    $result = array_merge($result, array_slice($list, 0, $n - $mod));\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 3;\nprint_r(rotate_right($list, $m));\n",
    "    $result = [];\n    $n = count($list);\n    for ($i = 0; $i < $n; $i++) {\n        $result[($i + $m) % $n] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5];\n$m = 2;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $list_len = count($list);\n    $m = $m % $list_len;\n    $new_list = array_slice($list, $list_len - $m);\n    for ($i = 0; $i < $list_len - $m; $i++) {\n        $new_list[] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 3;\nprint_r(rotate_right($list, $m));",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (1) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $m = $n - $m;\n    $list = array_merge(array_slice($list, $m), array_slice($list, 0, $m));\n    return $list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\nprint_r(rotate_right($list, $m));",
    "    $n = count($list);\n    $m = $m % $n;\n    $result = array_merge(array_slice($list, $m), array_slice($list, 0, $m));\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 2;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $m = $m % $n;\n    $list = array_reverse($list);\n    $list = array_reverse(array_slice($list, 0, $m));\n    $list = array_reverse(array_slice($list, $m));\n    return $list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\nprint_r(rotate_right($list, $m));",
    "    $length = count($list);\n    $new_list = array();\n    for ($i = 0; $i < $length; $i++) {\n        $new_list[($i + $m) % $length] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = array(1, 2, 3, 4, 5);\n$m = 2;\nprint_r(rotate_right($list, $m));",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    $temp2 = array_slice($list, 0, $n - $m);\n    $temp = array_merge($temp, $temp2);\n    return $temp;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $m = $m % $n;\n    $new_list = array_merge(array_slice($list, $m), array_slice($list, 0, $m));\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\nprint_r(rotate_right($list, $m));\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    $temp2 = array_slice($list, 0, $n - $m);\n    $temp = array_merge($temp, $temp2);\n    return $temp;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 3;\nprint_r(rotate_right($list, $m));",
    "    $length = count($list);\n    $result = [];\n    for ($i = 0; $i < $length; $i++) {\n        $result[($i + $m) % $length] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$m = 3;\nprint_r(rotate_right($list, $m));",
    "    $length = count($list);\n    $new_list = [];\n    for ($i = 0; $i < $length; $i++) {\n        $new_list[($i + $m) % $length] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\n\nprint_r(rotate_right($list, $m));",
    "    $n = count($list);\n    $m = $m % $n;\n    $new_list = [];\n    for ($i = 0; $i < $n; $i++) {\n        $new_list[($i + $m) % $n] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 2;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $length = count($list);\n    $m = $m % $length;\n    $new_list = array_merge(array_slice($list, $length - $m), array_slice($list, 0, $length - $m));\n    return $new_list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7);\n$m = 2;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);",
    "    $length = count($list);\n    $m = $m % $length;\n    $result = array_merge(array_slice($list, $length - $m), array_slice($list, 0, $length - $m));\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5];\n$m = 2;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    $temp2 = array_slice($list, 0, $n - $m);\n    $temp = array_merge($temp, $temp2);\n    return $temp;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (1) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $result = [];\n    for ($i = 0; $i < count($list); $i++) {\n        $result[($i + $m) % count($list)] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);\n",
    "    $length = count($list);\n    $m = $m % $length;\n    $result = [];\n    for ($i = 0; $i < $length; $i++) {\n        $result[$i] = $list[($i + $m) % $length];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);\n",
    "    $length = count($list);\n    $new_list = [];\n    for ($i = 0; $i < $length; $i++) {\n        $new_list[($i + $m) % $length] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$m = 3;\nprint_r(rotate_right($list, $m));\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (1) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $length = count($list);\n    $m = $m % $length;\n    $new_list = array_slice($list, $length - $m);\n    for ($i = 0; $i < $length - $m; $i++) {\n        $new_list[] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$new_list = rotate_right($list, $m);\necho implode(', ', $new_list);",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $list_length = count($list);\n    $m = $m % $list_length;\n    $result = array_merge(array_slice($list, $list_length - $m), array_slice($list, 0, $list_length - $m));\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\nprint_r(rotate_right($list, $m));",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $result = [];\n    for ($i = 0; $i < count($list); $i++) {\n        $result[($i + $m) % count($list)] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5];\n$m = 2;\n\nprint_r(rotate_right($list, $m));",
    "    $length = count($list);\n    $m = $m % $length;\n    $result = array_merge(array_slice($list, $length - $m), array_slice($list, 0, $length - $m));\n    return $result;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $length = count($list);\n    $m = $m % $length;\n    $new_list = array_slice($list, $length - $m);\n    $new_list = array_merge($new_list, array_slice($list, 0, $length - $m));\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);",
    "    $n = count($list);\n    $m = $m % $n;\n    $list = array_reverse($list);\n    $list = array_reverse(array_slice($list, 0, $m));\n    $list = array_merge($list, array_reverse(array_slice($list, $m)));\n    return $list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\nprint_r(rotate_right($list, $m));",
    "    $n = count($list);\n    $m = $m % $n;\n    $new_list = array_merge(array_slice($list, $m), array_slice($list, 0, $m));\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 2;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (1) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, -$m);\n    $temp2 = array_slice($list, 0, $n - $m);\n    $temp = array_merge($temp, $temp2);\n    return $temp;\n}\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 2;\nprint_r(rotate_right($list, $m));",
    "    $result = [];\n    $len = count($list);\n    for ($i = 0; $i < $len; $i++) {\n        $result[($i + $m) % $len] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5];\n$m = 2;\nprint_r(rotate_right($list, $m));",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (1) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (1) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $size = count($list);\n    $m = $m % $size;\n    $new_list = array_slice($list, $size - $m);\n    $new_list = array_merge($new_list, array_slice($list, 0, $size - $m));\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5];\n$m = 2;\n\nprint_r(rotate_right($list, $m));",
    "    $length = count($list);\n    $m = $m % $length;\n    $result = array_merge(array_slice($list, $length - $m), array_slice($list, 0, $length - $m));\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\nprint_r(rotate_right($list, $m));",
    "    $n = count($list);\n    $m = $m % $n;\n    $res = array_merge(array_slice($list, $n - $m), array_slice($list, 0, $n - $m));\n    return $res;\n}\n\n$list = array(1, 2, 3, 4, 5);\n$m = 2;\n$res = rotate_right($list, $m);\nprint_r($res);\n",
    "    $rotated_list = [];\n    for ($i = 0; $i < count($list); $i++) {\n        $rotated_list[($i + $m) % count($list)] = $list[$i];\n    }\n    return $rotated_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$m = 3;\n$rotated_list = rotate_right($list, $m);\nprint_r($rotated_list);\n",
    "    $length = count($list);\n    $new_list = [];\n    for ($i = 0; $i < $length; $i++) {\n        $new_list[($i + $m) % $length] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 2;\nprint_r(rotate_right($list, $m));",
    "    $length = count($list);\n    $m = $m % $length;\n    $result = [];\n    for ($i = 0; $i < $length; $i++) {\n        $result[($i + $m) % $length] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\n\n$result = rotate_right($list, $m);\n\nprint_r($result);",
    "    $length = count($list);\n    $m = $m % $length;\n    $result = array_merge(array_slice($list, $length - $m), array_slice($list, 0, $length - $m));\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $result = [];\n    for ($i = 0; $i < count($list); $i++) {\n        $result[($i + $m) % count($list)] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5];\n$m = 2;\nprint_r(rotate_right($list, $m));",
    "    $rotated_list = [];\n    for ($i = 0; $i < count($list); $i++) {\n        $rotated_list[($i + $m) % count($list)] = $list[$i];\n    }\n    return $rotated_list;\n}\n\n$list = [1, 2, 3, 4, 5];\n$m = 2;\n$rotated_list = rotate_right($list, $m);\nprint_r($rotated_list);\n",
    "    $result = [];\n    $n = count($list);\n    for ($i = 0; $i < $n; $i++) {\n        $result[($i + $m) % $n] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5];\n$m = 2;\nprint_r(rotate_right($list, $m));\n",
    "    $length = count($list);\n    $m = $m % $length;\n    $result = [];\n\n    for ($i = 0; $i < $length; $i++) {\n        $result[$i] = $list[($length + $i - $m) % $length];\n    }\n\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 2;\n\nprint_r(rotate_right($list, $m));",
    "    $n = count($list);\n    $m = $m % $n;\n    $new_list = array();\n    for ($i = 0; $i < $n; $i++) {\n        $new_list[$i] = $list[($i + $m) % $n];\n    }\n    return $new_list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);",
    "    $n = count($list);\n    $m = $m % $n;\n    $list = array_reverse($list);\n    $list = array_reverse(array_slice($list, 0, $m));\n    $list = array_reverse(array_slice($list, $m));\n    return $list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$m = 3;\nprint_r(rotate_right($list, $m));",
    "    $list_length = count($list);\n    $m = $m % $list_length;\n    $new_list = array();\n    for ($i = 0; $i < $list_length; $i++) {\n        $new_list[($i + $m) % $list_length] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = array(1, 2, 3, 4, 5);\n$m = 2;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);\n",
    "    $length = count($list);\n    $m = $m % $length;\n    $result = [];\n    for ($i = 0; $i < $length; $i++) {\n        $result[$i] = $list[($i + $m) % $length];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 2;\nprint_r(rotate_right($list, $m));",
    "    $length = count($list);\n    $m = $m % $length;\n    $result = array_slice($list, $length - $m);\n    $result = array_merge($result, array_slice($list, 0, $length - $m));\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\nprint_r(rotate_right($list, $m));\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (1) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $length = count($list);\n    $m = $m % $length;\n    $new_list = array_merge(array_slice($list, $m), array_slice($list, 0, $m));\n    return $new_list;\n}\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 2;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $size = count($list);\n    $m = $m % $size;\n    $new_list = [];\n    for ($i = 0; $i < $size; $i++) {\n        $new_list[($i + $m) % $size] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5];\n$m = 2;\nprint_r(rotate_right($list, $m));",
    "    $length = count($list);\n    $result = array_fill(0, $length, null);\n    for ($i = 0; $i < $length; $i++) {\n        $result[($i + $m) % $length] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $result = [];\n    for ($i = 0; $i < count($list); $i++) {\n        $result[($i + $m) % count($list)] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6];\n$m = 2;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $m = $m % count($list);\n    $list = array_reverse($list);\n    $list = array_reverse(array_slice($list, 0, count($list) - $m));\n    $list = array_merge($list, array_reverse(array_slice($list, count($list) - $m)));\n    return $list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\nprint_r(rotate_right($list, $m));\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (1) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (1) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $length = count($list);\n    $result = [];\n    for ($i = 0; $i < $length; $i++) {\n        $result[($i + $m) % $length] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5];\n$m = 2;\n$result = rotate_right($list, $m);\nprint_r($result);\n",
    "    $n = count($list);\n    $mod = $m % $n;\n    $result = [];\n    for ($i = 0; $i < $n; $i++) {\n        $result[$i] = $list[($i + $mod) % $n];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$m = 3;\nprint_r(rotate_right($list, $m));",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $list_length = count($list);\n    $new_list = [];\n    for ($i = 0; $i < $list_length; $i++) {\n        $new_list[($i + $m) % $list_length] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$m = 3;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);",
    "    $result = array();\n    $length = count($list);\n    for ($i = 0; $i < $length; $i++) {\n        $result[($i + $m) % $length] = $list[$i];\n    }\n    return $result;\n}\n\n$list = array(1, 2, 3, 4, 5);\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $length = count($list);\n    $new_list = array();\n    for ($i = 0; $i < $length; $i++) {\n        $new_list[($i + $m) % $length] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = array(1, 2, 3, 4, 5);\n$m = 2;\n\n$new_list = rotate_right($list, $m);\nprint_r($new_list);",
    "    $result = [];\n    for ($i = 0; $i < count($list); $i++) {\n        $result[($i + $m) % count($list)] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 2;\nprint_r(rotate_right($list, $m));",
    "    $result = [];\n    for ($i = 0; $i < count($list); $i++) {\n        $result[($i + $m) % count($list)] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\nprint_r(rotate_right($list, $m));",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (1) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    $temp2 = array_slice($list, 0, $n - $m);\n    return array_merge($temp, $temp2);\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 3;\nprint_r(rotate_right($list, $m));",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (1) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $length = count($list);\n    $m = $m % $length;\n    $new_list = array_slice($list, $length - $m);\n    $new_list = array_merge($new_list, array_slice($list, 0, $length - $m));\n    return $new_list;\n}\n\n$list = array(1, 2, 3, 4, 5);\n$m = 2;\nprint_r(rotate_right($list, $m));\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (true) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $new_list = [];\n    $n = count($list);\n    for ($i = 0; $i < $n; $i++) {\n        $new_list[($i + $m) % $n] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5];\n$m = 2;\nprint_r(rotate_right($list, $m));",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (1) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k += $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $list_length = count($list);\n    $m = $m % $list_length;\n    $new_list = [];\n    for ($i = 0; $i < $list_length; $i++) {\n        $new_list[$i] = $list[($i + $m) % $list_length];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\nprint_r(rotate_right($list, $m));",
    "    $length = count($list);\n    $m = $m % $length;\n    $new_list = array_slice($list, $length - $m);\n    $new_list = array_merge($new_list, array_slice($list, 0, $length - $m));\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $m = $m % $n;\n    $a = array_slice($list, $n - $m);\n    $b = array_slice($list, 0, $n - $m);\n    return array_merge($a, $b);\n}\n\n$list = [1, 2, 3, 4, 5];\n$m = 2;\nprint_r(rotate_right($list, $m));",
    "    $result = [];\n    for ($i = 0; $i < count($list); $i++) {\n        $result[($i + $m) % count($list)] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5];\n$m = 2;\nprint_r(rotate_right($list, $m));",
    "    $list_length = count($list);\n    $rotated_list = [];\n    for ($i = 0; $i < $list_length; $i++) {\n        $rotated_list[($i + $m) % $list_length] = $list[$i];\n    }\n    return $rotated_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 2;\n$rotated_list = rotate_right($list, $m);\nprint_r($rotated_list);"
  ]
}
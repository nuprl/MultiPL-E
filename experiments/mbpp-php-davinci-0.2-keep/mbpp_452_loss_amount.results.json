{
  "name": "mbpp_452_loss_amount",
  "language": "php",
  "prompt": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_452_loss_amount.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\tif ($actual_cost > $sale_amount) {\n\t\treturn $actual_cost - $sale_amount;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(50, 100);\necho \"<br>\";\necho loss_amount(100, 100);\necho \"<br>\";\necho loss_amount(100, 150);\necho \"<br>\";\necho loss_amount(150, 100);\necho \"<br>\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50<br>0<br>0<br>0<br>50<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9nlw5a50.php:27\nStack trace:\n#0 /tmp/tmp9nlw5a50.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9nlw5a50.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaxqjljpd.php:20\nStack trace:\n#0 /tmp/tmpaxqjljpd.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpaxqjljpd.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq1jdyzui.php:21\nStack trace:\n#0 /tmp/tmpq1jdyzui.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpq1jdyzui.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps88wwomr.php:17\nStack trace:\n#0 /tmp/tmps88wwomr.php(22): test()\n#1 {main}\n  thrown in /tmp/tmps88wwomr.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeye831je.php:18\nStack trace:\n#0 /tmp/tmpeye831je.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpeye831je.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7tvuu5u1.php:24\nStack trace:\n#0 /tmp/tmp7tvuu5u1.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7tvuu5u1.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    }\n    return 0;\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk7sgfzju.php:21\nStack trace:\n#0 /tmp/tmpk7sgfzju.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpk7sgfzju.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsalhxz47.php:23\nStack trace:\n#0 /tmp/tmpsalhxz47.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpsalhxz47.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\n$actual_cost = 1000;\n$sale_amount = 500;\necho \"Loss amount is: \" . loss_amount($actual_cost, $sale_amount);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "Loss amount is: 500\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn9zspaqq.php:20\nStack trace:\n#0 /tmp/tmpn9zspaqq.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpn9zspaqq.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5_s4cl2.php:22\nStack trace:\n#0 /tmp/tmpx5_s4cl2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpx5_s4cl2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\tif ($actual_cost > $sale_amount) {\n\t\treturn $actual_cost - $sale_amount;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\n$actual_cost = 100;\n$sale_amount = 50;\necho loss_amount($actual_cost, $sale_amount);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp90jaq4fh.php:19\nStack trace:\n#0 /tmp/tmp90jaq4fh.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp90jaq4fh.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsftynoh7.php:21\nStack trace:\n#0 /tmp/tmpsftynoh7.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpsftynoh7.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeye831je.php:18\nStack trace:\n#0 /tmp/tmpeye831je.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpeye831je.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\n$actual_cost = 100;\n$sale_amount = 50;\necho loss_amount($actual_cost, $sale_amount);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte63qpw8.php:20\nStack trace:\n#0 /tmp/tmpte63qpw8.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpte63qpw8.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb8dho9qm.php:21\nStack trace:\n#0 /tmp/tmpb8dho9qm.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpb8dho9qm.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5_s4cl2.php:22\nStack trace:\n#0 /tmp/tmpx5_s4cl2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpx5_s4cl2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd0n74gz_.php:16\nStack trace:\n#0 /tmp/tmpd0n74gz_.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpd0n74gz_.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpapx3lu4w.php:19\nStack trace:\n#0 /tmp/tmpapx3lu4w.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpapx3lu4w.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5_s4cl2.php:22\nStack trace:\n#0 /tmp/tmpx5_s4cl2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpx5_s4cl2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif ($loss > 0) {\n\t\treturn $loss;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 0);\necho \"\\n\";\necho loss_amount(100, -50);\necho \"\\n\";\necho loss_amount(100, -150);\necho \"\\n\";\necho loss_amount(100, -100);\necho \"\\n\";\necho loss_amount(100, -200);\necho \"\\n\";\necho loss_amount(100, -300);\necho \"\\n\";\necho loss_amount(100, -400);\necho \"\\n\";\necho loss_amount(100, -500);\necho \"\\n\";\necho loss_amount(100, -600);\necho \"\\n\";\necho loss_amount(100, -700);\necho \"\\n\";\necho loss_amount(100, -800);\necho \"\\n\";\necho loss_amount(100, -900);\necho \"\\n\";\necho loss_amount(100, -1000);\necho \"\\n\";\necho loss_amount(100, -1100);\necho \"\\n\";\necho loss_amount(100, -1200);\necho \"\\n\";\necho loss_amount(100, -1300);\necho \"\\n\";\necho loss_amount(100, -1400);\necho \"\\n\";\necho loss_amount(100, -1500);\necho \"\\n\";\necho loss_amount(100, -1600);\necho \"\\n\";\necho loss_amount(100, -1700);\necho \"\\n\";\necho loss_amount(100, -1800);\necho \"\\n\";\necho loss_amount(100, -1900);\necho \"\\n\";\necho loss_amount(100, -2000);\necho \"\\n\";\necho loss_amount(100, -2100);\necho \"\\n\";\necho loss_amount(100, -2200);\necho \"\\n\";\necho loss_amount(100, -2300);\necho \"\\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\", expecting \",\" or \";\" in /tmp/tmpd2l6aupf.php on line 75\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5_s4cl2.php:22\nStack trace:\n#0 /tmp/tmpx5_s4cl2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpx5_s4cl2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphcgee79x.php:24\nStack trace:\n#0 /tmp/tmphcgee79x.php(29): test()\n#1 {main}\n  thrown in /tmp/tmphcgee79x.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    }\n    return 0;\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(50, 50);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpen9lk22b.php:24\nStack trace:\n#0 /tmp/tmpen9lk22b.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpen9lk22b.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif ($loss > 0) {\n\t\treturn $loss;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqkfofw1z.php:22\nStack trace:\n#0 /tmp/tmpqkfofw1z.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpqkfofw1z.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpavq168me.php:23\nStack trace:\n#0 /tmp/tmpavq168me.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpavq168me.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7tvuu5u1.php:24\nStack trace:\n#0 /tmp/tmp7tvuu5u1.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7tvuu5u1.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwl9xvgl1.php:17\nStack trace:\n#0 /tmp/tmpwl9xvgl1.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpwl9xvgl1.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5_s4cl2.php:22\nStack trace:\n#0 /tmp/tmpx5_s4cl2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpx5_s4cl2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp63oobns6.php:17\nStack trace:\n#0 /tmp/tmp63oobns6.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp63oobns6.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(1000, 900);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "100\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7zvzydq.php:18\nStack trace:\n#0 /tmp/tmpp7zvzydq.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpp7zvzydq.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    }\n    else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphquhel0x.php:20\nStack trace:\n#0 /tmp/tmphquhel0x.php(25): test()\n#1 {main}\n  thrown in /tmp/tmphquhel0x.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbmkldtpm.php:20\nStack trace:\n#0 /tmp/tmpbmkldtpm.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpbmkldtpm.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xbw0ndp.php:17\nStack trace:\n#0 /tmp/tmp2xbw0ndp.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp2xbw0ndp.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(100, 150);\necho \"<br>\";\necho loss_amount(100, 100);\necho \"<br>\";\necho loss_amount(100, 0);\necho \"<br>\";\necho loss_amount(100, -50);\necho \"<br>\";\necho loss_amount(100, -150);\necho \"<br>\";\necho loss_amount(100, -100);\necho \"<br>\";\necho loss_amount(100, -200);\necho \"<br>\";\necho loss_amount(100, -300);\necho \"<br>\";\necho loss_amount(100, -400);\necho \"<br>\";\necho loss_amount(100, -500);\necho \"<br>\";\necho loss_amount(100, -600);\necho \"<br>\";\necho loss_amount(100, -700);\necho \"<br>\";\necho loss_amount(100, -800);\necho \"<br>\";\necho loss_amount(100, -900);\necho \"<br>\";\necho loss_amount(100, -1000);\necho \"<br>\";\necho loss_amount(100, -1100);\necho \"<br>\";\necho loss_amount(100, -1200);\necho \"<br>\";\necho loss_amount(100, -1300);\necho \"<br>\";\necho loss_amount(100, -1400);\necho \"<br>\";\necho loss_amount(100, -1500);\necho \"<br>\";\necho loss_amount(100, -1600);\necho \"<br>\";\necho loss_amount(100, -1700);\necho \"<br>\";\necho loss_amount(100, -1800);\necho \"<br>\";\necho loss_amount(100, -1900);\necho \"<br>\";\necho loss_amount(100, -2000);\necho \"<br>\";\necho loss_amount(100, -2100);\necho \"<br>\";\necho loss_amount(100,\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpxnv3_1df.php on line 66\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcxi51tli.php:21\nStack trace:\n#0 /tmp/tmpcxi51tli.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpcxi51tli.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        $loss = $actual_cost - $sale_amount;\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe5xuycx0.php:21\nStack trace:\n#0 /tmp/tmpe5xuycx0.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpe5xuycx0.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjly0006s.php:17\nStack trace:\n#0 /tmp/tmpjly0006s.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpjly0006s.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5_s4cl2.php:22\nStack trace:\n#0 /tmp/tmpx5_s4cl2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpx5_s4cl2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5slbr1yn.php:21\nStack trace:\n#0 /tmp/tmp5slbr1yn.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp5slbr1yn.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5_s4cl2.php:22\nStack trace:\n#0 /tmp/tmpx5_s4cl2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpx5_s4cl2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprq66x6o0.php:17\nStack trace:\n#0 /tmp/tmprq66x6o0.php(22): test()\n#1 {main}\n  thrown in /tmp/tmprq66x6o0.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi524moak.php:24\nStack trace:\n#0 /tmp/tmpi524moak.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpi524moak.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\tif($actual_cost > $sale_amount) {\n\t\t$loss = $actual_cost - $sale_amount;\n\t\treturn $loss;\n\t}\n\telse {\n\t\treturn 0;\n\t}\n}\n\necho loss_amount(1000, 800);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "200\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzo5got6.php:19\nStack trace:\n#0 /tmp/tmpgzo5got6.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpgzo5got6.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss_amount = $actual_cost - $sale_amount;\n    if ($loss_amount > 0) {\n        return $loss_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2fbrvwmd.php:23\nStack trace:\n#0 /tmp/tmp2fbrvwmd.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp2fbrvwmd.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n0\n0\n50\n0\n0\n0\n50\n0\n0\n0\n50\n0\n0\n0\n50\n0\n0\n0\n50\n0\n0\n0\n50\n0\n0\n0\n50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_k8m_xwy.php:80\nStack trace:\n#0 /tmp/tmp_k8m_xwy.php(85): test()\n#1 {main}\n  thrown in /tmp/tmp_k8m_xwy.php on line 80\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif($loss > 0) {\n\t\treturn $loss;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpazu4vc9a.php:21\nStack trace:\n#0 /tmp/tmpazu4vc9a.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpazu4vc9a.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjly0006s.php:17\nStack trace:\n#0 /tmp/tmpjly0006s.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpjly0006s.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        $loss = $actual_cost - $sale_amount;\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpipllid3_.php:19\nStack trace:\n#0 /tmp/tmpipllid3_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpipllid3_.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif ($loss > 0) {\n\t\treturn $loss;\n\t} else {\n\t\treturn 0;\n\t}\n}\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzqr9nu3o.php:21\nStack trace:\n#0 /tmp/tmpzqr9nu3o.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpzqr9nu3o.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf1iun4cc.php:20\nStack trace:\n#0 /tmp/tmpf1iun4cc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpf1iun4cc.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss_amount = $actual_cost - $sale_amount;\n    if ($loss_amount > 0) {\n        return $loss_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(1000, 500);\necho \"\\n\";\necho loss_amount(500, 1000);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "500\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph5ojbng3.php:22\nStack trace:\n#0 /tmp/tmph5ojbng3.php(27): test()\n#1 {main}\n  thrown in /tmp/tmph5ojbng3.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5_s4cl2.php:22\nStack trace:\n#0 /tmp/tmpx5_s4cl2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpx5_s4cl2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5_s4cl2.php:22\nStack trace:\n#0 /tmp/tmpx5_s4cl2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpx5_s4cl2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphpe6esst.php:18\nStack trace:\n#0 /tmp/tmphpe6esst.php(23): test()\n#1 {main}\n  thrown in /tmp/tmphpe6esst.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(1000, 800);\necho \"\\n\";\necho loss_amount(1000, 1200);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "200\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxqn9im18.php:22\nStack trace:\n#0 /tmp/tmpxqn9im18.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpxqn9im18.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    }\n    else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp71srxka3.php:24\nStack trace:\n#0 /tmp/tmp71srxka3.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp71srxka3.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcxi51tli.php:21\nStack trace:\n#0 /tmp/tmpcxi51tli.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpcxi51tli.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwl9xvgl1.php:17\nStack trace:\n#0 /tmp/tmpwl9xvgl1.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpwl9xvgl1.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    }\n    else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8abuzp1j.php:25\nStack trace:\n#0 /tmp/tmp8abuzp1j.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8abuzp1j.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 0);\necho \"\\n\";\necho loss_amount(100, -50);\necho \"\\n\";\necho loss_amount(100, -150);\necho \"\\n\";\necho loss_amount(100, -100);\necho \"\\n\";\necho loss_amount(100, -200);\necho \"\\n\";\necho loss_amount(100, -250);\necho \"\\n\";\necho loss_amount(100, -300);\necho \"\\n\";\necho loss_amount(100, -350);\necho \"\\n\";\necho loss_amount(100, -400);\necho \"\\n\";\necho loss_amount(100, -450);\necho \"\\n\";\necho loss_amount(100, -500);\necho \"\\n\";\necho loss_amount(100, -550);\necho \"\\n\";\necho loss_amount(100, -600);\necho \"\\n\";\necho loss_amount(100, -650);\necho \"\\n\";\necho loss_amount(100, -700);\necho \"\\n\";\necho loss_amount(100, -750);\necho \"\\n\";\necho loss_amount(100, -800);\necho \"\\n\";\necho loss_amount(100, -850);\necho \"\\n\";\necho loss_amount(100, -900);\necho \"\\n\";\necho loss_amount(100, -950);\necho \"\\n\";\necho loss_amount(100, -1000);\necho \"\\n\";\necho loss_amount(100, -1050);\necho \"\\n\";\necho loss_amount(100, -1100);\necho \"\\n\";\necho loss_amount(100, -1150);\necho \"\\n\";\necho loss_amount(100, -1200);\necho \"\\n\";\necho loss_amount(100, -1250);\necho \"\\n\";\necho loss\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmp7112gi9s.php on line 71\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    return $loss > 0 ? $loss : 0;\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 200);\necho \"\\n\";\necho loss_amount(100, 0);\necho \"\\n\";\necho loss_amount(100, -50);\necho \"\\n\";\necho loss_amount(100, -100);\necho \"\\n\";\necho loss_amount(100, -150);\necho \"\\n\";\necho loss_amount(100, -200);\necho \"\\n\";\necho loss_amount(100, -300);\necho \"\\n\";\necho loss_amount(100, -400);\necho \"\\n\";\necho loss_amount(100, -500);\necho \"\\n\";\necho loss_amount(100, -600);\necho \"\\n\";\necho loss_amount(100, -700);\necho \"\\n\";\necho loss_amount(100, -800);\necho \"\\n\";\necho loss_amount(100, -900);\necho \"\\n\";\necho loss_amount(100, -1000);\necho \"\\n\";\necho loss_amount(100, -1100);\necho \"\\n\";\necho loss_amount(100, -1200);\necho \"\\n\";\necho loss_amount(100, -1300);\necho \"\\n\";\necho loss_amount(100, -1400);\necho \"\\n\";\necho loss_amount(100, -1500);\necho \"\\n\";\necho loss_amount(100, -1600);\necho \"\\n\";\necho loss_amount(100, -1700);\necho \"\\n\";\necho loss_amount(100, -1800);\necho \"\\n\";\necho loss_amount(100, -1900);\necho \"\\n\";\necho loss_amount(100, -2000);\necho \"\\n\";\necho loss_amount(100, -2100);\necho \"\\n\";\necho loss_amount(100, -2200);\necho \"\\n\";\necho loss_amount(100, -2300);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n0\n0\n100\n150\n200\n250\n300\n400\n500\n600\n700\n800\n900\n1000\n1100\n1200\n1300\n1400\n1500\n1600\n1700\n1800\n1900\n2000\n2100\n2200\n2300\n2400\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuf3rpr_z.php:74\nStack trace:\n#0 /tmp/tmpuf3rpr_z.php(79): test()\n#1 {main}\n  thrown in /tmp/tmpuf3rpr_z.php on line 74\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss < 0) {\n        return 0;\n    } else {\n        return $loss;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmu6i_00u.php:22\nStack trace:\n#0 /tmp/tmpmu6i_00u.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpmu6i_00u.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbenwzh1n.php:23\nStack trace:\n#0 /tmp/tmpbenwzh1n.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpbenwzh1n.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif ($loss > 0) {\n\t\treturn $loss;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqkfofw1z.php:22\nStack trace:\n#0 /tmp/tmpqkfofw1z.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpqkfofw1z.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    }\n    else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6kox7wnu.php:18\nStack trace:\n#0 /tmp/tmp6kox7wnu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp6kox7wnu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeye831je.php:18\nStack trace:\n#0 /tmp/tmpeye831je.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpeye831je.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphcgee79x.php:24\nStack trace:\n#0 /tmp/tmphcgee79x.php(29): test()\n#1 {main}\n  thrown in /tmp/tmphcgee79x.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 80);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "20\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr2saff6q.php:18\nStack trace:\n#0 /tmp/tmpr2saff6q.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpr2saff6q.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd0n74gz_.php:16\nStack trace:\n#0 /tmp/tmpd0n74gz_.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpd0n74gz_.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdfrk72_c.php:20\nStack trace:\n#0 /tmp/tmpdfrk72_c.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdfrk72_c.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(50, 50);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprmee2plf.php:26\nStack trace:\n#0 /tmp/tmprmee2plf.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprmee2plf.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        $loss = $actual_cost - $sale_amount;\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ix9g8zk.php:22\nStack trace:\n#0 /tmp/tmp1ix9g8zk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp1ix9g8zk.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(50, 100);\necho \"<br>\";\necho loss_amount(100, 100);\necho \"<br>\";\necho loss_amount(100, 150);\necho \"<br>\";\necho loss_amount(50, 50);\necho \"<br>\";\necho loss_amount(50, 25);\necho \"<br>\";\necho loss_amount(100, 75);\necho \"<br>\";\necho loss_amount(100, 125);\necho \"<br>\";\necho loss_amount(100, 175);\necho \"<br>\";\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(100, 50);\necho \"<br>\";\necho\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp8xe7wzfn.php on line 71\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbenwzh1n.php:23\nStack trace:\n#0 /tmp/tmpbenwzh1n.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpbenwzh1n.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        $loss = $actual_cost - $sale_amount;\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ix9g8zk.php:22\nStack trace:\n#0 /tmp/tmp1ix9g8zk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp1ix9g8zk.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif ($loss > 0) {\n\t\treturn $loss;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqkfofw1z.php:22\nStack trace:\n#0 /tmp/tmpqkfofw1z.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpqkfofw1z.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd0n74gz_.php:16\nStack trace:\n#0 /tmp/tmpd0n74gz_.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpd0n74gz_.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5slbr1yn.php:21\nStack trace:\n#0 /tmp/tmp5slbr1yn.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp5slbr1yn.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif ($loss > 0) {\n\t\treturn $loss;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\necho loss_amount(100, 200);\necho \"<br>\";\necho loss_amount(200, 100);\necho \"<br>\";\necho loss_amount(100, 100);\necho \"<br>\";\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(50, 100);\necho \"<br>\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "0<br>100<br>0<br>50<br>0<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpypdbh2zr.php:28\nStack trace:\n#0 /tmp/tmpypdbh2zr.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpypdbh2zr.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    }\n    return 0;\n}\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpef956h_c.php:16\nStack trace:\n#0 /tmp/tmpef956h_c.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpef956h_c.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif ($loss > 0) {\n\t\treturn $loss;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\necho loss_amount(1000, 500);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "500\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpem2hr22r.php:18\nStack trace:\n#0 /tmp/tmpem2hr22r.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpem2hr22r.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    }\n    else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp887bsqmw.php:21\nStack trace:\n#0 /tmp/tmp887bsqmw.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp887bsqmw.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7tvuu5u1.php:24\nStack trace:\n#0 /tmp/tmp7tvuu5u1.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7tvuu5u1.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphcgee79x.php:24\nStack trace:\n#0 /tmp/tmphcgee79x.php(29): test()\n#1 {main}\n  thrown in /tmp/tmphcgee79x.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        echo \"Loss amount is: $loss\";\n    } else {\n        echo \"No loss\";\n    }\n}\nloss_amount(1000, 500);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "Loss amount is: 500Loss amount is: 300\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_y1ynbhi.php:17\nStack trace:\n#0 /tmp/tmp_y1ynbhi.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp_y1ynbhi.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjly0006s.php:17\nStack trace:\n#0 /tmp/tmpjly0006s.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpjly0006s.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(1000, 900);\necho \"\\n\";\necho loss_amount(1000, 1100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "100\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1gln5zaw.php:21\nStack trace:\n#0 /tmp/tmp1gln5zaw.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp1gln5zaw.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(50, 100);\necho \"<br>\";\necho loss_amount(100, 100);\necho \"<br>\";\necho loss_amount(100, 150);\necho \"<br>\";\necho loss_amount(150, 100);\necho \"<br>\";\necho loss_amount(150, 150);\necho \"<br>\";\necho loss_amount(150, 200);\necho \"<br>\";\necho loss_amount(200, 150);\necho \"<br>\";\necho loss_amount(200, 200);\necho \"<br>\";\necho loss_amount(200, 250);\necho \"<br>\";\necho loss_amount(250, 200);\necho \"<br>\";\necho loss_amount(250, 250);\necho \"<br>\";\necho loss_amount(250, 300);\necho \"<br>\";\necho loss_amount(300, 250);\necho \"<br>\";\necho loss_amount(300, 300);\necho \"<br>\";\necho loss_amount(300, 350);\necho \"<br>\";\necho loss_amount(350, 300);\necho \"<br>\";\necho loss_amount(350, 350);\necho \"<br>\";\necho loss_amount(350, 400);\necho \"<br>\";\necho loss_amount(400, 350);\necho \"<br>\";\necho loss_amount(400, 400);\necho \"<br>\";\necho loss_amount(400, 450);\necho \"<br>\";\necho loss_amount(450, 400);\necho \"<br>\";\necho loss_amount(450, 450);\necho \"<br>\";\necho loss_amount(450, 500);\necho \"<br>\";\necho loss_amount(500, 450);\necho \"<br>\";\necho loss_amount(500, 500);\necho \"<br>\";\necho loss_amount(500, 550);\necho \"<br>\";\necho loss_amount(550, 500);\necho \"<br>\";\necho loss_amount\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmp241kdy8o.php on line 70\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(50, 50);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprmee2plf.php:26\nStack trace:\n#0 /tmp/tmprmee2plf.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprmee2plf.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif ($loss > 0) {\n\t\treturn $loss;\n\t} else {\n\t\treturn 0;\n\t}\n}\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9g9ltsjc.php:19\nStack trace:\n#0 /tmp/tmp9g9ltsjc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp9g9ltsjc.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(50, 100);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50<br>0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsjxme3g9.php:19\nStack trace:\n#0 /tmp/tmpsjxme3g9.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpsjxme3g9.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjly0006s.php:17\nStack trace:\n#0 /tmp/tmpjly0006s.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpjly0006s.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif($loss > 0) {\n\t\treturn $loss;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6_twnjra.php:25\nStack trace:\n#0 /tmp/tmp6_twnjra.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp6_twnjra.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwl9xvgl1.php:17\nStack trace:\n#0 /tmp/tmpwl9xvgl1.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpwl9xvgl1.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(50, 50);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1eukf5li.php:25\nStack trace:\n#0 /tmp/tmp1eukf5li.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp1eukf5li.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif($loss > 0) {\n\t\treturn $loss;\n\t}\n\telse {\n\t\treturn 0;\n\t}\n}\n\necho loss_amount(1000, 500);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "500\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt0j0b996.php:19\nStack trace:\n#0 /tmp/tmpt0j0b996.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpt0j0b996.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    }\n    return 0;\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpskyqdbqz.php:19\nStack trace:\n#0 /tmp/tmpskyqdbqz.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpskyqdbqz.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptvtu6yxa.php:21\nStack trace:\n#0 /tmp/tmptvtu6yxa.php(26): test()\n#1 {main}\n  thrown in /tmp/tmptvtu6yxa.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    }\n    return 0;\n}\n\necho loss_amount(1000, 500);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "500\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz5crcw89.php:16\nStack trace:\n#0 /tmp/tmpz5crcw89.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpz5crcw89.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xbw0ndp.php:17\nStack trace:\n#0 /tmp/tmp2xbw0ndp.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp2xbw0ndp.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzrja8vqx.php:22\nStack trace:\n#0 /tmp/tmpzrja8vqx.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzrja8vqx.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif ($loss > 0) {\n\t\treturn $loss;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8msqrq3.php:22\nStack trace:\n#0 /tmp/tmpv8msqrq3.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpv8msqrq3.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5_s4cl2.php:22\nStack trace:\n#0 /tmp/tmpx5_s4cl2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpx5_s4cl2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6m9fhvo5.php:22\nStack trace:\n#0 /tmp/tmp6m9fhvo5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp6m9fhvo5.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwl9xvgl1.php:17\nStack trace:\n#0 /tmp/tmpwl9xvgl1.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpwl9xvgl1.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif ($loss > 0) {\n\t\treturn $loss;\n\t} else {\n\t\treturn 0;\n\t}\n}\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(100, 150);\necho \"<br>\";\necho loss_amount(100, 100);\necho \"<br>\";\necho loss_amount(100, 90);\necho \"<br>\";\necho loss_amount(100, 80);\necho \"<br>\";\necho loss_amount(100, 70);\necho \"<br>\";\necho loss_amount(100, 60);\necho \"<br>\";\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(100, 40);\necho \"<br>\";\necho loss_amount(100, 30);\necho \"<br>\";\necho loss_amount(100, 20);\necho \"<br>\";\necho loss_amount(100, 10);\necho \"<br>\";\necho loss_amount(100, 0);\necho \"<br>\";\necho loss_amount(100, -10);\necho \"<br>\";\necho loss_amount(100, -20);\necho \"<br>\";\necho loss_amount(100, -30);\necho \"<br>\";\necho loss_amount(100, -40);\necho \"<br>\";\necho loss_amount(100, -50);\necho \"<br>\";\necho loss_amount(100, -60);\necho \"<br>\";\necho loss_amount(100, -70);\necho \"<br>\";\necho loss_amount(100, -80);\necho \"<br>\";\necho loss_amount(100, -90);\necho \"<br>\";\necho loss_amount(100, -100);\necho \"<br>\";\necho loss_amount(100, -110);\necho \"<br>\";\necho loss_amount(100, -120);\necho \"<br>\";\necho loss_amount(100, -130);\necho \"<br>\";\necho loss_amount(100, -140);\necho \"<br>\";\necho loss_amount(100, -150);\necho \"<br>\";\necho\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpdytkqale.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif($loss > 0) {\n\t\treturn $loss;\n\t}\n\telse {\n\t\treturn 0;\n\t}\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdh77yk3i.php:26\nStack trace:\n#0 /tmp/tmpdh77yk3i.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpdh77yk3i.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeye831je.php:18\nStack trace:\n#0 /tmp/tmpeye831je.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpeye831je.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif ($loss > 0) {\n\t\treturn $loss;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\necho loss_amount(100, 50);\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg9_dytod.php:19\nStack trace:\n#0 /tmp/tmpg9_dytod.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpg9_dytod.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    }\n    else {\n        return 0;\n    }\n}\necho loss_amount(1000, 100);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "900\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5mlv1cq1.php:18\nStack trace:\n#0 /tmp/tmp5mlv1cq1.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp5mlv1cq1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5_s4cl2.php:22\nStack trace:\n#0 /tmp/tmpx5_s4cl2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpx5_s4cl2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 200);\necho \"\\n\";\necho loss_amount(100, 0);\necho \"\\n\";\necho loss_amount(100, -50);\necho \"\\n\";\necho loss_amount(100, -100);\necho \"\\n\";\necho loss_amount(100, -200);\necho \"\\n\";\necho loss_amount(100, -300);\necho \"\\n\";\necho loss_amount(100, -400);\necho \"\\n\";\necho loss_amount(100, -500);\necho \"\\n\";\necho loss_amount(100, -600);\necho \"\\n\";\necho loss_amount(100, -700);\necho \"\\n\";\necho loss_amount(100, -800);\necho \"\\n\";\necho loss_amount(100, -900);\necho \"\\n\";\necho loss_amount(100, -1000);\necho \"\\n\";\necho loss_amount(100, -1100);\necho \"\\n\";\necho loss_amount(100, -1200);\necho \"\\n\";\necho loss_amount(100, -1300);\necho \"\\n\";\necho loss_amount(100, -1400);\necho \"\\n\";\necho loss_amount(100, -1500);\necho \"\\n\";\necho loss_amount(100, -1600);\necho \"\\n\";\necho loss_amount(100, -1700);\necho \"\\n\";\necho loss_amount(100, -1800);\necho \"\\n\";\necho loss_amount(100, -1900);\necho \"\\n\";\necho loss_amount(100, -2000);\necho \"\\n\";\necho loss_amount(100, -2100);\necho \"\\n\";\necho loss_amount(100, -2200);\necho \"\\n\";\necho loss_amount(100, -2300);\necho \"\\n\";\necho\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpb5fs1f2b.php on line 71\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 0);\necho \"\\n\";\necho loss_amount(100, -50);\necho \"\\n\";\necho loss_amount(100, -100);\necho \"\\n\";\necho loss_amount(100, -150);\necho \"\\n\";\necho loss_amount(100, -200);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n0\n100\n150\n200\n250\n300\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnioqphho.php:33\nStack trace:\n#0 /tmp/tmpnioqphho.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpnioqphho.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5_s4cl2.php:22\nStack trace:\n#0 /tmp/tmpx5_s4cl2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpx5_s4cl2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(1000, 500);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "500\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ko5a806.php:17\nStack trace:\n#0 /tmp/tmp8ko5a806.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp8ko5a806.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp60b9_lk6.php:22\nStack trace:\n#0 /tmp/tmp60b9_lk6.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp60b9_lk6.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpegk_k_wh.php:23\nStack trace:\n#0 /tmp/tmpegk_k_wh.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpegk_k_wh.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(50, 100);\necho \"<br>\";\necho loss_amount(100, 100);\necho \"<br>\";\necho loss_amount(100, 150);\necho \"<br>\";\necho loss_amount(100, 0);\necho \"<br>\";\necho loss_amount(0, 100);\necho \"<br>\";\necho loss_amount(0, 0);\necho \"<br>\";\necho loss_amount(100, -50);\necho \"<br>\";\necho loss_amount(-50, 100);\necho \"<br>\";\necho loss_amount(-50, -50);\necho \"<br>\";\necho loss_amount(-50, -100);\necho \"<br>\";\necho loss_amount(-100, -50);\necho \"<br>\";\necho loss_amount(-100, -100);\necho \"<br>\";\necho loss_amount(-100, 0);\necho \"<br>\";\necho loss_amount(0, -100);\necho \"<br>\";\necho loss_amount(-100, -150);\necho \"<br>\";\necho loss_amount(-150, -100);\necho \"<br>\";\necho loss_amount(-150, -150);\necho \"<br>\";\necho loss_amount(-150, -200);\necho \"<br>\";\necho loss_amount(-200, -150);\necho \"<br>\";\necho loss_amount(-200, -200);\necho \"<br>\";\necho loss_amount(-200, 0);\necho \"<br>\";\necho loss_amount(0, -200);\necho \"<br>\";\necho loss_amount(-200, -250);\necho \"<br>\";\necho loss_amount(-250, -200);\necho \"<br>\";\necho loss_amount(-250, -250);\necho \"<br>\";\necho loss_amount(-250, -300);\necho \"<br>\";\necho loss_amount(-300, -250);\necho \"<br>\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50<br>0<br>0<br>0<br>100<br>0<br>0<br>150<br>0<br>0<br>50<br>0<br>0<br>0<br>100<br>50<br>0<br>0<br>50<br>0<br>0<br>0<br>200<br>50<br>0<br>0<br>50<br>0<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpol3d566s.php:73\nStack trace:\n#0 /tmp/tmpol3d566s.php(78): test()\n#1 {main}\n  thrown in /tmp/tmpol3d566s.php on line 73\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 90);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n0\n10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp90nbo6jr.php:25\nStack trace:\n#0 /tmp/tmp90nbo6jr.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp90nbo6jr.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n  if($actual_cost > $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    return $loss;\n  } else {\n    return 0;\n  }\n}\n\n$actual_cost = 100;\n$sale_amount = 50;\n\necho loss_amount($actual_cost, $sale_amount);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_xxsu2ra.php:21\nStack trace:\n#0 /tmp/tmp_xxsu2ra.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_xxsu2ra.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        echo \"Loss amount is: $loss\";\n    } else {\n        echo \"0\";\n    }\n}\nloss_amount(100, 80);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "Loss amount is: 20Loss amount is: 300\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc8kokxn8.php:17\nStack trace:\n#0 /tmp/tmpc8kokxn8.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpc8kokxn8.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeye831je.php:18\nStack trace:\n#0 /tmp/tmpeye831je.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpeye831je.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\tif ($actual_cost > $sale_amount) {\n\t\treturn $actual_cost - $sale_amount;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2rx7g8ge.php:21\nStack trace:\n#0 /tmp/tmp2rx7g8ge.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp2rx7g8ge.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwl9xvgl1.php:17\nStack trace:\n#0 /tmp/tmpwl9xvgl1.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpwl9xvgl1.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\tif($actual_cost > $sale_amount) {\n\t\treturn $actual_cost - $sale_amount;\n\t}\n\telse {\n\t\treturn 0;\n\t}\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_bubeh83.php:21\nStack trace:\n#0 /tmp/tmp_bubeh83.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_bubeh83.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\tif($actual_cost > $sale_amount) {\n\t\treturn $actual_cost - $sale_amount;\n\t}\n\telse {\n\t\treturn 0;\n\t}\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4rg6s8m4.php:18\nStack trace:\n#0 /tmp/tmp4rg6s8m4.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4rg6s8m4.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n0\n0\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv4ufehy7.php:80\nStack trace:\n#0 /tmp/tmpv4ufehy7.php(85): test()\n#1 {main}\n  thrown in /tmp/tmpv4ufehy7.php on line 80\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsftynoh7.php:21\nStack trace:\n#0 /tmp/tmpsftynoh7.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpsftynoh7.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7tvuu5u1.php:24\nStack trace:\n#0 /tmp/tmp7tvuu5u1.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7tvuu5u1.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjly0006s.php:17\nStack trace:\n#0 /tmp/tmpjly0006s.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpjly0006s.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(150, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n0\n0\n50\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb544vc0w.php:28\nStack trace:\n#0 /tmp/tmpb544vc0w.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpb544vc0w.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif ($loss > 0) {\n\t\treturn $loss;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 0);\necho \"\\n\";\necho loss_amount(100, -50);\necho \"\\n\";\necho loss_amount(100, -150);\necho \"\\n\";\necho loss_amount(100, -100);\necho \"\\n\";\necho loss_amount(100, -200);\necho \"\\n\";\necho loss_amount(100, -300);\necho \"\\n\";\necho loss_amount(100, -400);\necho \"\\n\";\necho loss_amount(100, -500);\necho \"\\n\";\necho loss_amount(100, -600);\necho \"\\n\";\necho loss_amount(100, -700);\necho \"\\n\";\necho loss_amount(100, -800);\necho \"\\n\";\necho loss_amount(100, -900);\necho \"\\n\";\necho loss_amount(100, -1000);\necho \"\\n\";\necho loss_amount(100, -1100);\necho \"\\n\";\necho loss_amount(100, -1200);\necho \"\\n\";\necho loss_amount(100, -1300);\necho \"\\n\";\necho loss_amount(100, -1400);\necho \"\\n\";\necho loss_amount(100, -1500);\necho \"\\n\";\necho loss_amount(100, -1600);\necho \"\\n\";\necho loss_amount(100, -1700);\necho \"\\n\";\necho loss_amount(100, -1800);\necho \"\\n\";\necho loss_amount(100, -1900);\necho \"\\n\";\necho loss_amount(100, -2000);\necho \"\\n\";\necho loss_amount(100, -2100);\necho \"\\n\";\necho loss_amount(100, -2200);\necho \"\\n\";\necho loss_amount(100, -2300);\necho \"\\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\", expecting \",\" or \";\" in /tmp/tmpd2l6aupf.php on line 75\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($sale_amount < $actual_cost) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4qisrz1h.php:17\nStack trace:\n#0 /tmp/tmp4qisrz1h.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp4qisrz1h.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcxi51tli.php:21\nStack trace:\n#0 /tmp/tmpcxi51tli.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpcxi51tli.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    }\n    return 0;\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphrybptbs.php:16\nStack trace:\n#0 /tmp/tmphrybptbs.php(21): test()\n#1 {main}\n  thrown in /tmp/tmphrybptbs.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\n$actual_cost = 100;\n$sale_amount = 50;\n\necho loss_amount($actual_cost, $sale_amount);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp71pp0_0i.php:21\nStack trace:\n#0 /tmp/tmp71pp0_0i.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp71pp0_0i.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss_amount = $actual_cost - $sale_amount;\n    if ($loss_amount > 0) {\n        return $loss_amount;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu8s2040p.php:17\nStack trace:\n#0 /tmp/tmpu8s2040p.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpu8s2040p.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\n$actual_cost = 100;\n$sale_amount = 50;\necho loss_amount($actual_cost, $sale_amount);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte63qpw8.php:20\nStack trace:\n#0 /tmp/tmpte63qpw8.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpte63qpw8.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss < 0) {\n        return 0;\n    } else {\n        return $loss;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr3jav0n5.php:25\nStack trace:\n#0 /tmp/tmpr3jav0n5.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpr3jav0n5.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif ($loss > 0) {\n\t\treturn $loss;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqkfofw1z.php:22\nStack trace:\n#0 /tmp/tmpqkfofw1z.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpqkfofw1z.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq1jdyzui.php:21\nStack trace:\n#0 /tmp/tmpq1jdyzui.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpq1jdyzui.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzrja8vqx.php:22\nStack trace:\n#0 /tmp/tmpzrja8vqx.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzrja8vqx.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq1jdyzui.php:21\nStack trace:\n#0 /tmp/tmpq1jdyzui.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpq1jdyzui.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    }\n    else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpev40afs7.php:18\nStack trace:\n#0 /tmp/tmpev40afs7.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpev40afs7.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(50, 100);\necho \"<br>\";\necho loss_amount(100, 100);\necho \"<br>\";\necho loss_amount(100, 150);\necho \"<br>\";\necho loss_amount(150, 100);\necho \"<br>\";\necho loss_amount(150, 150);\necho \"<br>\";\necho loss_amount(150, 200);\necho \"<br>\";\necho loss_amount(200, 150);\necho \"<br>\";\necho loss_amount(200, 200);\necho \"<br>\";\necho loss_amount(200, 250);\necho \"<br>\";\necho loss_amount(250, 200);\necho \"<br>\";\necho loss_amount(250, 250);\necho \"<br>\";\necho loss_amount(250, 300);\necho \"<br>\";\necho loss_amount(300, 250);\necho \"<br>\";\necho loss_amount(300, 300);\necho \"<br>\";\necho loss_amount(300, 350);\necho \"<br>\";\necho loss_amount(350, 300);\necho \"<br>\";\necho loss_amount(350, 350);\necho \"<br>\";\necho loss_amount(350, 400);\necho \"<br>\";\necho loss_amount(400, 350);\necho \"<br>\";\necho loss_amount(400, 400);\necho \"<br>\";\necho loss_amount(400, 450);\necho \"<br>\";\necho loss_amount(450, 400);\necho \"<br>\";\necho loss_amount(450, 450);\necho \"<br>\";\necho loss_amount(450, 500);\necho \"<br>\";\necho loss_amount(500, 450);\necho \"<br>\";\necho loss_amount(500, 500);\necho \"<br>\";\necho loss_amount(500, 550);\necho \"<br>\";\necho loss_amount(550, 500);\necho \"<br>\";\necho\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpav8f7ae2.php on line 71\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjly0006s.php:17\nStack trace:\n#0 /tmp/tmpjly0006s.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpjly0006s.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\tif($actual_cost > $sale_amount) {\n\t\treturn $actual_cost - $sale_amount;\n\t}\n\treturn 0;\n}\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkdkjqbyb.php:15\nStack trace:\n#0 /tmp/tmpkdkjqbyb.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpkdkjqbyb.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(1000, 500);\necho \"\\n\";\necho loss_amount(500, 1000);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "500\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjmi71cr1.php:22\nStack trace:\n#0 /tmp/tmpjmi71cr1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpjmi71cr1.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2nrh3q1g.php:19\nStack trace:\n#0 /tmp/tmp2nrh3q1g.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2nrh3q1g.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5_s4cl2.php:22\nStack trace:\n#0 /tmp/tmpx5_s4cl2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpx5_s4cl2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif ($loss > 0) {\n\t\treturn $loss;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 0);\necho \"\\n\";\necho loss_amount(100, -50);\necho \"\\n\";\necho loss_amount(100, -150);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n0\n100\n150\n250\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp66xd67t9.php:29\nStack trace:\n#0 /tmp/tmp66xd67t9.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp66xd67t9.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif($loss > 0) {\n\t\treturn $loss;\n\t}\n\telse {\n\t\treturn 0;\n\t}\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp71yiylbn.php:18\nStack trace:\n#0 /tmp/tmp71yiylbn.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp71yiylbn.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    }\n    return 0;\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyslwgihb.php:15\nStack trace:\n#0 /tmp/tmpyslwgihb.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpyslwgihb.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif ($loss > 0) {\n\t\treturn $loss;\n\t} else {\n\t\treturn 0;\n\t}\n}\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzqr9nu3o.php:21\nStack trace:\n#0 /tmp/tmpzqr9nu3o.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpzqr9nu3o.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2nrh3q1g.php:19\nStack trace:\n#0 /tmp/tmp2nrh3q1g.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2nrh3q1g.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphmwlg838.php:18\nStack trace:\n#0 /tmp/tmphmwlg838.php(23): test()\n#1 {main}\n  thrown in /tmp/tmphmwlg838.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphcgee79x.php:24\nStack trace:\n#0 /tmp/tmphcgee79x.php(29): test()\n#1 {main}\n  thrown in /tmp/tmphcgee79x.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 200);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcw0hz4ug.php:25\nStack trace:\n#0 /tmp/tmpcw0hz4ug.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpcw0hz4ug.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif ($loss > 0) {\n\t\treturn $loss;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7q2p1z8m.php:17\nStack trace:\n#0 /tmp/tmp7q2p1z8m.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp7q2p1z8m.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjly0006s.php:17\nStack trace:\n#0 /tmp/tmpjly0006s.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpjly0006s.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(1000, 500);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "500\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpijsdk4ze.php:18\nStack trace:\n#0 /tmp/tmpijsdk4ze.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpijsdk4ze.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6m9fhvo5.php:22\nStack trace:\n#0 /tmp/tmp6m9fhvo5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp6m9fhvo5.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq1jdyzui.php:21\nStack trace:\n#0 /tmp/tmpq1jdyzui.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpq1jdyzui.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptj2_f5_4.php:16\nStack trace:\n#0 /tmp/tmptj2_f5_4.php(21): test()\n#1 {main}\n  thrown in /tmp/tmptj2_f5_4.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(50, 100);\necho \"<br>\";\necho loss_amount(100, 100);\necho \"<br>\";\necho loss_amount(50, 50);\necho \"<br>\";\necho loss_amount(100, 150);\necho \"<br>\";\necho loss_amount(150, 100);\necho \"<br>\";\necho loss_amount(150, 150);\necho \"<br>\";\necho loss_amount(150, 200);\necho \"<br>\";\necho loss_amount(200, 150);\necho \"<br>\";\necho loss_amount(200, 200);\necho \"<br>\";\necho loss_amount(200, 250);\necho \"<br>\";\necho loss_amount(250, 200);\necho \"<br>\";\necho loss_amount(250, 250);\necho \"<br>\";\necho loss_amount(250, 300);\necho \"<br>\";\necho loss_amount(300, 250);\necho \"<br>\";\necho loss_amount(300, 300);\necho \"<br>\";\necho loss_amount(300, 350);\necho \"<br>\";\necho loss_amount(350, 300);\necho \"<br>\";\necho loss_amount(350, 350);\necho \"<br>\";\necho loss_amount(350, 400);\necho \"<br>\";\necho loss_amount(400, 350);\necho \"<br>\";\necho loss_amount(400, 400);\necho \"<br>\";\necho loss_amount(400, 450);\necho \"<br>\";\necho loss_amount(450, 400);\necho \"<br>\";\necho loss_amount(450, 450);\necho \"<br>\";\necho loss_amount(450, 500);\necho \"<br>\";\necho loss_amount(500, 450);\necho \"<br>\";\necho loss_amount(500, 500);\necho \"<br>\";\necho loss_amount(500, 550);\necho \"<br>\";\necho\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpr43qecjo.php on line 71\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    }\n    else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpml7uqbdx.php:22\nStack trace:\n#0 /tmp/tmpml7uqbdx.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpml7uqbdx.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaxqjljpd.php:20\nStack trace:\n#0 /tmp/tmpaxqjljpd.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpaxqjljpd.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5slbr1yn.php:21\nStack trace:\n#0 /tmp/tmp5slbr1yn.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp5slbr1yn.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho loss_amount(50, 100);\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "500\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpprzhe33i.php:20\nStack trace:\n#0 /tmp/tmpprzhe33i.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpprzhe33i.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
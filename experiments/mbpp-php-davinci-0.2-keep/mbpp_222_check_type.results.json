{
  "name": "mbpp_222_check_type",
  "language": "php",
  "prompt": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_222_check_type.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements have same data type.\";\n} else {\n    echo \"All elements do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $first_element = $test_tuple[0];\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != gettype($first_element)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\nvar_dump(check_type($test_tuple));\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "bool(true)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, 6);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 0; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$check = check_type($test_tuple);\nif ($check) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, 6);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $test_tuple_type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $test_tuple_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $first_element = $test_tuple[0];\n    $first_type = gettype($first_element);\n    $flag = true;\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $first_type) {\n            $flag = false;\n            break;\n        }\n    }\n    return $flag;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, 6, 7);\n$test_tuple1 = array(1, 2, 3, 4, 5, 6, \"7\");\n$test_tuple2 = array(1, 2, 3, 4, 5, 6, 7.0);\n$test_tuple3 = array(1, 2, 3, 4, 5, 6, \"7.0\");\n\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type.\";\n} else {\n    echo \"All elements in tuple do not have same data type.\";\n}\n\necho \"<br>\";\n\nif (check_type($test_tuple1)) {\n    echo \"All elements in tuple have same data type.\";\n} else {\n    echo \"All elements in tuple do not have same data type.\";\n}\n\necho \"<br>\";\n\nif (check_type($test_tuple2)) {\n    echo \"All elements in tuple have same data type.\";\n} else {\n    echo \"All elements in tuple do not have same data type.\";\n}\n\necho \"<br>\";\n\nif (check_type($test_tuple3)) {\n    echo \"All elements in tuple have same data type.\";\n} else {\n    echo \"All elements in tuple do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements in tuple have same data type.<br>All elements in tuple do not have same data type.<br>All elements in tuple do not have same data type.<br>All elements in tuple do not have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$test_tuple1 = array(1, 2, 3, 4, \"5\");\necho check_type($test_tuple);\necho \"<br>\";\necho check_type($test_tuple1);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "1<br>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $result = array_unique(array_map('gettype', $test_tuple));\n    if (count($result) === 1) {\n        echo \"All elements have same data type\\n\";\n    } else {\n        echo \"All elements do not have same data type\\n\";\n    }\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\ncheck_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5, \"a\");\ncheck_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5, \"a\", \"b\");\ncheck_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5, \"a\", \"b\", \"c\");\ncheck_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5, \"a\", \"b\", \"c\", \"d\");\ncheck_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5, \"a\", \"b\", \"c\", \"d\", \"e\");\ncheck_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5, \"a\", \"b\", \"c\", \"d\", \"e\", \"f\");\ncheck_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5, \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\");\ncheck_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5, \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\");\ncheck_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5, \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\");\ncheck_type($test_tuple);\n\n$test_\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpgg5yki99.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\n\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, \"5\");\necho check_type($test_tuple);\n\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, 5.0);\necho check_type($test_tuple);\n\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\");\necho check_type($test_tuple);\n\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true);\necho check_type($test_tuple);\n\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, false);\necho check_type($test_tuple);\n\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, false, null);\necho check_type($test_tuple);\n\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, false, null, array());\necho check_type($test_tuple);\n\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, false, null, array(), new stdClass());\necho check_type($test_tuple);\n\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, false, null, array(), new stdClass(), fopen(\"test.txt\",\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpm36rz35j.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\nvar_dump(check_type($test_tuple));\n$test_tuple = array(1, 2, 3, 4, \"5\");\nvar_dump(check_type($test_tuple));\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "bool(true)\nbool(false)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for($i=0; $i<count($test_tuple); $i++) {\n        if(gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for($i = 0; $i < count($test_tuple); $i++) {\n        if($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif($result) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 0; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type.\";\n} else {\n    echo \"All elements in tuple do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $item) {\n        if ($type != gettype($item)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $flag = 0;\n    while ($i < $count - 1) {\n        if (gettype($test_tuple[$i]) == gettype($test_tuple[$i + 1])) {\n            $flag = 1;\n        }\n        else {\n            $flag = 0;\n            break;\n        }\n        $i++;\n    }\n    if ($flag == 1) {\n        echo \"All elements in tuple have same data type\";\n    }\n    else {\n        echo \"All elements in tuple do not have same data type\";\n    }\n}\n$test_tuple = array(1, 2, 3, 4, 5);\ncheck_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data typeAll elements in tuple have same data type\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe1ki9jl3.php:31\nStack trace:\n#0 /tmp/tmpe1ki9jl3.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpe1ki9jl3.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, 6);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\nvar_dump(check_type($test_tuple));\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "bool(true)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $test_tuple_type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $test_tuple_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple) ? \"All elements are of same type\" : \"All elements are not of same type\";\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple have different data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if (gettype($test_tuple[$i]) == $type) {\n            $i++;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\nvar_dump(check_type($test_tuple));\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "bool(true)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, \"5\");\nvar_dump(check_type($test_tuple));\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "bool(true)\nbool(false)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 0; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\nvar_dump(check_type($test_tuple));\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "bool(true)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $j = 0;\n    $flag = 0;\n    while ($i < $count) {\n        $j = $i + 1;\n        while ($j < $count) {\n            if (gettype($test_tuple[$i]) == gettype($test_tuple[$j])) {\n                $flag = 1;\n            } else {\n                $flag = 0;\n                break;\n            }\n            $j++;\n        }\n        $i++;\n    }\n    if ($flag == 1) {\n        echo \"All elements have same data type\";\n    } else {\n        echo \"All elements do not have same data type\";\n    }\n}\n$test_tuple = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\ncheck_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements have same data typeAll elements have same data type\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg03bgarv.php:34\nStack trace:\n#0 /tmp/tmpg03bgarv.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpg03bgarv.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 0; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\necho \"\\n\";\n\n$test_tuple = array(1, 2, 3, 4, \"5\");\necho check_type($test_tuple);\necho \"\\n\";\n\n$test_tuple = array(1, 2, 3, 4, 5.0);\necho check_type($test_tuple);\necho \"\\n\";\n\n$test_tuple = array(1, 2, 3, 4, true);\necho check_type($test_tuple);\necho \"\\n\";\n\n$test_tuple = array(1, 2, 3, 4, \"5\", true);\necho check_type($test_tuple);\necho \"\\n\";\n\n$test_tuple = array(1, 2, 3, 4, 5.0, true);\necho check_type($test_tuple);\necho \"\\n\";\n\n$test_tuple = array(1, 2, 3, 4, 5.0, true, \"7\");\necho check_type($test_tuple);\necho \"\\n\";\n\n$test_tuple = array(1, 2, 3, 4, 5.0, true, \"7\", 8);\necho check_type($test_tuple);\necho \"\\n\";\n\n$test_tuple = array(1, 2, 3, 4, 5.0, true, \"7\", 8, 9);\necho check_type($test_tuple);\necho \"\\n\";\n\n$test_tuple = array(1, 2, 3, 4, 5.0, true, \"7\", 8, 9, 10);\necho check_type($test_tuple);\necho \"\\n\";\n\n$test_tuple = array(1, 2, 3, 4, 5.0, true, \"7\", 8, 9, 10, 11);\necho check_type($\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp0iey4kyp.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    $i = 0;\n    while ($i < count($test_tuple)) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    for ($i = 1; $i < $count; $i++) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, \"5\");\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $val) {\n        if (gettype($val) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\nvar_dump(check_type($test_tuple));\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "bool(true)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, \"5\");\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, \"5\", \"a\");\nvar_dump(check_type($test_tuple));\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "bool(true)\nbool(false)\nbool(false)\nbool(false)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $flag = 0;\n    while ($i < $count) {\n        if (gettype($test_tuple[$i]) == gettype($test_tuple[$i + 1])) {\n            $flag = 1;\n        } else {\n            $flag = 0;\n            break;\n        }\n        $i++;\n    }\n    if ($flag == 1) {\n        echo \"All elements have same data type\";\n    } else {\n        echo \"All elements do not have same data type\";\n    }\n}\n$test_tuple = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\ncheck_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "\nWarning: Undefined array key 10 in /tmp/tmpztgxjyp8.php on line 8\nAll elements do not have same data type\nWarning: Undefined array key 6 in /tmp/tmpztgxjyp8.php on line 8\nAll elements do not have same data type\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpztgxjyp8.php:29\nStack trace:\n#0 /tmp/tmpztgxjyp8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpztgxjyp8.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type.\";\n} else {\n    echo \"All elements in tuple do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $test_tuple_type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $test_tuple_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, \"5\");\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\");\nvar_dump(check_type($test_tuple));\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "bool(true)\nbool(false)\nbool(false)\nbool(false)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    while ($i < $count) {\n        if (gettype($test_tuple[$i]) == gettype($test_tuple[$i + 1])) {\n            $i++;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5, 6);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "\nWarning: Undefined array key 6 in /tmp/tmpnlp_29ao.php on line 7\nAll elements in tuple do not have same data type\nWarning: Undefined array key 6 in /tmp/tmpnlp_29ao.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnlp_29ao.php:26\nStack trace:\n#0 /tmp/tmpnlp_29ao.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpnlp_29ao.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4);\n$result = check_type($test_tuple);\necho $result;\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $test_tuple_type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $test_tuple_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, \"5\");\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 0; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$test_tuple1 = array(\"a\", \"b\", \"c\", \"d\", \"e\");\n$test_tuple2 = array(1, \"a\", 2, \"b\", 3);\n\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\n\necho \"<br>\";\n\nif (check_type($test_tuple1)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\n\necho \"<br>\";\n\nif (check_type($test_tuple2)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type<br>All elements in tuple have same data type<br>All elements in tuple do not have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple) ? \"All elements have same data type\" : \"All elements do not have same data type\";\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $flag = 0;\n    while($i < $count) {\n        if(gettype($test_tuple[$i]) != gettype($test_tuple[$i+1])) {\n            $flag = 1;\n            break;\n        }\n        $i++;\n    }\n    if($flag == 1) {\n        echo \"All elements in tuple are not of same data type\";\n    }\n    else {\n        echo \"All elements in tuple are of same data type\";\n    }\n}\n$test_tuple = array(1, 2, 3, 4, 5);\ncheck_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "\nWarning: Undefined array key 5 in /tmp/tmphu04vb6u.php on line 8\nAll elements in tuple are not of same data type\nWarning: Undefined array key 6 in /tmp/tmphu04vb6u.php on line 8\nAll elements in tuple are not of same data type\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphu04vb6u.php:28\nStack trace:\n#0 /tmp/tmphu04vb6u.php(33): test()\n#1 {main}\n  thrown in /tmp/tmphu04vb6u.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple) ? \"All elements have same data type\" : \"All elements don't have same data type\";\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, 6);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in tuple have same data type.\";\n} else {\n    echo \"All elements in tuple do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    while ($i < $count) {\n        if (gettype($test_tuple[$i]) == gettype($test_tuple[$i + 1])) {\n            $i++;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, \"5\");\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\");\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, array(1, 2, 3));\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, array(1, 2, 3), \"7\");\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, array(1, 2, 3), \"7\", 8);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, array(1, 2, 3), \"7\", 8, 9.0);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpn512ymxe.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $first_element = $test_tuple[0];\n    $first_element_type = gettype($first_element);\n    $flag = true;\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $first_element_type) {\n            $flag = false;\n            break;\n        }\n    }\n    if ($flag) {\n        echo \"All elements have same data type\";\n    } else {\n        echo \"All elements do not have same data type\";\n    }\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\ncheck_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements have same data typeAll elements have same data type\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm690ev93.php:27\nStack trace:\n#0 /tmp/tmpm690ev93.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpm690ev93.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All the elements in tuple have same data type\";\n} else {\n    echo \"All the elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All the elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $item) {\n        if (gettype($item) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho check_type($test_tuple) ? \"All elements are of same type\" : \"Elements are of different types\";\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $first_type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $first_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple) ? \"All elements have same data type\" : \"All elements do not have same data type\";\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type == gettype($test_tuple[$i])) {\n            $i++;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $item) {\n        if (gettype($item) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[0]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, 6, 7);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 0; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple are of same data type\";\n} else {\n    echo \"All elements in tuple are not of same data type\";\n}\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple are of same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 0; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in tuple have same data type.\";\n} else {\n    echo \"All elements in tuple do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$test_tuple1 = array(1, 2, 3, 4, \"5\");\n$test_tuple2 = array(1, 2, 3, 4, 5, \"5\");\n$test_tuple3 = array(1, 2, 3, 4, 5, \"5\", 6);\n$test_tuple4 = array(1, 2, 3, 4, 5, \"5\", 6, 7);\n$test_tuple5 = array(1, 2, 3, 4, 5, \"5\", 6, 7, 8);\n$test_tuple6 = array(1, 2, 3, 4, 5, \"5\", 6, 7, 8, 9);\n$test_tuple7 = array(1, 2, 3, 4, 5, \"5\", 6, 7, 8, 9, 10);\n$test_tuple8 = array(1, 2, 3, 4, 5, \"5\", 6, 7, 8, 9, 10, 11);\n$test_tuple9 = array(1, 2, 3, 4, 5, \"5\", 6, 7, 8, 9, 10, 11, 12);\n$test_tuple10 = array(1, 2, 3, 4, 5, \"5\", 6, 7, 8, 9, 10, 11, 12, 13);\n$test_tuple11 = array(1, 2, 3, 4, 5, \"5\", 6, 7, 8, 9, 10, 11, 12, 13, 14);\n$test_tuple12 = array(1, 2, 3, 4, 5, \"5\", 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n$test_tuple13 = array(1, 2, 3, 4, 5,\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp_nza6xee.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements have same data type.\";\n} else {\n    echo \"All elements do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for($i=1; $i<count($test_tuple); $i++) {\n        if(gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif($result) {\n    echo \"All elements in tuple have same data type\";\n}\nelse {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $flag = 0;\n    while ($i < $count) {\n        if (gettype($test_tuple[$i]) == gettype($test_tuple[$i + 1])) {\n            $flag = 1;\n        }\n        else {\n            $flag = 0;\n            break;\n        }\n        $i++;\n    }\n    if ($flag == 1) {\n        echo \"All elements have same data type\";\n    }\n    else {\n        echo \"All elements do not have same data type\";\n    }\n}\n$test_tuple = array(1, 2, 3, 4, 5);\ncheck_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "\nWarning: Undefined array key 5 in /tmp/tmpbwiijadk.php on line 8\nAll elements do not have same data type\nWarning: Undefined array key 6 in /tmp/tmpbwiijadk.php on line 8\nAll elements do not have same data type\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbwiijadk.php:31\nStack trace:\n#0 /tmp/tmpbwiijadk.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpbwiijadk.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $flag = 0;\n    while($i < $count) {\n        $data_type = gettype($test_tuple[$i]);\n        if($data_type == gettype($test_tuple[$i+1])) {\n            $flag = 1;\n        }\n        else {\n            $flag = 0;\n            break;\n        }\n        $i++;\n    }\n    if($flag == 1) {\n        echo \"All elements have same data type\";\n    }\n    else {\n        echo \"All elements do not have same data type\";\n    }\n}\n$test_tuple = array(1,2,3,4,5);\ncheck_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "\nWarning: Undefined array key 5 in /tmp/tmpxd6e8bh5.php on line 9\nAll elements do not have same data type\nWarning: Undefined array key 6 in /tmp/tmpxd6e8bh5.php on line 9\nAll elements do not have same data type\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxd6e8bh5.php:32\nStack trace:\n#0 /tmp/tmpxd6e8bh5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpxd6e8bh5.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $test_tuple_type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $test_tuple_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type.\";\n} else {\n    echo \"All elements in tuple do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, \"5\");\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\");\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, array(1, 2, 3));\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, array(1, 2, 3), new stdClass());\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, array(1, 2, 3), new stdClass(), null);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, array(1, 2, 3), new stdClass(), null, new stdClass());\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, array(1, 2, 3), new stdClass(), null, new stdClass(), null);\nvar_\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp5mco2lam.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $item) {\n        if (gettype($item) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, \"5\");\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type.\";\n} else {\n    echo \"All elements in tuple do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements in tuple have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple) ? \"True\" : \"False\";\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "True",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if ($type != gettype($value)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $test_tuple_type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $test_tuple_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while($i < $count) {\n        if(gettype($test_tuple[$i]) == $type) {\n            $i++;\n        }\n        else {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1,2,3,4,5);\n$result = check_type($test_tuple);\nif($result) {\n    echo \"All elements have same data type\";\n}\nelse {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\nvar_dump(check_type($test_tuple));\n$test_tuple = array(1, 2, 3, 4, \"5\");\nvar_dump(check_type($test_tuple));\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "bool(true)\nbool(false)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $first_element = $test_tuple[0];\n    $type = gettype($first_element);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in tuple have same data type.\";\n} else {\n    echo \"All elements in tuple do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements in tuple have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[0]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, \"5\");\nvar_dump(check_type($test_tuple));\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "bool(true)\nbool(false)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All the elements in tuple have same data type\";\n} else {\n    echo \"All the elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All the elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple) ? \"All elements have same data type\" : \"All elements don't have same data type\";\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    while ($i < $count) {\n        if (gettype($test_tuple[$i]) != gettype($test_tuple[0])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, 6);\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5, \"6\");\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if (gettype($test_tuple[$i]) == $type) {\n            $i++;\n        }\n        else {\n            return false;\n        }\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4);\nvar_dump(check_type($test_tuple));\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "bool(true)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $first_type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $first_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, \"5\");\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple are of same type\";\n} else {\n    echo \"All elements in tuple are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements in tuple are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All the elements in tuple have same data type\";\n} else {\n    echo \"All the elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All the elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5, \"a\");\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5, \"a\", \"b\");\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5, \"a\", \"b\", \"c\");\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5, \"a\", \"b\", \"c\", \"d\");\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5, \"a\", \"b\", \"c\", \"d\", \"e\");\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5, \"a\", \"b\", \"c\", \"d\", \"e\", \"f\");\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5, \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\");\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5, \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\");\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5, \"a\",\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpfjoej52e.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All the elements in tuple have same data type\";\n} else {\n    echo \"All the elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All the elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, 6);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple) ? \"All elements have same data type\" : \"All elements do not have same data type\";\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if (gettype($test_tuple[$i]) == $type) {\n            $i++;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5, 6);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple don't have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < sizeof($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $first_type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if (gettype($test_tuple[$i]) != $first_type) {\n            return \"False\";\n        }\n        $i++;\n    }\n    return \"True\";\n}\n$test_tuple = array(1, 2, 3, 4, 5);\nprint_r(check_type($test_tuple));\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "True\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb66ragjw.php:22\nStack trace:\n#0 /tmp/tmpb66ragjw.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpb66ragjw.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 0; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, 6);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 0; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $first_element = $test_tuple[0];\n    $first_element_type = gettype($first_element);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $first_element_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, \"5\");\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5.0);\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\");\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5.0, 6.0);\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5.0, 6.0, \"7\");\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5.0, 6.0, 7.0);\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5.0, 6.0, 7.0, \"8\");\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5.0, 6.0, 7.0, 8.0);\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5.0, 6.0, 7.0, 8.0, \"9\");\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5.0, 6.0, 7.0, 8.0, 9.0);\necho check_type($\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpyiwud0iw.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if ($type != gettype($value)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple) ? \"True\" : \"False\";\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "True",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $test_tuple_type = gettype($test_tuple[0]);\n    $test_tuple_length = count($test_tuple);\n    for ($i = 1; $i < $test_tuple_length; $i++) {\n        if ($test_tuple_type != gettype($test_tuple[$i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in tuple have same data type.\";\n} else {\n    echo \"All elements in tuple do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements in tuple have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5, 6);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type.\";\n} else {\n    echo \"All elements in tuple do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements in tuple have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return \"Not all elements are of same type\";\n        }\n    }\n    return \"All elements are of same type\";\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements are of same type\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvn4r552r.php:21\nStack trace:\n#0 /tmp/tmpvn4r552r.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpvn4r552r.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All the elements in tuple have same data type\";\n} else {\n    echo \"All the elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All the elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type.\";\n} else {\n    echo \"All elements in tuple do not have same data type.\";\n}\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements in tuple have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $result = array_unique(array_map('gettype', $test_tuple));\n    if (count($result) == 1) {\n        echo \"All elements have same data type\";\n    } else {\n        echo \"All elements do not have same data type\";\n    }\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\ncheck_type($test_tuple);\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements have same data typeAll elements have same data type\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptv_fhezv.php:20\nStack trace:\n#0 /tmp/tmptv_fhezv.php(25): test()\n#1 {main}\n  thrown in /tmp/tmptv_fhezv.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type.\";\n} else {\n    echo \"All elements in tuple do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements in tuple have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, 6, 7);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\nvar_dump(check_type($test_tuple));\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "bool(true)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, \"5\");\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, \"5\");\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type.\";\n} else {\n    echo \"All elements in tuple do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $flag = 0;\n    while ($i < $count) {\n        if (gettype($test_tuple[$i]) == gettype($test_tuple[$i + 1])) {\n            $flag = 1;\n        }\n        else {\n            $flag = 0;\n            break;\n        }\n        $i++;\n    }\n    if ($flag == 1) {\n        echo \"All elements in tuple have same data type\";\n    }\n    else {\n        echo \"All elements in tuple do not have same data type\";\n    }\n}\n$test_tuple = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\ncheck_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "\nWarning: Undefined array key 10 in /tmp/tmp44et6bpw.php on line 8\nAll elements in tuple do not have same data type\nWarning: Undefined array key 6 in /tmp/tmp44et6bpw.php on line 8\nAll elements in tuple do not have same data type\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp44et6bpw.php:31\nStack trace:\n#0 /tmp/tmp44et6bpw.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp44et6bpw.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $j = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type == gettype($test_tuple[$i])) {\n            $j++;\n        }\n        $i++;\n    }\n    if ($j == $count) {\n        echo \"All elements have same data type\";\n    } else {\n        echo \"All elements do not have same data type\";\n    }\n}\n$test_tuple = array(1, 2, 3, 4, 5);\ncheck_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements have same data typeAll elements have same data type\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgh114ggz.php:27\nStack trace:\n#0 /tmp/tmpgh114ggz.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgh114ggz.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 0; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5, 6);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $test_tuple_type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $test_tuple_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if ($type != gettype($value)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, 6);\n$test_tuple1 = array(1, 2, 3, 4, 5, \"6\");\n$test_tuple2 = array(1, 2, 3, 4, 5, 6.0);\n$test_tuple3 = array(1, 2, 3, 4, 5, true);\n\necho check_type($test_tuple) . \"\\n\";\necho check_type($test_tuple1) . \"\\n\";\necho check_type($test_tuple2) . \"\\n\";\necho check_type($test_tuple3) . \"\\n\";\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "1\n\n\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, \"5\");\necho check_type($test_tuple);\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, 5.0);\necho check_type($test_tuple);\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\");\necho check_type($test_tuple);\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true);\necho check_type($test_tuple);\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, array(1, 2, 3));\necho check_type($test_tuple);\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, array(1, 2, 3), new stdClass());\necho check_type($test_tuple);\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, array(1, 2, 3), new stdClass(), null);\necho check_type($test_tuple);\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, array(1, 2, 3), new stdClass(), null, function() {});\necho check_type($test_tuple);\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\", expecting \")\" in /tmp/tmp9t6550xt.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"Elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $flag = 0;\n    $first_type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($first_type != gettype($test_tuple[$i])) {\n            $flag = 1;\n            break;\n        }\n        $i++;\n    }\n    if ($flag == 0) {\n        echo \"All elements have same data type\";\n    } else {\n        echo \"All elements do not have same data type\";\n    }\n}\n$test_tuple = array(1, 2, 3, 4, 5);\ncheck_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements have same data typeAll elements have same data type\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg06udaia.php:28\nStack trace:\n#0 /tmp/tmpg06udaia.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpg06udaia.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$test_tuple1 = array(1, 2, 3, 4, \"5\");\n\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\n\necho \"<br>\";\n\nif (check_type($test_tuple1)) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements in tuple have same data type<br>All elements in tuple do not have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in tuple have same data type\";\n} else {\n    echo \"All elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$test_tuple2 = array(1, 2, 3, 4, \"5\");\n$test_tuple3 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n\necho check_type($test_tuple) . \"\\n\";\necho check_type($test_tuple2) . \"\\n\";\necho check_type($test_tuple3) . \"\\n\";\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "1\n\n1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for($i = 1; $i < count($test_tuple); $i++) {\n        if(gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif($result) {\n    echo \"All elements have same data type.\";\n} else {\n    echo \"All elements do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in tuple have same data type.\";\n} else {\n    echo \"All elements in tuple do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements in tuple have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in the tuple have same data type.\";\n} else {\n    echo \"All elements in the tuple do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements in the tuple have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    $result = true;\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            $result = false;\n            break;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 0; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple) ? \"True\" : \"False\";\n\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, \"5\");\necho check_type($test_tuple) ? \"True\" : \"False\";\n\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, 5.0);\necho check_type($test_tuple) ? \"True\" : \"False\";\n\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\");\necho check_type($test_tuple) ? \"True\" : \"False\";\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "True<br>False<br>False<br>False",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in tuple have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All the elements in tuple have same data type\";\n} else {\n    echo \"All the elements in tuple do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123482,
      "stdout": "All the elements in tuple have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_245_max_sum",
  "language": "php",
  "prompt": "<?php\n// Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum($arr) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_245_max_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return max_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 15, 51, 45, 33, 100, 12, 18, 9)) !== 194) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(80, 60, 30, 40, 20, 10)) !== 210) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 3, 14, 16, 21, 23, 29, 30)) !== 138) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $max = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        $sum = 0;\n        for ($j = $i; $j < $n; $j++) {\n            $sum += $arr[$j];\n            if ($sum > $max) {\n                $max = $sum;\n            }\n        }\n    }\n    return $max;\n}\n\n$arr = [1, 15, 51, 45, 33, 100, 12, 18, 9];\necho max_sum($arr);",
    "    $max = $arr[0];\n    $sum = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        $sum += $arr[$i];\n        if ($sum > $max) {\n            $max = $sum;\n        }\n        if ($sum < 0) {\n            $sum = 0;\n        }\n    }\n    return $max;\n}\n",
    "    $inc = [];\n    $dec = [];\n    $inc[0] = $dec[count($arr) - 1] = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        $inc[$i] = max($inc[$i - 1] + $arr[$i], $arr[$i]);\n        $dec[count($arr) - 1 - $i] = max($dec[count($arr) - $i] + $arr[count($arr) - 1 - $i], $arr[count($arr) - 1 - $i]);\n    }\n    $max = $inc[0] + $dec[0] - $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr[$i]);\n    }\n    return $max;\n}\n\n$arr = [1, 15, 51, 45, 33, 100, 12, 18, 9];\necho max_sum($arr);",
    "    $max_sum = 0;\n    $sum = 0;\n    $len = count($arr);\n    for ($i = 0; $i < $len; $i++) {\n        $sum += $arr[$i];\n        if ($sum > $max_sum) {\n            $max_sum = $sum;\n        }\n        if ($sum < 0) {\n            $sum = 0;\n        }\n    }\n    return $max_sum;\n}\n",
    "    $max = 0;\n    $sum = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        $sum += $arr[$i];\n        if ($sum < 0) {\n            $sum = 0;\n        }\n        if ($sum > $max) {\n            $max = $sum;\n        }\n    }\n    return $max;\n}\n",
    "    $max = 0;\n    $len = count($arr);\n    $sum = 0;\n    for ($i = 0; $i < $len; $i++) {\n        $sum += $arr[$i];\n        if ($sum > $max) {\n            $max = $sum;\n        }\n        if ($sum < 0) {\n            $sum = 0;\n        }\n    }\n    return $max;\n}\n",
    "    $max = 0;\n    $len = count($arr);\n    for ($i = 0; $i < $len; $i++) {\n        $sum = 0;\n        $j = $i;\n        while ($j < $len) {\n            $sum += $arr[$j];\n            $j++;\n        }\n        $j = $i - 1;\n        while ($j >= 0) {\n            $sum += $arr[$j];\n            $j--;\n        }\n        if ($sum > $max) {\n            $max = $sum;\n        }\n    }\n    return $max;\n}\n\n$arr = [1, 15, 51, 45, 33, 100, 12, 18, 9];\necho max_sum($arr);",
    "    $max_sum = 0;\n    $len = count($arr);\n    $inc = array_fill(0, $len, 0);\n    $dec = array_fill(0, $len, 0);\n    $inc[0] = $arr[0];\n    $dec[$len - 1] = $arr[$len - 1];\n    for ($i = 1; $i < $len; $i++) {\n        $inc[$i] = max($arr[$i], $inc[$i - 1] + $arr[$i]);\n    }\n    for ($i = $len - 2; $i >= 0; $i--) {\n        $dec[$i] = max($arr[$i], $dec[$i + 1] + $arr[$i]);\n    }\n    for ($i = 0; $i < $len; $i++) {\n        $max_sum = max($max_sum, $inc[$i] + $dec[$i] - $arr[$i]);\n    }\n    return $max_sum;\n}\n\n$arr = [1, 15, 51, 45, 33, 100, 12, 18, 9];\necho max_sum($arr);",
    "    $n = count($arr);\n    $left = array_fill(0, $n, 0);\n    $right = array_fill(0, $n, 0);\n    $left[0] = $arr[0];\n    $right[$n - 1] = $arr[$n - 1];\n    for ($i = 1; $i < $n; $i++) {\n        $left[$i] = max($left[$i - 1], $arr[$i]);\n    }\n    for ($i = $n - 2; $i >= 0; $i--) {\n        $right[$i] = max($right[$i + 1], $arr[$i]);\n    }\n    $sum = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum += min($left[$i], $right[$i]);\n    }\n    return $sum;\n}\n\n$arr = [1, 15, 51, 45, 33, 100, 12, 18, 9];\necho max_sum($arr);",
    "    $max = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        $sum = 0;\n        for ($j = $i; $j < $n; $j++) {\n            $sum += $arr[$j];\n            if ($sum > $max) {\n                $max = $sum;\n            }\n        }\n    }\n    return $max;\n}\n\n$arr = array(1, 15, 51, 45, 33, 100, 12, 18, 9);\necho max_sum($arr);",
    "    $n = count($arr);\n    $inc = array_fill(0, $n, 0);\n    $dec = array_fill(0, $n, 0);\n    $inc[0] = $arr[0];\n    $dec[$n-1] = $arr[$n-1];\n    for ($i = 1; $i < $n; $i++) {\n        $inc[$i] = max($inc[$i-1], $arr[$i]);\n    }\n    for ($i = $n-2; $i >= 0; $i--) {\n        $dec[$i] = max($dec[$i+1], $arr[$i]);\n    }\n    $max = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr[$i]);\n    }\n    return $max;\n}\n\n$arr = [1, 15, 51, 45, 33, 100, 12, 18, 9];\necho max_sum($arr);",
    "    $max_sum = 0;\n    $max_sum_arr = [];\n    for ($i = 0; $i < count($arr); $i++) {\n        $max_sum_arr[$i] = $arr[$i];\n        for ($j = 0; $j < $i; $j++) {\n            if ($arr[$i] > $arr[$j] && $max_sum_arr[$i] < $max_sum_arr[$j] + $arr[$i]) {\n                $max_sum_arr[$i] = $max_sum_arr[$j] + $arr[$i];\n            }\n        }\n        if ($max_sum < $max_sum_arr[$i]) {\n            $max_sum = $max_sum_arr[$i];\n        }\n    }\n    return $max_sum;\n}\n\n$arr = [1, 15, 51, 45, 33, 100, 12, 18, 9];\necho max_sum($arr);",
    "    $max = 0;\n    $len = count($arr);\n    for ($i = 0; $i < $len; $i++) {\n        $sum = 0;\n        for ($j = $i; $j < $len; $j++) {\n            $sum += $arr[$j];\n            if ($sum > $max) {\n                $max = $sum;\n            }\n        }\n    }\n    return $max;\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1];\necho max_sum($arr);",
    "    $inc = $dec = array_fill(0, count($arr), 0);\n    $inc[0] = $dec[count($arr) - 1] = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        $inc[$i] = max($inc[$i - 1] + $arr[$i], $arr[$i]);\n        $dec[count($arr) - 1 - $i] = max($dec[count($arr) - $i] + $arr[count($arr) - 1 - $i], $arr[count($arr) - 1 - $i]);\n    }\n    $max = $inc[0] + $dec[0] - $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr[$i]);\n    }\n    return $max;\n}\n\n$arr = [1, 15, 51, 45, 33, 100, 12, 18, 9];\necho max_sum($arr);",
    "    $inc = array_fill(0, count($arr), 0);\n    $dec = array_fill(0, count($arr), 0);\n    $inc[0] = $arr[0];\n    $dec[count($arr) - 1] = $arr[count($arr) - 1];\n    for ($i = 1; $i < count($arr); $i++) {\n        $inc[$i] = max($inc[$i - 1] + $arr[$i], $arr[$i]);\n    }\n    for ($i = count($arr) - 2; $i >= 0; $i--) {\n        $dec[$i] = max($dec[$i + 1] + $arr[$i], $arr[$i]);\n    }\n    $max = $inc[0] + $dec[0] - $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr[$i]);\n    }\n    return $max;\n}\n\n$arr = [1, 15, 51, 45, 33, 100, 12, 18, 9];\necho max_sum($arr);",
    "  $max = 0;\n  $len = count($arr);\n  for ($i = 0; $i < $len; $i++) {\n    $sum = 0;\n    for ($j = $i; $j < $len; $j++) {\n      $sum += $arr[$j];\n      if ($sum > $max) {\n        $max = $sum;\n      }\n    }\n  }\n  return $max;\n}\n\n$arr = [1, 15, 51, 45, 33, 100, 12, 18, 9];\necho max_sum($arr) . PHP_EOL;",
    "    $max = 0;\n    $len = count($arr);\n    $sum = 0;\n    for ($i = 0; $i < $len; $i++) {\n        $sum += $arr[$i];\n        if ($sum < 0) {\n            $sum = 0;\n        }\n        if ($sum > $max) {\n            $max = $sum;\n        }\n    }\n    return $max;\n}\n",
    "    $len = count($arr);\n    $max = 0;\n    for ($i = 0; $i < $len; $i++) {\n        $sum = 0;\n        for ($j = $i; $j < $len; $j++) {\n            $sum += $arr[$j];\n            if ($sum > $max) {\n                $max = $sum;\n            }\n        }\n    }\n    return $max;\n}\n\n$arr = [1, 15, 51, 45, 33, 100, 12, 18, 9];\necho max_sum($arr);",
    "    $max = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        $max = max($max, $arr[$i]);\n    }\n    return $max;\n}\n\n$arr = [1, 15, 51, 45, 33, 100, 12, 18, 9];\necho max_sum($arr);",
    "    $max = $arr[0];\n    $sum = 0;\n    $len = count($arr);\n    for ($i = 0; $i < $len; $i++) {\n        $sum += $arr[$i];\n        if ($sum > $max) {\n            $max = $sum;\n        }\n        if ($sum < 0) {\n            $sum = 0;\n        }\n    }\n    return $max;\n}\n"
  ]
}
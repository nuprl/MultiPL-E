{
  "name": "mbpp_160_find_solution",
  "language": "php",
  "prompt": "<?php\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nfunction find_solution($a, $b, $n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_160_find_solution.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return find_solution(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 7) !== array(2, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 7) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 13, 17) !== array(4, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $x = 0;\n    $y = 0;\n    while ($x * $a <= $n) {\n        if (($n - ($x * $a)) % $b == 0) {\n            $y = ($n - ($x * $a)) / $b;\n            return array($x, $y);\n        }\n        $x++;\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x * $a <= $n; $x++) {\n        $y = ($n - $x * $a) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    if ($a == 0) {\n        if ($b == 0) {\n            return null;\n        } else {\n            return array(0, $n / $b);\n        }\n    } else {\n        $x = $n / $a;\n        $y = ($n - $a * $x) / $b;\n        if ($y < 0) {\n            return null;\n        } else {\n            return array($x, $y);\n        }\n    }\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && is_int($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    if ($a == 0) {\n        if ($n == 0) {\n            return [0, 0];\n        } else {\n            return null;\n        }\n    }\n    $x = $n / $a;\n    $y = ($n - $a * $x) / $b;\n    if ($y < 0) {\n        return null;\n    }\n    return [$x, $y];\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "  $x = 0;\n  $y = 0;\n  while ($x * $a <= $n) {\n    $y = ($n - $x * $a) / $b;\n    if ($y == (int)$y) {\n      return array($x, $y);\n    }\n    $x++;\n  }\n  return null;\n}\n",
    "    $x = 0;\n    $y = 0;\n    while ($x * $a <= $n) {\n        $y = ($n - $x * $a) / $b;\n        if ($y == (int) $y) {\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return null;\n}\n",
    "    for ($x=0; $x<=$n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && is_int($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return [$x, $y];\n            }\n        }\n    }\n    return null;\n}\n\nvar_dump(find_solution(3, 5, 10));\nvar_dump(find_solution(3, 5, 11));",
    "    for ($x = 0; $x * $a <= $n; $x++) {\n        $y = ($n - $x * $a) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "  $x = 0;\n  $y = 0;\n  while ($x * $a <= $n) {\n    $y = ($n - $x * $a) / $b;\n    if ($y == (int)$y) {\n      return array($x, $y);\n    }\n    $x++;\n  }\n  return NULL;\n}\n\n$a = 3;\n$b = 5;\n$n = 16;\n\n$solution = find_solution($a, $b, $n);\nif ($solution == NULL) {\n  echo \"No solution found.\\n\";\n} else {\n  echo \"x = $solution[0], y = $solution[1]\\n\";\n}",
    "  for ($x = 0; $x <= $n; $x++) {\n    for ($y = 0; $y <= $n; $y++) {\n      if ($a * $x + $b * $y == $n) {\n        return array($x, $y);\n      }\n    }\n  }\n  return null;\n}\n\n$a = 3;\n$b = 5;\n$n = 7;\n\n$solution = find_solution($a, $b, $n);\n\nif ($solution != null) {\n  echo \"x = $solution[0], y = $solution[1]\";\n} else {\n  echo \"No solution\";\n}",
    "    $x = 0;\n    $y = 0;\n    while ($x * $a <= $n) {\n        $y = ($n - $x * $a) / $b;\n        if ($y == (int)$y) {\n            return array($x, $y);\n        }\n        $x++;\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && is_int($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "  for ($x = 0; $x <= $n; $x++) {\n    for ($y = 0; $y <= $n; $y++) {\n      if ($a * $x + $b * $y == $n) {\n        return array($x, $y);\n      }\n    }\n  }\n  return null;\n}\n",
    "    for ($x = 0; $x * $a <= $n; $x++) {\n        $y = ($n - $x * $a) / $b;\n        if ($y >= 0 && $y == (int) $y) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return [$x, $y];\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return [$x, $y];\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return [$x, $y];\n            }\n        }\n    }\n    return null;\n}\n",
    "    $x = 0;\n    $y = 0;\n    while ($x * $a <= $n) {\n        if (($n - $x * $a) % $b == 0) {\n            $y = ($n - $x * $a) / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x * $a <= $n; $x++) {\n        $y = ($n - $x * $a) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && is_int($y)) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n\nvar_dump(find_solution(2, 3, 7));\nvar_dump(find_solution(2, 3, 8));\nvar_dump(find_solution(2, 3, 9));\nvar_dump(find_solution(2, 3, 10));\nvar_dump(find_solution(2, 3, 11));\nvar_dump(find_solution(2, 3, 12));\nvar_dump(find_solution(2, 3, 13));\nvar_dump(find_solution(2, 3, 14));\nvar_dump(find_solution(2, 3, 15));\nvar_dump(find_solution(2, 3, 16));\nvar_dump(find_solution(2, 3, 17));\nvar_dump(find_solution(2, 3, 18));\nvar_dump(find_solution(2, 3, 19));\nvar_dump(find_solution(2, 3, 20));\nvar_dump(find_solution(2, 3, 21));\nvar_dump(find_solution(2, 3, 22));\nvar_dump(find_solution(2, 3, 23));\nvar_dump(find_solution(2, 3, 24));\nvar_dump(find_solution(2, 3, 25));\nvar_dump(find_solution(2, 3, 26));\nvar_dump(find_solution(2, 3, 27));\nvar_dump(find_solution(2, 3, 28));\nvar_dump(find_solution(2, 3, 29));\nvar_dump(find_solution(2, 3, 30));\nvar_dump(find_solution(2, 3, 31));\nvar_dump(find_solution(2, 3, 32));\nvar_dump(find_solution(2, 3, 33));\nvar_dump(",
    "    $x = 0;\n    $y = 0;\n    while ($x * $a + $y * $b <= $n) {\n        if ($x * $a + $y * $b == $n) {\n            return array($x, $y);\n        }\n        $x++;\n        $y++;\n    }\n    return null;\n}\n\n$a = 3;\n$b = 5;\n$n = 12;\n\n$result = find_solution($a, $b, $n);\nif ($result != null) {\n    echo \"x = \" . $result[0] . \" y = \" . $result[1];\n} else {\n    echo \"No solution\";\n}",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x * $a <= $n; $x++) {\n        $y = ($n - $x * $a) / $b;\n        if ($y >= 0 && $y == (int)$y) {\n            return array($x, $y);\n        }\n    }\n    return NULL;\n}\n",
    "    for ($x = 0; $x * $a <= $n; $x++) {\n        $y = ($n - $x * $a) / $b;\n        if ($y >= 0 && $y == (int) $y) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && is_int($y)) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n",
    "  for ($x = 0; $x * $a <= $n; $x++) {\n    $y = ($n - $x * $a) / $b;\n    if ($y >= 0 && $y == (int) $y) {\n      return [$x, $y];\n    }\n  }\n  return null;\n}\n",
    "    for ($x = 0; $x * $a <= $n; $x++) {\n        $y = ($n - $x * $a) / $b;\n        if ($y >= 0 && $y == (int) $y) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return [$x, $y];\n            }\n        }\n    }\n    return null;\n}\n\nvar_dump(find_solution(5, 3, 10));\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return [$x, $y];\n            }\n        }\n    }\n    return null;\n}\n\nprint_r(find_solution(2, 3, 7));\nprint_r(find_solution(3, 5, 14));\nprint_r(find_solution(2, 3, 10));",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && is_int($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n\nvar_dump(find_solution(2, 3, 7));\nvar_dump(find_solution(2, 3, 8));\nvar_dump(find_solution(2, 3, 9));\nvar_dump(find_solution(2, 3, 10));\nvar_dump(find_solution(2, 3, 11));\nvar_dump(find_solution(2, 3, 12));\nvar_dump(find_solution(2, 3, 13));\nvar_dump(find_solution(2, 3, 14));\nvar_dump(find_solution(2, 3, 15));\nvar_dump(find_solution(2, 3, 16));\nvar_dump(find_solution(2, 3, 17));\nvar_dump(find_solution(2, 3, 18));\nvar_dump(find_solution(2, 3, 19));\nvar_dump(find_solution(2, 3, 20));\nvar_dump(find_solution(2, 3, 21));\nvar_dump(find_solution(2, 3, 22));\nvar_dump(find_solution(2, 3, 23));\nvar_dump(find_solution(2, 3, 24));\nvar_dump(find_solution(2, 3, 25));\nvar_dump(find_solution(2, 3, 26));\nvar_dump(find_solution(2, 3, 27));\nvar_dump(find_solution(2, 3, 28));\nvar_dump(find_solution(2, 3, 29));\nvar_dump(find_solution(2, 3, 30));\nvar_dump(find_solution(2, 3, 31));\nvar_dump(find_solution(2, 3, 32));\nvar_dump(find_solution(2, 3, 33));\nvar_dump(",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x=0; $x<=$n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if (is_int($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y == intval($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && is_int($y)) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && is_int($y)) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && is_int($y)) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && is_int($y)) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && is_int($y)) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return [$x, $y];\n            }\n        }\n    }\n    return null;\n}\n",
    "    if ($a == 0) {\n        if ($n == 0) {\n            return array(0, 0);\n        } else {\n            return null;\n        }\n    } else {\n        $x = $n / $a;\n        $y = ($n - $a * $x) / $b;\n        if ($y == 0) {\n            return array($x, 0);\n        } else {\n            return null;\n        }\n    }\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && is_int($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && is_int($y)) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x * $a <= $n; $x++) {\n        $y = ($n - $x * $a) / $b;\n        if ($y >= 0 && $y == (int) $y) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && is_int($y)) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    if ($a == 0) {\n        if ($b == 0) {\n            return \"undefined\";\n        } else {\n            return \"none\";\n        }\n    } else {\n        if ($b == 0) {\n            $x = $n / $a;\n            return array($x, 0);\n        } else {\n            $x = $n / $a;\n            $y = ($n - $a * $x) / $b;\n            return array($x, $y);\n        }\n    }\n}\n\n$a = 2;\n$b = 3;\n$n = 5;\n\nprint_r(find_solution($a, $b, $n));",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && is_int($y)) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return [$x, $y];\n            }\n        }\n    }\n    return null;\n}\n",
    "    if ($a == 0) {\n        if ($b == 0) {\n            return null;\n        } else {\n            return array(0, $n / $b);\n        }\n    } else {\n        $x = $n / $a;\n        $y = ($n - $a * $x) / $b;\n        return array($x, $y);\n    }\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    if ($n % gcd($a, $b) != 0) {\n        return null;\n    }\n    $x = 0;\n    $y = $n / $b;\n    while ($a * $x + $b * $y != $n) {\n        if ($a * $x + $b * $y < $n) {\n            $x += 1;\n        } else {\n            $y -= 1;\n        }\n    }\n    return array($x, $y);\n}\n",
    "    for ($x = 0; $x * $a <= $n; $x++) {\n        $y = ($n - $x * $a) / $b;\n        if ($y >= 0 && $y == (int) $y) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return [$x, $y];\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return [$x, $y];\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return [$x, $y];\n            }\n        }\n    }\n    return null;\n}\n",
    "  for ($x = 0; $x * $a <= $n; $x++) {\n    $y = ($n - $x * $a) / $b;\n    if ($y == (int)$y) {\n      return array($x, $y);\n    }\n  }\n  return NULL;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && is_int($y)) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n\n$a = 2;\n$b = 3;\n$n = 7;\n\n$result = find_solution($a, $b, $n);\n\nif ($result === null) {\n    echo \"No solution exists.\";\n} else {\n    echo \"x = $result[0] and y = $result[1]\";\n}",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return [$x, $y];\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return [$x, $y];\n            }\n        }\n    }\n    return null;\n}\n",
    "    if ($a == 0) {\n        if ($b == 0) {\n            return \"undefined\";\n        } else {\n            return \"none\";\n        }\n    } else {\n        $x = $n / $a;\n        $y = ($n - ($a * $x)) / $b;\n        return array($x, $y);\n    }\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return [$x, $y];\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && is_int($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    if ($a == 0) {\n        if ($n == 0) {\n            return [0, 0];\n        } else {\n            return null;\n        }\n    }\n    $x = $n / $a;\n    $y = ($n - $a * $x) / $b;\n    if ($y < 0) {\n        return null;\n    }\n    return [$x, $y];\n}\n",
    "    for ($x = 0; $x * $a <= $n; $x++) {\n        $y = ($n - $x * $a) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n",
    "  for ($x = 0; $x <= $n; $x++) {\n    for ($y = 0; $y <= $n; $y++) {\n      if ($a * $x + $b * $y == $n) {\n        return array($x, $y);\n      }\n    }\n  }\n  return null;\n}\n",
    "    for ($x = 0; $x * $a <= $n; $x++) {\n        $y = ($n - $x * $a) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n\nvar_dump(find_solution(4, 11, 5));\nvar_dump(find_solution(1, 2, 3));",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return [$x, $y];\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && is_int($y)) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x * $a <= $n; $x++) {\n        $y = ($n - $x * $a) / $b;\n        if ($y >= 0 && $y == (int) $y) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "  for ($x = 0; $x <= $n; $x++) {\n    for ($y = 0; $y <= $n; $y++) {\n      if ($a * $x + $b * $y == $n) {\n        return [$x, $y];\n      }\n    }\n  }\n  return null;\n}\n\nprint_r(find_solution(5, 10, 25));\nprint_r(find_solution(5, 10, 15));\nprint_r(find_solution(5, 10, 0));\nprint_r(find_solution(5, 10, 1));\nprint_r(find_solution(5, 10, 2));\nprint_r(find_solution(5, 10, 3));\nprint_r(find_solution(5, 10, 4));\nprint_r(find_solution(5, 10, 5));\nprint_r(find_solution(5, 10, 6));\nprint_r(find_solution(5, 10, 7));\nprint_r(find_solution(5, 10, 8));\nprint_r(find_solution(5, 10, 9));\nprint_r(find_solution(5, 10, 10));\nprint_r(find_solution(5, 10, 11));\nprint_r(find_solution(5, 10, 12));\nprint_r(find_solution(5, 10, 13));\nprint_r(find_solution(5, 10, 14));\nprint_r(find_solution(5, 10, 15));\nprint_r(find_solution(5, 10, 16));\nprint_r(find_solution(5, 10, 17));\nprint_r(find_solution(5, 10, 18));\nprint_r(find_solution(5, 10, 19));\nprint_r(find_solution(5, 10, 20));\nprint_r(find_solution(5, 10, 21));\nprint_r(find_solution(5, 10, 22));\nprint_r(find_solution(5, 10, 23));\nprint_r(find_solution(5, 10,",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && is_int($y)) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x * $a <= $n; $x++) {\n        $y = ($n - $x * $a) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return [$x, $y];\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x * $a <= $n; $x++) {\n        $y = ($n - $x * $a) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && is_int($y)) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n",
    "  for ($x=0; $x <= $n; $x++) { \n    for ($y=0; $y <= $n; $y++) { \n      if ($a * $x + $b * $y == $n) {\n        return array($x, $y);\n      }\n    }\n  }\n  return null;\n}\n\nprint_r(find_solution(3, 5, 4));",
    "    if ($a == 0) {\n        return null;\n    } else {\n        $x = $n / $a;\n        $y = ($n - $a * $x) / $b;\n        return array($x, $y);\n    }\n}\n",
    "    for ($x = 0; $x * $a <= $n; $x++) {\n        $y = ($n - $x * $a) / $b;\n        if ($y >= 0 && $y == (int) $y) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    for ($x=0; $x<=$n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if (is_int($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return [$x, $y];\n            }\n        }\n    }\n    return null;\n}\n\nvar_dump(find_solution(2, 3, 7));\nvar_dump(find_solution(2, 3, 8));\nvar_dump(find_solution(2, 3, 9));\nvar_dump(find_solution(2, 3, 10));\nvar_dump(find_solution(2, 3, 11));\nvar_dump(find_solution(2, 3, 12));\nvar_dump(find_solution(2, 3, 13));\nvar_dump(find_solution(2, 3, 14));\nvar_dump(find_solution(2, 3, 15));\nvar_dump(find_solution(2, 3, 16));\nvar_dump(find_solution(2, 3, 17));\nvar_dump(find_solution(2, 3, 18));\nvar_dump(find_solution(2, 3, 19));\nvar_dump(find_solution(2, 3, 20));\nvar_dump(find_solution(2, 3, 21));\nvar_dump(find_solution(2, 3, 22));\nvar_dump(find_solution(2, 3, 23));\nvar_dump(find_solution(2, 3, 24));\nvar_dump(find_solution(2, 3, 25));\nvar_dump(find_solution(2, 3, 26));\nvar_dump(find_solution(2, 3, 27));\nvar_dump(find_solution(2, 3, 28));\nvar_dump(find_solution(2, 3, 29));\nvar_dump(find_solution(2, 3, 30));\nvar_dump(find_solution(2, 3, 31));\nvar_dump(find_solution(2, 3, 32));\nvar_dump(find_solution(2, 3,",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && is_int($y)) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n\nvar_dump(find_solution(1, 2, 3));\nvar_dump(find_solution(1, 2, 4));\nvar_dump(find_solution(1, 2, 5));\nvar_dump(find_solution(1, 2, 6));\nvar_dump(find_solution(1, 2, 7));\nvar_dump(find_solution(1, 2, 8));\nvar_dump(find_solution(1, 2, 9));\nvar_dump(find_solution(1, 2, 10));\nvar_dump(find_solution(1, 2, 11));\nvar_dump(find_solution(1, 2, 12));\nvar_dump(find_solution(1, 2, 13));\nvar_dump(find_solution(1, 2, 14));\nvar_dump(find_solution(1, 2, 15));\nvar_dump(find_solution(1, 2, 16));\nvar_dump(find_solution(1, 2, 17));\nvar_dump(find_solution(1, 2, 18));\nvar_dump(find_solution(1, 2, 19));\nvar_dump(find_solution(1, 2, 20));\nvar_dump(find_solution(1, 2, 21));\nvar_dump(find_solution(1, 2, 22));\nvar_dump(find_solution(1, 2, 23));\nvar_dump(find_solution(1, 2, 24));\nvar_dump(find_solution(1, 2, 25));\nvar_dump(find_solution(1, 2, 26));\nvar_dump(find_solution(1, 2, 27));\nvar_dump(find_solution(1, 2, 28));\nvar_dump(find_solution(1, 2, 29));\nvar_dump(",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n\nprint_r(find_solution(5, 7, 10));\n",
    "  for ($x = 0; $x <= $n; $x++) {\n    for ($y = 0; $y <= $n; $y++) {\n      if ($a * $x + $b * $y == $n) {\n        return array($x, $y);\n      }\n    }\n  }\n  return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return [$x, $y];\n            }\n        }\n    }\n    return null;\n}\n",
    "  for ($x = 0; $x <= $n; $x++) {\n    for ($y = 0; $y <= $n; $y++) {\n      if ($a * $x + $b * $y == $n) {\n        return array($x, $y);\n      }\n    }\n  }\n  return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && is_int($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x * $a <= $n; $x++) {\n        $y = ($n - $x * $a) / $b;\n        if ($y >= 0 && $y == (int) $y) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return [$x, $y];\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x * $a <= $n; $x++) {\n        $y = ($n - $x * $a) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "  for ($x = 0; $x <= $n; $x++) {\n    for ($y = 0; $y <= $n; $y++) {\n      if ($a * $x + $b * $y == $n) {\n        return array($x, $y);\n      }\n    }\n  }\n  return null;\n}\n\n$result = find_solution(3, 5, 10);\necho $result[0] . ' ' . $result[1];\n",
    "  for ($x = 0; $x <= $n; $x++) {\n    for ($y = 0; $y <= $n; $y++) {\n      if ($a * $x + $b * $y == $n) {\n        return array($x, $y);\n      }\n    }\n  }\n  return null;\n}\n",
    "  for ($x = 0; $x <= $n; $x++) {\n    for ($y = 0; $y <= $n; $y++) {\n      if ($a * $x + $b * $y == $n) {\n        return array($x, $y);\n      }\n    }\n  }\n  return null;\n}\n",
    "  $x = 0;\n  $y = 0;\n  while ($x * $a <= $n) {\n    $y = ($n - $x * $a) / $b;\n    if ($y % 1 == 0) {\n      return array($x, $y);\n    }\n    $x++;\n  }\n  return null;\n}\n\n$a = 2;\n$b = 3;\n$n = 7;\n$result = find_solution($a, $b, $n);\nprint_r($result);",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return [$x, $y];\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x=0; $x<=$n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && is_int($y)) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x * $a <= $n; $x++) {\n        $y = ($n - $x * $a) / $b;\n        if ($y >= 0 && $y == (int) $y) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && is_int($y)) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && is_int($y)) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    if ($a == 0) {\n        return $n == $b ? array(0, $n/$b) : null;\n    }\n    $x = $n / $a;\n    $y = ($n - $a * $x) / $b;\n    return $n == $a * $x + $b * $y ? array($x, $y) : null;\n}\n",
    "    for ($x = 0; $x * $a <= $n; $x++) {\n        $y = ($n - $x * $a) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x * $a <= $n; $x++) {\n        $y = ($n - $x * $a) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n\n$result = find_solution(3, 5, 10);\necho $result[0] . ' ' . $result[1] . PHP_EOL;\n",
    "    if ($a == 0) {\n        if ($b == 0) {\n            return ($n == 0) ? [0, 0] : null;\n        } else {\n            return ($n % $b == 0) ? [0, $n / $b] : null;\n        }\n    } else {\n        if ($b == 0) {\n            return ($n % $a == 0) ? [$n / $a, 0] : null;\n        } else {\n            $gcd = gcd($a, $b);\n            if ($n % $gcd == 0) {\n                $x = $n / $gcd * $b;\n                $y = $n / $gcd * $a;\n                return [$x, $y];\n            } else {\n                return null;\n            }\n        }\n    }\n}\n",
    "    if ($a == 0) {\n        if ($n == 0) {\n            return array(0, 0);\n        } else {\n            return null;\n        }\n    }\n    $x = $n / $a;\n    $y = ($n - $a * $x) / $b;\n    if ($y < 0) {\n        return null;\n    }\n    return array($x, $y);\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && is_int($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n\nprint_r(find_solution(7, 2, 5));\nprint_r(find_solution(7, 2, 6));\nprint_r(find_solution(7, 2, 7));\nprint_r(find_solution(7, 2, 8));\nprint_r(find_solution(7, 2, 9));\nprint_r(find_solution(7, 2, 10));\nprint_r(find_solution(7, 2, 11));\nprint_r(find_solution(7, 2, 12));\nprint_r(find_solution(7, 2, 13));\nprint_r(find_solution(7, 2, 14));\nprint_r(find_solution(7, 2, 15));\nprint_r(find_solution(7, 2, 16));\nprint_r(find_solution(7, 2, 17));\nprint_r(find_solution(7, 2, 18));\nprint_r(find_solution(7, 2, 19));\nprint_r(find_solution(7, 2, 20));\nprint_r(find_solution(7, 2, 21));\nprint_r(find_solution(7, 2, 22));\nprint_r(find_solution(7, 2, 23));\nprint_r(find_solution(7, 2, 24));\nprint_r(find_solution(7, 2, 25));\nprint_r(find_solution(7, 2, 26));\nprint_r(find_solution(7, 2, 27));\nprint_r(find_solution(7, 2, 28));\nprint_r(find_solution(7, 2, 29));\nprint_r(find_solution(7, 2, 30));\nprint_r(find_solution(7, 2, 31));\nprint_r(",
    "    for ($x = 0; $x * $a <= $n; $x++) {\n        $y = ($n - $x * $a) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return [$x, $y];\n            }\n        }\n    }\n    return null;\n}\n",
    "  for ($x=0; $x <= $n; $x++) { \n    for ($y=0; $y <= $n; $y++) { \n      if ($a*$x + $b*$y == $n) {\n        return [$x, $y];\n      }\n    }\n  }\n  return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "  for ($x = 0; $x <= $n; $x++) {\n    for ($y = 0; $y <= $n; $y++) {\n      if ($a * $x + $b * $y == $n) {\n        return array($x, $y);\n      }\n    }\n  }\n  return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && is_int($y)) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    if ($a == 0) {\n        if ($b == 0) {\n            return null;\n        } else {\n            return [0, $n / $b];\n        }\n    }\n    $x = $n / $a;\n    $y = ($n - $a * $x) / $b;\n    return [$x, $y];\n}\n\nvar_dump(find_solution(5, 3, 7));\nvar_dump(find_solution(5, 3, 8));\nvar_dump(find_solution(5, 3, 9));\nvar_dump(find_solution(5, 3, 10));\nvar_dump(find_solution(5, 3, 11));\nvar_dump(find_solution(5, 3, 12));\nvar_dump(find_solution(5, 3, 13));\nvar_dump(find_solution(5, 3, 14));\nvar_dump(find_solution(5, 3, 15));\nvar_dump(find_solution(5, 3, 16));\nvar_dump(find_solution(5, 3, 17));\nvar_dump(find_solution(5, 3, 18));\nvar_dump(find_solution(5, 3, 19));\nvar_dump(find_solution(5, 3, 20));\nvar_dump(find_solution(5, 3, 21));\nvar_dump(find_solution(5, 3, 22));\nvar_dump(find_solution(5, 3, 23));\nvar_dump(find_solution(5, 3, 24));\nvar_dump(find_solution(5, 3, 25));\nvar_dump(find_solution(5, 3, 26));\nvar_dump(find_solution(5, 3, 27));\nvar_dump(find_solution(5, 3, 28));\nvar_dump(find_solution(5, 3, 29));\nvar_dump(find_solution(5, 3, 30));\nvar_dump(find_solution(5, 3, 31));\nvar_dump(find_solution(5, 3, 32));\nvar_dump(find_s",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if (is_int($y)) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && is_int($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "  for ($x = 0; $x * $a <= $n; $x++) {\n    $y = ($n - $x * $a) / $b;\n    if ($y >= 0 && $y == round($y)) {\n      return array($x, $y);\n    }\n  }\n  return null;\n}\n\nprint_r(find_solution(5, 3, 14));",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x * $a <= $n; $x++) {\n        $y = ($n - $x * $a) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n\nprint_r(find_solution(2, 3, 7));\nprint_r(find_solution(2, 3, 8));\nprint_r(find_solution(2, 3, 9));\nprint_r(find_solution(2, 3, 10));\nprint_r(find_solution(2, 3, 11));\nprint_r(find_solution(2, 3, 12));\nprint_r(find_solution(2, 3, 13));\nprint_r(find_solution(2, 3, 14));\nprint_r(find_solution(2, 3, 15));\nprint_r(find_solution(2, 3, 16));\nprint_r(find_solution(2, 3, 17));\nprint_r(find_solution(2, 3, 18));\nprint_r(find_solution(2, 3, 19));\nprint_r(find_solution(2, 3, 20));\nprint_r(find_solution(2, 3, 21));\nprint_r(find_solution(2, 3, 22));\nprint_r(find_solution(2, 3, 23));\nprint_r(find_solution(2, 3, 24));\nprint_r(find_solution(2, 3, 25));\nprint_r(find_solution(2, 3, 26));\nprint_r(find_solution(2, 3, 27));\nprint_r(find_solution(2, 3, 28));\nprint_r(find_solution(2, 3, 29));\nprint_r(find_solution(2, 3, 30));\nprint_r(find_solution(2, 3, 31));\nprint_r(find_solution(2, 3, 32));\nprint_r(find_solution(2, 3, 33));\nprint_r",
    "    for ($x = 0; $x * $a <= $n; $x++) {\n        $y = ($n - $x * $a) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x * $a <= $n; $x++) {\n        $y = ($n - $x * $a) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "  for ($x = 0; $x <= $n; $x++) {\n    for ($y = 0; $y <= $n; $y++) {\n      if ($a * $x + $b * $y == $n) {\n        return array($x, $y);\n      }\n    }\n  }\n  return null;\n}\n",
    "    for ($x = 0; $x * $a <= $n; $x++) {\n        $y = ($n - $x * $a) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n\nprint_r(find_solution(2, 3, 7));\nprint_r(find_solution(2, 3, 8));\nprint_r(find_solution(2, 3, 9));\nprint_r(find_solution(2, 3, 10));\nprint_r(find_solution(2, 3, 11));\nprint_r(find_solution(2, 3, 12));\nprint_r(find_solution(2, 3, 13));\nprint_r(find_solution(2, 3, 14));\nprint_r(find_solution(2, 3, 15));\nprint_r(find_solution(2, 3, 16));\nprint_r(find_solution(2, 3, 17));\nprint_r(find_solution(2, 3, 18));\nprint_r(find_solution(2, 3, 19));\nprint_r(find_solution(2, 3, 20));\nprint_r(find_solution(2, 3, 21));\nprint_r(find_solution(2, 3, 22));\nprint_r(find_solution(2, 3, 23));\nprint_r(find_solution(2, 3, 24));\nprint_r(find_solution(2, 3, 25));\nprint_r(find_solution(2, 3, 26));\nprint_r(find_solution(2, 3, 27));\nprint_r(find_solution(2, 3, 28));\nprint_r(find_solution(2, 3, 29));\nprint_r(find_solution(2, 3, 30));\nprint_r(find_solution(2, 3, 31));\nprint_r(find_solution(2, 3, 32));\nprint_r(find_solution(2, 3, 33));\nprint_r",
    "  for ($x = 0; $x * $a <= $n; $x++) {\n    $y = ($n - $x * $a) / $b;\n    if ($y >= 0 && $y == (int) $y) {\n      return [$x, $y];\n    }\n  }\n  return null;\n}\n",
    "    if ($a == 0 && $b == 0) {\n        return null;\n    }\n    if ($a == 0) {\n        return [0, $n / $b];\n    }\n    if ($b == 0) {\n        return [$n / $a, 0];\n    }\n    $x = 0;\n    $y = $n / $b;\n    while ($a * $x + $b * $y != $n) {\n        if ($a * $x + $b * $y > $n) {\n            $y--;\n        } else {\n            $x++;\n        }\n    }\n    return [$x, $y];\n}\n",
    "  for ($x = 0; $x <= $n; $x++) {\n    for ($y = 0; $y <= $n; $y++) {\n      if ($a * $x + $b * $y == $n) {\n        return [$x, $y];\n      }\n    }\n  }\n  return null;\n}\n",
    "    if ($a == 0) {\n        return $n == $b ? array(0, $n/$b) : null;\n    }\n    $x = $n/$a;\n    $y = ($n - $a*$x)/$b;\n    return $y == intval($y) ? array($x, $y) : null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n\nvar_dump(find_solution(2, 3, 7));\nvar_dump(find_solution(2, 3, 8));\nvar_dump(find_solution(2, 3, 9));\nvar_dump(find_solution(2, 3, 10));\nvar_dump(find_solution(2, 3, 11));\nvar_dump(find_solution(2, 3, 12));\nvar_dump(find_solution(2, 3, 13));\nvar_dump(find_solution(2, 3, 14));\nvar_dump(find_solution(2, 3, 15));\nvar_dump(find_solution(2, 3, 16));\nvar_dump(find_solution(2, 3, 17));\nvar_dump(find_solution(2, 3, 18));\nvar_dump(find_solution(2, 3, 19));\nvar_dump(find_solution(2, 3, 20));\nvar_dump(find_solution(2, 3, 21));\nvar_dump(find_solution(2, 3, 22));\nvar_dump(find_solution(2, 3, 23));\nvar_dump(find_solution(2, 3, 24));\nvar_dump(find_solution(2, 3, 25));\nvar_dump(find_solution(2, 3, 26));\nvar_dump(find_solution(2, 3, 27));\nvar_dump(find_solution(2, 3, 28));\nvar_dump(find_solution(2, 3, 29));\nvar_dump(find_solution(2, 3, 30));\nvar_dump(find_solution(2, 3, 31));\nvar_dump(find_solution(2, 3, 32));\nvar_dump(find_solution(2, 3, 33));\nvar_dump",
    "  for ($x = 0; $x <= $n; $x++) {\n    for ($y = 0; $y <= $n; $y++) {\n      if ($a * $x + $b * $y == $n) {\n        return array($x, $y);\n      }\n    }\n  }\n  return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && is_int($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x * $a <= $n; $x++) {\n        $y = ($n - $x * $a) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "  for ($x=0; $x<=$n; $x++) {\n    for ($y=0; $y<=$n; $y++) {\n      if ($a*$x + $b*$y == $n) {\n        return array($x, $y);\n      }\n    }\n  }\n  return null;\n}\n",
    "    if ($a == 0) {\n        if ($n == 0) {\n            return array(0, 0);\n        } else {\n            return null;\n        }\n    }\n    $x = $n / $a;\n    $y = ($n - $a * $x) / $b;\n    if ($y < 0) {\n        return null;\n    }\n    return array($x, $y);\n}\n",
    "    for ($x=0; $x<=$n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x * $a <= $n; $x++) {\n        $y = ($n - $x * $a) / $b;\n        if ($y >= 0 && $y == round($y)) {\n            return [$x, $y];\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y >= 0 && is_int($y)) {\n            return array($x, $y);\n        }\n    }\n    return null;\n}\n\necho find_solution(3, 5, 4)[0] . \"\\n\";\necho find_solution(3, 5, 4)[1] . \"\\n\";\necho find_solution(3, 5, 4) . \"\\n\";\necho find_solution(3, 5, 4)[2] . \"\\n\";\necho find_solution(3, 5, 4)[3] . \"\\n\";\necho find_solution(3, 5, 4)[4] . \"\\n\";\necho find_solution(3, 5, 4)[5] . \"\\n\";\necho find_solution(3, 5, 4)[6] . \"\\n\";\necho find_solution(3, 5, 4)[7] . \"\\n\";\necho find_solution(3, 5, 4)[8] . \"\\n\";\necho find_solution(3, 5, 4)[9] . \"\\n\";\necho find_solution(3, 5, 4)[10] . \"\\n\";\necho find_solution(3, 5, 4)[11] . \"\\n\";\necho find_solution(3, 5, 4)[12] . \"\\n\";\necho find_solution(3, 5, 4)[13] . \"\\n\";\necho find_solution(3, 5, 4)[14] . \"\\n\";\necho find_solution(3, 5, 4)[15] . \"\\n\";\necho find_solution(3, 5, 4)[16] . \"\\n\";\necho find_solution(3, 5, 4)[17] . \"\\n\";\necho find_solution(3, 5, 4)[18] . \"\\n\";\necho find_solution(3, 5, 4)[19] . \"\\n\";\necho find_solution(3, 5, 4)[20] . \"\\n\";\necho find_solution(3, 5, 4)[21] . \"\\n\";\necho",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return [$x, $y];\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return [$x, $y];\n            }\n        }\n    }\n    return null;\n}\n\n$result = find_solution(2, 3, 7);\nprint_r($result);\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return [$x, $y];\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n\n$solution = find_solution(3, 5, 20);\necho $solution[0] . \" \" . $solution[1] . \"\\n\";\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return array($x, $y);\n            }\n        }\n    }\n    return null;\n}\n\n$solution = find_solution(3, 5, 4);\necho \"x = $solution[0], y = $solution[1]\\n\";\n\n$solution = find_solution(3, 5, 10);\necho \"x = $solution[0], y = $solution[1]\\n\";\n\n$solution = find_solution(3, 5, 7);\necho \"x = $solution[0], y = $solution[1]\\n\";\n\n$solution = find_solution(3, 5, 8);\necho \"x = $solution[0], y = $solution[1]\\n\";\n\n$solution = find_solution(3, 5, 9);\necho \"x = $solution[0], y = $solution[1]\\n\";\n\n$solution = find_solution(3, 5, 11);\necho \"x = $solution[0], y = $solution[1]\\n\";\n\n$solution = find_solution(3, 5, 12);\necho \"x = $solution[0], y = $solution[1]\\n\";\n\n$solution = find_solution(3, 5, 13);\necho \"x = $solution[0], y = $solution[1]\\n\";\n\n$solution = find_solution(3, 5, 14);\necho \"x = $solution[0], y = $solution[1]\\n\";\n\n$solution = find_solution(3, 5, 15);\necho \"x = $solution[0], y = $solution[1]\\n\";\n\n$solution = find_solution(3, 5, 16);\necho \"x = $solution[0], y = $solution[1]\\n\";\n\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return [$x, $y];\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return [$x, $y];\n            }\n        }\n    }\n    return null;\n}\n",
    "    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return [$x, $y];\n            }\n        }\n    }\n    return null;\n}\n"
  ]
}
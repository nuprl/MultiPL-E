{
  "name": "mbpp_86_centered_hexagonal_number",
  "language": "php",
  "prompt": "<?php\n// Write a function to find nth centered hexagonal number.\nfunction centered_hexagonal_number($n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_86_centered_hexagonal_number.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return centered_hexagonal_number(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 271) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 217) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return ($n * (2 * $n - 1));\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n\necho centered_hexagonal_number(3);\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return 3 * $n * ($n - 1) + 1;\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return ($n * (2 * $n - 1));\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "  return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return 3 * $n * ($n - 1) + 1;\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return 3 * $n * ($n - 1) + 1;\n}\n",
    "    return 3 * $n * ($n - 1) + 1;\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return 3 * $n * ($n - 1) + 1;\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return ($n * (2 * $n - 1));\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return 3 * $n * ($n - 1) + 1;\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return 3 * $n * ($n - 1) + 1;\n}\n",
    "    return ($n * (2 * $n - 1));\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return ($n * (2 * $n - 1));\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return 3 * $n * ($n - 1) + 1;\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return 3 * $n * ($n - 1) + 1;\n}\n",
    "\treturn $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return 3 * $n * ($n - 1) + 1;\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return 3 * $n * ($n - 1) + 1;\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return 3 * $n * ($n - 1) + 1;\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return 3 * $n * ($n - 1) + 1;\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return ($n * (2 * $n - 1));\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return 3 * $n * ($n - 1) + 1;\n}\n\necho centered_hexagonal_number(1) . \"\\n\";\necho centered_hexagonal_number(2) . \"\\n\";\necho centered_hexagonal_number(3) . \"\\n\";\necho centered_hexagonal_number(4) . \"\\n\";\necho centered_hexagonal_number(5) . \"\\n\";\necho centered_hexagonal_number(6) . \"\\n\";\necho centered_hexagonal_number(7) . \"\\n\";\necho centered_hexagonal_number(8) . \"\\n\";\necho centered_hexagonal_number(9) . \"\\n\";\necho centered_hexagonal_number(10) . \"\\n\";",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "\treturn $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return ($n * (2 * $n - 1));\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return 3 * $n * ($n - 1) + 1;\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return ($n * (2 * $n - 1));\n}\n",
    "    return 3 * $n * ($n - 1) + 1;\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return 3 * $n * ($n - 1) + 1;\n}\n",
    "  return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return ($n * (2 * $n - 1));\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return 3 * $n * ($n - 1) + 1;\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "  return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return ($n * (2 * $n - 1));\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return 3 * $n * ($n - 1) + 1;\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return 3 * $n * ($n - 1) + 1;\n}\n",
    "    return ($n * (2 * $n - 1));\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    $result = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $result += $i * 6;\n    }\n    return $result;\n}\n\necho centered_hexagonal_number(1) . \"\\n\";\necho centered_hexagonal_number(2) . \"\\n\";\necho centered_hexagonal_number(3) . \"\\n\";\necho centered_hexagonal_number(4) . \"\\n\";\necho centered_hexagonal_number(5) . \"\\n\";\necho centered_hexagonal_number(6) . \"\\n\";\necho centered_hexagonal_number(7) . \"\\n\";\necho centered_hexagonal_number(8) . \"\\n\";\necho centered_hexagonal_number(9) . \"\\n\";\necho centered_hexagonal_number(10) . \"\\n\";\necho centered_hexagonal_number(11) . \"\\n\";\necho centered_hexagonal_number(12) . \"\\n\";\necho centered_hexagonal_number(13) . \"\\n\";\necho centered_hexagonal_number(14) . \"\\n\";\necho centered_hexagonal_number(15) . \"\\n\";\necho centered_hexagonal_number(16) . \"\\n\";\necho centered_hexagonal_number(17) . \"\\n\";\necho centered_hexagonal_number(18) . \"\\n\";\necho centered_hexagonal_number(19) . \"\\n\";\necho centered_hexagonal_number(20) . \"\\n\";\necho centered_hexagonal_number(21) . \"\\n\";\necho centered_hexagonal_number(22) . \"\\n\";\necho centered_hexagonal_number(23) . \"\\n\";\necho centered_hexagonal_number(24) . \"\\n\";\necho centered_hexagonal_number(25) . \"\\n\";\necho centered_hexagonal_number(26) . \"\\n\";\necho centered_hexagonal_number(27) . \"\\n\";\necho centered_hexagonal_number(28) . \"\\n\";\necho centered_hexagonal_number(29) . \"\\n\";\necho centered_hexagonal_number(30) . \"\\n\";\necho centered_hexagonal_number(31) . \"\\n\";",
    "    return 3 * $n * ($n - 1) + 1;\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return 3 * $n * ($n - 1) + 1;\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "  return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return 3 * $n * ($n - 1) + 1;\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "\treturn $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return $n * (2 * $n - 1);\n}\n",
    "    return (3 * $n * $n - $n) / 2;\n}\n"
  ]
}
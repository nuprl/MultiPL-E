{
  "name": "mbpp_305_start_withp",
  "language": "php",
  "prompt": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_305_start_withp.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $p_words = [];\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $p_words[] = $word;\n        }\n    }\n    return $p_words;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510317,
      "stdout": "Array\n(\n    [0] => PHP\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp05oirma7.php:20\nStack trace:\n#0 /tmp/tmp05oirma7.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp05oirma7.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = [];\n    foreach ($words as $word) {\n        if (strtolower(substr($word, 0, 1)) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['Pineapple', 'Apple', 'Banana', 'Pear', 'Peach', 'Plum'];\n$pwords = start_withp($words);\nprint_r($pwords);\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510317,
      "stdout": "Array\n(\n    [0] => Pineapple\n    [1] => Pear\n    [2] => Peach\n    [3] => Plum\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi4c_nx_s.php:22\nStack trace:\n#0 /tmp/tmpi4c_nx_s.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpi4c_nx_s.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $p_words = array();\n    foreach ($words as $word) {\n        if (preg_match('/^p/', $word)) {\n            $p_words[] = $word;\n        }\n    }\n    return $p_words;\n}\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510317,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxtueuvkd.php:18\nStack trace:\n#0 /tmp/tmpxtueuvkd.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpxtueuvkd.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $p_words = [];\n  foreach ($words as $word) {\n    if (strtolower($word[0]) == 'p') {\n      $p_words[] = $word;\n    }\n  }\n  return $p_words;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\n$p_words = start_withp($words);\necho implode(', ', $p_words);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510317,
      "stdout": "PHP\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3dgio1bj.php:21\nStack trace:\n#0 /tmp/tmp3dgio1bj.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp3dgio1bj.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$pwords = array();\n\tforeach ($words as $word) {\n\t\tif (preg_match('/^p/', $word)) {\n\t\t\t$pwords[] = $word;\n\t\t}\n\t}\n\treturn $pwords;\n}\n\n$words = array('pizza', 'pasta', 'penguin', 'panda', 'pumpkin', 'potato', 'pepper', 'pancake');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510317,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => penguin\n    [3] => panda\n    [4] => pumpkin\n    [5] => potato\n    [6] => pepper\n    [7] => pancake\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5xc4udwd.php:20\nStack trace:\n#0 /tmp/tmp5xc4udwd.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp5xc4udwd.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (strtolower(substr($word, 0, 1)) == 'p') {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('PHP', 'Ruby', 'Python', 'JavaScript');\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510317,
      "stdout": "Array\n(\n    [0] => PHP\n    [1] => Python\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaz2v_jhr.php:21\nStack trace:\n#0 /tmp/tmpaz2v_jhr.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpaz2v_jhr.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$p_words = array();\n\tforeach ($words as $word) {\n\t\tif (strtolower(substr($word, 0, 1)) == 'p') {\n\t\t\t$p_words[] = $word;\n\t\t}\n\t}\n\treturn $p_words;\n}\n\n$words = array('PHP', 'Perl', 'Python', 'JavaScript', 'Ruby', 'C', 'C++', 'C#');\n$p_words = start_withp($words);\nvar_dump($p_words);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510317,
      "stdout": "array(3) {\n  [0]=>\n  string(3) \"PHP\"\n  [1]=>\n  string(4) \"Perl\"\n  [2]=>\n  string(6) \"Python\"\n}\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd2eqe9ni.php:21\nStack trace:\n#0 /tmp/tmpd2eqe9ni.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpd2eqe9ni.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $result = array();\n  foreach ($words as $word) {\n    if (strtolower(substr($word, 0, 1)) == 'p') {\n      array_push($result, $word);\n    }\n  }\n  return $result;\n}\n\n$words = array('PHP', 'Java', 'Python', 'Perl', 'Ruby', 'C', 'C++', 'C#');\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510317,
      "stdout": "Array\n(\n    [0] => PHP\n    [1] => Python\n    [2] => Perl\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj3fvkfkd.php:21\nStack trace:\n#0 /tmp/tmpj3fvkfkd.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpj3fvkfkd.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['pizza', 'pasta', 'pepperoni', 'potato', 'pork', 'prawns', 'pastries'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510317,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pepperoni\n    [3] => potato\n    [4] => pork\n    [5] => prawns\n    [6] => pastries\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpprvnvtcy.php:21\nStack trace:\n#0 /tmp/tmpprvnvtcy.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpprvnvtcy.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pear', 'apple', 'pineapple', 'orange', 'papaya', 'peach'];\n\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510317,
      "stdout": "Array\n(\n    [0] => pear\n    [1] => pineapple\n    [2] => papaya\n    [3] => peach\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp47tk9kff.php:21\nStack trace:\n#0 /tmp/tmp47tk9kff.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp47tk9kff.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $pwords = [];\n  foreach ($words as $word) {\n    if (preg_match('/^p/', $word)) {\n      $pwords[] = $word;\n    }\n  }\n  return $pwords;\n}\n\n$words = ['pizza', 'pasta', 'pudding', 'potato', 'pepper', 'pancake'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510317,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pudding\n    [3] => potato\n    [4] => pepper\n    [5] => pancake\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcknggcvp.php:21\nStack trace:\n#0 /tmp/tmpcknggcvp.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpcknggcvp.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $pwords = array();\n  foreach ($words as $word) {\n    if (strtolower($word[0]) == 'p') {\n      $pwords[] = $word;\n    }\n  }\n  return $pwords;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'pineapple', 'pork', 'prawns');\n$pwords = start_withp($words);\nprint_r($pwords);\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510317,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pineapple\n    [3] => pork\n    [4] => prawns\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeyc3_a6k.php:22\nStack trace:\n#0 /tmp/tmpeyc3_a6k.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpeyc3_a6k.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$pwords = array();\n\tforeach ($words as $word) {\n\t\tif (substr($word, 0, 1) == 'p') {\n\t\t\t$pwords[] = $word;\n\t\t}\n\t}\n\treturn $pwords;\n}\n\n$words = array('pizza', 'pasta', 'pepper', 'potato', 'pork', 'prawns', 'pastry', 'peas');\n$pwords = start_withp($words);\nprint_r($pwords);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510317,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pepper\n    [3] => potato\n    [4] => pork\n    [5] => prawns\n    [6] => pastry\n    [7] => peas\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppvtvfsdt.php:21\nStack trace:\n#0 /tmp/tmppvtvfsdt.php(26): test()\n#1 {main}\n  thrown in /tmp/tmppvtvfsdt.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $result = [];\n  foreach ($words as $word) {\n    if (strtolower(substr($word, 0, 1)) == 'p') {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510317,
      "stdout": "Array\n(\n    [0] => PHP\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpce977ihr.php:21\nStack trace:\n#0 /tmp/tmpce977ihr.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpce977ihr.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'peach', 'pineapple'];\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510317,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => peach\n    [3] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl9nww10o.php:20\nStack trace:\n#0 /tmp/tmpl9nww10o.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpl9nww10o.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (strtolower(substr($word, 0, 1)) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'pasta', 'potato', 'pumpkin', 'pepper', 'parsnip'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510317,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => potato\n    [3] => pumpkin\n    [4] => pepper\n    [5] => parsnip\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp95qj_bs1.php:21\nStack trace:\n#0 /tmp/tmp95qj_bs1.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp95qj_bs1.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $p_words = array();\n  foreach ($words as $word) {\n    if (substr($word, 0, 1) == 'p') {\n      array_push($p_words, $word);\n    }\n  }\n  return $p_words;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'pizza', 'pear');\n$p_words = start_withp($words);\nprint_r($p_words);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510317,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pizza\n    [3] => pear\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjio2zh09.php:21\nStack trace:\n#0 /tmp/tmpjio2zh09.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpjio2zh09.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pear', 'apple', 'pineapple', 'orange', 'papaya'];\n$result = start_withp($words);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510317,
      "stdout": "Array\n(\n    [0] => pear\n    [1] => pineapple\n    [2] => papaya\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5vp3p6rb.php:22\nStack trace:\n#0 /tmp/tmp5vp3p6rb.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp5vp3p6rb.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (strtolower(substr($word, 0, 1)) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510317,
      "stdout": "Array\n(\n    [0] => PHP\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd9d58qwn.php:20\nStack trace:\n#0 /tmp/tmpd9d58qwn.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpd9d58qwn.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'pineapple', 'peach', 'potato');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510317,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pineapple\n    [3] => peach\n    [4] => potato\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_k584b_b.php:20\nStack trace:\n#0 /tmp/tmp_k584b_b.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_k584b_b.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$pwords = array();\n\tforeach ($words as $word) {\n\t\tif (strpos($word, 'p') === 0) {\n\t\t\t$pwords[] = $word;\n\t\t}\n\t}\n\treturn $pwords;\n}\n\n$words = array('pizza', 'apple', 'pear', 'pork', 'pineapple', 'banana');\n$pwords = start_withp($words);\nprint_r($pwords);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pork\n    [3] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpngiqt7kx.php:21\nStack trace:\n#0 /tmp/tmpngiqt7kx.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpngiqt7kx.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$pwords = array();\n\tforeach ($words as $word) {\n\t\tif (preg_match('/^p/', $word)) {\n\t\t\t$pwords[] = $word;\n\t\t}\n\t}\n\treturn $pwords;\n}\n\n$words = array('pizza', 'pasta', 'pepperoni', 'potato', 'pork', 'prawns', 'peas');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pepperoni\n    [3] => potato\n    [4] => pork\n    [5] => prawns\n    [6] => peas\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq0pphmgj.php:20\nStack trace:\n#0 /tmp/tmpq0pphmgj.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpq0pphmgj.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (preg_match('/^p/', $word)) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'peach', 'plum', 'pomegranate');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => peach\n    [3] => plum\n    [4] => pomegranate\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf8qh1uqn.php:20\nStack trace:\n#0 /tmp/tmpf8qh1uqn.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpf8qh1uqn.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = [];\n    foreach($words as $word) {\n        if(strtolower($word[0]) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['Pineapple', 'Apple', 'Orange', 'Banana', 'Pear', 'Peach'];\n$pwords = start_withp($words);\nprint_r($pwords);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => Pineapple\n    [1] => Pear\n    [2] => Peach\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnoj3_hil.php:21\nStack trace:\n#0 /tmp/tmpnoj3_hil.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpnoj3_hil.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = array();\n    foreach ($words as $word) {\n        if (preg_match('/^p/', $word)) {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('pizza', 'pasta', 'penguin', 'potato', 'pepper', 'pig', 'piggy', 'piglet');\n$pwords = start_withp($words);\nprint_r($pwords);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => penguin\n    [3] => potato\n    [4] => pepper\n    [5] => pig\n    [6] => piggy\n    [7] => piglet\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx1sdvims.php:21\nStack trace:\n#0 /tmp/tmpx1sdvims.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpx1sdvims.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $p_words = [];\n  foreach ($words as $word) {\n    if (strpos($word, 'p') === 0) {\n      $p_words[] = $word;\n    }\n  }\n  return $p_words;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pineapple', 'pork', 'prawn'];\necho '<pre>';\nprint_r(start_withp($words));\necho '</pre>';\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "<pre>Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pineapple\n    [3] => pork\n    [4] => prawn\n)\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_6zpll2b.php:22\nStack trace:\n#0 /tmp/tmp_6zpll2b.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp_6zpll2b.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $result = [];\n  foreach ($words as $word) {\n    if (strpos($word, 'p') === 0) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pancake', 'potato', 'pencil'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pancake\n    [3] => potato\n    [4] => pencil\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu0qacrmf.php:21\nStack trace:\n#0 /tmp/tmpu0qacrmf.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpu0qacrmf.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'pasta', 'pudding', 'pancake', 'pie', 'pudding', 'pizza', 'pasta', 'pudding', 'pancake', 'pie', 'pudding');\n$result = start_withp($words);\nprint_r($result);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pudding\n    [3] => pancake\n    [4] => pie\n    [5] => pudding\n    [6] => pizza\n    [7] => pasta\n    [8] => pudding\n    [9] => pancake\n    [10] => pie\n    [11] => pudding\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzqr8sqqx.php:21\nStack trace:\n#0 /tmp/tmpzqr8sqqx.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpzqr8sqqx.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = [];\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['pizza', 'pasta', 'pancake', 'apple', 'orange', 'pear'];\n$pwords = start_withp($words);\nprint_r($pwords);\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pancake\n    [3] => pear\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9kdx7c6o.php:22\nStack trace:\n#0 /tmp/tmp9kdx7c6o.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp9kdx7c6o.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'peach', 'pork', 'pudding');\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => peach\n    [3] => pork\n    [4] => pudding\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe4ynxtjr.php:21\nStack trace:\n#0 /tmp/tmpe4ynxtjr.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpe4ynxtjr.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'pasta', 'pomodoro', 'pepperoni', 'pesto', 'pollo', 'pane'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pomodoro\n    [3] => pepperoni\n    [4] => pesto\n    [5] => pollo\n    [6] => pane\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplvxkz95b.php:21\nStack trace:\n#0 /tmp/tmplvxkz95b.php(26): test()\n#1 {main}\n  thrown in /tmp/tmplvxkz95b.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $result = [];\n  foreach ($words as $word) {\n    if (strpos($word, 'p') === 0) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = ['pizza', 'pasta', 'penguin', 'potato', 'pepper', 'papaya'];\n$result = start_withp($words);\nprint_r($result);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => penguin\n    [3] => potato\n    [4] => pepper\n    [5] => papaya\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp59orcwsg.php:21\nStack trace:\n#0 /tmp/tmp59orcwsg.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp59orcwsg.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'peach', 'pineapple', 'pork', 'potato'];\n$result = start_withp($words);\nprint_r($result);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => peach\n    [3] => pineapple\n    [4] => pork\n    [5] => potato\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprv0n59b8.php:21\nStack trace:\n#0 /tmp/tmprv0n59b8.php(26): test()\n#1 {main}\n  thrown in /tmp/tmprv0n59b8.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['apple', 'pear', 'pineapple', 'banana', 'papaya', 'peach'];\nvar_dump(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "array(4) {\n  [0]=>\n  string(4) \"pear\"\n  [1]=>\n  string(9) \"pineapple\"\n  [2]=>\n  string(6) \"papaya\"\n  [3]=>\n  string(5) \"peach\"\n}\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplgayl_lt.php:21\nStack trace:\n#0 /tmp/tmplgayl_lt.php(26): test()\n#1 {main}\n  thrown in /tmp/tmplgayl_lt.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $pwords = [];\n  foreach ($words as $word) {\n    if (strtolower(substr($word, 0, 1)) == 'p') {\n      $pwords[] = $word;\n    }\n  }\n  return $pwords;\n}\n\n$words = ['PHP', 'Javascript', 'Python', 'Java', 'C++'];\n$pwords = start_withp($words);\nprint_r($pwords);\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => PHP\n    [1] => Python\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzswg7cu4.php:22\nStack trace:\n#0 /tmp/tmpzswg7cu4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzswg7cu4.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$pwords = [];\n\tforeach ($words as $word) {\n\t\tif (substr($word, 0, 1) == 'p') {\n\t\t\t$pwords[] = $word;\n\t\t}\n\t}\n\treturn $pwords;\n}\n\n$words = ['pizza', 'pasta', 'pepperoni', 'potato', 'pork', 'prawns', 'peas'];\n$pwords = start_withp($words);\nprint_r($pwords);\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pepperoni\n    [3] => potato\n    [4] => pork\n    [5] => prawns\n    [6] => peas\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkra3d2f3.php:22\nStack trace:\n#0 /tmp/tmpkra3d2f3.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpkra3d2f3.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$p_words = array();\n\tforeach ($words as $word) {\n\t\tif (strpos($word, 'p') === 0) {\n\t\t\t$p_words[] = $word;\n\t\t}\n\t}\n\treturn $p_words;\n}\n\n$words = array('pizza', 'pasta', 'pumpkin', 'potato', 'pepper', 'pancake');\n$p_words = start_withp($words);\nprint_r($p_words);\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pumpkin\n    [3] => potato\n    [4] => pepper\n    [5] => pancake\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm7_xbc1p.php:22\nStack trace:\n#0 /tmp/tmpm7_xbc1p.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpm7_xbc1p.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (strtolower(substr($word, 0, 1)) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['PHP', 'Laravel', 'Python', 'JavaScript', 'C#', 'C++', 'C', 'Java', 'Ruby', 'Perl', 'Go', 'Swift'];\n$result = start_withp($words);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => PHP\n    [1] => Python\n    [2] => Perl\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoes366zs.php:22\nStack trace:\n#0 /tmp/tmpoes366zs.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpoes366zs.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'pudding', 'potato');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pudding\n    [3] => potato\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8yp936x.php:20\nStack trace:\n#0 /tmp/tmpv8yp936x.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpv8yp936x.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = [];\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['pizza', 'apple', 'pear', 'peach', 'banana', 'pineapple'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => peach\n    [3] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmusrpsig.php:21\nStack trace:\n#0 /tmp/tmpmusrpsig.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmusrpsig.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['pear', 'apple', 'orange', 'pineapple', 'plum', 'papaya'];\n$pwords = start_withp($words);\nprint_r($pwords);\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pear\n    [1] => pineapple\n    [2] => plum\n    [3] => papaya\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzva5h_mu.php:22\nStack trace:\n#0 /tmp/tmpzva5h_mu.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzva5h_mu.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (strpos($word, 'p') === 0) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('pear', 'apple', 'orange', 'pineapple', 'peach');\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pear\n    [1] => pineapple\n    [2] => peach\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf32tiszh.php:21\nStack trace:\n#0 /tmp/tmpf32tiszh.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpf32tiszh.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$pwords = array();\n\tforeach ($words as $word) {\n\t\tif (strpos($word, 'p') === 0) {\n\t\t\t$pwords[] = $word;\n\t\t}\n\t}\n\treturn $pwords;\n}\n\n$words = array('pizza', 'pepperoni', 'potato', 'pumpkin', 'pear', 'pomegranate', 'peach');\n$pwords = start_withp($words);\nprint_r($pwords);\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pepperoni\n    [2] => potato\n    [3] => pumpkin\n    [4] => pear\n    [5] => pomegranate\n    [6] => peach\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5wjmdwgx.php:22\nStack trace:\n#0 /tmp/tmp5wjmdwgx.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp5wjmdwgx.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = array();\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'pineapple');\n$pwords = start_withp($words);\nprint_r($pwords);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbir4w4am.php:21\nStack trace:\n#0 /tmp/tmpbir4w4am.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpbir4w4am.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pear', 'apple', 'peach', 'pineapple', 'orange', 'papaya', 'pepper');\n$result = start_withp($words);\nprint_r($result);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pear\n    [1] => peach\n    [2] => pineapple\n    [3] => papaya\n    [4] => pepper\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr4_dt0df.php:21\nStack trace:\n#0 /tmp/tmpr4_dt0df.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpr4_dt0df.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => PHP\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptaqbl4eq.php:20\nStack trace:\n#0 /tmp/tmptaqbl4eq.php(25): test()\n#1 {main}\n  thrown in /tmp/tmptaqbl4eq.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'pasta', 'pepper', 'potato', 'pork', 'prawns', 'pineapple');\n$result = start_withp($words);\nprint_r($result);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pepper\n    [3] => potato\n    [4] => pork\n    [5] => prawns\n    [6] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqh0bb2m9.php:21\nStack trace:\n#0 /tmp/tmpqh0bb2m9.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpqh0bb2m9.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = array();\n    foreach ($words as $word) {\n        if (strtolower(substr($word, 0, 1)) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'pineapple', 'orange', 'potato');\n$pwords = start_withp($words);\nprint_r($pwords);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pineapple\n    [3] => potato\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4nw9qym8.php:21\nStack trace:\n#0 /tmp/tmp4nw9qym8.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp4nw9qym8.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pizza', 'potato', 'pizza'];\n$result = start_withp($words);\nprint_r($result);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pizza\n    [3] => potato\n    [4] => pizza\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpry8svmkx.php:21\nStack trace:\n#0 /tmp/tmpry8svmkx.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpry8svmkx.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'pineapple');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn1s9q4z6.php:20\nStack trace:\n#0 /tmp/tmpn1s9q4z6.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpn1s9q4z6.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $words_with_p = [];\n    foreach ($words as $word) {\n        if (strtolower(substr($word, 0, 1)) == 'p') {\n            $words_with_p[] = $word;\n        }\n    }\n    return $words_with_p;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => PHP\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp39wue6o0.php:20\nStack trace:\n#0 /tmp/tmp39wue6o0.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp39wue6o0.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'pineapple', 'banana');\n$result = start_withp($words);\nprint_r($result);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp701pyl8b.php:21\nStack trace:\n#0 /tmp/tmp701pyl8b.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp701pyl8b.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (strtolower(substr($word, 0, 1)) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['PHP', 'HTML', 'CSS', 'JavaScript', 'Python', 'Ruby', 'C', 'C++', 'C#', 'Swift', 'Objective-C'];\n$result = start_withp($words);\nprint_r($result);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => PHP\n    [1] => Python\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvqg9d8yu.php:21\nStack trace:\n#0 /tmp/tmpvqg9d8yu.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpvqg9d8yu.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $pwords = array();\n  foreach ($words as $word) {\n    if (preg_match('/^p/', $word)) {\n      $pwords[] = $word;\n    }\n  }\n  return $pwords;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'pancake');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pancake\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnd8qea7t.php:20\nStack trace:\n#0 /tmp/tmpnd8qea7t.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpnd8qea7t.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $result = [];\n  foreach ($words as $word) {\n    if (strpos($word, 'p') === 0) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pomegranate', 'potato', 'peach'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pomegranate\n    [3] => potato\n    [4] => peach\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxp0mjtap.php:21\nStack trace:\n#0 /tmp/tmpxp0mjtap.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpxp0mjtap.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $p_words = array();\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $p_words[] = $word;\n        }\n    }\n    return $p_words;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'pineapple');\n$p_words = start_withp($words);\nprint_r($p_words);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4w3hp_so.php:21\nStack trace:\n#0 /tmp/tmp4w3hp_so.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp4w3hp_so.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $p_words = [];\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $p_words[] = $word;\n        }\n    }\n    return $p_words;\n}\n\n$words = ['apple', 'banana', 'pear', 'pineapple', 'orange', 'peach'];\n$p_words = start_withp($words);\nprint_r($p_words);\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pear\n    [1] => pineapple\n    [2] => peach\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpky9ypgro.php:22\nStack trace:\n#0 /tmp/tmpky9ypgro.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpky9ypgro.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n$words = array('pizza', 'pasta', 'pepper', 'potato', 'pork', 'prawns', 'peas');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pepper\n    [3] => potato\n    [4] => pork\n    [5] => prawns\n    [6] => peas\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf20jt3ey.php:19\nStack trace:\n#0 /tmp/tmpf20jt3ey.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpf20jt3ey.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$result = array();\n\tforeach ($words as $word) {\n\t\tif ($word[0] == 'p') {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'papaya', 'pineapple');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => papaya\n    [3] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyvg38_br.php:20\nStack trace:\n#0 /tmp/tmpyvg38_br.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpyvg38_br.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $p_words = array();\n  foreach ($words as $word) {\n    if (preg_match('/^p/', $word)) {\n      $p_words[] = $word;\n    }\n  }\n  return $p_words;\n}\n\n$words = array('pizza', 'apple', 'pear', 'pepper', 'pizza', 'pizza', 'pizza');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pepper\n    [3] => pizza\n    [4] => pizza\n    [5] => pizza\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjw8_hpoj.php:20\nStack trace:\n#0 /tmp/tmpjw8_hpoj.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpjw8_hpoj.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (preg_match('/^p/', $word)) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('pizza', 'pasta', 'pudding', 'pancake', 'pie', 'potato', 'pepper');\n$result = start_withp($words);\nprint_r($result);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pudding\n    [3] => pancake\n    [4] => pie\n    [5] => potato\n    [6] => pepper\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnrf4_g3b.php:21\nStack trace:\n#0 /tmp/tmpnrf4_g3b.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpnrf4_g3b.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $words_with_p = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $words_with_p[] = $word;\n        }\n    }\n    return $words_with_p;\n}\n\n$words = ['pizza', 'pasta', 'parmesan', 'parsley', 'potato', 'pepper', 'parsnip', 'paprika', 'pomegranate', 'pumpkin'];\n$words_with_p = start_withp($words);\n\necho '<pre>';\nprint_r($words_with_p);\necho '</pre>';\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "<pre>Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => parmesan\n    [3] => parsley\n    [4] => potato\n    [5] => pepper\n    [6] => parsnip\n    [7] => paprika\n    [8] => pomegranate\n    [9] => pumpkin\n)\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4a8d8zaa.php:25\nStack trace:\n#0 /tmp/tmp4a8d8zaa.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp4a8d8zaa.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'orange', 'pineapple');\n$result = start_withp($words);\nprint_r($result);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6vjmg39r.php:21\nStack trace:\n#0 /tmp/tmp6vjmg39r.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6vjmg39r.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (strpos($word, 'p') === 0) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'pineapple', 'peach');\n$result = start_withp($words);\nprint_r($result);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pineapple\n    [3] => peach\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzhsrfwdr.php:21\nStack trace:\n#0 /tmp/tmpzhsrfwdr.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpzhsrfwdr.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$result = [];\n\tforeach ($words as $word) {\n\t\tif (strpos($word, 'p') === 0) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pineapple', 'banana'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl4_8dxd5.php:21\nStack trace:\n#0 /tmp/tmpl4_8dxd5.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpl4_8dxd5.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $pwords = [];\n  foreach ($words as $word) {\n    if (substr($word, 0, 1) == 'p') {\n      $pwords[] = $word;\n    }\n  }\n  return $pwords;\n}\n\n$words = ['apple', 'orange', 'pear', 'pineapple', 'plum', 'peach', 'papaya'];\n$pwords = start_withp($words);\nprint_r($pwords);\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pear\n    [1] => pineapple\n    [2] => plum\n    [3] => peach\n    [4] => papaya\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp30ot3ww8.php:22\nStack trace:\n#0 /tmp/tmp30ot3ww8.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp30ot3ww8.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (strtolower(substr($word, 0, 1)) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('PHP', 'HTML', 'CSS', 'JavaScript', 'Python', 'C', 'C++', 'C#', 'Ruby', 'Go', 'Swift', 'Objective-C', 'R', 'MATLAB', 'Perl', 'Lisp', 'Pascal', 'Scala', 'Haskell', 'Lua', 'Clojure', 'Rust', 'Erlang', 'Julia', 'D', 'Groovy', 'Elixir', 'F#', 'Elm', 'CoffeeScript', 'PowerShell', 'Visual Basic', 'TypeScript', 'Racket', 'Assembly', 'AutoHotkey', 'VimL', 'Emacs Lisp', 'Prolog', 'Common Lisp', 'Scheme', 'Tcl', 'Smalltalk', 'Bash', 'Fortran', 'Ada', 'Objective-C++', 'Mathematica', 'Visual Basic .NET', 'OCaml', 'Dart', 'Nim', 'Alice', 'Puppet', 'ActionScript', 'LiveScript', 'Vala', 'Objective-J', 'Dylan', 'Nemerle', 'Standard ML', 'Squeak', 'XSLT', 'Io', 'AGS Script', 'Game Maker Language', 'Gosu', 'PureBasic', 'AppleScript', 'LabVIEW', 'OpenEdge ABL', 'AutoIt', 'M', 'UnrealScript', 'Gambas', 'IDL', 'OpenSCAD', 'BlitzMax', 'Xojo', 'OpenEdge ABL', 'GML', 'SQLPL', 'XQuery', 'Oz', 'Max', 'AGS Script', 'Game Maker Language', 'Gosu', 'PureBasic', 'AppleScript', 'LabVIEW', 'OpenEdge ABL', 'AutoIt', 'M', 'UnrealScript', 'Gambas', 'IDL', 'OpenSCAD', 'BlitzMax', 'Xojo', 'OpenEdge ABL', 'GML', 'SQLPL', 'XQuery\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "\nParse error: syntax error, unexpected string content \"XQuery\", expecting \")\" in /tmp/tmpjfgutaks.php on line 13\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pineapple', 'orange', 'banana', 'papaya'];\n$result = start_withp($words);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pineapple\n    [3] => papaya\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuplctm00.php:22\nStack trace:\n#0 /tmp/tmpuplctm00.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpuplctm00.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $p_words = [];\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $p_words[] = $word;\n        }\n    }\n    return $p_words;\n}\n\n$words = ['pizza', 'apple', 'pear', 'peach', 'pork', 'porkchop', 'porkpie'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => peach\n    [3] => pork\n    [4] => porkchop\n    [5] => porkpie\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptns5edh4.php:21\nStack trace:\n#0 /tmp/tmptns5edh4.php(26): test()\n#1 {main}\n  thrown in /tmp/tmptns5edh4.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $p_words = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $p_words[] = $word;\n        }\n    }\n    return $p_words;\n}\n\n$words = ['pear', 'apple', 'pineapple', 'peach', 'papaya', 'orange', 'grape'];\n$p_words = start_withp($words);\nprint_r($p_words);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pear\n    [1] => pineapple\n    [2] => peach\n    [3] => papaya\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplrha2qcj.php:21\nStack trace:\n#0 /tmp/tmplrha2qcj.php(26): test()\n#1 {main}\n  thrown in /tmp/tmplrha2qcj.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (strpos($word, 'p') === 0) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'pizza', 'pear');\n$result = start_withp($words);\nprint_r($result);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pizza\n    [3] => pear\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpey4pr2aw.php:21\nStack trace:\n#0 /tmp/tmpey4pr2aw.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpey4pr2aw.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $result = [];\n  foreach ($words as $word) {\n    if (strpos($word, 'p') === 0) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = ['pizza', 'pasta', 'pumpkin', 'potato', 'pepper', 'parsley'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pumpkin\n    [3] => potato\n    [4] => pepper\n    [5] => parsley\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgotx7c9l.php:21\nStack trace:\n#0 /tmp/tmpgotx7c9l.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpgotx7c9l.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'pineapple');\n$result = start_withp($words);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxd8ull2.php:22\nStack trace:\n#0 /tmp/tmpdxd8ull2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpdxd8ull2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'pasta', 'pomodoro', 'parmigiana', 'pollo', 'pane'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pomodoro\n    [3] => parmigiana\n    [4] => pollo\n    [5] => pane\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxsxc3ksi.php:21\nStack trace:\n#0 /tmp/tmpxsxc3ksi.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpxsxc3ksi.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (preg_match(\"/^p/\", $word)) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n$words = array(\"pizza\", \"pasta\", \"potato\", \"pepper\", \"pork\", \"prawns\", \"paneer\");\n$result = start_withp($words);\nprint_r($result);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => potato\n    [3] => pepper\n    [4] => pork\n    [5] => prawns\n    [6] => paneer\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt24z4ou8.php:20\nStack trace:\n#0 /tmp/tmpt24z4ou8.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpt24z4ou8.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pork', 'pineapple'];\n$pwords = start_withp($words);\nprint_r($pwords);\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pork\n    [3] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4tcusgio.php:22\nStack trace:\n#0 /tmp/tmp4tcusgio.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp4tcusgio.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('pizza', 'pasta', 'pepper', 'potato', 'pork', 'peas');\n$pwords = start_withp($words);\nprint_r($pwords);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pepper\n    [3] => potato\n    [4] => pork\n    [5] => peas\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2jutg6om.php:21\nStack trace:\n#0 /tmp/tmp2jutg6om.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp2jutg6om.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$pwords = array();\n\tforeach ($words as $word) {\n\t\tif (preg_match('/^p/', $word)) {\n\t\t\t$pwords[] = $word;\n\t\t}\n\t}\n\treturn $pwords;\n}\n\n$words = array('pear', 'apple', 'orange', 'pineapple', 'pumpkin', 'peach');\n$pwords = start_withp($words);\nprint_r($pwords);\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pear\n    [1] => pineapple\n    [2] => pumpkin\n    [3] => peach\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfnns1u4.php:22\nStack trace:\n#0 /tmp/tmpbfnns1u4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpbfnns1u4.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$pwords = array();\n\tforeach ($words as $word) {\n\t\tif (preg_match('/^p/', $word)) {\n\t\t\t$pwords[] = $word;\n\t\t}\n\t}\n\treturn $pwords;\n}\n\n$words = array('pizza', 'apple', 'pear', 'pineapple', 'orange');\n$pwords = start_withp($words);\nprint_r($pwords);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3nvuqqqh.php:21\nStack trace:\n#0 /tmp/tmp3nvuqqqh.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp3nvuqqqh.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'banana', 'pizza'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pizza\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsbbku9so.php:21\nStack trace:\n#0 /tmp/tmpsbbku9so.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpsbbku9so.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $p_words = [];\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $p_words[] = $word;\n        }\n    }\n    return $p_words;\n}\n\n$words = ['pizza', 'apple', 'pear', 'banana'];\n$p_words = start_withp($words);\nprint_r($p_words);\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpszprwie9.php:22\nStack trace:\n#0 /tmp/tmpszprwie9.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpszprwie9.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (strtolower(substr($word, 0, 1)) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('PHP', 'JS', 'Python', 'Java', 'C', 'C++', 'C#', 'Ruby', 'Perl', 'Pascal');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => PHP\n    [1] => Python\n    [2] => Perl\n    [3] => Pascal\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp743pt__c.php:20\nStack trace:\n#0 /tmp/tmp743pt__c.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp743pt__c.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'pepperoni', 'parmesan', 'parsley', 'paprika', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya', 'parsley', 'parsnip', 'papaya',\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp25fhxpg1.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'peach', 'pineapple', 'potato'];\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => peach\n    [3] => pineapple\n    [4] => potato\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp576k8888.php:20\nStack trace:\n#0 /tmp/tmp576k8888.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp576k8888.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = array();\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('PHP', 'HTML', 'CSS', 'JavaScript', 'Python', 'Ruby');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => PHP\n    [1] => Python\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph3faswfv.php:20\nStack trace:\n#0 /tmp/tmph3faswfv.php(25): test()\n#1 {main}\n  thrown in /tmp/tmph3faswfv.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $result = [];\n  foreach ($words as $word) {\n    if (strtolower(substr($word, 0, 1)) == 'p') {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = ['Pineapple', 'Apple', 'Orange', 'Banana', 'Pear'];\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => Pineapple\n    [1] => Pear\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe0_jyxmq.php:20\nStack trace:\n#0 /tmp/tmpe0_jyxmq.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpe0_jyxmq.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = array();\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('pear', 'apple', 'orange', 'pineapple', 'grape', 'banana');\n$pwords = start_withp($words);\nprint_r($pwords);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pear\n    [1] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpme2cn39v.php:21\nStack trace:\n#0 /tmp/tmpme2cn39v.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpme2cn39v.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = [];\n    foreach ($words as $word) {\n        if (preg_match('/^p/', $word)) {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['pizza', 'pasta', 'pomodoro', 'parmesan', 'pepperoni', 'pesto', 'parsley', 'potato', 'pork', 'pork belly', 'pork chop', 'pork loin', 'pork shoulder', 'pork tenderloin', 'pork butt', 'pork ribs', 'pork rinds', 'pork sausage', 'pork belly', 'pork chop', 'pork loin', 'pork shoulder', 'pork tenderloin', 'pork butt', 'pork ribs', 'pork rinds', 'pork sausage', 'pork belly', 'pork chop', 'pork loin', 'pork shoulder', 'pork tenderloin', 'pork butt', 'pork ribs', 'pork rinds', 'pork sausage', 'pork belly', 'pork chop', 'pork loin', 'pork shoulder', 'pork tenderloin', 'pork butt', 'pork ribs', 'pork rinds', 'pork sausage', 'pork belly', 'pork chop', 'pork loin', 'pork shoulder', 'pork tenderloin', 'pork butt', 'pork ribs', 'pork rinds', 'pork sausage', 'pork belly', 'pork chop', 'pork loin', 'pork shoulder', 'pork tenderloin', 'pork butt', 'pork ribs', 'pork rinds', 'pork sausage', 'pork belly', 'pork chop', 'pork loin', 'pork shoulder', 'pork tenderloin', 'pork butt', 'pork ribs', 'pork rinds', 'pork sausage', 'pork belly', 'pork chop', 'pork loin', 'pork shoulder', 'pork tenderloin', 'pork butt', 'pork ribs', 'pork rinds', 'pork sausage', 'pork belly\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "\nParse error: syntax error, unexpected string content \"pork belly\", expecting \"]\" in /tmp/tmpkr42n9sh.php on line 13\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$result = array();\n\tforeach ($words as $word) {\n\t\tif ($word[0] == 'p') {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('pear', 'apple', 'orange', 'pineapple', 'peach', 'grape');\n$result = start_withp($words);\nprint_r($result);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pear\n    [1] => pineapple\n    [2] => peach\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoyani3tn.php:21\nStack trace:\n#0 /tmp/tmpoyani3tn.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpoyani3tn.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $words_with_p = [];\n    foreach ($words as $word) {\n        if (strtolower(substr($word, 0, 1)) == 'p') {\n            $words_with_p[] = $word;\n        }\n    }\n    return array_slice($words_with_p, 0, 2);\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => PHP\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1g4kqku9.php:20\nStack trace:\n#0 /tmp/tmp1g4kqku9.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp1g4kqku9.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n$words = ['pizza', 'pasta', 'potato', 'prawns', 'pepperoni'];\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => potato\n    [3] => prawns\n    [4] => pepperoni\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp74n1clss.php:19\nStack trace:\n#0 /tmp/tmp74n1clss.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp74n1clss.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'peach', 'pineapple', 'potato');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => peach\n    [3] => pineapple\n    [4] => potato\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpweoqjwt_.php:20\nStack trace:\n#0 /tmp/tmpweoqjwt_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpweoqjwt_.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => PHP\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptaqbl4eq.php:20\nStack trace:\n#0 /tmp/tmptaqbl4eq.php(25): test()\n#1 {main}\n  thrown in /tmp/tmptaqbl4eq.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$result = array();\n\tforeach ($words as $word) {\n\t\tif ($word[0] == 'p') {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('pear', 'apple', 'orange', 'pineapple');\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pear\n    [1] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4wg5ndgd.php:21\nStack trace:\n#0 /tmp/tmp4wg5ndgd.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp4wg5ndgd.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pineapple', 'orange'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkbho2bsk.php:21\nStack trace:\n#0 /tmp/tmpkbho2bsk.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpkbho2bsk.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\necho implode(', ', start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "PHP\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasa0tp_4.php:20\nStack trace:\n#0 /tmp/tmpasa0tp_4.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpasa0tp_4.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (strtolower(substr($word, 0, 1)) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('PHP', 'HTML', 'CSS', 'JavaScript', 'Python', 'Ruby');\n$result = start_withp($words);\nprint_r($result);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => PHP\n    [1] => Python\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0v58u30g.php:21\nStack trace:\n#0 /tmp/tmp0v58u30g.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp0v58u30g.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pineapple', 'peach', 'pork', 'prawn'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pineapple\n    [3] => peach\n    [4] => pork\n    [5] => prawn\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvxxadtru.php:21\nStack trace:\n#0 /tmp/tmpvxxadtru.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpvxxadtru.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = [];\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => PHP\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy4kju3fr.php:21\nStack trace:\n#0 /tmp/tmpy4kju3fr.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpy4kju3fr.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = array();\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('pizza', 'pepper', 'penguin', 'potato', 'pork', 'pear', 'peach', 'pumpkin', 'peas', 'pancake');\n$pwords = start_withp($words);\nprint_r($pwords);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pepper\n    [2] => penguin\n    [3] => potato\n    [4] => pork\n    [5] => pear\n    [6] => peach\n    [7] => pumpkin\n    [8] => peas\n    [9] => pancake\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz8bzestp.php:21\nStack trace:\n#0 /tmp/tmpz8bzestp.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpz8bzestp.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n$words = ['pizza', 'apple', 'pear', 'pineapple', 'orange'];\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5t21wwza.php:19\nStack trace:\n#0 /tmp/tmp5t21wwza.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp5t21wwza.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('apple', 'orange', 'pear', 'pineapple', 'peach', 'plum');\n$pwords = start_withp($words);\nprint_r($pwords);\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pear\n    [1] => pineapple\n    [2] => peach\n    [3] => plum\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphfu50sem.php:22\nStack trace:\n#0 /tmp/tmphfu50sem.php(27): test()\n#1 {main}\n  thrown in /tmp/tmphfu50sem.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $p_words = [];\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $p_words[] = $word;\n        }\n    }\n    return $p_words;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\n$p_words = start_withp($words);\nprint_r($p_words);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => PHP\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jkb5793.php:21\nStack trace:\n#0 /tmp/tmp8jkb5793.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp8jkb5793.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $p_words = [];\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $p_words[] = $word;\n        }\n    }\n    return $p_words;\n}\n\n$words = ['pizza', 'apple', 'pear', 'peach', 'pineapple', 'potato'];\n$p_words = start_withp($words);\necho '<pre>';\nprint_r($p_words);\necho '</pre>';\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "<pre>Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => peach\n    [3] => pineapple\n    [4] => potato\n)\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91ms0wbi.php:24\nStack trace:\n#0 /tmp/tmp91ms0wbi.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp91ms0wbi.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $result = array();\n  foreach ($words as $word) {\n    if (preg_match('/^p/', $word)) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'peach', 'potato');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => peach\n    [3] => potato\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp00_8smu.php:20\nStack trace:\n#0 /tmp/tmpp00_8smu.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpp00_8smu.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('PHP', 'HTML', 'CSS', 'JavaScript', 'Python', 'Ruby');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => PHP\n    [1] => Python\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4a8tdvsm.php:20\nStack trace:\n#0 /tmp/tmp4a8tdvsm.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp4a8tdvsm.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $result = array();\n  foreach ($words as $word) {\n    if (preg_match('/^p/', $word)) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = array('pear', 'apple', 'orange', 'pineapple', 'plum');\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pear\n    [1] => pineapple\n    [2] => plum\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp547e8iig.php:21\nStack trace:\n#0 /tmp/tmp547e8iig.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp547e8iig.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (substr($word, 0, 1) == 'p') {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('pear', 'apple', 'orange', 'pineapple', 'plum');\n$result = start_withp($words);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pear\n    [1] => pineapple\n    [2] => plum\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptftdp7ww.php:22\nStack trace:\n#0 /tmp/tmptftdp7ww.php(27): test()\n#1 {main}\n  thrown in /tmp/tmptftdp7ww.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$pwords = array();\n\tforeach ($words as $word) {\n\t\tif (strpos($word, 'p') === 0) {\n\t\t\t$pwords[] = $word;\n\t\t}\n\t}\n\treturn $pwords;\n}\n\n$words = array('pizza', 'pasta', 'pepper', 'potato', 'pork', 'prawns', 'peas');\n$pwords = start_withp($words);\nprint_r($pwords);\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pepper\n    [3] => potato\n    [4] => pork\n    [5] => prawns\n    [6] => peas\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4wmo15n6.php:22\nStack trace:\n#0 /tmp/tmp4wmo15n6.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp4wmo15n6.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('PHP', 'HTML', 'CSS', 'JavaScript', 'jQuery', 'Bootstrap', 'AngularJS');\n$result = start_withp($words);\necho '<pre>';\nprint_r($result);\necho '</pre>';\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "<pre>Array\n(\n    [0] => PHP\n)\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16kocxid.php:23\nStack trace:\n#0 /tmp/tmp16kocxid.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp16kocxid.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $p_words = array();\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $p_words[] = $word;\n        }\n    }\n    return $p_words;\n}\n\n$words = array('pizza', 'pasta', 'parmesan', 'parsley', 'pepper', 'parsnip', 'potato', 'pumpkin', 'peas', 'peaches', 'pear', 'pomegranate', 'pineapple', 'papaya', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'parsley', 'parsnip', 'pars\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "\nParse error: syntax error, unexpected string content \"pars\", expecting \")\" in /tmp/tmpe5uf3tjg.php on line 13\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('pear', 'apple', 'orange', 'pineapple', 'papaya');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pear\n    [1] => pineapple\n    [2] => papaya\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdi_2dg1n.php:20\nStack trace:\n#0 /tmp/tmpdi_2dg1n.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdi_2dg1n.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (preg_match('/^p/', $word)) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'peach', 'pork', 'porkchop');\n$result = start_withp($words);\nprint_r($result);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => peach\n    [3] => pork\n    [4] => porkchop\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ncr7_uu.php:21\nStack trace:\n#0 /tmp/tmp7ncr7_uu.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7ncr7_uu.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (preg_match('/^p/', $word)) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'peach', 'pork', 'porky', 'porker', 'porky');\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => peach\n    [3] => pork\n    [4] => porky\n    [5] => porker\n    [6] => porky\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwn3byptw.php:21\nStack trace:\n#0 /tmp/tmpwn3byptw.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpwn3byptw.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) === 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'pineapple');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1zs421fd.php:20\nStack trace:\n#0 /tmp/tmp1zs421fd.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp1zs421fd.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$p_words = array();\n\tforeach ($words as $word) {\n\t\tif (substr($word, 0, 1) == 'p') {\n\t\t\t$p_words[] = $word;\n\t\t}\n\t}\n\treturn $p_words;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'orange', 'pasta', 'pesto', 'potato');\n$p_words = start_withp($words);\nprint_r($p_words);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pasta\n    [3] => pesto\n    [4] => potato\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa1wt_67h.php:21\nStack trace:\n#0 /tmp/tmpa1wt_67h.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpa1wt_67h.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $p_words = [];\n  foreach ($words as $word) {\n    if (substr($word, 0, 1) == 'p') {\n      array_push($p_words, $word);\n    }\n  }\n  return $p_words;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pizza', 'pizza'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pizza\n    [3] => pizza\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg9hmgov2.php:21\nStack trace:\n#0 /tmp/tmpg9hmgov2.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpg9hmgov2.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (preg_match('/^p/', $word)) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'pasta', 'pepper', 'potato', 'pork', 'prawns', 'pumpkin', 'peas');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pepper\n    [3] => potato\n    [4] => pork\n    [5] => prawns\n    [6] => pumpkin\n    [7] => peas\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe_qk8e2n.php:20\nStack trace:\n#0 /tmp/tmpe_qk8e2n.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpe_qk8e2n.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = [];\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['pizza', 'apple', 'pear', 'peach', 'pork'];\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => peach\n    [3] => pork\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ofiv6id.php:20\nStack trace:\n#0 /tmp/tmp9ofiv6id.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp9ofiv6id.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $result = [];\n  foreach ($words as $word) {\n    if (strpos($word, 'p') === 0) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = ['pizza', 'pasta', 'pumpkin', 'potato', 'pepper', 'parsley'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pumpkin\n    [3] => potato\n    [4] => pepper\n    [5] => parsley\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgotx7c9l.php:21\nStack trace:\n#0 /tmp/tmpgotx7c9l.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpgotx7c9l.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = [];\n    foreach ($words as $word) {\n        if (preg_match('/^p/', $word)) {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['pizza', 'apple', 'pear', 'peach', 'pork', 'porkchop', 'porkpie'];\n\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => peach\n    [3] => pork\n    [4] => porkchop\n    [5] => porkpie\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpggmytjjr.php:21\nStack trace:\n#0 /tmp/tmpggmytjjr.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpggmytjjr.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $p_words = [];\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $p_words[] = $word;\n        }\n    }\n    return $p_words;\n}\n\n$words = ['pizza', 'pasta', 'pudding', 'pancakes', 'pie', 'potatoes', 'pepper', 'parsley'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pudding\n    [3] => pancakes\n    [4] => pie\n    [5] => potatoes\n    [6] => pepper\n    [7] => parsley\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpokv0kgxe.php:21\nStack trace:\n#0 /tmp/tmpokv0kgxe.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpokv0kgxe.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $pwords = [];\n  foreach ($words as $word) {\n    if (strtolower($word[0]) == 'p') {\n      $pwords[] = $word;\n    }\n  }\n  return $pwords;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\n\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => PHP\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprz1ajpsd.php:22\nStack trace:\n#0 /tmp/tmprz1ajpsd.php(27): test()\n#1 {main}\n  thrown in /tmp/tmprz1ajpsd.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'peach', 'pineapple');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => peach\n    [3] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplsdvkwgf.php:20\nStack trace:\n#0 /tmp/tmplsdvkwgf.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplsdvkwgf.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$p_words = array();\n\tforeach ($words as $word) {\n\t\tif (strtolower(substr($word, 0, 1)) == 'p') {\n\t\t\t$p_words[] = $word;\n\t\t}\n\t}\n\treturn $p_words;\n}\n\n$words = array('PHP', 'Java', 'Python', 'Perl', 'C', 'C++', 'C#');\n$p_words = start_withp($words);\nprint_r($p_words);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => PHP\n    [1] => Python\n    [2] => Perl\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq272pjye.php:21\nStack trace:\n#0 /tmp/tmpq272pjye.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpq272pjye.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $result = array();\n  foreach ($words as $word) {\n    if (preg_match('/^p/', $word)) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'pork', 'porky', 'porker');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pork\n    [3] => porky\n    [4] => porker\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaeffu4ue.php:20\nStack trace:\n#0 /tmp/tmpaeffu4ue.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpaeffu4ue.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pear', 'apple', 'orange', 'pineapple', 'banana');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pear\n    [1] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_6ajod82.php:20\nStack trace:\n#0 /tmp/tmp_6ajod82.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_6ajod82.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('PHP', 'HTML', 'CSS', 'JavaScript', 'Python', 'Ruby');\n$result = start_withp($words);\nprint_r($result);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => PHP\n    [1] => Python\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprgx1jzmm.php:21\nStack trace:\n#0 /tmp/tmprgx1jzmm.php(26): test()\n#1 {main}\n  thrown in /tmp/tmprgx1jzmm.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $result = [];\n  foreach ($words as $word) {\n    if (strpos($word, 'p') === 0) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = ['pizza', 'pasta', 'pomegranate', 'potato', 'pepperoni'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pomegranate\n    [3] => potato\n    [4] => pepperoni\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpru94dfsv.php:21\nStack trace:\n#0 /tmp/tmpru94dfsv.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpru94dfsv.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = [];\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => PHP\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp308tx5lb.php:20\nStack trace:\n#0 /tmp/tmp308tx5lb.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp308tx5lb.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (substr($word, 0, 1) == 'p') {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('apple', 'orange', 'pear', 'pineapple', 'plum', 'peach', 'papaya', 'pomegranate');\n$result = start_withp($words);\nprint_r($result);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pear\n    [1] => pineapple\n    [2] => plum\n    [3] => peach\n    [4] => papaya\n    [5] => pomegranate\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwq4j9gr7.php:21\nStack trace:\n#0 /tmp/tmpwq4j9gr7.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpwq4j9gr7.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'pepperoni', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza',\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp7963n4cz.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$p_words = array();\n\tforeach ($words as $word) {\n\t\tif (substr($word, 0, 1) == 'p') {\n\t\t\t$p_words[] = $word;\n\t\t}\n\t}\n\treturn $p_words;\n}\n\n$words = array('pear', 'apple', 'orange', 'plum', 'pineapple', 'peach', 'pumpkin');\n$p_words = start_withp($words);\nprint_r($p_words);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pear\n    [1] => plum\n    [2] => pineapple\n    [3] => peach\n    [4] => pumpkin\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9lkjk_e2.php:21\nStack trace:\n#0 /tmp/tmp9lkjk_e2.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp9lkjk_e2.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $p_words = array();\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $p_words[] = $word;\n        }\n    }\n    return $p_words;\n}\n\n$words = array('pizza', 'apple', 'pear', 'potato', 'peach', 'pineapple');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => potato\n    [3] => peach\n    [4] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu6g4hr5x.php:20\nStack trace:\n#0 /tmp/tmpu6g4hr5x.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpu6g4hr5x.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$pwords = array();\n\tforeach ($words as $word) {\n\t\tif (preg_match('/^p/', $word)) {\n\t\t\t$pwords[] = $word;\n\t\t}\n\t}\n\treturn $pwords;\n}\n\n$words = array('pear', 'apple', 'orange', 'pineapple', 'plum');\n$pwords = start_withp($words);\nprint_r($pwords);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pear\n    [1] => pineapple\n    [2] => plum\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7h__nc8b.php:21\nStack trace:\n#0 /tmp/tmp7h__nc8b.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7h__nc8b.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('apple', 'pear', 'pineapple', 'orange', 'papaya', 'peach', 'pomegranate');\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pear\n    [1] => pineapple\n    [2] => papaya\n    [3] => peach\n    [4] => pomegranate\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp14v3fb05.php:21\nStack trace:\n#0 /tmp/tmp14v3fb05.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp14v3fb05.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = array();\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'papaya', 'pineapple');\n$pwords = start_withp($words);\nprint_r($pwords);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => papaya\n    [3] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpju3ak0dg.php:21\nStack trace:\n#0 /tmp/tmpju3ak0dg.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpju3ak0dg.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$p_words = array();\n\tforeach ($words as $word) {\n\t\tif (preg_match('/^p/', $word)) {\n\t\t\t$p_words[] = $word;\n\t\t}\n\t}\n\treturn $p_words;\n}\n\n$words = array('pizza', 'pasta', 'pepper', 'potato', 'pork', 'prawns', 'pineapple');\n$p_words = start_withp($words);\nprint_r($p_words);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pepper\n    [3] => potato\n    [4] => pork\n    [5] => prawns\n    [6] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvzuvp6gd.php:21\nStack trace:\n#0 /tmp/tmpvzuvp6gd.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpvzuvp6gd.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $p_words = array();\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $p_words[] = $word;\n        }\n    }\n    return $p_words;\n}\n\n$words = array('PHP', 'is', 'a', 'widely-used', 'open', 'source', 'general-purpose', 'scripting', 'language');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => PHP\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqv7ojzos.php:20\nStack trace:\n#0 /tmp/tmpqv7ojzos.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpqv7ojzos.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $p_words = array();\n  foreach ($words as $word) {\n    if (substr($word, 0, 1) == 'p') {\n      $p_words[] = $word;\n    }\n  }\n  return array_slice($p_words, 0, 2);\n}\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpft3tp80h.php:18\nStack trace:\n#0 /tmp/tmpft3tp80h.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpft3tp80h.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = [];\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => PHP\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp308tx5lb.php:20\nStack trace:\n#0 /tmp/tmp308tx5lb.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp308tx5lb.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $result = [];\n  foreach ($words as $word) {\n    if (strpos($word, 'p') === 0) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'peach', 'pomegranate', 'pineapple'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => peach\n    [3] => pomegranate\n    [4] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyv6rryms.php:21\nStack trace:\n#0 /tmp/tmpyv6rryms.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpyv6rryms.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $p_words = array();\n  foreach ($words as $word) {\n    if (strtolower(substr($word, 0, 1)) == 'p') {\n      $p_words[] = $word;\n    }\n  }\n  return $p_words;\n}\n\n$words = array('pizza', 'pasta', 'pudding', 'pancakes', 'potato', 'pepper', 'parsley');\n$p_words = start_withp($words);\nprint_r($p_words);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pudding\n    [3] => pancakes\n    [4] => potato\n    [5] => pepper\n    [6] => parsley\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm4s1gm_d.php:21\nStack trace:\n#0 /tmp/tmpm4s1gm_d.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpm4s1gm_d.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$pwords = array();\n\tforeach ($words as $word) {\n\t\tif (preg_match('/^p/', $word)) {\n\t\t\t$pwords[] = $word;\n\t\t}\n\t}\n\treturn $pwords;\n}\n\n$words = array('pizza', 'pasta', 'pudding', 'potato', 'prawns', 'paneer');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pudding\n    [3] => potato\n    [4] => prawns\n    [5] => paneer\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl6ugkptf.php:20\nStack trace:\n#0 /tmp/tmpl6ugkptf.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpl6ugkptf.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('PHP', 'JS', 'Python', 'Java', 'C#', 'C++', 'C', 'Go', 'Perl', 'Ruby', 'Swift');\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => PHP\n    [1] => Python\n    [2] => Perl\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu5i5pv0s.php:21\nStack trace:\n#0 /tmp/tmpu5i5pv0s.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpu5i5pv0s.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'peach', 'pineapple'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => peach\n    [3] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj05a6h54.php:21\nStack trace:\n#0 /tmp/tmpj05a6h54.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpj05a6h54.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = array();\n    foreach ($words as $word) {\n        if ($word[0] == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('pizza', 'apple', 'pear', 'pineapple', 'orange', 'papaya');\n$pwords = start_withp($words);\nprint_r($pwords);\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pineapple\n    [3] => papaya\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfxcfmco6.php:22\nStack trace:\n#0 /tmp/tmpfxcfmco6.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpfxcfmco6.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = [];\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return array_slice($pwords, 0, 2);\n}\n\n$words = ['pizza', 'pasta', 'paprika', 'potato', 'pepper'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpchew0v2v.php:21\nStack trace:\n#0 /tmp/tmpchew0v2v.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpchew0v2v.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $words_with_p = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $words_with_p[] = $word;\n        }\n    }\n    return $words_with_p;\n}\n\n$words = ['pizza', 'apple', 'pear', 'potato', 'pineapple'];\n$words_with_p = start_withp($words);\nprint_r($words_with_p);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => potato\n    [3] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbd0zwbr1.php:21\nStack trace:\n#0 /tmp/tmpbd0zwbr1.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpbd0zwbr1.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (strpos($word, 'p') === 0) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'pork', 'prawns');\n$result = start_withp($words);\nprint_r($result);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pork\n    [3] => prawns\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyxzak4cz.php:21\nStack trace:\n#0 /tmp/tmpyxzak4cz.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpyxzak4cz.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = [];\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pineapple', 'orange', 'potato', 'pumpkin'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pineapple\n    [3] => potato\n    [4] => pumpkin\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjt8m7ef7.php:21\nStack trace:\n#0 /tmp/tmpjt8m7ef7.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpjt8m7ef7.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (preg_match('/^p/', $word)) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'pepper', 'pasta', 'potato', 'pork', 'peas'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pepper\n    [2] => pasta\n    [3] => potato\n    [4] => pork\n    [5] => peas\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcykge5oz.php:21\nStack trace:\n#0 /tmp/tmpcykge5oz.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpcykge5oz.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = [];\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => PHP\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp308tx5lb.php:20\nStack trace:\n#0 /tmp/tmp308tx5lb.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp308tx5lb.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'pasta', 'pepperoni', 'parmesan', 'parsley', 'parsnip', 'potato', 'pumpkin', 'pear'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pepperoni\n    [3] => parmesan\n    [4] => parsley\n    [5] => parsnip\n    [6] => potato\n    [7] => pumpkin\n    [8] => pear\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf2jbo2jv.php:21\nStack trace:\n#0 /tmp/tmpf2jbo2jv.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpf2jbo2jv.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $p_words = [];\n    foreach ($words as $word) {\n        if (preg_match('/^p/', $word)) {\n            $p_words[] = $word;\n        }\n    }\n    return $p_words;\n}\n$words = ['pizza', 'pasta', 'parmesan', 'parsley', 'paprika', 'potato', 'pepperoni', 'parsnip', 'pepper', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'parsley', 'p\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "\nParse error: syntax error, unexpected string content \"p\", expecting \"]\" in /tmp/tmpkhp1l6ix.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $p_words = [];\n  foreach ($words as $word) {\n    if (strpos($word, 'p') === 0) {\n      $p_words[] = $word;\n    }\n  }\n  return $p_words;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pork', 'papaya', 'pineapple', 'potato'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pork\n    [3] => papaya\n    [4] => pineapple\n    [5] => potato\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphmjyogz3.php:21\nStack trace:\n#0 /tmp/tmphmjyogz3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmphmjyogz3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pear', 'apple', 'peach', 'plum', 'pineapple', 'pumpkin');\n$result = start_withp($words);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pear\n    [1] => peach\n    [2] => plum\n    [3] => pineapple\n    [4] => pumpkin\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcachvir1.php:22\nStack trace:\n#0 /tmp/tmpcachvir1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpcachvir1.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $p_words = [];\n  foreach ($words as $word) {\n    if (substr($word, 0, 1) == \"p\") {\n      $p_words[] = $word;\n    }\n  }\n  return array_slice($p_words, 0, 2);\n}\n\n$words = ['pizza', 'pasta', 'parmesan', 'parsley', 'paprika', 'pepper', 'potato', 'pumpkin'];\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3rgdzcv3.php:20\nStack trace:\n#0 /tmp/tmp3rgdzcv3.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp3rgdzcv3.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['pizza', 'pepper', 'penguin', 'panda', 'pumpkin', 'potato', 'peas'];\n$pwords = start_withp($words);\nprint_r($pwords);\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pepper\n    [2] => penguin\n    [3] => panda\n    [4] => pumpkin\n    [5] => potato\n    [6] => peas\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd690jr5s.php:22\nStack trace:\n#0 /tmp/tmpd690jr5s.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpd690jr5s.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = array();\n    foreach ($words as $word) {\n        if (preg_match('/^p/', $word)) {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('pizza', 'pasta', 'pepper', 'potato', 'pork', 'prawns', 'peas');\n$pwords = start_withp($words);\nprint_r($pwords);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pepper\n    [3] => potato\n    [4] => pork\n    [5] => prawns\n    [6] => peas\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpin_dapao.php:21\nStack trace:\n#0 /tmp/tmpin_dapao.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpin_dapao.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = array();\n    foreach ($words as $word) {\n        if (preg_match('/^p/', $word)) {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('pizza', 'apple', 'pear', 'peach', 'pork', 'pumpkin');\n$pwords = start_withp($words);\nprint_r($pwords);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => peach\n    [3] => pork\n    [4] => pumpkin\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgdcvx5ro.php:21\nStack trace:\n#0 /tmp/tmpgdcvx5ro.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpgdcvx5ro.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $p_words = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $p_words[] = $word;\n        }\n    }\n    return $p_words;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pineapple', 'plum', 'peach'];\n$p_words = start_withp($words);\nprint_r($p_words);\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pineapple\n    [3] => plum\n    [4] => peach\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcnkf1sw0.php:22\nStack trace:\n#0 /tmp/tmpcnkf1sw0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpcnkf1sw0.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza', 'pizza',\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpft1q7bx3.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (substr($word, 0, 1) == 'p') {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'pizza', 'pear');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pizza\n    [3] => pear\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmxc3h1q4.php:20\nStack trace:\n#0 /tmp/tmpmxc3h1q4.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpmxc3h1q4.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $result = [];\n  foreach ($words as $word) {\n    if (preg_match('/^p/', $word)) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = ['pizza', 'pasta', 'pepperoni', 'potato', 'peas'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pepperoni\n    [3] => potato\n    [4] => peas\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1huoutfm.php:21\nStack trace:\n#0 /tmp/tmp1huoutfm.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp1huoutfm.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (strtolower(substr($word, 0, 1)) == 'p') {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('PHP', 'HTML', 'CSS', 'JavaScript', 'jQuery', 'AJAX', 'XML');\n$result = start_withp($words);\necho '<pre>';\nprint_r($result);\necho '</pre>';\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "<pre>Array\n(\n    [0] => PHP\n)\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0bdbvjyq.php:23\nStack trace:\n#0 /tmp/tmp0bdbvjyq.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp0bdbvjyq.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$p_words = array();\n\tforeach ($words as $word) {\n\t\tif (strpos($word, 'p') === 0) {\n\t\t\t$p_words[] = $word;\n\t\t}\n\t}\n\treturn array_slice($p_words, 0, 2);\n}\n\n$words = ['pizza', 'pasta', 'pancake', 'potato', 'pepper', 'pumpkin', 'pear'];\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx7mnuped.php:20\nStack trace:\n#0 /tmp/tmpx7mnuped.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpx7mnuped.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('PHP', 'MySQL', 'JavaScript', 'HTML', 'CSS');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => PHP\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_9ekjmg.php:20\nStack trace:\n#0 /tmp/tmpn_9ekjmg.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpn_9ekjmg.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $result = [];\n  foreach ($words as $word) {\n    if (strtolower($word[0]) == 'p') {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'peach', 'pineapple', 'potato'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => peach\n    [3] => pineapple\n    [4] => potato\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4q0euua2.php:21\nStack trace:\n#0 /tmp/tmp4q0euua2.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp4q0euua2.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123273,
      "stdout": "Array\n(\n    [0] => PHP\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptaqbl4eq.php:20\nStack trace:\n#0 /tmp/tmptaqbl4eq.php(25): test()\n#1 {main}\n  thrown in /tmp/tmptaqbl4eq.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pear', 'apple', 'orange', 'plum', 'peach');\n$result = start_withp($words);\necho '<pre>';\nprint_r($result);\necho '</pre>';\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "<pre>Array\n(\n    [0] => pear\n    [1] => plum\n    [2] => peach\n)\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbcm6tl90.php:23\nStack trace:\n#0 /tmp/tmpbcm6tl90.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpbcm6tl90.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == 'p') {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'peach', 'pineapple'];\n$result = start_withp($words);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => peach\n    [3] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6jyhjjj_.php:22\nStack trace:\n#0 /tmp/tmp6jyhjjj_.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp6jyhjjj_.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (preg_match('/^p/', $word)) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('pear', 'apple', 'orange', 'pineapple', 'peach', 'plum');\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pear\n    [1] => pineapple\n    [2] => peach\n    [3] => plum\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_todmxlx.php:21\nStack trace:\n#0 /tmp/tmp_todmxlx.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_todmxlx.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'peach', 'pineapple'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => peach\n    [3] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj05a6h54.php:21\nStack trace:\n#0 /tmp/tmpj05a6h54.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpj05a6h54.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('pizza', 'pasta', 'pumpkin', 'potato', 'pepper', 'parsley');\n$pwords = start_withp($words);\nprint_r($pwords);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pumpkin\n    [3] => potato\n    [4] => pepper\n    [5] => parsley\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpodp3uurt.php:21\nStack trace:\n#0 /tmp/tmpodp3uurt.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpodp3uurt.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$pwords = array();\n\tforeach ($words as $word) {\n\t\tif (preg_match('/^p/', $word)) {\n\t\t\t$pwords[] = $word;\n\t\t}\n\t}\n\treturn $pwords;\n}\n\n$words = array('pizza', 'pasta', 'pepper', 'pancake', 'potato', 'pudding', 'pork', 'prawn', 'pear', 'pineapple');\n$pwords = start_withp($words);\nprint_r($pwords);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pepper\n    [3] => pancake\n    [4] => potato\n    [5] => pudding\n    [6] => pork\n    [7] => prawn\n    [8] => pear\n    [9] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq19gw1qx.php:21\nStack trace:\n#0 /tmp/tmpq19gw1qx.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpq19gw1qx.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $p_words = [];\n  foreach ($words as $word) {\n    if (strtolower($word[0]) == 'p') {\n      $p_words[] = $word;\n    }\n  }\n  return $p_words;\n}\n\n$words = ['PHP', 'Exercises', 'Backend'];\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => PHP\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzu4epuk4.php:20\nStack trace:\n#0 /tmp/tmpzu4epuk4.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpzu4epuk4.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$p_words = array();\n\tforeach ($words as $word) {\n\t\tif (substr($word, 0, 1) == 'p') {\n\t\t\t$p_words[] = $word;\n\t\t}\n\t}\n\treturn $p_words;\n}\n\n$words = array('pear', 'apple', 'orange', 'pineapple', 'plum', 'peach');\n$p_words = start_withp($words);\nprint_r($p_words);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pear\n    [1] => pineapple\n    [2] => plum\n    [3] => peach\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7iaw9elc.php:21\nStack trace:\n#0 /tmp/tmp7iaw9elc.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7iaw9elc.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = [];\n    foreach ($words as $word) {\n        if (preg_match('/^p/', $word)) {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pizza'];\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pizza\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpogrljmx0.php:20\nStack trace:\n#0 /tmp/tmpogrljmx0.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpogrljmx0.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $pwords = [];\n  foreach ($words as $word) {\n    if (strtolower($word[0]) == 'p') {\n      $pwords[] = $word;\n    }\n  }\n  return $pwords;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pineapple', 'orange', 'peach'];\n$pwords = start_withp($words);\nprint_r($pwords);\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pineapple\n    [3] => peach\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptofehce7.php:22\nStack trace:\n#0 /tmp/tmptofehce7.php(27): test()\n#1 {main}\n  thrown in /tmp/tmptofehce7.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $pwords = array();\n  foreach ($words as $word) {\n    if (preg_match('/^p/', $word)) {\n      $pwords[] = $word;\n    }\n  }\n  return $pwords;\n}\n\n$words = array('pear', 'apple', 'peach', 'pineapple', 'pumpkin', 'potato');\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pear\n    [1] => peach\n    [2] => pineapple\n    [3] => pumpkin\n    [4] => potato\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl4mqaqgk.php:21\nStack trace:\n#0 /tmp/tmpl4mqaqgk.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpl4mqaqgk.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$pwords = array();\n\tforeach ($words as $word) {\n\t\tif (preg_match('/^p/', $word)) {\n\t\t\t$pwords[] = $word;\n\t\t}\n\t}\n\treturn $pwords;\n}\n\n$words = array('pizza', 'pasta', 'parmesan', 'parsley', 'pepper', 'parsnip', 'potato', 'pumpkin', 'peas', 'pear', 'peach');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => parmesan\n    [3] => parsley\n    [4] => pepper\n    [5] => parsnip\n    [6] => potato\n    [7] => pumpkin\n    [8] => peas\n    [9] => pear\n    [10] => peach\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9n27sdke.php:20\nStack trace:\n#0 /tmp/tmp9n27sdke.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp9n27sdke.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $result = [];\n  foreach ($words as $word) {\n    if (substr($word, 0, 1) == 'p') {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pineapple', 'banana', 'peach'];\nvar_dump(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "array(4) {\n  [0]=>\n  string(5) \"pizza\"\n  [1]=>\n  string(4) \"pear\"\n  [2]=>\n  string(9) \"pineapple\"\n  [3]=>\n  string(5) \"peach\"\n}\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg3m3c1dc.php:21\nStack trace:\n#0 /tmp/tmpg3m3c1dc.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpg3m3c1dc.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $result = array();\n  foreach ($words as $word) {\n    if (preg_match('/^p/', $word)) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = array('pizza', 'pasta', 'pepper', 'pig', 'pork', 'potato', 'pumpkin', 'pear');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pepper\n    [3] => pig\n    [4] => pork\n    [5] => potato\n    [6] => pumpkin\n    [7] => pear\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpydf8t7r2.php:20\nStack trace:\n#0 /tmp/tmpydf8t7r2.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpydf8t7r2.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (strpos($word, 'p') === 0) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('pear', 'apple', 'orange', 'pineapple', 'grape');\n$result = start_withp($words);\nprint_r($result);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pear\n    [1] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv89awvlf.php:21\nStack trace:\n#0 /tmp/tmpv89awvlf.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpv89awvlf.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$pwords = array();\n\tforeach ($words as $word) {\n\t\tif (preg_match('/^p/', $word)) {\n\t\t\t$pwords[] = $word;\n\t\t}\n\t}\n\treturn $pwords;\n}\n\n$words = array('pear', 'apple', 'orange', 'pineapple', 'papaya', 'pumpkin');\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pear\n    [1] => pineapple\n    [2] => papaya\n    [3] => pumpkin\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnp1krgsk.php:21\nStack trace:\n#0 /tmp/tmpnp1krgsk.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpnp1krgsk.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $result = array();\n  foreach ($words as $word) {\n    if (preg_match('/^p/', $word)) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'banana', 'pudding', 'pineapple');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pudding\n    [3] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjvm8nkn7.php:20\nStack trace:\n#0 /tmp/tmpjvm8nkn7.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpjvm8nkn7.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'pasta', 'pudding', 'pancakes', 'potatoes', 'pepper', 'parsley'];\n\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pudding\n    [3] => pancakes\n    [4] => potatoes\n    [5] => pepper\n    [6] => parsley\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmsyneb9o.php:22\nStack trace:\n#0 /tmp/tmpmsyneb9o.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpmsyneb9o.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pineapple', 'pork', 'porky'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pineapple\n    [3] => pork\n    [4] => porky\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxr6v8bjq.php:21\nStack trace:\n#0 /tmp/tmpxr6v8bjq.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpxr6v8bjq.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = [];\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'pancake'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pancake\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf8xyzpr6.php:21\nStack trace:\n#0 /tmp/tmpf8xyzpr6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpf8xyzpr6.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = array();\n    foreach ($words as $word) {\n        if (strtolower($word[0]) == 'p') {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('PHP', 'is', 'a', 'widely-used', 'open', 'source', 'general-purpose', 'scripting', 'language');\n$pwords = start_withp($words);\necho implode(' ', $pwords);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "PHP\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbxts95xb.php:21\nStack trace:\n#0 /tmp/tmpbxts95xb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpbxts95xb.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'peach', 'pineapple');\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => peach\n    [3] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9qdiyanu.php:21\nStack trace:\n#0 /tmp/tmp9qdiyanu.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp9qdiyanu.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $result = array();\n    foreach ($words as $word) {\n        if (strpos($word, 'p') === 0) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'pork', 'potato', 'pen', 'peach', 'pudding');\n$result = start_withp($words);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pork\n    [3] => potato\n    [4] => pen\n    [5] => peach\n    [6] => pudding\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzdzi8zot.php:22\nStack trace:\n#0 /tmp/tmpzdzi8zot.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzdzi8zot.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n    $pwords = array();\n    foreach ($words as $word) {\n        if (preg_match('/^p/', $word)) {\n            $pwords[] = $word;\n        }\n    }\n    return $pwords;\n}\n\n$words = array('pizza', 'pasta', 'pepper', 'potato', 'pork', 'prawns', 'peas');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pepper\n    [3] => potato\n    [4] => pork\n    [5] => prawns\n    [6] => peas\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgcrcncl3.php:20\nStack trace:\n#0 /tmp/tmpgcrcncl3.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpgcrcncl3.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $result = [];\n  foreach ($words as $word) {\n    if (strpos($word, 'p') === 0) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = ['pizza', 'apple', 'pear', 'peach', 'pineapple', 'pork', 'prawn'];\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => peach\n    [3] => pineapple\n    [4] => pork\n    [5] => prawn\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa7hafrx6.php:20\nStack trace:\n#0 /tmp/tmpa7hafrx6.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpa7hafrx6.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $result = [];\n  foreach ($words as $word) {\n    if (strpos($word, 'p') === 0) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n$words = ['pear', 'apple', 'peach', 'pineapple', 'pumpkin', 'papaya'];\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pear\n    [1] => peach\n    [2] => pineapple\n    [3] => pumpkin\n    [4] => papaya\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkya_3wt4.php:20\nStack trace:\n#0 /tmp/tmpkya_3wt4.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpkya_3wt4.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (strpos($word, 'p') === 0) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('pizza', 'apple', 'pear', 'pineapple', 'banana');\n$result = start_withp($words);\nprint_r($result);\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pear\n    [2] => pineapple\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp19yxv5bb.php:21\nStack trace:\n#0 /tmp/tmp19yxv5bb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp19yxv5bb.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (strtolower($word[0]) == 'p') {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('PHP', 'HTML', 'CSS', 'JavaScript', 'Python', 'C', 'C++', 'C#', 'Java', 'Ruby', 'Perl', 'Pascal', 'Go', 'Swift', 'Scala', 'Lisp', 'Bash', 'Haskell', 'MATLAB', 'Clojure', 'Groovy', 'Objective-C', 'R', 'VBA', 'Fortran', 'Assembly', 'Rust', 'Erlang', 'CoffeeScript', 'Julia', 'D', 'Elixir', 'F#', 'OCaml', 'Haxe', 'Puppet', 'PowerShell', 'Prolog', 'Scheme', 'Smalltalk', 'Tcl', 'Visual Basic .NET', 'Apex', 'AppleScript', 'AutoHotkey', 'AutoIt', 'Awk', 'Batch', 'bc', 'BlitzMax', 'Boo', 'Ceylon', 'Chapel', 'Clean', 'Clipper', 'CMake', 'COBOL', 'ColdFusion', 'Dart', 'Delphi', 'Eiffel', 'Elm', 'Emacs Lisp', 'EmberScript', 'EQ', 'Fantom', 'Forth', 'Gambas', 'GAP', 'GLSL', 'Go', 'Gosu', 'Hack', 'Io', 'Ioke', 'J', 'Kotlin', 'LabVIEW', 'Ladder Logic', 'Lasso', 'Limbo', 'LiveCode', 'Logo', 'Logtalk', 'Lua', 'M', 'M4', 'MAD', 'Magic', 'Max', 'MaxScript', 'Mercury', 'Mirah', 'MQL4', 'MQL5', 'Nemerle', 'Nimrod', 'NQC', 'NSIS', 'Nu', 'Oberon', 'OpenCL', 'OpenEdge ABL', 'OpenSCAD', 'Ox', 'Oxygene', 'Parrot', 'Pike', 'P\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "\nParse error: syntax error, unexpected string content \"P\", expecting \")\" in /tmp/tmpxwjh6gcd.php on line 13\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n\t$result = array();\n\tforeach ($words as $word) {\n\t\tif (strtolower($word[0]) == 'p') {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$words = array('PHP', 'is', 'a', 'widely-used', 'open', 'source', 'general-purpose', 'scripting', 'language');\nprint_r(start_withp($words));\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => PHP\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk1bavayg.php:20\nStack trace:\n#0 /tmp/tmpk1bavayg.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpk1bavayg.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunction start_withp($words) {\n  $pwords = [];\n  foreach ($words as $word) {\n    if (substr($word, 0, 1) == 'p') {\n      $pwords[] = $word;\n    }\n  }\n  return $pwords;\n}\n\n$words = ['pizza', 'pasta', 'pepperoni', 'potato', 'pork', 'prawns', 'peas'];\nprint_r(start_withp($words));\n\nfunction candidate(...$args) {\n    return start_withp(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"Python PHP\", \"Java JavaScript\", \"c c++\")) !== array(\"Python\", \"PHP\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Python Programming\", \"Java Programming\")) !== array(\"Python\", \"Programming\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Pqrst Pqr\", \"qrstuv\")) !== array(\"Pqrst\", \"Pqr\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123274,
      "stdout": "Array\n(\n    [0] => pizza\n    [1] => pasta\n    [2] => pepperoni\n    [3] => potato\n    [4] => pork\n    [5] => prawns\n    [6] => peas\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgbstcf62.php:21\nStack trace:\n#0 /tmp/tmpgbstcf62.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpgbstcf62.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_585_expensive_items",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_585_expensive_items.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "  $sorted_items = array_sort($items, function($item) {\n    return $item['price'];\n  });\n\n  return array_slice($sorted_items, 0, $n);\n}\n",
    "  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $b['price'] - $a['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 3],\n  ['name' => 'bananas', 'price' => 2],\n  ['name' => 'coconuts', 'price' => 5],\n  ['name' => 'dates', 'price' => 1],\n];\n\nprint_r(expensive_items($items, 2));\n",
    "    $sorted_items = array_sort($items, 'price', SORT_DESC);\n    return array_slice($sorted_items, 0, $n);\n}\n",
    "  $sorted = $items;\n  usort($sorted, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n\n$items = [\n  ['name' => 'Item 1', 'price' => 5],\n  ['name' => 'Item 2', 'price' => 10],\n  ['name' => 'Item 3', 'price' => 15],\n  ['name' => 'Item 4', 'price' => 20],\n  ['name' => 'Item 5', 'price' => 25],\n  ['name' => 'Item 6', 'price' => 30],\n  ['name' => 'Item 7', 'price' => 35],\n  ['name' => 'Item 8', 'price' => 40],\n  ['name' => 'Item 9', 'price' => 45],\n  ['name' => 'Item 10', 'price' => 50],\n];\n\nprint_r(expensive_items($items, 3));",
    "\t$sorted_items = array_sort($items, 'price');\n\t$expensive_items = array_slice($sorted_items, 0, $n);\n\treturn $expensive_items;\n}\n",
    "\t$prices = array();\n\tforeach ($items as $item) {\n\t\t$prices[] = $item['price'];\n\t}\n\tarray_multisort($prices, SORT_DESC, $items);\n\treturn array_slice($items, 0, $n);\n}\n\n$items = array(\n\tarray('name' => 'item1', 'price' => 10),\n\tarray('name' => 'item2', 'price' => 9),\n\tarray('name' => 'item3', 'price' => 12),\n\tarray('name' => 'item4', 'price' => 8),\n\tarray('name' => 'item5', 'price' => 11),\n\tarray('name' => 'item6', 'price' => 10),\n);\n\nprint_r(expensive_items($items, 3));\n",
    "    $sorted = array_sort($items, function($item) {\n        return $item['price'];\n    });\n    return array_slice($sorted, 0, $n);\n}\n",
    "  $expensive_items = array();\n  $i = 0;\n  foreach ($items as $item) {\n    if ($i < $n) {\n      $expensive_items[] = $item;\n      $i++;\n    }\n    else {\n      $min_price = min($expensive_items);\n      if ($item > $min_price) {\n        $min_index = array_search($min_price, $expensive_items);\n        $expensive_items[$min_index] = $item;\n      }\n    }\n  }\n  return $expensive_items;\n}\n",
    "  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'chair', 'price' => 200],\n  ['name' => 'desk', 'price' => 100],\n  ['name' => 'sofa', 'price' => 300],\n  ['name' => 'bed', 'price' => 400],\n  ['name' => 'table', 'price' => 50],\n];\n\nprint_r(expensive_items($items, 2));\n",
    "\t$sorted_items = array_sort($items, 'price', SORT_DESC);\n\treturn array_slice($sorted_items, 0, $n);\n}\n",
    "  $sorted_items = array();\n  foreach ($items as $item) {\n    $sorted_items[$item['price']] = $item;\n  }\n  krsort($sorted_items);\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = array(\n  array('name' => 'item1', 'price' => 10),\n  array('name' => 'item2', 'price' => 9),\n  array('name' => 'item3', 'price' => 12),\n  array('name' => 'item4', 'price' => 8),\n  array('name' => 'item5', 'price' => 11),\n  array('name' => 'item6', 'price' => 9),\n);\n\nprint_r(expensive_items($items, 3));\n",
    "    $sorted_items = array_sort($items, 'price', SORT_DESC);\n    return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n    ['name' => 'coffee', 'price' => 3],\n    ['name' => 'tea', 'price' => 2],\n    ['name' => 'water', 'price' => 1],\n    ['name' => 'beer', 'price' => 5],\n    ['name' => 'wine', 'price' => 10],\n    ['name' => 'whiskey', 'price' => 15],\n];\n\nprint_r(expensive_items($items, 3));\n",
    "  $sorted_items = array_sort($items, function($item) {\n    return $item['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n",
    "  $sorted = $items;\n  usort($sorted, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n\n$items = [\n  ['name' => 'item1', 'price' => 10],\n  ['name' => 'item2', 'price' => 9],\n  ['name' => 'item3', 'price' => 12],\n  ['name' => 'item4', 'price' => 8],\n  ['name' => 'item5', 'price' => 11],\n];\n\n$expensive_items = expensive_items($items, 3);\n\nforeach ($expensive_items as $item) {\n  echo $item['name'] . ': ' . $item['price'] . PHP_EOL;\n}\n",
    "  $sorted = array_sort($items, function($item) {\n    return $item['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n",
    "    $sorted = array_sort($items, function($item) {\n        return $item['price'];\n    });\n    return array_slice($sorted, 0, $n);\n}\n\n$items = [\n    ['name' => 'coffee', 'price' => 2.50],\n    ['name' => 'tea', 'price' => 1.50],\n    ['name' => 'biscuits', 'price' => 0.10],\n    ['name' => 'cake', 'price' => 1.00],\n];\n\n$most_expensive = expensive_items($items, 2);\n\nvar_dump($most_expensive);\n",
    "  $sorted_items = array_sort($items, 'price', SORT_DESC);\n  return array_slice($sorted_items, 0, $n);\n}\n",
    "  $sorted = array_sort($items, function($item) {\n    return $item['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n",
    "  $sorted_items = array_sort($items, function($item) {\n    return $item['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n",
    "    $expensive_items = [];\n    $i = 0;\n    foreach ($items as $item) {\n        if ($i < $n) {\n            $expensive_items[] = $item;\n            $i++;\n        } else {\n            $min_item = $expensive_items[0];\n            foreach ($expensive_items as $expensive_item) {\n                if ($expensive_item['price'] < $min_item['price']) {\n                    $min_item = $expensive_item;\n                }\n            }\n            if ($item['price'] > $min_item['price']) {\n                $expensive_items = array_diff($expensive_items, [$min_item]);\n                $expensive_items[] = $item;\n            }\n        }\n    }\n    return $expensive_items;\n}\n\n$items = [\n    ['name' => 'Item 1', 'price' => 100],\n    ['name' => 'Item 2', 'price' => 200],\n    ['name' => 'Item 3', 'price' => 300],\n    ['name' => 'Item 4', 'price' => 400],\n    ['name' => 'Item 5', 'price' => 500],\n    ['name' => 'Item 6', 'price' => 600],\n    ['name' => 'Item 7', 'price' => 700],\n    ['name' => 'Item 8', 'price' => 800],\n    ['name' => 'Item 9', 'price' => 900],\n    ['name' => 'Item 10', 'price' => 1000],\n];\n\n$n = 3;\n\n$expensive_items = expensive_items($items, $n);\n\nprint_r($expensive_items);"
  ]
}
{
  "name": "mbpp_94_index_minimum",
  "language": "php",
  "prompt": "<?php\n// Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\nfunction index_minimum($test_list) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_94_index_minimum.py",
  "prompt_terminology": "verbatim",
  "tests": "function candidate(...$args) {\n    return index_minimum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"Rash\", 143), array(\"Manjeet\", 200), array(\"Varsha\", 100))) !== \"Varsha\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"Yash\", 185), array(\"Dawood\", 125), array(\"Sanya\", 175))) !== \"Dawood\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"Sai\", 345), array(\"Salman\", 145), array(\"Ayesha\", 96))) !== \"Ayesha\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "  $min_index = 0;\n  $min_value = $test_list[0][1];\n  for ($i = 1; $i < count($test_list); $i++) {\n    if ($test_list[$i][1] < $min_value) {\n      $min_index = $i;\n      $min_value = $test_list[$i][1];\n    }\n  }\n  return $test_list[$min_index][0];\n}\n\n$test_list = array(\n  array(1, 3),\n  array(2, 4),\n  array(3, 5),\n  array(4, 2),\n  array(5, 1),\n);\n\necho index_minimum($test_list);",
    "    $min = $test_list[0][1];\n    $index = 0;\n    for ($i = 0; $i < count($test_list); $i++) {\n        if ($test_list[$i][1] < $min) {\n            $min = $test_list[$i][1];\n            $index = $i;\n        }\n    }\n    return $index;\n}\n",
    "    $min_index = 0;\n    $min_value = $test_list[0][1];\n    for ($i = 1; $i < count($test_list); $i++) {\n        if ($test_list[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list[$i][1];\n        }\n    }\n    return $test_list[$min_index][0];\n}\n\n$test_list = [['a', 1], ['b', 2], ['c', 3], ['d', 4], ['e', 5]];\necho index_minimum($test_list);",
    "    $min = $test_list[0][1];\n    $index = 0;\n    for ($i = 1; $i < count($test_list); $i++) {\n        if ($test_list[$i][1] < $min) {\n            $min = $test_list[$i][1];\n            $index = $i;\n        }\n    }\n    return $test_list[$index][0];\n}\n\n$test_list = [['a', 1], ['b', 2], ['c', 3]];\necho index_minimum($test_list);",
    "    $min_index = 0;\n    $min_value = $test_list[0][1];\n    for ($i = 1; $i < count($test_list); $i++) {\n        if ($test_list[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list[$i][1];\n        }\n    }\n    return $test_list[$min_index][0];\n}\n",
    "    $min_index = 0;\n    $min_value = $test_list[0][1];\n    for ($i = 1; $i < count($test_list); $i++) {\n        if ($test_list[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list[$i][1];\n        }\n    }\n    return $test_list[$min_index][0];\n}\n",
    "    $min_index = 0;\n    $min_value = $test_list[0][1];\n    for ($i = 1; $i < count($test_list); $i++) {\n        if ($test_list[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list[$i][1];\n        }\n    }\n    return $test_list[$min_index][0];\n}\n\n$test_list = [['a', 1], ['b', 2], ['c', 3], ['d', 4]];\necho index_minimum($test_list);",
    "    $min_index = 0;\n    $min_value = $test_list[0][1];\n    for ($i = 1; $i < count($test_list); $i++) {\n        if ($test_list[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list[$i][1];\n        }\n    }\n    return $test_list[$min_index][0];\n}\n",
    "    $min_index = 0;\n    $min_value = $test_list[0][1];\n    for ($i = 1; $i < count($test_list); $i++) {\n        if ($test_list[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list[$i][1];\n        }\n    }\n    return $test_list[$min_index][0];\n}\n",
    "    $min_index = 0;\n    $min_value = $test_list[0][1];\n    for ($i = 0; $i < count($test_list); $i++) {\n        if ($test_list[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list[$i][1];\n        }\n    }\n    return $test_list[$min_index][0];\n}\n\n$test_list = array(\n    array(\"a\", 3),\n    array(\"b\", 2),\n    array(\"c\", 1)\n);\n\necho index_minimum($test_list);",
    "    $min_index = 0;\n    $min_value = $test_list[0][1];\n    for ($i = 1; $i < count($test_list); $i++) {\n        if ($test_list[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list[$i][1];\n        }\n    }\n    return $test_list[$min_index][0];\n}\n",
    "    $min_index = 0;\n    $min_value = $test_list[0][1];\n    for ($i = 1; $i < count($test_list); $i++) {\n        if ($test_list[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list[$i][1];\n        }\n    }\n    return $test_list[$min_index][0];\n}\n\n$test_list = [['a', 1], ['b', 2], ['c', 3], ['d', 4]];\necho index_minimum($test_list);",
    "    $min = $test_list[0][1];\n    $index = 0;\n    for ($i = 0; $i < count($test_list); $i++) {\n        if ($test_list[$i][1] < $min) {\n            $min = $test_list[$i][1];\n            $index = $i;\n        }\n    }\n    return $test_list[$index][0];\n}\n\n$test_list = [['a', 1], ['b', 2], ['c', 3], ['d', 4], ['e', 5]];\necho index_minimum($test_list);",
    "\t$min_index = 0;\n\t$min_value = $test_list[0][1];\n\tfor ($i = 0; $i < count($test_list); $i++) {\n\t\tif ($test_list[$i][1] < $min_value) {\n\t\t\t$min_index = $i;\n\t\t\t$min_value = $test_list[$i][1];\n\t\t}\n\t}\n\treturn $min_index;\n}\n",
    "    $min_index = 0;\n    $min_value = $test_list[0][1];\n    for ($i = 1; $i < count($test_list); $i++) {\n        if ($test_list[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list[$i][1];\n        }\n    }\n    return $test_list[$min_index][0];\n}\n\n$test_list = [[1, 2], [3, 4], [5, 6], [7, 8], [9, 10]];\necho index_minimum($test_list);",
    "    $min_index = 0;\n    $min_value = $test_list[0][1];\n    for ($i = 1; $i < count($test_list); $i++) {\n        if ($test_list[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list[$i][1];\n        }\n    }\n    return $test_list[$min_index][0];\n}\n\n$test_list = [['a', 1], ['b', 2], ['c', 3]];\necho index_minimum($test_list);",
    "    $min_index = 0;\n    $min_value = $test_list[0][1];\n    for ($i = 1; $i < count($test_list); $i++) {\n        if ($test_list[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list[$i][1];\n        }\n    }\n    return $test_list[$min_index][0];\n}\n",
    "    $min_index = 0;\n    $min_value = $test_list[0][1];\n    for ($i = 1; $i < count($test_list); $i++) {\n        if ($test_list[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list[$i][1];\n        }\n    }\n    return $test_list[$min_index][0];\n}\n\n$test_list = array(\n    array(1, 2),\n    array(2, 3),\n    array(3, 4),\n    array(4, 5),\n    array(5, 6),\n    array(6, 7),\n    array(7, 8),\n    array(8, 9),\n    array(9, 10),\n    array(10, 11),\n    array(11, 12),\n    array(12, 13),\n    array(13, 14),\n    array(14, 15),\n    array(15, 16),\n    array(16, 17),\n    array(17, 18),\n    array(18, 19),\n    array(19, 20),\n    array(20, 21),\n    array(21, 22),\n    array(22, 23),\n    array(23, 24),\n    array(24, 25),\n    array(25, 26),\n    array(26, 27),\n    array(27, 28),\n    array(28, 29),\n    array(29, 30),\n    array(30, 31),\n    array(31, 32),\n    array(32, 33),\n    array(33, 34),\n    array(34, 35),\n    array(35, 36),\n    array(36, 37),\n    array(37, 38),\n    array(38, 39),\n    array(39, 40),\n    array(40, 41),\n    array(41, 42),\n    array(42, 43),\n    array(43, 44),\n    array(44, 45),\n    array(45, 46),\n    array(46, 47),\n    array(47, 48),\n    array(48, 49),\n    array",
    "\t$min_index = 0;\n\t$min_value = $test_list[0][1];\n\tfor ($i = 1; $i < count($test_list); $i++) {\n\t\tif ($test_list[$i][1] < $min_value) {\n\t\t\t$min_index = $i;\n\t\t\t$min_value = $test_list[$i][1];\n\t\t}\n\t}\n\treturn $min_index;\n}\n\n$test_list = array(array(1,2), array(3,4), array(5,6));\necho index_minimum($test_list);",
    "    $min_index = 0;\n    $min_value = $test_list[0][1];\n    for ($i = 1; $i < count($test_list); $i++) {\n        if ($test_list[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list[$i][1];\n        }\n    }\n    return $test_list[$min_index][0];\n}\n\n$test_list = [[1, 2], [3, 4], [5, 6]];\necho index_minimum($test_list);"
  ]
}
{
  "name": "mbpp_125_find_length",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_125_find_length.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;",
    "        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;",
    "        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;",
    "        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;",
    "        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;",
    "        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;",
    "        long max = 0;\n        long count = 0;\n        for(int i = 0; i < string.length(); i++) {\n            if(string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if(count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for(int i = string.length() - 1; i >= 0; i--) {\n            if(string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if(count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;",
    "        int max = 0;\n        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;",
    "        long max = 0;\n        long count = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            } else {\n                count = Math.max(count0, count1);\n                max = Math.max(max, count);\n            }\n        }\n        return max;",
    "        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 * 2);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 * 2);\n            }\n        }\n        return max;",
    "        int n = string.length();\n        int[] zeros = new int[n];\n        int[] ones = new int[n];\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                zeros[i] = 1;\n            } else {\n                ones[i] = 1;\n            }\n        }\n        for (int i = 1; i < n; i++) {\n            zeros[i] += zeros[i - 1];\n            ones[i] += ones[i - 1];\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                long z = zeros[j] - (i == 0 ? 0 : zeros[i - 1]);\n                long o = ones[j] - (i == 0 ? 0 : ones[i - 1]);\n                long diff = Math.abs(z - o);\n                max = Math.max(max, diff);\n            }\n        }\n        return max;",
    "        int zeroCount = 0;\n        int oneCount = 0;\n        int maxDiff = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zeroCount++;\n            } else {\n                oneCount++;\n            }\n            if (zeroCount == oneCount) {\n                maxDiff = Math.max(maxDiff, zeroCount);\n            }\n        }\n        zeroCount = 0;\n        oneCount = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                zeroCount++;\n            } else {\n                oneCount++;\n            }\n            if (zeroCount == oneCount) {\n                maxDiff = Math.max(maxDiff, zeroCount);\n            }\n        }\n        return maxDiff;",
    "        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;",
    "        int n = string.length();\n        int[] zeros = new int[n];\n        int[] ones = new int[n];\n        int zeroCount = 0;\n        int oneCount = 0;\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                zeroCount++;\n            } else {\n                oneCount++;\n            }\n            zeros[i] = zeroCount;\n            ones[i] = oneCount;\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                int z = zeros[j];\n                int o = ones[j];\n                if (i > 0) {\n                    z -= zeros[i - 1];\n                    o -= ones[i - 1];\n                }\n                max = Math.max(max, Math.abs(z - o));\n            }\n        }\n        return max;",
    "        // Write your code here\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;",
    "        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;",
    "        int n = string.length();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = string.charAt(i) - '0';\n        }\n        int[] prefix = new int[n];\n        prefix[0] = arr[0];\n        for (int i = 1; i < n; i++) {\n            prefix[i] = prefix[i - 1] + arr[i];\n        }\n        int[] suffix = new int[n];\n        suffix[n - 1] = arr[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            suffix[i] = suffix[i + 1] + arr[i];\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                int left = i == 0 ? 0 : prefix[i - 1];\n                int right = j == n - 1 ? 0 : suffix[j + 1];\n                max = Math.max(max, Math.abs(left + right - (j - i + 1 - (prefix[j] - left))));\n            }\n        }\n        return max;",
    "        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;",
    "        int max = 0;\n        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;",
    "        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            max = Math.max(max, Math.abs(count0 - count1));\n        }\n        return max;"
  ]
}
{
  "name": "mbpp_476_big_sum",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_476_big_sum.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long min = nums.get(0);\n        long max = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n        }\n        return min + max;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187410,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.stream().max(Long::compare).get();\n        long min = nums.stream().min(Long::compare).get();\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187411,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long min = nums.get(0);\n        long max = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187411,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for(long i : nums) {\n            if(i > max) {\n                max = i;\n            }\n            if(i < min) {\n                min = i;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187411,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long sum = 0;\n        long min = nums.get(0);\n        long max = nums.get(0);\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n        }\n        sum = min + max;\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187411,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long sum = 0;\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        sum = max + min;\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187411,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187412,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Collections.max(nums);\n        long min = Collections.min(nums);\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long min = nums.get(0);\n        long max = nums.get(0);\n        for (long num : nums) {\n            if (num < min) {\n                min = num;\n            }\n            if (num > max) {\n                max = num;\n            }\n        }\n        return min + max;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187412,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long n : nums) {\n            max = Math.max(max, n);\n            min = Math.min(min, n);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long largest = nums.get(0);\n        long smallest = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) > largest) {\n                largest = nums.get(i);\n            } else if (nums.get(i) < smallest) {\n                smallest = nums.get(i);\n            }\n        }\n        return largest + smallest;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187414,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187410,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long min = nums.get(0);\n        long max = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n        }\n        return min + max;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long n : nums) {\n            max = Math.max(max, n);\n            min = Math.min(min, n);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long min = Collections.min(nums);\n        long max = Collections.max(nums);\n        return min + max;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187414,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long n : nums) {\n            max = Math.max(max, n);\n            min = Math.min(min, n);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187410,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187410,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187410,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long num : nums) {\n            min = Math.min(min, num);\n            max = Math.max(max, num);\n        }\n        return min + max;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187414,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187410,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long min = nums.get(0);\n        long max = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187411,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long num : nums) {\n            if (num < min) {\n                min = num;\n            }\n            if (num > max) {\n                max = num;\n            }\n        }\n        return min + max;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187414,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long min = nums.get(0);\n        long max = nums.get(0);\n        for (long n : nums) {\n            if (n < min) {\n                min = n;\n            }\n            if (n > max) {\n                max = n;\n            }\n        }\n        return min + max;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187415,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) max = num;\n            if (num < min) min = num;\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187415,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187410,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long num : nums) {\n            if (num < min) {\n                min = num;\n            }\n            if (num > max) {\n                max = num;\n            }\n        }\n        return min + max;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187414,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long i : nums) {\n            max = Math.max(max, i);\n            min = Math.min(min, i);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187416,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187410,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187410,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long num : nums) {\n            if (num < min) {\n                min = num;\n            }\n            if (num > max) {\n                max = num;\n            }\n        }\n        return min + max;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187414,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long num : nums) {\n            min = Math.min(min, num);\n            max = Math.max(max, num);\n        }\n        return min + max;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187414,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187410,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Collections.max(nums);\n        long min = Collections.min(nums);\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187410,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187410,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long min = nums.get(0);\n        long max = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n        }\n        return min + max;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long min = nums.get(0);\n        long max = nums.get(0);\n        for (long num : nums) {\n            if (num < min) {\n                min = num;\n            }\n            if (num > max) {\n                max = num;\n            }\n        }\n        return min + max;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187412,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long num : nums) {\n            if (num < min) {\n                min = num;\n            }\n            if (num > max) {\n                max = num;\n            }\n        }\n        return min + max;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187414,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long n : nums) {\n            max = Math.max(max, n);\n            min = Math.min(min, n);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long n : nums) {\n            max = Math.max(max, n);\n            min = Math.min(min, n);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (long num : nums) {\n            if (num > max) max = num;\n            if (num < min) min = num;\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187416,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long n : nums) {\n            if (n > max) {\n                max = n;\n            }\n            if (n < min) {\n                min = n;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187416,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Collections.max(nums);\n        long min = Collections.min(nums);\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187410,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long n : nums) {\n            if (n > max) {\n                max = n;\n            }\n            if (n < min) {\n                min = n;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187416,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187410,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (long n : nums) {\n            if (n > max) {\n                max = n;\n            }\n            if (n < min) {\n                min = n;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187410,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long min = nums.get(0);\n        long max = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n        }\n        return min + max;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Collections.max(nums);\n        long min = Collections.min(nums);\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long min = nums.get(0);\n        long max = nums.get(0);\n        for (long num : nums) {\n            if (num < min) {\n                min = num;\n            }\n            if (num > max) {\n                max = num;\n            }\n        }\n        return min + max;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187412,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long num : nums) {\n            if (num < min) {\n                min = num;\n            }\n            if (num > max) {\n                max = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long num : nums) {\n            min = Math.min(min, num);\n            max = Math.max(max, num);\n        }\n        return min + max;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187414,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long n : nums) {\n            if (n > max) {\n                max = n;\n            }\n            if (n < min) {\n                min = n;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187416,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long num : nums) {\n            if (num < min) {\n                min = num;\n            }\n            if (num > max) {\n                max = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187410,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187410,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long sum = 0;\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        sum = max + min;\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187411,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long n : nums) {\n            max = Math.max(max, n);\n            min = Math.min(min, n);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187410,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long min = nums.get(0);\n        long max = nums.get(0);\n        for (long num : nums) {\n            if (num < min) {\n                min = num;\n            }\n            if (num > max) {\n                max = num;\n            }\n        }\n        return min + max;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187412,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187410,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (long n : nums) {\n            if (n > max) {\n                max = n;\n            }\n            if (n < min) {\n                min = n;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Collections.max(nums);\n        long min = Collections.min(nums);\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187410,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long min = Collections.min(nums);\n        long max = Collections.max(nums);\n        return min + max;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187414,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long num : nums) {\n            if (num < min) {\n                min = num;\n            }\n            if (num > max) {\n                max = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Collections.max(nums);\n        long min = Collections.min(nums);\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long largest = nums.get(0);\n        long smallest = nums.get(0);\n        for (long num : nums) {\n            if (num > largest) {\n                largest = num;\n            }\n            if (num < smallest) {\n                smallest = num;\n            }\n        }\n        return largest + smallest;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long min = nums.get(0);\n        long max = nums.get(0);\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n        }\n        return min + max;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187418,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Collections.max(nums);\n        long min = Collections.min(nums);\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Collections.max(nums);\n        long min = Collections.min(nums);\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long num : nums) {\n            if (num < min) {\n                min = num;\n            }\n            if (num > max) {\n                max = num;\n            }\n        }\n        return min + max;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187414,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187410,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long num : nums) {\n            if (num < min) {\n                min = num;\n            }\n            if (num > max) {\n                max = num;\n            }\n        }\n        return min + max;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187414,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) max = num;\n            if (num < min) min = num;\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187415,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Collections.max(nums);\n        long min = Collections.min(nums);\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187410,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long num : nums) {\n            if (num < min) {\n                min = num;\n            }\n            if (num > max) {\n                max = num;\n            }\n        }\n        return min + max;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187414,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long num : nums) {\n            if (num < min) {\n                min = num;\n            }\n            if (num > max) {\n                max = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long min = nums.get(0);\n        long max = nums.get(0);\n        for (long num : nums) {\n            if (num < min) {\n                min = num;\n            }\n            if (num > max) {\n                max = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187418,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187410,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187413,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long n : nums) {\n            if (n < min) {\n                min = n;\n            }\n            if (n > max) {\n                max = n;\n            }\n        }\n        return min + max;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187418,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = nums.get(0);\n        long min = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the largest and smallest value in a given array array list.\n    public static long bigSum(ArrayList<Long> nums) {\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long num : nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max + min;\n    }\n    public static void main(String[] args) {\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (4l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l)))) == (3l));\n    assert(bigSum((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)6l)))) == (8l));\n    }\n\n}\n",
      "timestamp": 1667187409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
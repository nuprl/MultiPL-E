{
  "name": "mbpp_622_get_median",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_622_get_median.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "/tmp/tmp99fjzk1x.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp99fjzk1x.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp99fjzk1x.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2) - 1, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2), (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n - n / 2 + 1);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList((int) (n / 2) - 1, (int) (n / 2) + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList((int) (n / 2), (int) (n / 2) + 1)), n - n / 2 + 1);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "/tmp/tmpzpe_y66a.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpzpe_y66a.java:17: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpzpe_y66a.java:18: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n            else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            }\n            else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            }\n            else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "/tmp/tmpnlgk44i5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "/tmp/tmpkog7q8nu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpkog7q8nu.java:17: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpkog7q8nu.java:18: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "/tmp/tmpnysamtih.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnysamtih.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpnysamtih.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "/tmp/tmpd5tb_l9z.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd5tb_l9z.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd5tb_l9z.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)),\n                        new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)),\n                        new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)),\n                        new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), n - n / 2);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)),\n                        new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), n - n / 2);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "/tmp/tmpcd7h9ykh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpcd7h9ykh.java:17: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpcd7h9ykh.java:18: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        long count = 0;\n        while (count < n) {\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n            count++;\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "/tmp/tmpka2fzpd0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "/tmp/tmp38spc_ei.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp38spc_ei.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp38spc_ei.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) return 0;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), n - n / 2);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), n - n / 2);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "/tmp/tmp8nh9wbzz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp8nh9wbzz.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp8nh9wbzz.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), n - n / 2 + 1);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "/tmp/tmpax4qnckw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpax4qnckw.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpax4qnckw.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpax4qnckw.java:27: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                          ^\n/tmp/tmpax4qnckw.java:27: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                                                                                        ^\n/tmp/tmpax4qnckw.java:29: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                ^\n/tmp/tmpax4qnckw.java:29: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                     ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "/tmp/tmpjm4a0vsv.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpjm4a0vsv.java:17: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpjm4a0vsv.java:18: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "/tmp/tmp40znusde.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp40znusde.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp40znusde.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)),\n                        new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)),\n                    new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)),\n                    new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)),\n                new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "/tmp/tmpdwvumvxa.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpdwvumvxa.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpdwvumvxa.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        long m1 = median(arr1, n);\n        long m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "/tmp/tmp_ywia3cd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp_ywia3cd.java:20: error: cannot find symbol\n        long m1 = median(arr1, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp_ywia3cd.java:21: error: cannot find symbol\n        long m2 = median(arr2, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n - 1)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n - 1)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n - 1)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n - 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "/tmp/tmpuj94kdsz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpuj94kdsz.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpuj94kdsz.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "/tmp/tmpx6w03p1l.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpx6w03p1l.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpx6w03p1l.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        long count = 0;\n        while (count < n) {\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n            count++;\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "/tmp/tmpka2fzpd0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(arr1.subList((int) n / 2 - 1, (int) n), arr2.subList(0, (int) n / 2 + 1), n - n / 2);\n            }\n            return getMedian(arr1.subList((int) n / 2, (int) n), arr2.subList(0, (int) n / 2 + 1), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(arr1.subList(0, (int) n / 2 + 1), arr2.subList((int) n / 2 - 1, (int) n), n - n / 2);\n        }\n        return getMedian(arr1.subList(0, (int) n / 2 + 1), arr2.subList((int) n / 2, (int) n), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "/tmp/tmpz6v1cwc2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpz6v1cwc2.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpz6v1cwc2.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpz6v1cwc2.java:27: error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n                return getMedian(arr1.subList((int) n / 2 - 1, (int) n), arr2.subList(0, (int) n / 2 + 1), n - n / 2);\n                                             ^\n/tmp/tmpz6v1cwc2.java:29: error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n            return getMedian(arr1.subList((int) n / 2, (int) n), arr2.subList(0, (int) n / 2 + 1), n - n / 2);\n                                         ^\n/tmp/tmpz6v1cwc2.java:32: error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n            return getMedian(arr1.subList(0, (int) n / 2 + 1), arr2.subList((int) n / 2 - 1, (int) n), n - n / 2);\n                                         ^\n/tmp/tmpz6v1cwc2.java:34: error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n        return getMedian(arr1.subList(0, (int) n / 2 + 1), arr2.subList((int) n / 2, (int) n), n - n / 2);\n                                     ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        // Write your code here\n        float median = 0;\n        int i = 0;\n        int j = 0;\n        int count = 0;\n        while (count < n) {\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n            count++;\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "/tmp/tmpzh0ex5f8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0, j = 0;\n        long count;\n        long m1 = -1, m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpawt3bsjs.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0;\n        long j = 0;\n        long count;\n        long m1 = -1;\n        long m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                break;\n            }\n            if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                break;\n            }\n            if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpc4eft371.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        long m1 = median(arr1, n);\n        long m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2) - 1, (int) (n / 2) + 1)),\n                        new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2), (int) (n / 2) + 1)),\n                    new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int) (n / 2) - 1, (int) (n / 2) + 1)),\n                    new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int) (n / 2), (int) (n / 2) + 1)),\n                new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmp08rwy_9_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp08rwy_9_.java:20: error: cannot find symbol\n        long m1 = median(arr1, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp08rwy_9_.java:21: error: cannot find symbol\n        long m2 = median(arr2, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpijkuo0qc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpijkuo0qc.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpijkuo0qc.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0)\n            return -1;\n        if (n == 1)\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2)\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2)\n            return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0)\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0)\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n / 2 + 1)), n - n / 2 + 1);\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpjl5irt_l.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpjl5irt_l.java:17: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpjl5irt_l.java:18: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpnsj___pk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnsj___pk.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpnsj___pk.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        long count = 0;\n        while (count < n) {\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n            count++;\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "/tmp/tmpka2fzpd0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        for (int k = 0; k <= n; k++) {\n            if (i == n) {\n                median = arr2.get(j);\n                break;\n            }\n            if (j == n) {\n                median = arr1.get(i);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpk1ulnqcx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2) - 1, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n - (n / 2));\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2), (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n - (n / 2));\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList((int) (n / 2) - 1, (int) (n / 2) + 1)), n - (n / 2));\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList((int) (n / 2), (int) (n / 2) + 1)), n - (n / 2));\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpm0i2oq5w.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpm0i2oq5w.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpm0i2oq5w.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpbgbcmyo6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpbgbcmyo6.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpbgbcmyo6.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2) - 1, (int) (n / 2) + 1)), arr2, 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2), (int) (n / 2) + 1)), arr2, 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(arr1, new ArrayList<Long>(arr2.subList((int) (n / 2) - 1, (int) (n / 2) + 1)), 2);\n        }\n        return getMedian(arr1, new ArrayList<Long>(arr2.subList((int) (n / 2), (int) (n / 2) + 1)), 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpb48bi8zk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpb48bi8zk.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpb48bi8zk.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2);\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpbjxvco5y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpbjxvco5y.java:14: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpbjxvco5y.java:15: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "/tmp/tmpnysamtih.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnysamtih.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpnysamtih.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0;\n        int j = 0;\n        long count;\n        long m1 = -1, m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpzw6ouah1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        long count = 0;\n        long m1 = -1, m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j);\n                j++;\n            }\n        }\n        median = (m1 + m2) / 2;\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmp3du7o1l4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n/2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n/2 + 1)), n - n/2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n/2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n/2 + 1)), n - n/2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n/2 + 1)), new ArrayList<Long>(arr2.subList((int)n/2 - 1, (int)n)), n - n/2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n/2 + 1)), new ArrayList<Long>(arr2.subList((int)n/2, (int)n)), n - n/2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpteyy8zxq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpteyy8zxq.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpteyy8zxq.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmp3qn5187i.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2 - 1), (int) (n / 2 + 1))), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2), (int) (n / 2 + 1))), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) (n / 2 - 1), (int) (n / 2 + 1))), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) (n / 2), (int) (n / 2 + 1))), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpzlzwc2sh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpzlzwc2sh.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpzlzwc2sh.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpx9hul44c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpx9hul44c.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpx9hul44c.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        long m1 = median(arr1, n);\n        long m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)(n / 2) - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)(n / 2) + 1)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)(n / 2), (int)n)), new ArrayList<Long>(arr2.subList(0, (int)(n / 2) + 1)), n - n / 2);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int)(n / 2) + 1)), new ArrayList<Long>(arr2.subList((int)(n / 2) - 1, (int)n)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int)(n / 2) + 1)), new ArrayList<Long>(arr2.subList((int)(n / 2), (int)n)), n - n / 2);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpp5rkydkx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpp5rkydkx.java:14: error: cannot find symbol\n        long m1 = median(arr1, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpp5rkydkx.java:15: error: cannot find symbol\n        long m2 = median(arr2, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        int count = 0;\n        while(count < n) {\n            if(arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            }\n            else {\n                median = arr2.get(j);\n                j++;\n            }\n            count++;\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmptlrupyd5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        long m1 = median(arr1, n);\n        long m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(n / 2 - 1, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList(n / 2 - 1, n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpa7mql8v_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpa7mql8v_.java:20: error: cannot find symbol\n        long m1 = median(arr1, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpa7mql8v_.java:21: error: cannot find symbol\n        long m2 = median(arr2, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpa7mql8v_.java:27: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList(n / 2 - 1, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                        ^\n/tmp/tmpa7mql8v_.java:27: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList(n / 2 - 1, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                                                                                    ^\n/tmp/tmpa7mql8v_.java:29: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2);\n                                                                ^\n/tmp/tmpa7mql8v_.java:29: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2);\n                                                                                                                            ^\n/tmp/tmpa7mql8v_.java:32: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr2.subList(n / 2 - 1, n / 2 + 1)), new ArrayList<Long>(arr1.su",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(arr1.subList((int) (n / 2) - 1, (int) n), arr2.subList(0, (int) (n / 2) + 1), n - n / 2 + 1);\n            }\n            return getMedian(arr1.subList((int) (n / 2), (int) n), arr2.subList(0, (int) (n / 2) + 1), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(arr1.subList(0, (int) (n / 2) + 1), arr2.subList((int) (n / 2) - 1, (int) n), n - n / 2 + 1);\n        }\n        return getMedian(arr1.subList(0, (int) (n / 2) + 1), arr2.subList((int) (n / 2), (int) n), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpoecnsyem.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpoecnsyem.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpoecnsyem.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpoecnsyem.java:27: error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n                return getMedian(arr1.subList((int) (n / 2) - 1, (int) n), arr2.subList(0, (int) (n / 2) + 1), n - n / 2 + 1);\n                                             ^\n/tmp/tmpoecnsyem.java:29: error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n            return getMedian(arr1.subList((int) (n / 2), (int) n), arr2.subList(0, (int) (n / 2) + 1), n - n / 2);\n                                         ^\n/tmp/tmpoecnsyem.java:32: error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n            return getMedian(arr1.subList(0, (int) (n / 2) + 1), arr2.subList((int) (n / 2) - 1, (int) n), n - n / 2 + 1);\n                                         ^\n/tmp/tmpoecnsyem.java:34: error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n        return getMedian(arr1.subList(0, (int) (n / 2) + 1), arr2.subList((int) (n / 2), (int) n), n - n / 2);\n                                     ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2) - 1, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2), (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n / 2 + 1);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList((int) (n / 2) - 1, (int) (n / 2) + 1)), n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList((int) (n / 2), (int) (n / 2) + 1)), n / 2 + 1);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmp_ry_8wpz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp_ry_8wpz.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp_ry_8wpz.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), new ArrayList<Long>(arr2.subList((n / 2) - 1, n / 2 + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), new ArrayList<Long>(arr2.subList(n / 2, n / 2 + 1)), n - n / 2 + 1);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpn08oc1z0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpn08oc1z0.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpn08oc1z0.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpn08oc1z0.java:27: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                          ^\n/tmp/tmpn08oc1z0.java:27: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                                                                                      ^\n/tmp/tmpn08oc1z0.java:29: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                ^\n/tmp/tmpn08oc1z0.java:29: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123803,
      "stdout": "",
      "stderr": "/tmp/tmpymnqnfco.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpymnqnfco.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpymnqnfco.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123803,
      "stdout": "",
      "stderr": "/tmp/tmpqw5mk1wc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpqw5mk1wc.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpqw5mk1wc.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2) - 1, (int) (n / 2) + 1)),\n                        new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n - (n / 2));\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2), (int) (n / 2) + 1)),\n                        new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n - (n / 2));\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)),\n                        new ArrayList<Long>(arr2.subList((int) (n / 2) - 1, (int) (n / 2) + 1)), n - (n / 2));\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)),\n                        new ArrayList<Long>(arr2.subList((int) (n / 2), (int) (n / 2) + 1)), n - (n / 2));\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123803,
      "stdout": "",
      "stderr": "/tmp/tmpsvkw1qko.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpsvkw1qko.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpsvkw1qko.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(arr1.subList((int) (n / 2) - 1, (int) (n / 2) + 1), arr2.subList(0, (int) (n / 2) + 1), n - n / 2 + 1);\n            }\n            return getMedian(arr1.subList((int) (n / 2), (int) (n / 2) + 1), arr2.subList(0, (int) (n / 2) + 1), n - n / 2 + 1);\n        }\n        if (n % 2 == 0) {\n            return getMedian(arr2.subList((int) (n / 2) - 1, (int) (n / 2) + 1), arr1.subList(0, (int) (n / 2) + 1), n - n / 2 + 1);\n        }\n        return getMedian(arr2.subList((int) (n / 2), (int) (n / 2) + 1), arr1.subList(0, (int) (n / 2) + 1), n - n / 2 + 1);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123803,
      "stdout": "",
      "stderr": "/tmp/tmp3361vyon.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp3361vyon.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp3361vyon.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp3361vyon.java:27: error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n                return getMedian(arr1.subList((int) (n / 2) - 1, (int) (n / 2) + 1), arr2.subList(0, (int) (n / 2) + 1), n - n / 2 + 1);\n                                             ^\n/tmp/tmp3361vyon.java:29: error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n            return getMedian(arr1.subList((int) (n / 2), (int) (n / 2) + 1), arr2.subList(0, (int) (n / 2) + 1), n - n / 2 + 1);\n                                         ^\n/tmp/tmp3361vyon.java:32: error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n            return getMedian(arr2.subList((int) (n / 2) - 1, (int) (n / 2) + 1), arr1.subList(0, (int) (n / 2) + 1), n - n / 2 + 1);\n                                         ^\n/tmp/tmp3361vyon.java:34: error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n        return getMedian(arr2.subList((int) (n / 2), (int) (n / 2) + 1), arr1.subList(0, (int) (n / 2) + 1), n - n / 2 + 1);\n                                     ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        long m1 = median(arr1, n);\n        long m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2) - 1, (int) (n / 2) + 1)),\n                        new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2), (int) (n / 2) + 1)),\n                    new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n / 2 + 1);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int) (n / 2) - 1, (int) (n / 2) + 1)),\n                    new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int) (n / 2), (int) (n / 2) + 1)),\n                new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), n / 2 + 1);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123803,
      "stdout": "",
      "stderr": "/tmp/tmp8jff1dke.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp8jff1dke.java:20: error: cannot find symbol\n        long m1 = median(arr1, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp8jff1dke.java:21: error: cannot find symbol\n        long m2 = median(arr2, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2) - 1, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n - (n / 2));\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2), (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n - (n / 2));\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList((int) (n / 2) - 1, (int) (n / 2) + 1)), n - (n / 2));\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList((int) (n / 2), (int) (n / 2) + 1)), n - (n / 2));\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123803,
      "stdout": "",
      "stderr": "/tmp/tmpx5v410ag.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpx5v410ag.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpx5v410ag.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        long m1 = median(arr1, n);\n        long m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123803,
      "stdout": "",
      "stderr": "/tmp/tmpe1mrdof1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpe1mrdof1.java:20: error: cannot find symbol\n        long m1 = median(arr1, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpe1mrdof1.java:21: error: cannot find symbol\n        long m2 = median(arr2, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpijkuo0qc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpijkuo0qc.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpijkuo0qc.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        int count = 0;\n        while (count < n) {\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n            count++;\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123803,
      "stdout": "",
      "stderr": "/tmp/tmp2i_9jatf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(arr1.subList((int) (n / 2) - 1, (int) (n / 2) + 1), arr2.subList(0, (int) (n / 2) + 1), n - (n / 2));\n            } else {\n                return getMedian(arr1.subList((int) (n / 2), (int) (n / 2) + 1), arr2.subList(0, (int) (n / 2) + 1), n - (n / 2));\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(arr1.subList(0, (int) (n / 2) + 1), arr2.subList((int) (n / 2) - 1, (int) (n / 2) + 1), n - (n / 2));\n            } else {\n                return getMedian(arr1.subList(0, (int) (n / 2) + 1), arr2.subList((int) (n / 2), (int) (n / 2) + 1), n - (n / 2));\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "",
      "stderr": "/tmp/tmpbr07z6g7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpbr07z6g7.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpbr07z6g7.java:22: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpbr07z6g7.java:28: error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n                return getMedian(arr1.subList((int) (n / 2) - 1, (int) (n / 2) + 1), arr2.subList(0, (int) (n / 2) + 1), n - (n / 2));\n                                             ^\n/tmp/tmpbr07z6g7.java:30: error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n                return getMedian(arr1.subList((int) (n / 2), (int) (n / 2) + 1), arr2.subList(0, (int) (n / 2) + 1), n - (n / 2));\n                                             ^\n/tmp/tmpbr07z6g7.java:34: error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n                return getMedian(arr1.subList(0, (int) (n / 2) + 1), arr2.subList((int) (n / 2) - 1, (int) (n / 2) + 1), n - (n / 2));\n                                             ^\n/tmp/tmpbr07z6g7.java:36: error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n                return getMedian(arr1.subList(0, (int) (n / 2) + 1), arr2.subList((int) (n / 2), (int) (n / 2) + 1), n - (n / 2));\n                                             ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        for (int k = 0; k <= n; k++) {\n            if (i == n) {\n                median = arr2.get(j);\n                break;\n            }\n            if (j == n) {\n                median = arr1.get(i);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpk1ulnqcx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123803,
      "stdout": "",
      "stderr": "/tmp/tmp08wmzuxm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp08wmzuxm.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp08wmzuxm.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0;\n        int j = 0;\n        int count = 0;\n        int m1 = -1;\n        int m2 = -1;\n        while (count <= n) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0).intValue();\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0).intValue();\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i).intValue();\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j).intValue();\n                j++;\n            }\n            count++;\n        }\n        if (n % 2 == 0) {\n            median = (float) (m1 + m2) / 2;\n        } else {\n            median = m2;\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "",
      "stderr": "/tmp/tmpvnuvq9fe.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmp3qn5187i.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        int count = 0;\n        while (count < n) {\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n            count++;\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123803,
      "stdout": "",
      "stderr": "/tmp/tmp2i_9jatf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmp3qn5187i.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "",
      "stderr": "/tmp/tmpajkdz2ab.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpajkdz2ab.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpajkdz2ab.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2) - 1, (int) (n / 2) + 1)),\n                        new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2), (int) (n / 2) + 1)),\n                        new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n / 2 + 1);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)),\n                        new ArrayList<Long>(arr2.subList((int) (n / 2) - 1, (int) (n / 2) + 1)), n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)),\n                        new ArrayList<Long>(arr2.subList((int) (n / 2), (int) (n / 2) + 1)), n / 2 + 1);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "",
      "stderr": "/tmp/tmp074wn4g2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp074wn4g2.java:17: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp074wn4g2.java:18: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2);\n            } else {\n                return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "",
      "stderr": "/tmp/tmprfmu0ys7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmprfmu0ys7.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmprfmu0ys7.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "",
      "stderr": "/tmp/tmpcqzv6k6k.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpcqzv6k6k.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpcqzv6k6k.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) return 0;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "",
      "stderr": "/tmp/tmp_1txzv87.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp_1txzv87.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp_1txzv87.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "",
      "stderr": "/tmp/tmp0h3lgw5l.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp0h3lgw5l.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp0h3lgw5l.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if(n == 0) {\n            return -1;\n        }\n        if(n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if(n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if(m1 == m2) {\n            return m1;\n        }\n        if(m1 < m2) {\n            if(n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n - 1)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n - 1)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if(n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n - 1)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n - 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "",
      "stderr": "/tmp/tmptjaqcrl4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmptjaqcrl4.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmptjaqcrl4.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0;\n        int j = 0;\n        int count = 0;\n        int m1 = -1;\n        int m2 = -1;\n        while (count <= n) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0).intValue();\n                break;\n            }\n            else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0).intValue();\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i).intValue();\n                i++;\n            }\n            else {\n                m1 = m2;\n                m2 = arr2.get(j).intValue();\n                j++;\n            }\n            count++;\n        }\n        if (n % 2 == 0) {\n            median = (m1 + m2) / 2;\n        }\n        else {\n            median = m2;\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123803,
      "stdout": "",
      "stderr": "/tmp/tmpemtbfldx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "",
      "stderr": "/tmp/tmpajkdz2ab.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpajkdz2ab.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpajkdz2ab.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(arr1.subList((int) (n / 2) - 1, (int) (n / 2) + 1), arr2.subList(0, (int) (n / 2) + 1), n - n / 2 + 1);\n            }\n            return getMedian(arr1.subList((int) (n / 2), (int) (n / 2) + 1), arr2.subList(0, (int) (n / 2) + 1), n - n / 2 + 1);\n        }\n        if (n % 2 == 0) {\n            return getMedian(arr1.subList(0, (int) (n / 2) + 1), arr2.subList((int) (n / 2) - 1, (int) (n / 2) + 1), n - n / 2 + 1);\n        }\n        return getMedian(arr1.subList(0, (int) (n / 2) + 1), arr2.subList((int) (n / 2), (int) (n / 2) + 1), n - n / 2 + 1);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "",
      "stderr": "/tmp/tmp1q02hynl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1q02hynl.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1q02hynl.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1q02hynl.java:27: error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n                return getMedian(arr1.subList((int) (n / 2) - 1, (int) (n / 2) + 1), arr2.subList(0, (int) (n / 2) + 1), n - n / 2 + 1);\n                                             ^\n/tmp/tmp1q02hynl.java:29: error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n            return getMedian(arr1.subList((int) (n / 2), (int) (n / 2) + 1), arr2.subList(0, (int) (n / 2) + 1), n - n / 2 + 1);\n                                         ^\n/tmp/tmp1q02hynl.java:32: error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n            return getMedian(arr1.subList(0, (int) (n / 2) + 1), arr2.subList((int) (n / 2) - 1, (int) (n / 2) + 1), n - n / 2 + 1);\n                                         ^\n/tmp/tmp1q02hynl.java:34: error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n        return getMedian(arr1.subList(0, (int) (n / 2) + 1), arr2.subList((int) (n / 2), (int) (n / 2) + 1), n - n / 2 + 1);\n                                     ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmp3qn5187i.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "",
      "stderr": "/tmp/tmp4ey30l_j.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp4ey30l_j.java:14: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp4ey30l_j.java:15: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(arr1.subList((int) (n / 2) - 1, (int) n), arr2.subList(0, (int) (n / 2) + 1), n - n / 2 + 1);\n            }\n            return getMedian(arr1.subList((int) (n / 2), (int) n), arr2.subList(0, (int) (n / 2) + 1), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(arr1.subList(0, (int) (n / 2) + 1), arr2.subList((int) (n / 2) - 1, (int) n), n - n / 2 + 1);\n        }\n        return getMedian(arr1.subList(0, (int) (n / 2) + 1), arr2.subList((int) (n / 2), (int) n), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpoecnsyem.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpoecnsyem.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpoecnsyem.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpoecnsyem.java:27: error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n                return getMedian(arr1.subList((int) (n / 2) - 1, (int) n), arr2.subList(0, (int) (n / 2) + 1), n - n / 2 + 1);\n                                             ^\n/tmp/tmpoecnsyem.java:29: error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n            return getMedian(arr1.subList((int) (n / 2), (int) n), arr2.subList(0, (int) (n / 2) + 1), n - n / 2);\n                                         ^\n/tmp/tmpoecnsyem.java:32: error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n            return getMedian(arr1.subList(0, (int) (n / 2) + 1), arr2.subList((int) (n / 2) - 1, (int) n), n - n / 2 + 1);\n                                         ^\n/tmp/tmpoecnsyem.java:34: error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n        return getMedian(arr1.subList(0, (int) (n / 2) + 1), arr2.subList((int) (n / 2), (int) n), n - n / 2);\n                                     ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)),\n                        new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)),\n                    new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)),\n                    new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)),\n                new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "",
      "stderr": "/tmp/tmpfc9crohb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpfc9crohb.java:17: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpfc9crohb.java:18: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), n - n / 2);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), n - n / 2);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "",
      "stderr": "/tmp/tmpc3pbvqom.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpc3pbvqom.java:17: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpc3pbvqom.java:18: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList(n / 2 - 1, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), new ArrayList<Long>(arr2.subList(n / 2 - 1, n / 2 + 1)), n - n / 2 + 1);\n        return getMedian(new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), new ArrayList<Long>(arr2.subList(n / 2, n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmpi9sp6wn6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpi9sp6wn6.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpi9sp6wn6.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpi9sp6wn6.java:18: error: incompatible types: possible lossy conversion from long to int\n            if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList(n / 2 - 1, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                                    ^\n/tmp/tmpi9sp6wn6.java:18: error: incompatible types: possible lossy conversion from long to int\n            if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList(n / 2 - 1, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                                                                                                ^\n/tmp/tmpi9sp6wn6.java:19: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2);\n                                                                ^\n/tmp/tmpi9sp6wn6.java:19: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2);\n                                                                                                                            ^\n/tmp/tmpi9sp6wn6.java:21: error: incompatible types: possible lossy conversion from long to int\n        if (n % 2 == 0) return getMedian(new ArrayList<Long>(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpbgbcmyo6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpbgbcmyo6.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpbgbcmyo6.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2) - 1, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2), (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n / 2 + 1);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList((int) (n / 2) - 1, (int) (n / 2) + 1)), n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList((int) (n / 2), (int) (n / 2) + 1)), n / 2 + 1);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmptccvha4q.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmptccvha4q.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmptccvha4q.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmp_bhyg66y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp_bhyg66y.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp_bhyg66y.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpijkuo0qc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpijkuo0qc.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpijkuo0qc.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        long m1 = median(arr1, n);\n        long m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2 - 1), (int) (n / 2 + 1))), new ArrayList<Long>(arr2.subList(0, (int) (n / 2 + 1))), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2), (int) (n / 2 + 1))), new ArrayList<Long>(arr2.subList(0, (int) (n / 2 + 1))), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int) (n / 2 - 1), (int) (n / 2 + 1))), new ArrayList<Long>(arr1.subList(0, (int) (n / 2 + 1))), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int) (n / 2), (int) (n / 2 + 1))), new ArrayList<Long>(arr1.subList(0, (int) (n / 2 + 1))), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmphna4teja.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmphna4teja.java:17: error: cannot find symbol\n        long m1 = median(arr1, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmphna4teja.java:18: error: cannot find symbol\n        long m2 = median(arr2, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmp5g1gq_q9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp5g1gq_q9.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp5g1gq_q9.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        // Write your code here\n        long median1 = 0, median2 = 0;\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        median1 = getMedianUtil(arr1, n);\n        median2 = getMedianUtil(arr2, n);\n        if (median1 == median2) {\n            return median1;\n        }\n        if (median1 < median2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(n / 2 - 1, n / 2 + 1)),\n                        new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)),\n                    new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList(n / 2 - 1, n / 2 + 1)),\n                    new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList(n / 2, n / 2 + 1)),\n                new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmpg1j9q20_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpg1j9q20_.java:19: error: cannot find symbol\n        median1 = getMedianUtil(arr1, n);\n                  ^\n  symbol:   method getMedianUtil(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpg1j9q20_.java:20: error: cannot find symbol\n        median2 = getMedianUtil(arr2, n);\n                  ^\n  symbol:   method getMedianUtil(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpg1j9q20_.java:26: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList(n / 2 - 1, n / 2 + 1)),\n                                                                        ^\n/tmp/tmpg1j9q20_.java:27: error: incompatible types: possible lossy conversion from long to int\n                        new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                  ^\n/tmp/tmpg1j9q20_.java:29: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)),\n                                                                ^\n/tmp/tmpg1j9q20_.java:30: error: incompatible types: possible lossy conversion from long to int\n                    new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2);\n                                                              ^\n/tmp/tmpg1j9q20_.java:33: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr2.subList(n / 2 - 1, n / 2 + 1)),\n                                                                    ^\n/tmp/tmpg1j9q20_.java:34: error: incompatible types: possible lossy conversion from long to int\n                    new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                              ^\n/tmp/tmpg1j9q20_.java:36: error: incompatible types: possible loss",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList((int)n/2 - 1, (int)n/2 + 1)), new ArrayList<Long>(arr2.subList(0, (int)n/2 + 1)), n - n/2 + 1);\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n/2, (int)n/2 + 1)), new ArrayList<Long>(arr2.subList(0, (int)n/2 + 1)), n - n/2);\n        }\n        if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n/2 + 1)), new ArrayList<Long>(arr2.subList((int)n/2 - 1, (int)n/2 + 1)), n - n/2 + 1);\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n/2 + 1)), new ArrayList<Long>(arr2.subList((int)n/2, (int)n/2 + 1)), n - n/2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmpf7lbnvxk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpf7lbnvxk.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpf7lbnvxk.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmp5mw06hx5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp5mw06hx5.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp5mw06hx5.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123803,
      "stdout": "",
      "stderr": "/tmp/tmpqw5mk1wc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpqw5mk1wc.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpqw5mk1wc.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int) j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int) i);\n                i++;\n            } else if (arr1.get((int) i) < arr2.get((int) j)) {\n                m1 = m2;\n                m2 = arr1.get((int) i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int) j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmpsj3e47ku.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2) - 1, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2), (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n - n / 2 + 1);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int) (n / 2) - 1, (int) (n / 2) + 1)), new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int) (n / 2), (int) (n / 2) + 1)), new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), n - n / 2 + 1);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmpqke0m7b6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpqke0m7b6.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqke0m7b6.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmpkyr8ki3e.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpkyr8ki3e.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpkyr8ki3e.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpx9hul44c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpx9hul44c.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpx9hul44c.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmp3qn5187i.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) return 0;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmpjlb6rwah.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpjlb6rwah.java:14: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpjlb6rwah.java:15: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123803,
      "stdout": "",
      "stderr": "/tmp/tmpymnqnfco.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpymnqnfco.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpymnqnfco.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0)\n            return -1;\n        if (n == 1)\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2)\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2)\n            return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0)\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2)), n - n / 2);\n        }\n        if (n % 2 == 0)\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2 + 1);\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmpjnws5j_u.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpjnws5j_u.java:17: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpjnws5j_u.java:18: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmpcqqf43xp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpcqqf43xp.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpcqqf43xp.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2) - 1, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2), (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n / 2 + 1);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList((int) (n / 2) - 1, (int) (n / 2) + 1)), n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList((int) (n / 2), (int) (n / 2) + 1)), n / 2 + 1);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmp9gl3qs9a.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp9gl3qs9a.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp9gl3qs9a.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmpqu1jqufb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpqu1jqufb.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpqu1jqufb.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmpnf88uud6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnf88uud6.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpnf88uud6.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmp3qn5187i.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        long m1 = median(arr1, n);\n        long m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmps3oe909r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmps3oe909r.java:20: error: cannot find symbol\n        long m1 = median(arr1, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmps3oe909r.java:21: error: cannot find symbol\n        long m2 = median(arr2, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpijkuo0qc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpijkuo0qc.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpijkuo0qc.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), new ArrayList<Long>(arr2.subList((n / 2) - 1, (n / 2) + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), new ArrayList<Long>(arr2.subList(n / 2, n / 2 + 1)), n - n / 2 + 1);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmpsmcrjlxw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpsmcrjlxw.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpsmcrjlxw.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpsmcrjlxw.java:27: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                          ^\n/tmp/tmpsmcrjlxw.java:27: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                                                                                        ^\n/tmp/tmpsmcrjlxw.java:29: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                ^\n/tmp/tmpsmcrjlxw.java:29: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                     ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "/tmp/tmp38spc_ei.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp38spc_ei.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp38spc_ei.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmp5ff54kbk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp5ff54kbk.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp5ff54kbk.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long median = 0;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                median = arr2.get((int)j);\n                break;\n            }\n            if (j == n) {\n                median = arr1.get((int)i);\n                break;\n            }\n            if (arr1.get((int)i) < arr2.get((int)j)) {\n                median = arr1.get((int)i);\n                i++;\n            } else {\n                median = arr2.get((int)j);\n                j++;\n            }\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmpx8oxp5yr.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmp3qn5187i.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        for (int k = 0; k <= n; k++) {\n            if (i == n) {\n                median = arr2.get(j);\n                break;\n            }\n            if (j == n) {\n                median = arr1.get(i);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpk1ulnqcx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmp5mw06hx5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp5mw06hx5.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp5mw06hx5.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        for (int k = 0; k <= n; k++) {\n            if (i == n) {\n                median = arr2.get(j);\n                break;\n            }\n            if (j == n) {\n                median = arr1.get(i);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpk1ulnqcx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmpcqqf43xp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpcqqf43xp.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpcqqf43xp.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2) - 1, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n - (n / 2));\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2), (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n - (n / 2));\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList((int) (n / 2) - 1, (int) (n / 2) + 1)), n - (n / 2));\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList((int) (n / 2), (int) (n / 2) + 1)), n - (n / 2));\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmphv7g2n2k.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmphv7g2n2k.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmphv7g2n2k.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        long count = 0;\n        while (count < n) {\n            if (i == n) {\n                median += arr2.get(j);\n                j++;\n            } else if (j == n) {\n                median += arr1.get(i);\n                i++;\n            } else if (arr1.get(i) < arr2.get(j)) {\n                median += arr1.get(i);\n                i++;\n            } else {\n                median += arr2.get(j);\n                j++;\n            }\n            count++;\n        }\n        return median / 2;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmpr5dmri5v.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1);\n        float m2 = median(arr2);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmptw109kuy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmptw109kuy.java:17: error: cannot find symbol\n        float m1 = median(arr1);\n                   ^\n  symbol:   method median(ArrayList<Long>)\n  location: class Problem\n/tmp/tmptw109kuy.java:18: error: cannot find symbol\n        float m2 = median(arr2);\n                   ^\n  symbol:   method median(ArrayList<Long>)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (int count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmprxnz6ozk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) return 0;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmp4rp781a1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp4rp781a1.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp4rp781a1.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpijkuo0qc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpijkuo0qc.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpijkuo0qc.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmpkfb3cdbh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpkfb3cdbh.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpkfb3cdbh.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpijkuo0qc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpijkuo0qc.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpijkuo0qc.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmp3qn5187i.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmph0ge717g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmph0ge717g.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmph0ge717g.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        int m1 = -1, m2 = -1;\n        for (int count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0).intValue();\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0).intValue();\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i).intValue();\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j).intValue();\n                j++;\n            }\n        }\n        median = (m1 + m2) / 2;\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmpve5j8lap.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0, j = 0;\n        long count;\n        long m1 = -1, m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmpc64ylx9d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += arr1.get(i) + arr2.get(i);\n        }\n        return sum / (2 * n);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmp96zijbb3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0, j = 0;\n        long count;\n        long m1 = -1, m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmpc64ylx9d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpijkuo0qc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpijkuo0qc.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpijkuo0qc.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "",
      "stderr": "/tmp/tmpajkdz2ab.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpajkdz2ab.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpajkdz2ab.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0;\n        int j = 0;\n        int count;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                median = arr2.get(0);\n                break;\n            }\n            if (j == n) {\n                median = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmpkncwe_md.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n / 2 + 1)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmpr64zaild.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpr64zaild.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpr64zaild.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "",
      "stderr": "/tmp/tmpajkdz2ab.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpajkdz2ab.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpajkdz2ab.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        long m1 = median(arr1, n);\n        long m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmpj2u_ftjx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpj2u_ftjx.java:20: error: cannot find symbol\n        long m1 = median(arr1, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpj2u_ftjx.java:21: error: cannot find symbol\n        long m2 = median(arr2, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList((int)n/2 - 1, (int)n/2 + 1)), new ArrayList<Long>(arr2.subList(0, (int)n/2 + 1)), n - n/2 + 1);\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n/2, (int)n/2 + 1)), new ArrayList<Long>(arr2.subList(0, (int)n/2 + 1)), n - n/2 + 1);\n        }\n        if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr2.subList((int)n/2 - 1, (int)n/2 + 1)), new ArrayList<Long>(arr1.subList(0, (int)n/2 + 1)), n - n/2 + 1);\n        return getMedian(new ArrayList<Long>(arr2.subList((int)n/2, (int)n/2 + 1)), new ArrayList<Long>(arr1.subList(0, (int)n/2 + 1)), n - n/2 + 1);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmp_8bx4typ.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp_8bx4typ.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp_8bx4typ.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n - 1)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n - 1)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n - 1)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n - 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "/tmp/tmpuj94kdsz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpuj94kdsz.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpuj94kdsz.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpijkuo0qc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpijkuo0qc.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpijkuo0qc.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmp3qn5187i.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        for (int k = 0; k <= n; k++) {\n            if (i == n) {\n                median = arr2.get(j);\n                break;\n            }\n            if (j == n) {\n                median = arr1.get(i);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpk1ulnqcx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpijkuo0qc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpijkuo0qc.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpijkuo0qc.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpijkuo0qc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpijkuo0qc.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpijkuo0qc.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpijkuo0qc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpijkuo0qc.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpijkuo0qc.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1);\n        float m2 = median(arr2);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2) - 1, (int) (n / 2) + 1)),\n                        new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2), (int) (n / 2) + 1)),\n                        new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n / 2 + 1);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)),\n                        new ArrayList<Long>(arr2.subList((int) (n / 2) - 1, (int) (n / 2) + 1)), n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)),\n                        new ArrayList<Long>(arr2.subList((int) (n / 2), (int) (n / 2) + 1)), n / 2 + 1);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmp0_fc5dqz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp0_fc5dqz.java:17: error: cannot find symbol\n        float m1 = median(arr1);\n                   ^\n  symbol:   method median(ArrayList<Long>)\n  location: class Problem\n/tmp/tmp0_fc5dqz.java:18: error: cannot find symbol\n        float m2 = median(arr2);\n                   ^\n  symbol:   method median(ArrayList<Long>)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n/2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n/2 + 1)), n - n/2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n/2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n/2 + 1)), n - n/2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n/2 + 1)), new ArrayList<Long>(arr2.subList((int)n/2 - 1, (int)n)), n - n/2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n/2 + 1)), new ArrayList<Long>(arr2.subList((int)n/2, (int)n)), n - n/2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmpu219fsqy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpu219fsqy.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpu219fsqy.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmp7ah0uz5o.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp7ah0uz5o.java:17: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp7ah0uz5o.java:18: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, (n / 2) + 1)), n - (n / 2) + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2), (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, (n / 2) + 1)), n - (n / 2));\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (n / 2) + 1)), new ArrayList<Long>(arr2.subList((n / 2) - 1, (n / 2) + 1)), n - (n / 2) + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (n / 2) + 1)), new ArrayList<Long>(arr2.subList((n / 2), (n / 2) + 1)), n - (n / 2));\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmpt_s08gbj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpt_s08gbj.java:17: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpt_s08gbj.java:18: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpt_s08gbj.java:24: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, (n / 2) + 1)), n - (n / 2) + 1);\n                                                                          ^\n/tmp/tmpt_s08gbj.java:24: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, (n / 2) + 1)), n - (n / 2) + 1);\n                                                                                                                                          ^\n/tmp/tmpt_s08gbj.java:26: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2), (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, (n / 2) + 1)), n - (n / 2));\n                                                                     ^\n/tmp/tmpt_s08gbj.java:26: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2), (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, (n / 2) + 1)), n - (n / 2));\n                                      ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(n / 2 - 1, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList(n / 2 - 1, n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmp4w3gnni0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp4w3gnni0.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp4w3gnni0.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp4w3gnni0.java:27: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList(n / 2 - 1, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                        ^\n/tmp/tmp4w3gnni0.java:27: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList(n / 2 - 1, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                                                                                    ^\n/tmp/tmp4w3gnni0.java:29: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2);\n                                                                ^\n/tmp/tmp4w3gnni0.java:29: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2);\n                                                                                           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n - 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n - 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n - 1)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n - 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmp_kyr8f4z.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp_kyr8f4z.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp_kyr8f4z.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmp3qn5187i.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        long m1 = median(arr1, n);\n        long m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2) - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n - (n / 2));\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2), (int) n)), new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n - (n / 2));\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList((int) (n / 2) - 1, (int) n)), n - (n / 2));\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList((int) (n / 2), (int) n)), n - (n / 2));\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmp1rb8m3ym.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1rb8m3ym.java:20: error: cannot find symbol\n        long m1 = median(arr1, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp1rb8m3ym.java:21: error: cannot find symbol\n        long m2 = median(arr2, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0;\n        int j = 0;\n        int count;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                median = arr2.get(0);\n                break;\n            }\n            if (j == n) {\n                median = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmpkncwe_md.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmpkyr8ki3e.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpkyr8ki3e.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpkyr8ki3e.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n\n        if (m1 == m2) return m1;\n\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n        }\n\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), n - n / 2 + 1);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmpbvazw5_v.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpbvazw5_v.java:15: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpbvazw5_v.java:16: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpbvazw5_v.java:22: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                          ^\n/tmp/tmpbvazw5_v.java:22: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                                                                                        ^\n/tmp/tmpbvazw5_v.java:24: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                ^\n/tmp/tmpbvazw5_v.java:24: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                     ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmp5mw06hx5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp5mw06hx5.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp5mw06hx5.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmp7ah0uz5o.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp7ah0uz5o.java:17: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp7ah0uz5o.java:18: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpijkuo0qc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpijkuo0qc.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpijkuo0qc.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmp3qn5187i.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123804,
      "stdout": "",
      "stderr": "/tmp/tmpajkdz2ab.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpajkdz2ab.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpajkdz2ab.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        for (int k = 0; k <= n; k++) {\n            if (i == n) {\n                median = arr2.get(j);\n                break;\n            }\n            if (j == n) {\n                median = arr1.get(i);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpk1ulnqcx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        while (i < n && j < n) {\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n        }\n        if (i < n) {\n            median = arr1.get(i);\n        }\n        if (j < n) {\n            median = arr2.get(j);\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmp9dtv0b0l.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        long m1 = median(arr1, n);\n        long m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmpj2u_ftjx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpj2u_ftjx.java:20: error: cannot find symbol\n        long m1 = median(arr1, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpj2u_ftjx.java:21: error: cannot find symbol\n        long m2 = median(arr2, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int) j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int) i);\n                i++;\n            } else if (arr1.get((int) i) < arr2.get((int) j)) {\n                m1 = m2;\n                m2 = arr1.get((int) i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int) j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmpsj3e47ku.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmpqu1jqufb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpqu1jqufb.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpqu1jqufb.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        int m1 = -1, m2 = -1;\n        for (int count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0).intValue();\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0).intValue();\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i).intValue();\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j).intValue();\n                j++;\n            }\n        }\n        median = (m1 + m2) / 2;\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmpve5j8lap.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmp3qn5187i.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0;\n        int j = 0;\n        int count = 0;\n        while (count < n) {\n            if (i == n) {\n                median += arr2.get(j);\n                j++;\n            } else if (j == n) {\n                median += arr1.get(i);\n                i++;\n            } else if (arr1.get(i) < arr2.get(j)) {\n                median += arr1.get(i);\n                i++;\n            } else {\n                median += arr2.get(j);\n                j++;\n            }\n            count++;\n        }\n        return median / 2;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmpdo3di3va.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpijkuo0qc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpijkuo0qc.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpijkuo0qc.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n/2 - 1, (int)n/2 + 1)), new ArrayList<Long>(arr2.subList(0, (int)n/2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n/2, (int)n/2 + 1)), new ArrayList<Long>(arr2.subList(0, (int)n/2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int)n/2 - 1, (int)n/2 + 1)), new ArrayList<Long>(arr1.subList(0, (int)n/2 + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int)n/2, (int)n/2 + 1)), new ArrayList<Long>(arr1.subList(0, (int)n/2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "/tmp/tmpaifb0xmb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpaifb0xmb.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpaifb0xmb.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpijkuo0qc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpijkuo0qc.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpijkuo0qc.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n/2 - 1, (int)n/2 + 1)),\n                                 new ArrayList<Long>(arr2.subList(0, (int)n/2 + 1)),\n                                 n - n/2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n/2, (int)n/2 + 1)),\n                                 new ArrayList<Long>(arr2.subList(0, (int)n/2 + 1)),\n                                 n - n/2 + 1);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n/2 + 1)),\n                                 new ArrayList<Long>(arr2.subList((int)n/2 - 1, (int)n/2 + 1)),\n                                 n - n/2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n/2 + 1)),\n                                 new ArrayList<Long>(arr2.subList((int)n/2, (int)n/2 + 1)),\n                                 n - n/2 + 1);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "/tmp/tmpnck_s4ee.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnck_s4ee.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpnck_s4ee.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpijkuo0qc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpijkuo0qc.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpijkuo0qc.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        for (int k = 0; k <= n; k++) {\n            if (i == n) {\n                median = arr2.get(j);\n                break;\n            }\n            if (j == n) {\n                median = arr1.get(i);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpk1ulnqcx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123803,
      "stdout": "",
      "stderr": "/tmp/tmpqw5mk1wc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpqw5mk1wc.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpqw5mk1wc.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        long m1 = median(arr1, n);\n        long m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "/tmp/tmpuo04hu2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpuo04hu2c.java:20: error: cannot find symbol\n        long m1 = median(arr1, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpuo04hu2c.java:21: error: cannot find symbol\n        long m2 = median(arr2, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1);\n        float m2 = median(arr2);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n / 2 + 1)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "/tmp/tmpdwsmu0fz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpdwsmu0fz.java:17: error: cannot find symbol\n        float m1 = median(arr1);\n                   ^\n  symbol:   method median(ArrayList<Long>)\n  location: class Problem\n/tmp/tmpdwsmu0fz.java:18: error: cannot find symbol\n        float m2 = median(arr2);\n                   ^\n  symbol:   method median(ArrayList<Long>)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123803,
      "stdout": "",
      "stderr": "/tmp/tmpqw5mk1wc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpqw5mk1wc.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpqw5mk1wc.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        long m1 = median(arr1, n);\n        long m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "/tmp/tmpwam8yicf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpwam8yicf.java:20: error: cannot find symbol\n        long m1 = median(arr1, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpwam8yicf.java:21: error: cannot find symbol\n        long m2 = median(arr2, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long median = 0;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                median = arr2.get((int)j);\n                break;\n            }\n            if (j == n) {\n                median = arr1.get((int)i);\n                break;\n            }\n            if (arr1.get((int)i) < arr2.get((int)j)) {\n                median = arr1.get((int)i);\n                i++;\n            } else {\n                median = arr2.get((int)j);\n                j++;\n            }\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmpx8oxp5yr.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "/tmp/tmpjr5fhf4h.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpjr5fhf4h.java:17: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpjr5fhf4h.java:18: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        long m1 = median(arr1, n);\n        long m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "/tmp/tmpwa3jfrqn.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpwa3jfrqn.java:17: error: cannot find symbol\n        long m1 = median(arr1, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpwa3jfrqn.java:18: error: cannot find symbol\n        long m2 = median(arr2, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr1.get(i) > arr2.get(i)) {\n                median = arr1.get(i);\n                break;\n            } else if (arr1.get(i) < arr2.get(i)) {\n                median = arr2.get(i);\n                break;\n            } else {\n                median = arr1.get(i);\n            }\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "/tmp/tmpwdb6dr66.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "/tmp/tmpqu1jqufb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpqu1jqufb.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpqu1jqufb.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        // Write your code here\n        float median = 0;\n        int i = 0, j = 0;\n        int m1 = -1, m2 = -1;\n        for (int count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0).intValue();\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0).intValue();\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i).intValue();\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j).intValue();\n                j++;\n            }\n        }\n        median = (m1 + m2) / 2.0f;\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "/tmp/tmp0tviuavi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmp3qn5187i.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        for (int k = 0; k <= n; k++) {\n            if (i == n) {\n                median = arr2.get(j);\n                break;\n            }\n            if (j == n) {\n                median = arr1.get(i);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpk1ulnqcx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        int count = 0;\n        while (count < n) {\n            if (i == n) {\n                median += arr2.get(j);\n                j++;\n            } else if (j == n) {\n                median += arr1.get(i);\n                i++;\n            } else if (arr1.get(i) < arr2.get(j)) {\n                median += arr1.get(i);\n                i++;\n            } else {\n                median += arr2.get(j);\n                j++;\n            }\n            count++;\n        }\n        return median / 2;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "/tmp/tmpxhows6pk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmp3qn5187i.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n\n        if (m1 == m2) return m1;\n\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)),\n                        new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)),\n                    new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n        }\n\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((n / 2) - 1, (n / 2) + 1)),\n                    new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList(n / 2, n / 2 + 1)),\n                new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), n - n / 2 + 1);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "/tmp/tmpno079iwp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpno079iwp.java:15: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpno079iwp.java:16: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpno079iwp.java:22: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)),\n                                                                          ^\n/tmp/tmpno079iwp.java:23: error: incompatible types: possible lossy conversion from long to int\n                        new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                  ^\n/tmp/tmpno079iwp.java:25: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)),\n                                                                ^\n/tmp/tmpno079iwp.java:26: error: incompatible types: possible lossy conversion from long to int\n                    new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                              ^\n/tmp/tmpno079iwp.java:30: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr2.subList((n / 2) - 1, (n / 2) + 1)),\n                                                                      ^\n/tmp/tmpno079iwp.java:31: error: incompatible types: possible lossy conversion from long to int\n                    new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                              ^\n/tmp/tmpno079iwp.java:33: error: incompatible types: possible lossy conver",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0)\n            return -1;\n        if (n == 1)\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2)\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2)\n            return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0)\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2) - 1, (int) (n / 2) + 1)),\n                        new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n - (n / 2) + 1);\n            else\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2), (int) (n / 2) + 1)),\n                        new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n - (n / 2));\n        } else {\n            if (n % 2 == 0)\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)),\n                        new ArrayList<Long>(arr2.subList((int) (n / 2) - 1, (int) (n / 2) + 1)), n - (n / 2) + 1);\n            else\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)),\n                        new ArrayList<Long>(arr2.subList((int) (n / 2), (int) (n / 2) + 1)), n - (n / 2));\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "/tmp/tmpoz20p5wz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpoz20p5wz.java:17: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpoz20p5wz.java:18: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList((int)n/2 - 1, (int)n/2 + 1)), new ArrayList<Long>(arr2.subList(0, (int)n/2 + 1)), n - n/2 + 1);\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n/2, (int)n/2 + 1)), new ArrayList<Long>(arr2.subList(0, (int)n/2 + 1)), n - n/2 + 1);\n        }\n        if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr2.subList((int)n/2 - 1, (int)n/2 + 1)), new ArrayList<Long>(arr1.subList(0, (int)n/2 + 1)), n - n/2 + 1);\n        return getMedian(new ArrayList<Long>(arr2.subList((int)n/2, (int)n/2 + 1)), new ArrayList<Long>(arr1.subList(0, (int)n/2 + 1)), n - n/2 + 1);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmp_8bx4typ.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp_8bx4typ.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp_8bx4typ.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpijkuo0qc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpijkuo0qc.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpijkuo0qc.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), n - n / 2);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), n - n / 2);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "/tmp/tmp91li604k.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp91li604k.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp91li604k.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2) - 1, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2), (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList((int) (n / 2) - 1, (int) (n / 2) + 1)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList((int) (n / 2), (int) (n / 2) + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "/tmp/tmp8qnapeg2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp8qnapeg2.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp8qnapeg2.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0;\n        int j = 0;\n        int count = 0;\n        int m1 = -1;\n        int m2 = -1;\n        while (count <= n) {\n            if (i == n) {\n                m1 = m2;\n                m2 = (int) arr2.get(0).longValue();\n                break;\n            }\n            else if (j == n) {\n                m1 = m2;\n                m2 = (int) arr1.get(0).longValue();\n                break;\n            }\n            if (arr1.get(i).longValue() < arr2.get(j).longValue()) {\n                m1 = m2;\n                m2 = (int) arr1.get(i).longValue();\n                i++;\n            }\n            else {\n                m1 = m2;\n                m2 = (int) arr2.get(j).longValue();\n                j++;\n            }\n            count++;\n        }\n        if (n % 2 == 0) {\n            median = (m1 + m2) / 2;\n        }\n        else {\n            median = m2;\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "/tmp/tmpotsazatz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2 - 1), (int) (n / 2 + 1))), new ArrayList<Long>(arr2.subList(0, (int) (n / 2 + 1))), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2), (int) (n / 2 + 1))), new ArrayList<Long>(arr2.subList(0, (int) (n / 2 + 1))), n - n / 2 + 1);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr2.subList((int) (n / 2 - 1), (int) (n / 2 + 1))), new ArrayList<Long>(arr1.subList(0, (int) (n / 2 + 1))), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr2.subList((int) (n / 2), (int) (n / 2 + 1))), new ArrayList<Long>(arr1.subList(0, (int) (n / 2 + 1))), n - n / 2 + 1);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "/tmp/tmpknsj91i4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpknsj91i4.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpknsj91i4.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        int count = 0;\n        while (count < n) {\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n            count++;\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123803,
      "stdout": "",
      "stderr": "/tmp/tmp2i_9jatf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123803,
      "stdout": "",
      "stderr": "/tmp/tmpymnqnfco.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpymnqnfco.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpymnqnfco.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        ArrayList<Long> arr = new ArrayList<Long>();\n        int i = 0, j = 0;\n        while (i < n && j < n) {\n            if (arr1.get(i) < arr2.get(j)) {\n                arr.add(arr1.get(i));\n                i++;\n            } else {\n                arr.add(arr2.get(j));\n                j++;\n            }\n        }\n        while (i < n) {\n            arr.add(arr1.get(i));\n            i++;\n        }\n        while (j < n) {\n            arr.add(arr2.get(j));\n            j++;\n        }\n        if (n % 2 == 0) {\n            return (float) (arr.get(n / 2) + arr.get(n / 2 - 1)) / 2;\n        } else {\n            return arr.get(n / 2);\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "/tmp/tmphslmgnor.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmphslmgnor.java:31: error: incompatible types: possible lossy conversion from long to int\n            return (float) (arr.get(n / 2) + arr.get(n / 2 - 1)) / 2;\n                                      ^\n/tmp/tmphslmgnor.java:31: error: incompatible types: possible lossy conversion from long to int\n            return (float) (arr.get(n / 2) + arr.get(n / 2 - 1)) / 2;\n                                                           ^\n/tmp/tmphslmgnor.java:33: error: incompatible types: possible lossy conversion from long to int\n            return arr.get(n / 2);\n                             ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if(n <= 0) return -1;\n        if(n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if(n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if(m1 == m2) return m1;\n        if(m1 < m2) {\n            if(n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if(n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "/tmp/tmp1hku4i10.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1hku4i10.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp1hku4i10.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n - 1)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n - 1)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n - 1)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n - 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "/tmp/tmpuj94kdsz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpuj94kdsz.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpuj94kdsz.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0;\n        int j = 0;\n        long count;\n        long m1 = -1, m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "/tmp/tmpzw6ouah1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), n - n / 2);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), n - n / 2);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "/tmp/tmp5ju7l22a.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp5ju7l22a.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp5ju7l22a.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted array lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        int count = 0;\n        while (count < n) {\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n            count++;\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123803,
      "stdout": "",
      "stderr": "/tmp/tmp2i_9jatf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
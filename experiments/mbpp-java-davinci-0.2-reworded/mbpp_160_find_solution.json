{
  "name": "mbpp_160_find_solution",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_160_find_solution.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        // TODO: Implement this function\n        return Optional.empty();",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long d = gcd(a, b);\n        long a1 = a / d;\n        long b1 = b / d;\n        long r = n % b1;\n        long q = n / b1;\n        if (r == 0) {\n            return Optional.of(x);\n        }\n        Optional<Long> solution = findSolution(b1, r, q);\n        if (solution.isPresent()) {\n            x = solution.get();\n            y = (n - a * x) / b;\n            return Optional.of(x);\n        }\n        return Optional.empty();",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (a % d != 0 || b % d != 0) {\n            long q = a / d;\n            long r = a % d;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = d;\n            b = r;\n            d = gcd(a, b);\n        }\n        x = x2 * (n / d);\n        y = y2 * (n / d);\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (a % d != 0 || b % d != 0) {\n            long q = a / d;\n            long r = a % d;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = d;\n            b = r;\n            d = gcd(a, b);\n        }\n        x = x2 * (n / d);\n        y = y2 * (n / d);\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0, y = 0;\n        long g = gcd(a, b);\n        a /= g;\n        b /= g;\n        n /= g;\n        long x1 = 1, y1 = 0, x2 = 0, y2 = 1;\n        while (a != 0) {\n            long q = b / a;\n            long r = b % a;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            b = a;\n            a = r;\n        }\n        x = x2 * n;\n        y = y2 * n;\n        return Optional.of(x);",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        Pair<Long, Long> p = extendedEuclid(a, b);\n        x = p.getValue0();\n        y = p.getValue1();\n        x *= n / gcd;\n        y *= n / gcd;\n        return Optional.of(x);",
    "        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long x1 = 0;\n        long y1 = 1;\n        long x2 = 1;\n        long y2 = 0;\n        long q = 0;\n        long r = 0;\n        while (a != 0) {\n            q = b / a;\n            r = b % a;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            b = a;\n            a = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = x2;\n        y = y2;\n        return Optional.of(x);",
    "        // Write your code here\n        return Optional.empty();",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long g = gcd(a, b);\n        while (a * x + b * y != n) {\n            if (a * x + b * y < n) {\n                x += b / g;\n            } else {\n                y -= a / g;\n            }\n        }\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        long x1 = 1, y1 = 0;\n        long x2 = 0, y2 = 1;\n        while (a % d != 0 || b % d != 0) {\n            long q = a / d;\n            long r = a % d;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = d;\n            b = r;\n            d = gcd(a, b);\n        }\n        x = x2 * (n / d);\n        y = y2 * (n / d);\n        return Optional.of(x);",
    "        // ax + by = n\n        // ax = n - by\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x",
    "        // Write your code here.\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (b != 0) {\n            long q = a / b;\n            long r = a % b;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = b;\n            b = r;\n        }\n        x = x1 * n;\n        y = y1 * n;\n        return Optional.of(x);",
    "        // TODO: Implement me!\n        return Optional.empty();",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long x = 1;\n        long y = 1;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        Pair<Long, Long> p = extendedGcd(a, b);\n        x = p.getValue0();\n        y = p.getValue1();\n        x *= n / gcd;\n        y *= n / gcd;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = ((n / d) * b) / a;\n        long y1 = (n - (a * x1)) / b;\n        return Optional.of(x1);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (b != 0) {\n            long q = a / b;\n            long r = a % b;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = b;\n            b = r;\n        }\n        x = x1;\n        y = y1;\n        return Optional.of(x * n);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (a % d != 0 || b % d != 0) {\n            long q = a / d;\n            long r = a % d;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = d;\n            b = r;\n            d = gcd(a, b);\n        }\n        x = x2 * (n / d);\n        y = y2 * (n / d);\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long x1 = 1, x2 = 0, y1 = 0, y2 = 1;\n        while (b != 0) {\n            long q = a / b;\n            long r = a % b;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            a = b;\n            b = r;\n            x1 = x2;\n            x2 = x3;\n            y1 = y2;\n            y2 = y3;\n        }\n        x = x1 * n;\n        y = y1 * n;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long[] r = extendedEuclid(a, b);\n        x = r[0];\n        y = r[1];\n        x *= n;\n        y *= n;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long a1 = a / d;\n        long b1 = b / d;\n        long n1 = n / d;\n        long[] result = extendedEuclidean(a1, b1);\n        x = result[1];\n        y = result[2];\n        x *= n1;\n        y *= n1;\n        return Optional.of(x);",
    "        long x = 0;\n        long y = 0;\n        while (x * a <= n) {\n            if ((n - x * a) % b == 0) {\n                y = (n - x * a) / b;\n                return Optional.of(y);\n            }\n            x++;\n        }\n        return Optional.empty();",
    "        // Write your code here.\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = ((n / d) * modInverse(a / d, b / d)) % b;\n        long y1 = (n - (a * x1)) / b;\n        return Optional.of(x1);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        if (d == 1) {\n            x = n / a;\n            y = (n - a * x) / b;\n        } else {\n            x = n / (a / d);\n            y = (n - a * x) / (b / d);\n        }\n        return Optional.of(x);",
    "        // ax + by = n\n        // ax = n - by\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x",
    "        // TODO: Implement this function\n        return Optional.empty();",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0, y = 0;\n        long g = gcd(a, b);\n        a /= g;\n        b /= g;\n        n /= g;\n        long[] sol = extendedEuclid(a, b);\n        x = sol[0] * n;\n        y = sol[1] * n;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 1) {\n            x = n;\n            y = 0;\n        } else {\n            x = n / d;\n            y = (n - a * x) / b;\n        }\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long g = gcd(a, b);\n        while (y * b <= n) {\n            if ((n - (y * b)) % a == 0) {\n                x = (n - (y * b)) / a;\n                return Optional.of(x);\n            }\n            y++;\n        }\n        return Optional.empty();",
    "        // Write your code here.\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 1) {\n            x = n;\n            y = 0;\n        } else {\n            x = n / d;\n            y = (b / d) - (a / d) * x;\n        }\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long d = gcd(a, b);\n        while (x * b < n) {\n            if ((n - x * b) % a == 0) {\n                return Optional.of(x);\n            }\n            x++;\n        }\n        return Optional.empty();",
    "        // ax + by = n\n        // ax = n - by\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        while (a * x + b * y != n) {\n            if (a * x + b * y < n) {\n                x++;\n            } else {\n                y--;\n            }\n        }\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(0L);\n        }\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        long q = 0;\n        long r = 0;\n        while (a % b != 0) {\n            q = a / b;\n            r = a % b;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            a = b;\n            b = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = (n / d) * x2;\n        y = (n / d) * y2;\n        return Optional.of(x);",
    "        return Optional.of(new Pair<>(1L, 2L));",
    "        // TODO: Implement this function.\n        return Optional.empty();",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long r = a % b;\n        while (r != 0) {\n            long q = a / b;\n            long t = x - q * y;\n            x = y;\n            y = t;\n            a = b;\n            b = r;\n            r = a % b;\n        }\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long x1 = 1, y1 = 0;\n        long x2 = 0, y2 = 1;\n        long q = 0;\n        while (b != 0) {\n            q = a / b;\n            long r = a % b;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            a = b;\n            b = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        return Optional.of(x2);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = b / d;\n        long y1 = a / d;\n        x = n / d * x1;\n        y = (n - a * x) / b;\n        return Optional.of(x);",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long a1 = a / gcd;\n        long b1 = b / gcd;\n        long n1 = n / gcd;\n        Pair<Long, Long> p = extendedEuclid(a1, b1);\n        x = p.getValue0() * n1;\n        y = p.getValue1() * n1;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0;\n        long y = n / b;\n        long r = a % b;\n        while (r != 0) {\n            long q = a / b;\n            long t = x - q * y;\n            x = y;\n            y = t;\n            a = b;\n            b = r;\n            r = a % b;\n        }\n        return Optional.of(x);",
    "        if (n % gcd(a, b) == 0) {\n            long x = 0;\n            long y = n / b;\n            long g = gcd(a, b);\n            while (x * b <= n) {\n                if ((n - x * b) % a == 0) {\n                    y = (n - x * b) / a;\n                    return Optional.of(x);\n                }\n                x++;\n            }\n            return Optional.empty();\n        } else {\n            return Optional.empty();\n        }",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = b / d;\n        long y1 = a / d;\n        x = n / d * x1;\n        y = (n - a * x) / b;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        long q = 0;\n        long r = 0;\n        while (a % b != 0) {\n            q = a / b;\n            r = a % b;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            a = b;\n            b = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = (n / d) * x2;\n        y = (n / d) * y2;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = (b / d) * n / a;\n        long y1 = (a / d) * n / b;\n        long r = (b / d) * a - (a / d) * b;\n        long c = (b / d) * n - (a / d) * n;\n        if (c % r != 0) {\n            return Optional.empty();\n        }\n        long k = c / r;\n        x = x1 + k * (b / d);\n        y = y1 - k * (a / d);\n        return Optional.of(x);",
    "        // Write your code here.\n        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        Pair<Long, Long> p = extendedEuclid(a, b);\n        x = p.getValue0();\n        y = p.getValue1();\n        x *= n / gcd;\n        y *= n / gcd;\n        return Optional.of(x);",
    "        // Write your code here\n        return Optional.empty();",
    "        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long[] result = extendedEuclid(a, b);\n        x = result[1];\n        y = result[2];\n        x *= n;\n        y *= n;\n        return Optional.of(x);",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd;\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (a != 0) {\n            long q = b / a;\n            long r = b % a;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            b = a;\n            a = r;\n            x1 = x2;\n            x2 = x3;\n            y1 = y2;\n            y2 = y3;\n        }\n        x = x2 * (n / d);\n        y = y2 * (n / d);\n        return Optional.of(x);",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long[] res = extendedEuclid(a, b);\n        x = res[1] * (n / gcd);\n        y = res[2] * (n / gcd);\n        return Optional.of(x);",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd;\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (a != 0) {\n            long q = b / a;\n            long r = b % a;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            b = a;\n            a = r;\n        }\n        x = x2 * (n / d);\n        y = y2 * (n / d);\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (a % d != 0 || b % d != 0) {\n            long q = a / d;\n            long r = a % d;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = d;\n            b = r;\n            d = gcd(a, b);\n        }\n        x = x2 * n / d;\n        y = y2 * n / d;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long[] res = extendedEuclid(a, b);\n        x = res[1] * n;\n        y = res[2] * n;\n        return Optional.of(x);",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        Pair<Long, Long> p = extendedEuclid(a, b);\n        long x = p.getValue0();\n        long y = p.getValue1();\n        long k = n / gcd;\n        x *= k;\n        y *= k;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long[] xy = extendedEuclid(a, b);\n        x = xy[0];\n        y = xy[1];\n        x *= n;\n        y *= n;\n        return Optional.of(x);",
    "        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        long q = 0;\n        long r = 0;\n        while (b != 0) {\n            q = a / b;\n            r = a % b;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            a = b;\n            b = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = x2;\n        y = y2;\n        return Optional.of(x * (n / gcd));",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long a1 = a / gcd;\n        long b1 = b / gcd;\n        long n1 = n / gcd;\n        Pair<Long, Long> p = extendedEuclid(a1, b1);\n        x = p.getValue0();\n        y = p.getValue1();\n        x = x * n1;\n        y = y * n1;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = b / d;\n        long y1 = a / d;\n        x = n / d * x1;\n        y = (n - a * x) / b;\n        return Optional.of(x);",
    "        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long a1 = a / gcd;\n        long b1 = b / gcd;\n        long n1 = n / gcd;\n        Pair<Long, Long> p = extendedEuclid(a1, b1);\n        x = p.getValue0();\n        y = p.getValue1();\n        x *= n1;\n        y *= n1;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 1, lastx = 1, lasty = 0, temp;\n        while (b != 0) {\n            long q = a / b;\n            long r = a % b;\n            a = b;\n            b = r;\n            temp = x;\n            x = lastx - q * x;\n            lastx = temp;\n            temp = y;\n            y = lasty - q * y;\n            lasty = temp;\n        }\n        return Optional.of(lastx * (n / gcd(a, b)));",
    "        // Write your code here.\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long a1 = a / d;\n        long b1 = b / d;\n        long n1 = n / d;\n        Pair<Long, Long> p = extendedEuclid(a1, b1);\n        x = p.getValue0();\n        y = p.getValue1();\n        x = x * n1;\n        y = y * n1;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = ((n / d) * modInverse(a / d, b / d)) % b;\n        long y1 = (n - (a * x1)) / b;\n        return Optional.of(x1);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = 1;\n        long y1 = (n - a) / b;\n        long x2 = 0;\n        long y2 = n / b;\n        while (a * x1 + b * y1 != n) {\n            if (a * x1 + b * y1 < n) {\n                x2 = x1;\n                y2 = y1;\n                x1 = x2 + x;\n                y1 = y2 + y;\n            } else {\n                x = x1;\n                y = y1;\n                x1 = x2;\n                y1 = y2;\n            }\n        }\n        return Optional.of(x1);",
    "        // Write your code here\n        return Optional.empty();",
    "        // Write your code here\n        return Optional.empty();",
    "        // Write your code here\n        return Optional.empty();",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long a1 = a / gcd;\n        long b1 = b / gcd;\n        long n1 = n / gcd;\n        Pair<Long, Long> p = extendedEuclid(a1, b1);\n        x = p.getValue0() * n1;\n        y = p.getValue1() * n1;\n        return Optional.of(x);",
    "        // Write your code here.\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long g = gcd(a, b);\n        long a1 = a / g;\n        long b1 = b / g;\n        long r = n % b;\n        while (r > 0) {\n            long q = b / r;\n            long t = b % r;\n            long s = a1 - q * x;\n            a1 = x;\n            b1 = y;\n            x = s;\n            y = (n - a * x) / b;\n            b = r;\n            r = t;\n        }\n        return Optional.of(a1);",
    "        long x = 1;\n        long y = 1;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long a1 = a / gcd;\n        long b1 = b / gcd;\n        long n1 = n / gcd;\n        Pair<Long, Long> p = extendedEuclid(a1, b1);\n        x = p.getValue0();\n        y = p.getValue1();\n        x *= n1;\n        y *= n1;\n        return Optional.of(x);",
    "        // ax + by = n\n        // ax = n - by\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        long x0 = b;\n        long y0 = -a;\n        long r = n % d;\n        while (r > 0) {\n            long q = n / d;\n            long t = d;\n            d = r;\n            r = t % r;\n            t = x0;\n            x0 = x - q * x0;\n            x = t;\n            t = y0;\n            y0 = y - q * y0;\n            y = t;\n        }\n        return Optional.of(x0 * (n / d) + x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (a % d != 0 || b % d != 0) {\n            long q = a / d;\n            long r = a % d;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = b;\n            b = r;\n            d = gcd(a, b);\n        }\n        x = x2 * (n / d);\n        y = y2 * (n / d);\n        return Optional.of(x);",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        Pair<Long, Long> p = extendedEuclid(a, b);\n        long x = p.getValue0();\n        long y = p.getValue1();\n        long k = n / gcd;\n        x *= k;\n        y *= k;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = 1;\n        long y1 = (n - a * x1) / b;\n        while (x1 * a + y1 * b != n) {\n            x = x1;\n            y = y1;\n            x1 = y;\n            y1 = (n - a * x1) / b;\n        }\n        return Optional.of(x1);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = b / d;\n        long y1 = a / d;\n        x = n / d * x1;\n        y = (n - a * x) / b;\n        return Optional.of(x);",
    "        // Write your code here\n        return Optional.empty();",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        if (d == 1) {\n            x = (n / a) * a;\n            y = n - x;\n        } else {\n            x = (n / d) * (a / d);\n            y = (n / d) * (b / d);\n        }\n        return Optional.of(x);",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd;\n        long x1 = 1, y1 = 0, x2 = 0, y2 = 1;\n        while (a % d != 0 || b % d != 0) {\n            long q = a / d;\n            long r = a % d;\n            long m = x1 - q * x2;\n            long n1 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = m;\n            y2 = n1;\n            a = d;\n            d = r;\n        }\n        x = x2;\n        y = y2;\n        return Optional.of(x * (n / d) + y * (n / d));",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        long a1 = a / d, b1 = b / d;\n        long[] res = extendedEuclid(a1, b1);\n        x = res[1];\n        y = res[2];\n        x *= n / d;\n        y *= n / d;\n        return Optional.of(x);",
    "        // TODO: Implement\n        return Optional.empty();",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long[] res = extendedEuclid(a, b);\n        x = res[0] * n;\n        y = res[1] * n;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = b / d;\n        long y1 = a / d;\n        long x0 = 1;\n        long y0 = 1;\n        while (a % d == 0) {\n            long temp = x0;\n            x0 = y0;\n            y0 = temp - (a / d) * y0;\n            a = a / d;\n        }\n        x = x0 * (n / d);\n        y = y0 * (n / d);\n        return Optional.of(x);",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        if (a == 0 && b == 0) {\n            return Optional.of(0L);\n        }\n        if (a == 0 && b != 0) {\n            return Optional.empty();\n        }\n        if (a != 0 && b == 0) {\n            return Optional.of(n / a);\n        }\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long x = n / gcd;\n        long y = n / gcd;\n        long a1 = a / gcd;\n        long b1 = b / gcd;\n        long a2 = a1;\n        long b2 = b1;\n        while (a2 != 0 && b2 != 0) {\n            if (a2 > b2) {\n                a2 = a2 % b2;\n            } else {\n                b2 = b2 % a2;\n            }\n        }\n        if (a2 == 0) {\n            x = x * b2;\n        } else {\n            y = y * a2;\n        }\n        return Optional.of(x);",
    "        // TODO: Implement this function\n        return Optional.empty();",
    "        // Write your code here\n        return Optional.empty();",
    "        // ax + by = n\n        // ax = n - by\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x",
    "        // TODO: Implement this function\n        return Optional.empty();",
    "        if (n % gcd(a, b) != 0)\n            return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long x1 = 1, y1 = 0, x2 = 0, y2 = 1;\n        while (b != 0) {\n            long q = a / b;\n            long r = a % b;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = b;\n            b = r;\n        }\n        x = x1 * n;\n        y = y1 * n;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = ((n / d) * b) / a;\n        long y1 = (n - (a * x1)) / b;\n        return Optional.of(x1);",
    "        // a = bq + r\n        // n = ax + by\n        // n = bqx + rx + by\n        // n = b(qx + y) + rx\n        // n - b(qx + y) = rx\n        // rx = n - b(qx + y)\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx",
    "        // Write your code here.\n        if (n % gcd(a, b) == 0) {\n            return Optional.of(n / gcd(a, b));\n        }\n        return Optional.empty();",
    "        // TODO\n        return Optional.empty();",
    "        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        long a1 = a / d, b1 = b / d;\n        long x1 = 1, y1 = 0;\n        while (b1 != 0) {\n            long q = a1 / b1;\n            long r = a1 % b1;\n            long x2 = x1 - q * x;\n            long y2 = y1 - q * y;\n            a1 = b1;\n            b1 = r;\n            x1 = x;\n            y1 = y;\n            x = x2;\n            y = y2;\n        }\n        return Optional.of(x * (n / d));",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        Pair<Long, Long> p = extendedEuclid(a, b);\n        long x = p.getValue0();\n        long y = p.getValue1();\n        long factor = n / gcd;\n        x *= factor;\n        y *= factor;\n        return Optional.of(x);",
    "        // Your code here\n        return Optional.empty();",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = b / d;\n        long y1 = a / d;\n        x = n / d * x1;\n        y = (n - a * x) / b;\n        return Optional.of(x);",
    "        // TODO: Implement this function\n        return Optional.empty();",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long d = gcd(a, b);\n        long a1 = a / d;\n        long b1 = b / d;\n        long n1 = n / d;\n        long k = n1 / a1;\n        x = n1 - k * a1;\n        y = k;\n        return Optional.of(x);",
    "        // ax + by = n\n        // ax = n - by\n        // x = (n - by) / a\n        // y = (n - ax) / b\n        // y = (n - (n - by)) / b\n        // y = (n - n + by) / b\n        // y = by / b\n        // y = y\n        // x = (n - by) / a\n        // x = (n - yb) / a\n        // x = (n - yb) / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long g = gcd(a, b);\n        a /= g;\n        b /= g;\n        n /= g;\n        long x0 = 1;\n        long y0 = 0;\n        long x1 = 0;\n        long y1 = 1;\n        while (a != 0) {\n            long q = b / a;\n            long r = b % a;\n            long x2 = x0 - q * x1;\n            long y2 = y0 - q * y1;\n            x0 = x1;\n            y0 = y1;\n            x1 = x2;\n            y1 = y2;\n            b = a;\n            a = r;\n        }\n        x = x0 * n;\n        y = y0 * n;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (b != 0) {\n            long q = a / b;\n            long r = a % b;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = b;\n            b = r;\n        }\n        x = x1 * n;\n        y = y1 * n;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long a1 = a / d;\n        long b1 = b / d;\n        long n1 = n / d;\n        long[] result = extendedEuclid(a1, b1);\n        x = result[1];\n        y = result[2];\n        x *= n1;\n        y *= n1;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 1) {\n            x = n;\n            y = 0;\n        } else {\n            x = n / d;\n            y = (n - a * x) / b;\n        }\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long[] res = ext_gcd(a, b);\n        x = res[1];\n        y = res[2];\n        x *= n;\n        y *= n;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        long a1 = a / d, b1 = b / d, n1 = n / d;\n        long[] res = extendedEuclid(a1, b1);\n        x = res[1] * n1;\n        y = res[2] * n1;\n        return Optional.of(x);",
    "        // TODO: Implement this function\n        return Optional.empty();",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long g = gcd(a, b);\n        a /= g;\n        b /= g;\n        long sign_a = a < 0 ? -1 : 1;\n        long sign_b = b < 0 ? -1 : 1;\n        a = Math.abs(a);\n        b = Math.abs(b);\n        while (true) {\n            long r = n - a * x;\n            if (r % b == 0) {\n                y = r / b;\n                return Optional.of(x * sign_a + y * sign_b);\n            }\n            x++;\n        }",
    "        // TODO: Implement\n        return Optional.empty();",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (a % d != 0 || b % d != 0) {\n            long q = a / d;\n            long r = a % d;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = d;\n            b = r;\n            d = gcd(a, b);\n        }\n        x = x2 * (n / d);\n        y = y2 * (n / d);\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        if (d == 1) {\n            x = n / a;\n            y = (n - a * x) / b;\n        } else {\n            x = n / (a / d);\n            y = (n - a * x) / (b / d);\n        }\n        return Optional.of(x);",
    "        // Write your code here.\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 1) {\n            x = n;\n            y = 0;\n        } else {\n            x = n / d;\n            y = (n - a * x) / b;\n        }\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long x1 = 1, y1 = 0, x2 = 0, y2 = 1;\n        while (a != 0) {\n            long q = b / a;\n            long r = b % a;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            b = a;\n            a = r;\n        }\n        x = x2 * n;\n        y = y2 * n;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long r = a;\n        long s = b;\n        long t = n;\n        long u = 0;\n        long v = 1;\n        while (r != 0) {\n            long q = s / r;\n            long tmp = u;\n            u = x - q * u;\n            x = tmp;\n            tmp = v;\n            v = y - q * v;\n            y = tmp;\n            tmp = r;\n            r = s - q * r;\n            s = tmp;\n        }\n        if (s > 1) {\n            return Optional.empty();\n        }\n        x *= n / s;\n        y *= n / s;\n        return Optional.of(x);",
    "        // TODO: Implement me!\n        return Optional.empty();",
    "        // TODO: Implement me!\n        return Optional.empty();",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long[] xy = extendedEuclid(a, b);\n        x = xy[0];\n        y = xy[1];\n        x *= n;\n        y *= n;\n        return Optional.of(x);",
    "        // TODO: Implement me\n        return Optional.empty();",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long g = gcd(a, b);\n        a /= g;\n        b /= g;\n        long d = 1;\n        while (a != 0) {\n            long t = d;\n            d = x - a * (y / b);\n            x = t;\n            t = a;\n            a = b % a;\n            b = t;\n        }\n        return Optional.of(x * (n / g) + n);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        long q = 0;\n        while (a % b != 0) {\n            q = a / b;\n            long r = a % b;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = b;\n            b = r;\n        }\n        x = x2;\n        y = y2;\n        return Optional.of(x * (n / d) + y * (n / d));",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n\n        Pair<Long, Long> pair = extendedEuclidean(a, b);\n        x = pair.getValue0();\n        y = pair.getValue1();\n\n        return Optional.of(x * n);",
    "        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (n % d != 0) return Optional.empty();\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (b != 0) {\n            long q = a / b;\n            long r = a % b;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            a = b;\n            b = r;\n            x1 = x2;\n            x2 = x3;\n            y1 = y2;\n            y2 = y3;\n        }\n        x = x1 * (n / d);\n        y = y1 * (n / d);\n        return Optional.of(x);",
    "        // Write your code here\n        return Optional.empty();",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (a != 0) {\n            long q = b / a;\n            long r = b % a;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            b = a;\n            a = r;\n        }\n        x = x2 * (n / d);\n        y = y2 * (n / d);\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        long q = 0;\n        long r = 0;\n        while (a != 0) {\n            q = b / a;\n            r = b % a;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            b = a;\n            a = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = x2;\n        y = y2;\n        x *= n / d;\n        y *= n / d;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long[] res = extendedEuclid(a, b);\n        x = res[1];\n        y = res[2];\n        x *= n;\n        y *= n;\n        return Optional.of(x);",
    "        // Write your code here.\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = ((n / d) * b) / a;\n        long y1 = (n - (a * x1)) / b;\n        return Optional.of(x1);",
    "        // Write your code here.\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = (b / d) * (n / d);\n        long y1 = (a / d) * (n / d);\n        long r = (b / d);\n        long s = (a / d);\n        long c = 1;\n        long k = (long) Math.ceil((-x1) / (double) b);\n        x = x1 + k * b;\n        y = y1 - k * a;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0, y = 0;\n        long g = gcd(a, b);\n        x = n / g * (b / g);\n        y = n / g * (a / g);\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = ((n / d) * modInverse(a / d, b / d)) % b;\n        long y1 = (n - a * x1) / b;\n        return Optional.of(x1);",
    "        // TODO: Implement this function\n        return Optional.empty();",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long g = gcd(a, b);\n        a /= g;\n        b /= g;\n        long d = 1;\n        while (a % 2 == 0 && b % 2 == 0) {\n            a /= 2;\n            b /= 2;\n            d *= 2;\n        }\n        if (a % 2 == 0) {\n            long t = (n - b * y) / a;\n            if (t % 2 != 0) {\n                return Optional.empty();\n            }\n            x = t / 2;\n            y = (n - a * x) / b;\n        } else if (b % 2 == 0) {\n            long t = (n - a * x) / b;\n            if (t % 2 != 0) {\n                return Optional.empty();\n            }\n            y = t / 2;\n            x = (n - b * y) / a;\n        } else {\n            long t = (n - b * y) / a;\n            if (t % 2 != 0) {\n                return Optional.empty();\n            }\n            x = t / 2;\n            y = (n - a * x) / b;\n        }\n        return Optional.of(x * d);",
    "        // TODO: Implement this function.\n        return Optional.empty();",
    "        // Write your code here\n        return Optional.empty();",
    "        // ax + by = n\n        // ax = n - by\n        // x = (n - by) / a\n        // x = (n / a) - (by / a)\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        long q = 0;\n        long r = 0;\n        while (a % b != 0) {\n            q = a / b;\n            r = a % b;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            a = b;\n            b = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = (n / d) * x2;\n        y = (n / d) * y2;\n        return Optional.of(x);",
    "        // Write your code here\n        return Optional.empty();",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (a % d != 0 || b % d != 0) {\n            long q = a / d;\n            long r = a % d;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = d;\n            b = r;\n            d = gcd(a, b);\n        }\n        x = x2 * (n / d);\n        y = y2 * (n / d);\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long r = a % b;\n        while (r > 0) {\n            long q = a / b;\n            long t = x - q * y;\n            x = y;\n            y = t;\n            a = b;\n            b = r;\n            r = a % b;\n        }\n        return Optional.of(y);",
    "        long x = 0;\n        long y = 0;\n        long r = n;\n        long q = 0;\n        long x1 = 1;\n        long x2 = 0;\n        long y1 = 0;\n        long y2 = 1;\n        long x0 = 0;\n        long y0 = 0;\n        while (r != 0) {\n            q = a / b;\n            r = a % b;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            a = b;\n            b = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        if (a == n) {\n            x0 = x2;\n            y0 = y2;\n        }\n        if (b == n) {\n            x0 = x1;\n            y0 = y1;\n        }\n        if (x0 == 0 && y0 == 0) {\n            return Optional.empty();\n        }\n        return Optional.of(x0);",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long x1 = 1, y1 = 0, x2 = 0, y2 = 1;\n        while (a != 0) {\n            long q = b / a;\n            long r = b % a;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            b = a;\n            a = r;\n        }\n        x = x2 * n;\n        y = y2 * n;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long r = a % b;\n        while (r > 0) {\n            long q = a / b;\n            long t = x - q * y;\n            x = y;\n            y = t;\n            a = b;\n            b = r;\n            r = a % b;\n        }\n        return Optional.of(y);",
    "        // TODO: Implement me\n        return Optional.empty();",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        long a1 = a / d;\n        long b1 = b / d;\n        long n1 = n / d;\n        long[] vals = extendedEuclid(a1, b1);\n        x = vals[1];\n        y = vals[2];\n        x *= n1;\n        y *= n1;\n        return Optional.of(x);",
    "        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long x1 = 0;\n        long y1 = 1;\n        long x2 = 1;\n        long y2 = 0;\n        while (a != 0) {\n            long q = b / a;\n            long r = b % a;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            b = a;\n            a = r;\n        }\n        x = x2 * (n / gcd);\n        y = y2 * (n / gcd);\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long x1 = 1, x2 = 0, y1 = 0, y2 = 1;\n        while (b != 0) {\n            long q = a / b;\n            long r = a % b;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            a = b;\n            b = r;\n            x1 = x2;\n            x2 = x3;\n            y1 = y2;\n            y2 = y3;\n        }\n        x = x1 * n;\n        y = y1 * n;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long g = gcd(a, b);\n        a /= g;\n        b /= g;\n        n /= g;\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        long q = 0;\n        long r = 0;\n        while (b != 0) {\n            q = a / b;\n            r = a % b;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            a = b;\n            b = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = (n / a) * x2;\n        y = (n / a) * y2;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long r = a % b;\n        while (r != 0) {\n            long q = a / b;\n            long t = x - q * y;\n            x = y;\n            y = t;\n            a = b;\n            b = r;\n            r = a % b;\n        }\n        return Optional.of(y);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 1) {\n            x = n;\n            y = 0;\n        } else {\n            x = n / d;\n            y = (n - a * x) / b;\n        }\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        if (d == 1) {\n            x = n / a;\n            y = (n - a * x) / b;\n        } else {\n            x = n / (a / d);\n            y = (n - a * x) / (b / d);\n        }\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long[] result = extendedEuclid(a, b);\n        x = result[1];\n        y = result[2];\n        x *= n;\n        y *= n;\n        return Optional.of(x);",
    "        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (n % d != 0) {\n            return Optional.empty();\n        }\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (b != 0) {\n            long q = a / b;\n            long r = a % b;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            a = b;\n            b = r;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n        }\n        x = x1 * (n / d);\n        y = y1 * (n / d);\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = ((n / d) * b) / a;\n        long y1 = (n - (a * x1)) / b;\n        return Optional.of(x1);",
    "        // ax + by = n\n        // ax = n - by\n        // x = (n - by) / a\n        // x = (n / a) - (by / a)\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // y = (n / b) - (a / b)x\n        // y = (n / b) - (a / b)((n / a) - (b / a)y)\n        // y = (n / b) - (a / b)(n / a) + (a / b)(b / a)y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y =",
    "        // Write your code here.\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long g = gcd(a, b);\n        while (x * a + y * b != n) {\n            if (x * a + y * b > n) {\n                y--;\n            } else {\n                x++;\n            }\n        }\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 1) {\n            x = n;\n            y = 0;\n        } else {\n            x = n / d;\n            y = (n - a * x) / b;\n        }\n        return Optional.of(x);",
    "        // TODO: Write your code here\n        return Optional.empty();",
    "        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0, d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long x1 = 1, y1 = 0, x2 = 0, y2 = 1;\n        while (b != 0) {\n            long q = a / b;\n            long r = a % b;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            a = b;\n            b = r;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n        }\n        x = x1 * n;\n        y = y1 * n;\n        return Optional.of(x);",
    "        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long x1 = 0;\n        long y1 = 1;\n        long x2 = 1;\n        long y2 = 0;\n        long q = 0;\n        long r = 0;\n        while (a % b != 0) {\n            q = a / b;\n            r = a % b;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            a = b;\n            b = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = (n / b) * x2;\n        y = (n / b) * y2;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 1) {\n            x = n / a;\n            y = (n - a * x) / b;\n        } else {\n            x = n / (a / d);\n            y = (n - a * x) / (b / d);\n        }\n        return Optional.of(x);",
    "        // ax + by = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by)",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = 1;\n        long y1 = (n - a) / b;\n        long x2 = 0;\n        long y2 = n / b;\n        while (a * x1 + b * y1 != n) {\n            if (a * x1 + b * y1 < n) {\n                x2 = x1;\n                y2 = y1;\n                x1 = x2 + x;\n                y1 = y2 + y;\n            } else {\n                x = x1;\n                y = y1;\n                x1 = x2;\n                y1 = y2;\n            }\n        }\n        return Optional.of(x1);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = 1;\n        long y1 = (n - a * x1) / b;\n        while (a * x1 + b * y1 != n) {\n            if (y1 < 0) {\n                return Optional.empty();\n            }\n            x1++;\n            y1 = (n - a * x1) / b;\n        }\n        x = x1;\n        y = y1;\n        return Optional.of(x);",
    "        // TODO: Write your code here\n        return Optional.empty();",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long r = a % b;\n        while (r > 0) {\n            long q = a / b;\n            long t = x - q * y;\n            x = y;\n            y = t;\n            a = b;\n            b = r;\n            r = a % b;\n        }\n        return Optional.of(y);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 1) {\n            x = n;\n            y = 0;\n        } else {\n            x = n / d;\n            y = (n - a * x) / b;\n        }\n        return Optional.of(x);",
    "        // Write your code here.\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        while (a * x + b * y != n) {\n            if (a * x + b * y < n) {\n                x++;\n            } else {\n                y--;\n            }\n        }\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = b / d;\n        long y1 = a / d;\n        x = n / d * x1;\n        y = (n - a * x) / b;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        long a1 = a / d;\n        long b1 = b / d;\n        long n1 = n / d;\n        long[] result = extendedEuclid(a1, b1);\n        x = result[1];\n        y = result[2];\n        x *= n1;\n        y *= n1;\n        return Optional.of(x);",
    "        // Write your code here.\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long a1 = a / d;\n        long b1 = b / d;\n        long n1 = n / d;\n        Pair<Long, Long> p = extendedEuclid(a1, b1);\n        x = p.getValue0() * n1;\n        y = p.getValue1() * n1;\n        return Optional.of(x);",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        long q = 0;\n        long r = 0;\n        while (b != 0) {\n            q = a / b;\n            r = a % b;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            a = b;\n            b = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = x2;\n        y = y2;\n        x *= n / gcd;\n        y *= n / gcd;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0, y = 0;\n        long g = gcd(a, b);\n        a /= g;\n        b /= g;\n        n /= g;\n        long x1 = 1, y1 = 0;\n        long x2 = 0, y2 = 1;\n        while (b != 0) {\n            long q = a / b;\n            long r = a % b;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = b;\n            b = r;\n        }\n        x = x1 * n;\n        y = y1 * n;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = 1;\n        long y1 = (n - a) / b;\n        long x2 = 0;\n        long y2 = n / b;\n        while (a * x1 + b * y1 != n) {\n            if (a * x2 + b * y2 < n) {\n                x2 += 1;\n                y2 = (n - a * x2) / b;\n            } else {\n                x1 -= 1;\n                y1 = (n - a * x1) / b;\n            }\n        }\n        x = x1;\n        y = y1;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long g = gcd(a, b);\n        a /= g;\n        b /= g;\n        long d = 1;\n        while (a != 0) {\n            long t = d;\n            d = x - a * (y / b);\n            x = t;\n            t = a;\n            a = b % a;\n            b = t;\n        }\n        return Optional.of(x * (n / g) + n);",
    "        // Write your code here\n        return Optional.empty();",
    "        // TODO\n        return Optional.empty();",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long d = gcd(a, b);\n        while (x * b <= n) {\n            if ((n - x * b) % a == 0) {\n                return Optional.of(x);\n            }\n            x++;\n        }\n        return Optional.empty();",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long g = gcd(a, b);\n        a /= g;\n        b /= g;\n        long sign_a = a < 0 ? -1 : 1;\n        long sign_b = b < 0 ? -1 : 1;\n        a = Math.abs(a);\n        b = Math.abs(b);\n        while (x <= n / a) {\n            if ((n - a * x) % b == 0) {\n                return Optional.of(x * sign_a);\n            }\n            x++;\n        }\n        return Optional.empty();",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x0 = 0, y0 = 1;\n        long x1 = 1, y1 = 0;\n        long x = 0, y = 0;\n        long q = 0;\n        while (a != 0) {\n            q = b / a;\n            long tmp = x0;\n            x0 = x1 - q * x0;\n            x1 = tmp;\n            tmp = y0;\n            y0 = y1 - q * y0;\n            y1 = tmp;\n            tmp = a;\n            a = b % a;\n            b = tmp;\n        }\n        x = x1;\n        y = y1;\n        return Optional.of(x * (n / b) + y * (n / b));",
    "        // TODO: Implement\n        return Optional.empty();",
    "        // Your code here\n        return null;",
    "        // Write your code here.\n        return Optional.empty();",
    "        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        long q = 0;\n        long r = 0;\n        while (b != 0) {\n            q = a / b;\n            r = a % b;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            a = b;\n            b = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = x2;\n        y = y2;\n        return Optional.of(x * (n / gcd));",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = 1;\n        long y1 = (n - a) / b;\n        long x2 = 0;\n        long y2 = n / b;\n        while (a * x1 + b * y1 != n) {\n            if (a * x1 + b * y1 < n) {\n                x2 = x1;\n                y2 = y1;\n                x1 = x2 + x;\n                y1 = y2 + y;\n            } else {\n                x = x1;\n                y = y1;\n                x1 = x2;\n                y1 = y2;\n            }\n        }\n        return Optional.of(x1);",
    "        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd;\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (a != 0) {\n            long q = b / a;\n            long r = b % a;\n            long m = x2 - q * x1;\n            long n2 = y2 - q * y1;\n            x = m;\n            y = n2;\n            b = a;\n            a = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = x2;\n        y = y2;\n        return Optional.of(new Long(x * (n / d) + \" \" + y * (n / d)));",
    "        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long x1 = 0;\n        long y1 = 1;\n        long x2 = 1;\n        long y2 = 0;\n        long q = 0;\n        long r = 0;\n        while (a != 0) {\n            q = b / a;\n            r = b % a;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            b = a;\n            a = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = x2;\n        y = y2;\n        if (x < 0) {\n            x = x + b;\n            y = y - a;\n        }\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long r = a % b;\n        while (r != 0) {\n            long q = a / b;\n            long t = x - q * y;\n            x = y;\n            y = t;\n            a = b;\n            b = r;\n            r = a % b;\n        }\n        return Optional.of(y);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long a1 = a / d;\n        long b1 = b / d;\n        long n1 = n / d;\n        long[] result = extendedEuclid(a1, b1);\n        x = result[1];\n        y = result[2];\n        x = (x * n1) % b1;\n        if (x < 0) {\n            x += b1;\n        }\n        return Optional.of(x);",
    "        // TODO: Implement this function.\n        return Optional.empty();",
    "        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (n % d != 0) {\n            return Optional.empty();\n        }\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (b != 0) {\n            long q = a / b;\n            long r = a % b;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = b;\n            b = r;\n        }\n        x = x1 * (n / d);\n        y = y1 * (n / d);\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long[] res = extendedEuclid(a, b);\n        x = res[0] * n;\n        y = res[1] * n;\n        return Optional.of(x);",
    "        // TODO: Implement\n        return Optional.empty();",
    "        // TODO: Implement\n        return Optional.empty();",
    "        // Write your code here.\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        while (a * x + b * y != n) {\n            if (a * x + b * y < n) {\n                x++;\n            } else {\n                y--;\n            }\n        }\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long r = a % b;\n        while (r > 0) {\n            long q = a / b;\n            long t = x - q * y;\n            x = y;\n            y = t;\n            a = b;\n            b = r;\n            r = a % b;\n        }\n        return Optional.of(y);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long[] res = extendedEuclid(a, b);\n        x = res[1] * n;\n        y = res[2] * n;\n        return Optional.of(x);",
    "        // TODO: Implement\n        return Optional.empty();",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long r = a % b;\n        while (r != 0) {\n            long q = a / b;\n            long t = x - q * y;\n            x = y;\n            y = t;\n            a = b;\n            b = r;\n            r = a % b;\n        }\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long[] res = extgcd(a, b);\n        x = res[1];\n        y = res[2];\n        x *= n;\n        y *= n;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = 1;\n        long y1 = (n - a * x1) / b;\n        long x2 = 0;\n        long y2 = n / b;\n        while (x1 <= x2 && y1 >= y2) {\n            if (a * x1 + b * y1 == n) {\n                x = x1;\n                y = y1;\n                break;\n            }\n            if (a * x2 + b * y2 == n) {\n                x = x2;\n                y = y2;\n                break;\n            }\n            x1++;\n            y1 = (n - a * x1) / b;\n            x2 = n / a;\n            y2--;\n        }\n        if (x == 0 && y == 0) {\n            return Optional.empty();\n        }\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0, y = 0;\n        long g = gcd(a, b);\n        a /= g;\n        b /= g;\n        n /= g;\n        long x1 = 1, y1 = 0;\n        long x2 = 0, y2 = 1;\n        while (b > 0) {\n            long q = a / b;\n            long r = a % b;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            a = b;\n            b = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = x2;\n        y = y2;\n        x *= n;\n        y *= n;\n        return Optional.of(x);",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd;\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (a != 0) {\n            long q = b / a;\n            long r = b % a;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            b = a;\n            a = r;\n        }\n        x = x2 * (n / d);\n        y = y2 * (n / d);\n        return Optional.of(x);"
  ]
}
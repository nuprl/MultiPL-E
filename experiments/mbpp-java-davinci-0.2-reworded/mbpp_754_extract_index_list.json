{
  "name": "mbpp_754_extract_index_list",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // We say that an element is common for array lists l1, l2, l3 if it appears in all three array lists under the same index. Write a function to find common elements from three array lists. The function should return an array array list.\n    public static Object extractIndexList(ArrayList<Long> l1, ArrayList<Long> l2, ArrayList<Long> l3) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_754_extract_index_list.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(extractIndexList((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)7l)))).equals((new Object(Arrays.asList((long)1l, (long)7l)))));\n    assert(extractIndexList((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)6l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)6l, (long)7l)))).equals((new Object(Arrays.asList((long)1l, (long)6l)))));\n    assert(extractIndexList((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)3l, (long)4l, (long)6l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)7l)))).equals((new Object(Arrays.asList((long)1l, (long)5l)))));\n    assert(extractIndexList((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)6l, (long)6l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)7l)))).equals((new Object(Arrays.asList()))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            if (l1.get(i).equals(l2.get(i)) && l1.get(i).equals(l3.get(i))) {\n                result.add(l1.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = 0; i < l1.size(); i++) {\n            if (l1.get(i).equals(l2.get(i)) && l2.get(i).equals(l3.get(i))) {\n                result.add(l1.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = 0; i < l1.size(); i++) {\n            if (l1.get(i) == l2.get(i) && l2.get(i) == l3.get(i)) {\n                result.add(l1.get(i));\n            }\n        }\n        return result;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            if (l1.get(i) == l2.get(i) && l2.get(i) == l3.get(i)) {\n                result.add(l1.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            if (l1.get(i).equals(l2.get(i)) && l2.get(i).equals(l3.get(i))) {\n                result.add(l1.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            if (l1.get(i) == l2.get(i) && l2.get(i) == l3.get(i)) {\n                result.add(l1.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            if (l1.get(i).equals(l2.get(i)) && l1.get(i).equals(l3.get(i))) {\n                result.add(l1.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            if (l1.get(i).equals(l2.get(i)) && l2.get(i).equals(l3.get(i))) {\n                result.add(l1.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = 0; i < l1.size(); i++) {\n            if (l1.get(i).equals(l2.get(i)) && l2.get(i).equals(l3.get(i))) {\n                result.add(l1.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            if (l1.get(i) == l2.get(i) && l2.get(i) == l3.get(i)) {\n                result.add(l1.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            if (l1.get(i) == l2.get(i) && l2.get(i) == l3.get(i)) {\n                result.add(l1.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            if (l1.get(i) == l2.get(i) && l2.get(i) == l3.get(i)) {\n                result.add(l1.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> l = new ArrayList<Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            if (l1.get(i) == l2.get(i) && l2.get(i) == l3.get(i)) {\n                l.add(l1.get(i));\n            }\n        }\n        return l;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = 0; i < l1.size(); i++) {\n            if (l1.get(i).equals(l2.get(i)) && l2.get(i).equals(l3.get(i))) {\n                result.add(l1.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            if (l1.get(i).equals(l2.get(i)) && l2.get(i).equals(l3.get(i))) {\n                result.add(l1.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = 0; i < l1.size(); i++) {\n            if (l1.get(i).equals(l2.get(i)) && l2.get(i).equals(l3.get(i))) {\n                result.add(l1.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            if (l1.get(i) == l2.get(i) && l2.get(i) == l3.get(i)) {\n                result.add(l1.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            if (l1.get(i).equals(l2.get(i)) && l2.get(i).equals(l3.get(i))) {\n                result.add(l1.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            if (l1.get(i) == l2.get(i) && l2.get(i) == l3.get(i)) {\n                result.add(l1.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            if (l1.get(i).equals(l2.get(i)) && l2.get(i).equals(l3.get(i))) {\n                result.add(l1.get(i));\n            }\n        }\n        return result;"
  ]
}
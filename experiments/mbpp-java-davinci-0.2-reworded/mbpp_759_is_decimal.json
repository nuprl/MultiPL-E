{
  "name": "mbpp_759_is_decimal",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_759_is_decimal.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        if (num == null) return false;\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '-') num = num.substring(1);\n        if (num.length() == 0) return false;\n        int dot = num.indexOf('.');\n        if (dot == -1) return false;\n        if (dot == 0) return false;\n        if (dot == num.length() - 1) return false;\n        if (dot == num.length() - 2) return false;\n        if (dot == num.length() - 3) return true;\n        return false;",
    "        if (num == null) return false;\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '.') return false;\n        if (num.charAt(num.length() - 1) == '.') return false;\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n            if (c == '.') {\n                dotCount++;\n                if (dotCount > 1) return false;\n            } else if (!Character.isDigit(c)) {\n                return false;\n            }\n        }\n        if (dotCount == 0) return true;\n        int dotIndex = num.indexOf('.');\n        if (dotIndex == num.length() - 1) return false;\n        if (dotIndex == num.length() - 2) return true;\n        return false;",
    "        try {\n            Double.parseDouble(num);\n        } catch (NumberFormatException e) {\n            return false;\n        }\n        return true;",
    "        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (Exception e) {\n            return false;\n        }",
    "        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (Exception e) {\n            return false;\n        }",
    "        if (num.length() == 0) return false;\n        int decimalCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n            if (c == '.') {\n                decimalCount++;\n            } else if (!Character.isDigit(c)) {\n                return false;\n            }\n        }\n        if (decimalCount > 1) return false;\n        if (decimalCount == 0) return true;\n        int decimalIndex = num.indexOf('.');\n        if (decimalIndex == num.length() - 1) return false;\n        if (decimalIndex == num.length() - 3) return true;\n        return false;",
    "        if (num == null || num.length() == 0) {\n            return false;\n        }\n        String[] parts = num.split(\"\\\\.\");\n        if (parts.length != 2) {\n            return false;\n        }\n        if (parts[1].length() != 2) {\n            return false;\n        }\n        try {\n            Integer.parseInt(parts[0]);\n            Integer.parseInt(parts[1]);\n        } catch (Exception e) {\n            return false;\n        }\n        return true;",
    "        // Write your code here\n        return false;",
    "        if (num.length() == 0) return false;\n        if (num.charAt(0) == '.') return false;\n        if (num.charAt(num.length() - 1) == '.') return false;\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n            if (c == '.') {\n                dotCount++;\n                if (dotCount > 1) return false;\n            } else if (c < '0' || c > '9') {\n                return false;\n            }\n        }\n        if (dotCount == 0) return false;\n        String[] parts = num.split(\"\\\\.\");\n        if (parts.length == 1) return false;\n        if (parts[1].length() > 2) return false;\n        return true;",
    "        if (num.length() == 0) {\n            return false;\n        }\n        if (num.charAt(0) == '-') {\n            num = num.substring(1);\n        }\n        int decimal = num.indexOf('.');\n        if (decimal == -1) {\n            return false;\n        }\n        if (num.length() - 1 - decimal > 2) {\n            return false;\n        }\n        for (int i = 0; i < num.length(); i++) {\n            if (i == decimal) {\n                continue;\n            }\n            if (num.charAt(i) < '0' || num.charAt(i) > '9') {\n                return false;\n            }\n        }\n        return true;",
    "        if (num.length() == 0) return false;\n        if (num.charAt(0) == '-') num = num.substring(1);\n        if (num.length() == 0) return false;\n        int decimalIndex = num.indexOf('.');\n        if (decimalIndex == -1) return false;\n        if (decimalIndex == 0) return false;\n        if (decimalIndex == num.length() - 1) return false;\n        if (decimalIndex == num.length() - 2) return true;\n        return false;",
    "        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }",
    "        if (num == null || num.length() == 0) {\n            return false;\n        }\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                dotCount++;\n            }\n        }\n        if (dotCount > 1) {\n            return false;\n        }\n        if (dotCount == 0) {\n            return true;\n        }\n        String[] parts = num.split(\"\\\\.\");\n        if (parts[1].length() > 2) {\n            return false;\n        }\n        return true;",
    "        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }",
    "        // Write your code here\n        return false;",
    "        return num.matches(\"^[-+]?[0-9]*\\\\.?[0-9]{0,2}$\");",
    "        try {\n            BigDecimal bd = new BigDecimal(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }",
    "        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }",
    "        if (num.length() == 0) {\n            return false;\n        }\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                dotCount++;\n            }\n            if (dotCount > 1) {\n                return false;\n            }\n            if (num.charAt(i) == '.') {\n                if (i == num.length() - 1) {\n                    return false;\n                }\n                if (i == num.length() - 2) {\n                    return true;\n                }\n                return false;\n            }\n            if (num.charAt(i) < '0' || num.charAt(i) > '9') {\n                return false;\n            }\n        }\n        return true;",
    "        if (num.length() == 0) {\n            return false;\n        }\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n            if (c == '.') {\n                dotCount++;\n            } else if (!Character.isDigit(c)) {\n                return false;\n            }\n        }\n        if (dotCount > 1) {\n            return false;\n        }\n        if (dotCount == 0) {\n            return true;\n        }\n        int dotIndex = num.indexOf('.');\n        if (dotIndex == num.length() - 1) {\n            return false;\n        }\n        if (dotIndex == num.length() - 3) {\n            return true;\n        }\n        return false;"
  ]
}